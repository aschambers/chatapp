{"map":"{\"version\":3,\"sources\":[\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/common.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/Encoder.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/engine.io-parser/lib/browser.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/microphone-stream/node_modules/readable-stream/errors-browser.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/microphone-stream/node_modules/readable-stream/lib/_stream_duplex.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-client/node_modules/debug/src/browser.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/parseqs/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/component-inherit/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/engine.io-client/node_modules/debug/src/browser.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/LameInternalFlags.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/L3Side.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/react-moment/dist/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/moment/moment.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/moment-timezone/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-parser/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/engine.io-client/lib/xmlhttprequest.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/engine.io-client/lib/transport.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/engine.io-client/node_modules/component-emitter/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/microphone-stream/node_modules/readable-stream/lib/internal/streams/end-of-stream.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/GrInfo.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/Tables.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/@babel/runtime/helpers/esm/createClass.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-client/lib/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/parseuri/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-parser/node_modules/isarray/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-parser/is-buffer.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-client/lib/manager.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/engine.io-client/lib/transports/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/engine.io-client/lib/transports/polling.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/has-binary2/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/yeast/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/indexof/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-client/lib/socket.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-client/node_modules/component-emitter/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-client/lib/on.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/component-bind/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/microphone-stream/node_modules/readable-stream/lib/_stream_readable.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/microphone-stream/node_modules/readable-stream/lib/internal/streams/stream-browser.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/microphone-stream/node_modules/readable-stream/lib/internal/streams/destroy.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/microphone-stream/node_modules/readable-stream/lib/internal/streams/state.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/microphone-stream/node_modules/readable-stream/lib/_stream_writable.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/microphone-stream/node_modules/readable-stream/lib/_stream_transform.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/III_psy_xmin.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/MPEGMode.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/ScaleFac.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/GainAnalysis.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/MeanBits.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/BitStream.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/Takehiro.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/QuantizePVT.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/@babel/runtime/helpers/esm/typeof.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/@babel/runtime/helpers/esm/inherits.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/moment-timezone/moment-timezone.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-client/lib/url.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-client/node_modules/debug/src/debug.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-client/node_modules/ms/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-parser/node_modules/debug/src/browser.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-parser/node_modules/debug/src/debug.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-parser/node_modules/ms/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-parser/node_modules/component-emitter/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/socket.io-parser/binary.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/engine.io-client/lib/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/engine.io-client/lib/socket.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/has-cors/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/engine.io-client/lib/transports/polling-xhr.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/engine.io-parser/lib/keys.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/has-binary2/node_modules/isarray/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/arraybuffer.slice/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/after/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/engine.io-parser/lib/utf8.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/base64-arraybuffer/lib/base64-arraybuffer.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/blob/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/engine.io-client/node_modules/debug/src/debug.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/engine.io-client/node_modules/ms/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/engine.io-client/lib/transports/polling-jsonp.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/engine.io-client/lib/transports/websocket.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/to-array/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/backo2/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/microphone-stream/microphone-stream.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/microphone-stream/node_modules/readable-stream/readable-browser.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/microphone-stream/node_modules/readable-stream/lib/internal/streams/buffer_list.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/microphone-stream/node_modules/readable-stream/experimentalWarning.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/microphone-stream/node_modules/readable-stream/lib/internal/streams/async_iterator.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/microphone-stream/node_modules/readable-stream/lib/_stream_passthrough.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/microphone-stream/node_modules/readable-stream/lib/internal/streams/pipeline.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/buffer-from/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/index.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/Lame.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/PsyModel.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/FFT.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/NewMDCT.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/III_psy_ratio.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/LameGlobalFlags.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/IIISideInfo.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/NsPsy.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/VBRSeekInfo.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/ATH.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/ReplayGain.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/CBRNewIterationLoop.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/Presets.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/Quantize.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/VBRQuantize.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/CalcNoiseResult.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/CalcNoiseData.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/Reservoir.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/Version.js\",\"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/babel-loader/lib/index.js??ref--6-oneOf-2!/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/lamejs/src/js/VBRTag.js\"],\"names\":[\"new_short\",\"count\",\"Int16Array\",\"new_int\",\"Int32Array\",\"new_float\",\"Float32Array\",\"Arrays\",\"fill\",\"a\",\"fromIndex\",\"toIndex\",\"val\",\"arguments\",\"length\",\"i\",\"System\",\"arraycopy\",\"src\",\"srcPos\",\"dest\",\"destPos\",\"srcEnd\",\"Util\",\"ShortBlock\",\"ordinal\",\"this\",\"SQRT2\",\"FAST_LOG10\",\"x\",\"Math\",\"log10\",\"FAST_LOG10_X\",\"y\",\"short_block_allowed\",\"short_block_coupled\",\"short_block_dispensed\",\"short_block_forced\",\"Float\",\"VbrMode\",\"MAX_VALUE\",\"vbr_off\",\"vbr_mt\",\"vbr_rh\",\"vbr_abr\",\"vbr_mtrh\",\"vbr_default\",\"module\",\"exports\",\"new_array_n\",\"args\",\"Array\",\"sz\",\"slice\",\"A\",\"push\",\"new_byte\",\"Int8Array\",\"new_double\",\"Float64Array\",\"new_float_n\",\"new_int_n\",\"new_short_n\",\"assert\",\"common\",\"__webpack_require__\",\"Encoder\",\"NewMDCT\",\"III_psy_ratio\",\"FFTOFFSET\",\"MPG_MD_MS_LR\",\"bs\",\"psy\",\"vbr\",\"qupvt\",\"setModules\",\"_bs\",\"_psy\",\"_qupvt\",\"_vbr\",\"newMDCT\",\"lame_encode_mp3_frame\",\"gfp\",\"inbuf_l\",\"inbuf_r\",\"mp3buf\",\"mp3bufPos\",\"mp3buf_size\",\"mp3count\",\"masking_LR\",\"masking\",\"masking_MS\",\"pe_use\",\"ch\",\"gr\",\"inbuf\",\"gfc\",\"internal_flags\",\"tot_ener\",\"ms_ener_ratio\",\"pe\",\"pe_MS\",\"lame_encode_frame_init\",\"j\",\"primebuff0\",\"primebuff1\",\"mode_gr\",\"channels_out\",\"l3_side\",\"tt\",\"block_type\",\"SHORT_TYPE\",\"mdct_sub48\",\"mf_size\",\"BLKSIZE\",\"framesize\",\"padding\",\"slot_lag\",\"frac_SpF\",\"out_samplerate\",\"psymodel\",\"bufp\",\"bufpPos\",\"blocktype\",\"VBR\",\"L3psycho_anal_vbr\",\"L3psycho_anal_ns\",\"mode\",\"MPEGMode\",\"JOINT_STEREO\",\"cod_info\",\"mixed_block_flag\",\"NORM_TYPE\",\"gr2_max\",\"max_pow\",\"ATH\",\"useAdjust\",\"loudness_sq\",\"max\",\"aaSensitivityP\",\"adjust\",\"adjustLimit\",\"adj_lim_new\",\"adjust_ATH\",\"mode_ext\",\"MPG_MD_LR_LR\",\"force_ms\",\"sum_pe_MS\",\"sum_pe_LR\",\"gi0\",\"gi1\",\"analysis\",\"pinfo\",\"ms_ratio\",\"xr\",\"ers\",\"energy\",\"f\",\"nsPsy\",\"pefirbuf\",\"fircoef\",\"iteration_loop\",\"format_bitstream\",\"copy_buffer\",\"bWriteVbrTag\",\"addVbrFrame\",\"pcmdata\",\"set_frame_pinfo\",\"bitrate_index\",\"bitrate_stereoMode_Hist\",\"bt\",\"bitrate_blockType_Hist\",\"updateStats\",\"ENCDELAY\",\"POSTDELAY\",\"MDCTDELAY\",\"DECDELAY\",\"SBLIMIT\",\"CBANDS\",\"SBPSY_l\",\"SBPSY_s\",\"SBMAX_l\",\"SBMAX_s\",\"PSFB21\",\"PSFB12\",\"HBLKSIZE\",\"BLKSIZE_s\",\"HBLKSIZE_s\",\"START_TYPE\",\"STOP_TYPE\",\"MPG_MD_LR_I\",\"MPG_MD_MS_I\",\"base64encoder\",\"keys\",\"hasBinary\",\"sliceBuffer\",\"after\",\"utf8\",\"ArrayBuffer\",\"isAndroid\",\"navigator\",\"test\",\"userAgent\",\"isPhantomJS\",\"dontSendBlobs\",\"protocol\",\"packets\",\"open\",\"close\",\"ping\",\"pong\",\"message\",\"upgrade\",\"noop\",\"packetslist\",\"err\",\"type\",\"data\",\"Blob\",\"map\",\"ary\",\"each\",\"done\",\"result\",\"next\",\"eachWithIndex\",\"el\",\"cb\",\"error\",\"msg\",\"encodePacket\",\"packet\",\"supportsBinary\",\"utf8encode\",\"callback\",\"undefined\",\"buffer\",\"encodeBase64Packet\",\"contentArray\",\"Uint8Array\",\"resultBuffer\",\"byteLength\",\"encodeArrayBuffer\",\"fr\",\"FileReader\",\"onload\",\"readAsArrayBuffer\",\"encodeBlobAsArrayBuffer\",\"blob\",\"encodeBlob\",\"base64\",\"encodeBase64Object\",\"encoded\",\"encode\",\"String\",\"strict\",\"b64data\",\"b64\",\"split\",\"readAsDataURL\",\"fromCharCode\",\"apply\",\"e\",\"typed\",\"basic\",\"btoa\",\"decodePacket\",\"binaryType\",\"utf8decode\",\"charAt\",\"decodeBase64Packet\",\"substr\",\"decode\",\"tryDecode\",\"Number\",\"substring\",\"rest\",\"encodePayload\",\"isBinary\",\"encodePayloadAsBlob\",\"encodePayloadAsArrayBuffer\",\"doneCallback\",\"setLengthHeader\",\"results\",\"join\",\"decodePayload\",\"decodePayloadAsBinary\",\"n\",\"l\",\"chr\",\"encodedPackets\",\"totalLength\",\"reduce\",\"acc\",\"p\",\"len\",\"toString\",\"resultArray\",\"bufferIndex\",\"forEach\",\"isString\",\"ab\",\"view\",\"charCodeAt\",\"lenStr\",\"parseInt\",\"binaryIdentifier\",\"size\",\"lengthAry\",\"bufferTail\",\"buffers\",\"tailArray\",\"msgLength\",\"total\",\"codes\",\"createErrorType\",\"code\",\"Base\",\"Error\",\"NodeError\",\"_Base\",\"subClass\",\"superClass\",\"arg1\",\"arg2\",\"arg3\",\"call\",\"getMessage\",\"prototype\",\"Object\",\"create\",\"constructor\",\"__proto__\",\"name\",\"oneOf\",\"expected\",\"thing\",\"isArray\",\"concat\",\"value\",\"TypeError\",\"actual\",\"determiner\",\"search\",\"pos\",\"replace\",\"str\",\"this_len\",\"endsWith\",\"start\",\"indexOf\",\"includes\",\"arg\",\"process\",\"objectKeys\",\"obj\",\"key\",\"Duplex\",\"Readable\",\"Writable\",\"v\",\"method\",\"options\",\"allowHalfOpen\",\"readable\",\"writable\",\"once\",\"onend\",\"_writableState\",\"ended\",\"nextTick\",\"onEndNT\",\"self\",\"end\",\"defineProperty\",\"enumerable\",\"get\",\"highWaterMark\",\"getBuffer\",\"_readableState\",\"destroyed\",\"set\",\"load\",\"r\",\"storage\",\"debug\",\"NODE_ENV\",\"PUBLIC_URL\",\"DEBUG\",\"log\",\"console\",\"Function\",\"formatArgs\",\"useColors\",\"namespace\",\"humanize\",\"diff\",\"c\",\"color\",\"splice\",\"index\",\"lastC\",\"match\",\"save\",\"namespaces\",\"removeItem\",\"window\",\"toLowerCase\",\"document\",\"documentElement\",\"style\",\"WebkitAppearance\",\"firebug\",\"exception\",\"table\",\"RegExp\",\"$1\",\"chrome\",\"local\",\"localStorage\",\"localstorage\",\"colors\",\"formatters\",\"JSON\",\"stringify\",\"enable\",\"hasOwnProperty\",\"encodeURIComponent\",\"qs\",\"qry\",\"pairs\",\"pair\",\"decodeURIComponent\",\"b\",\"fn\",\"IIISideInfo\",\"ScaleFac\",\"NsPsy\",\"VBRSeekInfo\",\"III_psy_xmin\",\"L3Side\",\"LameInternalFlags\",\"MAX_HEADER_LEN\",\"Header\",\"write_timing\",\"ptr\",\"buf\",\"Class_ID\",\"iteration_init_init\",\"fill_buffer_resample_init\",\"mfbuf\",\"MFSIZE\",\"channels_in\",\"resample_ratio\",\"mf_samples_to_encode\",\"VBR_min_bitrate\",\"VBR_max_bitrate\",\"samplerate_index\",\"lowpass1\",\"lowpass2\",\"highpass1\",\"highpass2\",\"noise_shaping\",\"noise_shaping_amp\",\"substep_shaping\",\"noise_shaping_stop\",\"subblock_gain\",\"use_best_huffman\",\"full_outer_loop\",\"tag_spec\",\"nMusicCRC\",\"OldValue\",\"CurrentStep\",\"masking_lower\",\"bv_scf\",\"pseudohalf\",\"SFBMAX\",\"sfb21_extra\",\"inbuf_old\",\"blackfilt\",\"BPC\",\"itime\",\"sideinfo_len\",\"sb_sample\",\"amp_filter\",\"header\",\"MAX_HEADER_BUF\",\"h_ptr\",\"w_ptr\",\"ancillary_flag\",\"ResvSize\",\"ResvMax\",\"scalefac_band\",\"minval_l\",\"minval_s\",\"nb_1\",\"nb_2\",\"nb_s1\",\"nb_s2\",\"s3_ss\",\"s3_ll\",\"decay\",\"thm\",\"en\",\"loudness_sq_save\",\"mld_l\",\"mld_s\",\"bm_l\",\"bo_l\",\"bm_s\",\"bo_s\",\"npart_l\",\"npart_s\",\"s3ind\",\"s3ind_s\",\"numlines_s\",\"numlines_l\",\"rnumlines_l\",\"mld_cb_l\",\"mld_cb_s\",\"numlines_s_num1\",\"numlines_l_num1\",\"ms_ratio_s_old\",\"ms_ratio_l_old\",\"ms_ener_ratio_old\",\"blocktype_old\",\"VBR_seek_table\",\"PSY\",\"nogap_total\",\"nogap_current\",\"decode_on_the_fly\",\"findReplayGain\",\"findPeakSample\",\"PeakSample\",\"RadioGain\",\"AudiophileGain\",\"rgdata\",\"noclipGainChange\",\"noclipScale\",\"hip\",\"in_buffer_nsamples\",\"in_buffer_0\",\"in_buffer_1\",\"MAX_BITS_PER_CHANNEL\",\"MAX_BITS_PER_GRANULE\",\"t\",\"o\",\"m\",\"d\",\"Symbol\",\"toStringTag\",\"__esModule\",\"bind\",\"default\",\"s\",\"resetWarningCache\",\"isRequired\",\"array\",\"bool\",\"func\",\"number\",\"object\",\"string\",\"symbol\",\"any\",\"arrayOf\",\"element\",\"elementType\",\"instanceOf\",\"node\",\"objectOf\",\"oneOfType\",\"shape\",\"exact\",\"checkPropTypes\",\"PropTypes\",\"targets\",\"u\",\"useToLocaleString\",\"useGrouping\",\"grouping\",\"maximumSignificantDigits\",\"minimumIntegerDigits\",\"g\",\"fractionDigits\",\"groupingSeparator\",\"h\",\"decimalSeparator\",\"maximumFractionDigits\",\"minimumFractionDigits\",\"w\",\"parseFloat\",\"toLocaleString\",\"toPrecision\",\"toFixed\",\"S\",\"T\",\"_\",\"reverse\",\"O\",\"abs\",\"V\",\"D\",\"shift\",\"label\",\"durationLabelsStandard\",\"SS\",\"ss\",\"mm\",\"hh\",\"dd\",\"ww\",\"M\",\"MM\",\"yy\",\"durationLabelsShort\",\"durationTimeTemplates\",\"HMS\",\"HM\",\"MS\",\"durationLabelTypes\",\"durationPluralKey\",\"precision\",\"template\",\"returnMomentTypes\",\"format\",\"largest\",\"outputTypes\",\"defaults\",\"asMilliseconds\",\"asMonths\",\"isValid\",\"duration\",\"L\",\"years\",\"months\",\"weeks\",\"days\",\"hours\",\"minutes\",\"seconds\",\"milliseconds\",\"escape\",\"general\",\"types\",\"k\",\"source\",\"P\",\"E\",\"F\",\"I\",\"N\",\"stopTrim\",\"G\",\"localeData\",\"_durationTimeTemplates\",\"C\",\"userLocale\",\"locale\",\"R\",\"useLeftUnits\",\"W\",\"usePlural\",\"U\",\"q\",\"forceLength\",\"z\",\"H\",\"trunc\",\"$\",\"useSignificantDigits\",\"B\",\"K\",\"minValue\",\"Y\",\"J\",\"maxValue\",\"Q\",\"X\",\"Z\",\"ee\",\"te\",\"ne\",\"trim\",\"re\",\"oe\",\"ie\",\"ae\",\"le\",\"ue\",\"se\",\"ce\",\"text\",\"token\",\"me\",\"fe\",\"as\",\"floor\",\"subtract\",\"rawValue\",\"wholeValue\",\"decimalValue\",\"isSmallest\",\"isLargest\",\"tokenLength\",\"ge\",\"ye\",\"round\",\"he\",\"pow\",\"de\",\"ve\",\"be\",\"significantDigits\",\"formattedValue\",\"formattedValueEn\",\"formattedValueMS\",\"Se\",\"_durationLabelTypes\",\"sort\",\"_t\",\"_data\",\"updateLocale\",\"momentDurationFormatSetup\",\"moment\",\"iterator\",\"setPrototypeOf\",\"getPrototypeOf\",\"ReferenceError\",\"configurable\",\"props\",\"interval\",\"clearTimer\",\"pooledTimer\",\"timer\",\"setInterval\",\"update\",\"clearInterval\",\"removePooledElement\",\"titleFormat\",\"getDatetime\",\"globalFormat\",\"globalMoment\",\"state\",\"content\",\"Component\",\"clearPooledTimer\",\"pooledElements\",\"utc\",\"unix\",\"date\",\"parse\",\"tz\",\"children\",\"globalParse\",\"globalLocal\",\"globalTimezone\",\"globalLocale\",\"setTimer\",\"pushPooledElement\",\"fromNow\",\"fromNowDuring\",\"from\",\"add\",\"toNow\",\"to\",\"ago\",\"calendar\",\"durationFromNow\",\"unit\",\"decimal\",\"onChange\",\"Boolean\",\"globalFilter\",\"filter\",\"setState\",\"withTitle\",\"getOwnPropertySymbols\",\"propertyIsEnumerable\",\"propTypes\",\"assign\",\"title\",\"getTitle\",\"createElement\",\"globalElement\",\"getOwnPropertyDescriptor\",\"dateTime\",\"hookCallback\",\"some\",\"hooks\",\"input\",\"isObject\",\"isUndefined\",\"isNumber\",\"isDate\",\"Date\",\"arr\",\"res\",\"hasOwnProp\",\"extend\",\"valueOf\",\"createUTC\",\"createLocalOrUTC\",\"getParsingFlags\",\"_pf\",\"empty\",\"unusedTokens\",\"unusedInput\",\"overflow\",\"charsLeftOver\",\"nullInput\",\"invalidMonth\",\"invalidFormat\",\"userInvalidated\",\"iso\",\"parsedDateParts\",\"meridiem\",\"rfc2822\",\"weekdayMismatch\",\"_isValid\",\"flags\",\"parsedParts\",\"isNowValid\",\"isNaN\",\"_d\",\"getTime\",\"invalidWeekday\",\"_strict\",\"bigHour\",\"isFrozen\",\"createInvalid\",\"NaN\",\"fun\",\"momentProperties\",\"copyConfig\",\"prop\",\"_isAMomentObject\",\"_i\",\"_f\",\"_l\",\"_tzm\",\"_isUTC\",\"_offset\",\"_locale\",\"updateInProgress\",\"Moment\",\"config\",\"updateOffset\",\"isMoment\",\"absFloor\",\"ceil\",\"toInt\",\"argumentForCoercion\",\"coercedNumber\",\"isFinite\",\"compareArrays\",\"array1\",\"array2\",\"dontConvert\",\"min\",\"lengthDiff\",\"diffs\",\"warn\",\"suppressDeprecationWarnings\",\"deprecate\",\"firstTime\",\"deprecationHandler\",\"stack\",\"deprecations\",\"deprecateSimple\",\"isFunction\",\"mergeConfigs\",\"parentConfig\",\"childConfig\",\"Locale\",\"aliases\",\"addUnitAlias\",\"shorthand\",\"lowerCase\",\"normalizeUnits\",\"units\",\"normalizeObjectUnits\",\"inputObject\",\"normalizedProp\",\"normalizedInput\",\"priorities\",\"addUnitPriority\",\"priority\",\"zeroFill\",\"targetLength\",\"forceSign\",\"absNumber\",\"zerosToFill\",\"sign\",\"formattingTokens\",\"localFormattingTokens\",\"formatFunctions\",\"formatTokenFunctions\",\"addFormatToken\",\"padded\",\"formatMoment\",\"expandFormat\",\"mom\",\"output\",\"makeFormatFunction\",\"invalidDate\",\"replaceLongDateFormatTokens\",\"longDateFormat\",\"lastIndex\",\"match1\",\"match2\",\"match3\",\"match4\",\"match6\",\"match1to2\",\"match3to4\",\"match5to6\",\"match1to3\",\"match1to4\",\"match1to6\",\"matchUnsigned\",\"matchSigned\",\"matchOffset\",\"matchShortOffset\",\"matchWord\",\"regexes\",\"addRegexToken\",\"regex\",\"strictRegex\",\"isStrict\",\"getParseRegexForToken\",\"regexEscape\",\"matched\",\"p1\",\"p2\",\"p3\",\"p4\",\"tokens\",\"addParseToken\",\"addWeekParseToken\",\"_w\",\"addTimeToArrayFromToken\",\"_a\",\"YEAR\",\"MONTH\",\"DATE\",\"HOUR\",\"MINUTE\",\"SECOND\",\"MILLISECOND\",\"WEEK\",\"WEEKDAY\",\"daysInYear\",\"year\",\"isLeapYear\",\"parseTwoDigitYear\",\"getSetYear\",\"makeGetSet\",\"keepTime\",\"set$1\",\"month\",\"daysInMonth\",\"modMonth\",\"monthsShort\",\"monthsShortRegex\",\"monthsRegex\",\"monthsParse\",\"MONTHS_IN_FORMAT\",\"defaultLocaleMonths\",\"defaultLocaleMonthsShort\",\"setMonth\",\"dayOfMonth\",\"getSetMonth\",\"defaultMonthsShortRegex\",\"defaultMonthsRegex\",\"computeMonthsParse\",\"cmpLenRev\",\"shortPieces\",\"longPieces\",\"mixedPieces\",\"_monthsRegex\",\"_monthsShortRegex\",\"_monthsStrictRegex\",\"_monthsShortStrictRegex\",\"createUTCDate\",\"UTC\",\"getUTCFullYear\",\"setUTCFullYear\",\"firstWeekOffset\",\"dow\",\"doy\",\"fwd\",\"fwdlw\",\"getUTCDay\",\"dayOfYearFromWeeks\",\"week\",\"weekday\",\"resYear\",\"resDayOfYear\",\"localWeekday\",\"weekOffset\",\"dayOfYear\",\"weekOfYear\",\"resWeek\",\"weeksInYear\",\"weekOffsetNext\",\"shiftWeekdays\",\"ws\",\"weekdaysMin\",\"weekdaysShort\",\"weekdays\",\"weekdaysMinRegex\",\"weekdaysShortRegex\",\"weekdaysRegex\",\"weekdaysParse\",\"defaultLocaleWeekdays\",\"defaultLocaleWeekdaysShort\",\"defaultLocaleWeekdaysMin\",\"defaultWeekdaysRegex\",\"defaultWeekdaysShortRegex\",\"defaultWeekdaysMinRegex\",\"computeWeekdaysParse\",\"minp\",\"shortp\",\"longp\",\"minPieces\",\"day\",\"_weekdaysRegex\",\"_weekdaysShortRegex\",\"_weekdaysMinRegex\",\"_weekdaysStrictRegex\",\"_weekdaysShortStrictRegex\",\"_weekdaysMinStrictRegex\",\"hFormat\",\"lowercase\",\"matchMeridiem\",\"_meridiemParse\",\"kInput\",\"_isPm\",\"isPM\",\"_meridiem\",\"pos1\",\"pos2\",\"getSetHour\",\"baseConfig\",\"sameDay\",\"nextDay\",\"nextWeek\",\"lastDay\",\"lastWeek\",\"sameElse\",\"LTS\",\"LT\",\"LL\",\"LLL\",\"LLLL\",\"dayOfMonthOrdinalParse\",\"relativeTime\",\"future\",\"past\",\"meridiemParse\",\"locales\",\"localeFamilies\",\"normalizeLocale\",\"loadLocale\",\"oldLocale\",\"_abbr\",\"getSetGlobalLocale\",\"values\",\"getLocale\",\"defineLocale\",\"abbr\",\"_config\",\"parentLocale\",\"names\",\"chooseLocale\",\"checkOverflow\",\"_overflowDayOfYear\",\"_overflowWeeks\",\"_overflowWeekday\",\"configFromArray\",\"currentDate\",\"expectedWeekday\",\"yearToUse\",\"nowValue\",\"now\",\"_useUTC\",\"getUTCMonth\",\"getUTCDate\",\"getFullYear\",\"getMonth\",\"getDate\",\"currentDateArray\",\"weekYear\",\"temp\",\"weekdayOverflow\",\"GG\",\"createLocal\",\"_week\",\"curWeek\",\"gg\",\"_dayOfYear\",\"dayOfYearFromWeekInfo\",\"_nextDay\",\"ms\",\"setFullYear\",\"getDay\",\"setUTCMinutes\",\"getUTCMinutes\",\"extendedIsoRegex\",\"basicIsoRegex\",\"tzRegex\",\"isoDates\",\"isoTimes\",\"aspNetJsonRegex\",\"configFromISO\",\"allowTime\",\"dateFormat\",\"timeFormat\",\"tzFormat\",\"exec\",\"configFromStringAndFormat\",\"untruncateYear\",\"yearStr\",\"obsOffsets\",\"UT\",\"GMT\",\"EDT\",\"EST\",\"CDT\",\"CST\",\"MDT\",\"MST\",\"PDT\",\"PST\",\"configFromRFC2822\",\"parsedArray\",\"monthStr\",\"dayStr\",\"hourStr\",\"minuteStr\",\"secondStr\",\"extractFromRFC2822Strings\",\"weekdayStr\",\"parsedInput\",\"weekdayProvided\",\"weekdayActual\",\"checkWeekday\",\"obsOffset\",\"militaryOffset\",\"numOffset\",\"hm\",\"calculateOffset\",\"ISO_8601\",\"RFC_2822\",\"skipped\",\"stringLength\",\"totalParsedInputLength\",\"hour\",\"isPm\",\"meridiemHour\",\"meridiemFixWrap\",\"prepareConfig\",\"preparse\",\"tempConfig\",\"bestMoment\",\"scoreToBeat\",\"currentScore\",\"score\",\"configFromStringAndArray\",\"createFromInputFallback\",\"configFromString\",\"minute\",\"second\",\"millisecond\",\"configFromObject\",\"configFromInput\",\"isUTC\",\"getOwnPropertyNames\",\"isObjectEmpty\",\"createFromConfig\",\"prototypeMin\",\"other\",\"prototypeMax\",\"pickBy\",\"moments\",\"ordering\",\"Duration\",\"quarters\",\"quarter\",\"isoWeek\",\"unitHasDecimal\",\"isDurationValid\",\"_milliseconds\",\"_days\",\"_months\",\"_bubble\",\"isDuration\",\"absRound\",\"offset\",\"separator\",\"utcOffset\",\"offsetFromString\",\"chunkOffset\",\"matcher\",\"matches\",\"chunk\",\"parts\",\"cloneWithOffset\",\"model\",\"clone\",\"setTime\",\"getDateOffset\",\"getTimezoneOffset\",\"isUtc\",\"aspNetRegex\",\"isoRegex\",\"createDuration\",\"ret\",\"diffRes\",\"parseIso\",\"base\",\"isBefore\",\"positiveMomentsDifference\",\"momentsDifference\",\"inp\",\"isAfter\",\"createAdder\",\"direction\",\"period\",\"tmp\",\"addSubtract\",\"isAdding\",\"invalid\",\"monthDiff\",\"anchor2\",\"wholeMonthDiff\",\"anchor\",\"newLocaleData\",\"defaultFormat\",\"defaultFormatUtc\",\"lang\",\"MS_PER_SECOND\",\"MS_PER_MINUTE\",\"MS_PER_HOUR\",\"MS_PER_400_YEARS\",\"mod$1\",\"dividend\",\"divisor\",\"localStartOfDate\",\"utcStartOfDate\",\"addWeekYearFormatToken\",\"getter\",\"getSetWeekYearHelper\",\"weeksTarget\",\"dayOfYearData\",\"isoWeekYear\",\"_dayOfMonthOrdinalParse\",\"_ordinalParse\",\"_dayOfMonthOrdinalParseLenient\",\"getSetDayOfMonth\",\"getSetMinute\",\"getSetSecond\",\"parseMs\",\"getSetMillisecond\",\"proto\",\"preParsePostFormat\",\"time\",\"formats\",\"sod\",\"startOf\",\"calendarFormat\",\"asFloat\",\"that\",\"zoneDelta\",\"endOf\",\"startOfDate\",\"isoWeekday\",\"inputString\",\"postformat\",\"withoutSuffix\",\"invalidAt\",\"localInput\",\"isBetween\",\"inclusivity\",\"localFrom\",\"localTo\",\"isSame\",\"inputMs\",\"isSameOrAfter\",\"isSameOrBefore\",\"parsingFlags\",\"prioritized\",\"unitsObj\",\"getPrioritizedUnits\",\"toArray\",\"toObject\",\"toDate\",\"toISOString\",\"keepOffset\",\"inspect\",\"zone\",\"isLocal\",\"prefix\",\"suffix\",\"toJSON\",\"creationData\",\"isoWeeks\",\"weekInfo\",\"isoWeeksInYear\",\"parseWeekday\",\"parseIsoWeekday\",\"keepLocalTime\",\"keepMinutes\",\"localAdjust\",\"_changeInProgress\",\"parseZone\",\"tZone\",\"hasAlignedHourOffset\",\"isDST\",\"isUtcOffset\",\"zoneAbbr\",\"zoneName\",\"dates\",\"isDSTShifted\",\"_isDSTShifted\",\"proto$1\",\"get$1\",\"field\",\"setter\",\"listMonthsImpl\",\"out\",\"listWeekdaysImpl\",\"localeSorted\",\"_calendar\",\"_longDateFormat\",\"formatUpper\",\"toUpperCase\",\"_invalidDate\",\"_ordinal\",\"isFuture\",\"_relativeTime\",\"pastFuture\",\"isFormat\",\"_monthsShort\",\"monthName\",\"_monthsParseExact\",\"ii\",\"llc\",\"toLocaleLowerCase\",\"_monthsParse\",\"_longMonthsParse\",\"_shortMonthsParse\",\"firstDayOfYear\",\"firstDayOfWeek\",\"_weekdays\",\"_weekdaysMin\",\"_weekdaysShort\",\"weekdayName\",\"_weekdaysParseExact\",\"_weekdaysParse\",\"_shortWeekdaysParse\",\"_minWeekdaysParse\",\"_fullWeekdaysParse\",\"isLower\",\"langData\",\"mathAbs\",\"addSubtract$1\",\"absCeil\",\"daysToMonths\",\"monthsToDays\",\"makeAs\",\"alias\",\"asSeconds\",\"asMinutes\",\"asHours\",\"asDays\",\"asWeeks\",\"asQuarters\",\"asYears\",\"makeGetter\",\"thresholds\",\"abs$1\",\"toISOString$1\",\"totalSign\",\"ymSign\",\"daysSign\",\"hmsSign\",\"proto$2\",\"monthsFromDays\",\"withSuffix\",\"posNegDuration\",\"relativeTime$1\",\"toIsoString\",\"version\",\"tmpLocale\",\"relativeTimeRounding\",\"roundingFunction\",\"relativeTimeThreshold\",\"threshold\",\"limit\",\"myMoment\",\"HTML5_FMT\",\"DATETIME_LOCAL\",\"DATETIME_LOCAL_SECONDS\",\"DATETIME_LOCAL_MS\",\"TIME\",\"TIME_SECONDS\",\"TIME_MS\",\"factory\",\"Emitter\",\"binary\",\"isBuf\",\"CONNECT\",\"DISCONNECT\",\"EVENT\",\"ACK\",\"ERROR\",\"BINARY_EVENT\",\"BINARY_ACK\",\"Decoder\",\"ERROR_PACKET\",\"encodeAsString\",\"attachments\",\"nsp\",\"id\",\"payload\",\"tryStringify\",\"reconstructor\",\"BinaryReconstructor\",\"reconPack\",\"removeBlobs\",\"bloblessData\",\"deconstruction\",\"deconstructPacket\",\"pack\",\"unshift\",\"encodeAsBinary\",\"tryParse\",\"isPayloadValid\",\"decodeString\",\"emit\",\"takeBinaryData\",\"destroy\",\"finishedReconstruction\",\"binData\",\"reconstructPacket\",\"hasCORS\",\"opts\",\"xdomain\",\"xscheme\",\"enablesXDR\",\"XMLHttpRequest\",\"XDomainRequest\",\"parser\",\"Transport\",\"path\",\"hostname\",\"port\",\"secure\",\"query\",\"timestampParam\",\"timestampRequests\",\"readyState\",\"agent\",\"socket\",\"pfx\",\"passphrase\",\"cert\",\"ca\",\"ciphers\",\"rejectUnauthorized\",\"forceNode\",\"isReactNative\",\"extraHeaders\",\"localAddress\",\"onError\",\"desc\",\"description\",\"doOpen\",\"doClose\",\"onClose\",\"send\",\"write\",\"onOpen\",\"onData\",\"onPacket\",\"mixin\",\"on\",\"addEventListener\",\"event\",\"_callbacks\",\"off\",\"removeListener\",\"removeAllListeners\",\"removeEventListener\",\"callbacks\",\"listeners\",\"hasListeners\",\"ERR_STREAM_PREMATURE_CLOSE\",\"eos\",\"stream\",\"called\",\"_len\",\"_key\",\"onlegacyfinish\",\"onfinish\",\"writableEnded\",\"finished\",\"readableEnded\",\"endEmitted\",\"onerror\",\"onclose\",\"onrequest\",\"req\",\"setHeader\",\"abort\",\"isRequest\",\"l3_enc\",\"scalefac\",\"xrpow_max\",\"part2_3_length\",\"big_values\",\"count1\",\"global_gain\",\"scalefac_compress\",\"table_select\",\"region0_count\",\"region1_count\",\"preflag\",\"scalefac_scale\",\"count1table_select\",\"part2_length\",\"sfb_lmax\",\"sfb_smin\",\"psy_lmax\",\"sfbmax\",\"psymax\",\"sfbdivide\",\"width\",\"count1bits\",\"sfb_partition_table\",\"slen\",\"max_nonzero_coeff\",\"clone_int\",\"HuffCodeTab\",\"tab\",\"hl\",\"xlen\",\"linmax\",\"hlen\",\"Tables\",\"t1HB\",\"t2HB\",\"t3HB\",\"t5HB\",\"t6HB\",\"t7HB\",\"t8HB\",\"t9HB\",\"t10HB\",\"t11HB\",\"t12HB\",\"t13HB\",\"t15HB\",\"t16HB\",\"t24HB\",\"t32HB\",\"t33HB\",\"t1l\",\"t2l\",\"t3l\",\"t5l\",\"t6l\",\"t7l\",\"t8l\",\"t9l\",\"t10l\",\"t11l\",\"t12l\",\"t13l\",\"t15l\",\"t16_5l\",\"t16l\",\"t24l\",\"t32l\",\"t33l\",\"ht\",\"largetbl\",\"table23\",\"table56\",\"bitrate_table\",\"samplerate_table\",\"scfsi_band\",\"_classCallCheck\",\"instance\",\"Constructor\",\"__webpack_exports__\",\"_defineProperties\",\"target\",\"descriptor\",\"_createClass\",\"protoProps\",\"staticProps\",\"_getPrototypeOf\",\"url\",\"Manager\",\"lookup\",\"cache\",\"managers\",\"uri\",\"io\",\"parsed\",\"sameNamespace\",\"nsps\",\"forceNew\",\"multiplex\",\"connect\",\"Socket\",\"host\",\"authority\",\"ipv6uri\",\"Buffer\",\"withNativeBuffer\",\"isBuffer\",\"withNativeArrayBuffer\",\"isView\",\"eio\",\"Backoff\",\"has\",\"subs\",\"reconnection\",\"reconnectionAttempts\",\"Infinity\",\"reconnectionDelay\",\"reconnectionDelayMax\",\"randomizationFactor\",\"backoff\",\"jitter\",\"timeout\",\"connecting\",\"lastPing\",\"encoding\",\"packetBuffer\",\"_parser\",\"encoder\",\"decoder\",\"autoConnect\",\"emitAll\",\"updateSocketIds\",\"generateId\",\"engine\",\"_reconnection\",\"_reconnectionAttempts\",\"_reconnectionDelay\",\"setMin\",\"_randomizationFactor\",\"setJitter\",\"_reconnectionDelayMax\",\"setMax\",\"_timeout\",\"maybeReconnectOnOpen\",\"reconnecting\",\"attempts\",\"reconnect\",\"skipReconnect\",\"openSub\",\"onopen\",\"errorSub\",\"cleanup\",\"setTimeout\",\"clearTimeout\",\"onping\",\"onpong\",\"ondata\",\"ondecoded\",\"onConnecting\",\"processPacketQueue\",\"subsLength\",\"disconnect\",\"reset\",\"reason\",\"delay\",\"onreconnect\",\"attempt\",\"XHR\",\"JSONP\",\"websocket\",\"polling\",\"xd\",\"xs\",\"jsonp\",\"location\",\"isSSL\",\"forceJSONP\",\"parseqs\",\"inherit\",\"yeast\",\"Polling\",\"hasXHR2\",\"responseType\",\"forceBase64\",\"poll\",\"pause\",\"onPause\",\"doPoll\",\"callbackfn\",\"doWrite\",\"schema\",\"sid\",\"withNativeBlob\",\"withNativeFile\",\"File\",\"prev\",\"alphabet\",\"seed\",\"num\",\"decoded\",\"hasBin\",\"events\",\"connect_error\",\"connect_timeout\",\"reconnect_attempt\",\"reconnect_failed\",\"reconnect_error\",\"json\",\"ids\",\"acks\",\"receiveBuffer\",\"sendBuffer\",\"connected\",\"disconnected\",\"subEvents\",\"ev\",\"compress\",\"pop\",\"onpacket\",\"rootNamespaceError\",\"onconnect\",\"onevent\",\"onack\",\"ondisconnect\",\"ack\",\"sent\",\"emitBuffered\",\"global\",\"ReadableState\",\"EventEmitter\",\"EElistenerCount\",\"emitter\",\"Stream\",\"OurUint8Array\",\"debugUtil\",\"debuglog\",\"StringDecoder\",\"createReadableStreamAsyncIterator\",\"BufferList\",\"destroyImpl\",\"getHighWaterMark\",\"_require$codes\",\"ERR_INVALID_ARG_TYPE\",\"ERR_STREAM_PUSH_AFTER_EOF\",\"ERR_METHOD_NOT_IMPLEMENTED\",\"ERR_STREAM_UNSHIFT_AFTER_END_EVENT\",\"emitExperimentalWarning\",\"kProxyEvents\",\"isDuplex\",\"objectMode\",\"readableObjectMode\",\"pipes\",\"pipesCount\",\"flowing\",\"reading\",\"sync\",\"needReadable\",\"emittedReadable\",\"readableListening\",\"resumeScheduled\",\"paused\",\"emitClose\",\"defaultEncoding\",\"awaitDrain\",\"readingMore\",\"read\",\"_read\",\"_destroy\",\"readableAddChunk\",\"addToFront\",\"skipChunkCheck\",\"er\",\"emitReadable\",\"emitReadable_\",\"onEofChunk\",\"chunkInvalid\",\"_uint8ArrayToBuffer\",\"addChunk\",\"maybeReadMore\",\"_undestroy\",\"undestroy\",\"isPaused\",\"setEncoding\",\"enc\",\"MAX_HWM\",\"howMuchToRead\",\"head\",\"computeNewHighWaterMark\",\"flow\",\"maybeReadMore_\",\"updateReadableListening\",\"listenerCount\",\"resume\",\"nReadingNextTick\",\"resume_\",\"fromList\",\"first\",\"clear\",\"consume\",\"endReadable\",\"endReadableNT\",\"nOrig\",\"doRead\",\"pipe\",\"pipeOpts\",\"endFn\",\"stdout\",\"stderr\",\"unpipe\",\"onunpipe\",\"unpipeInfo\",\"hasUnpiped\",\"ondrain\",\"cleanedUp\",\"needDrain\",\"pipeOnDrain\",\"prependListener\",\"_events\",\"dests\",\"addListener\",\"wrap\",\"_this\",\"asyncIterator\",\"_fromList\",\"emitErrorAndCloseNT\",\"emitErrorNT\",\"emitCloseNT\",\"readableDestroyed\",\"writableDestroyed\",\"errorEmitted\",\"ending\",\"finalCalled\",\"prefinished\",\"ERR_INVALID_OPT_VALUE\",\"duplexKey\",\"hwm\",\"highWaterMarkFrom\",\"CorkedRequest\",\"entry\",\"finish\",\"corkReq\",\"pendingcb\",\"corkedRequestsFree\",\"onCorkedFinish\",\"WritableState\",\"internalUtil\",\"realHasInstance\",\"ERR_MULTIPLE_CALLBACK\",\"ERR_STREAM_CANNOT_PIPE\",\"ERR_STREAM_DESTROYED\",\"ERR_STREAM_NULL_VALUES\",\"ERR_STREAM_WRITE_AFTER_END\",\"ERR_UNKNOWN_ENCODING\",\"nop\",\"writableObjectMode\",\"noDecode\",\"decodeStrings\",\"writing\",\"corked\",\"bufferProcessing\",\"onwrite\",\"writecb\",\"writelen\",\"onwriteStateUpdate\",\"finishMaybe\",\"onwriteError\",\"needFinish\",\"bufferedRequest\",\"clearBuffer\",\"afterWrite\",\"lastBufferedRequest\",\"bufferedRequestCount\",\"_write\",\"writev\",\"_writev\",\"final\",\"_final\",\"onwriteDrain\",\"holder\",\"allBuffers\",\"callFinal\",\"need\",\"prefinish\",\"current\",\"hasInstance\",\"writeAfterEnd\",\"validChunk\",\"newChunk\",\"decodeChunk\",\"last\",\"writeOrBuffer\",\"cork\",\"uncork\",\"setDefaultEncoding\",\"endWritable\",\"Transform\",\"ERR_TRANSFORM_ALREADY_TRANSFORMING\",\"ERR_TRANSFORM_WITH_LENGTH_0\",\"afterTransform\",\"ts\",\"_transformState\",\"transforming\",\"writechunk\",\"rs\",\"needTransform\",\"writeencoding\",\"transform\",\"_transform\",\"flush\",\"_flush\",\"err2\",\"iii_psy_xmin\",\"STEREO\",\"DUAL_CHANNEL\",\"MONO\",\"NOT_SET\",\"arrL\",\"arrS\",\"arr21\",\"arr12\",\"psfb21\",\"psfb12\",\"GainAnalysis\",\"PINK_REF\",\"RMS_PERCENTILE\",\"YULE_ORDER\",\"RMS_WINDOW_TIME_NUMERATOR\",\"MAX_SAMP_FREQ\",\"RMS_WINDOW_TIME_DENOMINATOR\",\"ABYule\",\"MAX_SAMPLES_PER_WINDOW\",\"ABButter\",\"filterYule\",\"inputPos\",\"outputPos\",\"nSamples\",\"kernel\",\"filterButter\",\"fsqr\",\"InitGainAnalysis\",\"rgData\",\"samplefreq\",\"MAX_ORDER\",\"linprebuf\",\"lstepbuf\",\"loutbuf\",\"rinprebuf\",\"rstepbuf\",\"routbuf\",\"reqindex\",\"INIT_GAIN_ANALYSIS_ERROR\",\"sampleWindow\",\"lsum\",\"rsum\",\"totsamp\",\"ill\",\"INIT_GAIN_ANALYSIS_OK\",\"ResetSampleFrequency\",\"linpre\",\"rinpre\",\"lstep\",\"rstep\",\"lout\",\"rout\",\"AnalyzeSamples\",\"left_samples\",\"left_samplesPos\",\"right_samples\",\"right_samplesPos\",\"num_samples\",\"num_channels\",\"curleft\",\"curleftBase\",\"curright\",\"currightBase\",\"batchsamples\",\"cursamples\",\"cursamplepos\",\"GAIN_ANALYSIS_OK\",\"GAIN_ANALYSIS_ERROR\",\"STEPS_per_dB\",\"ival\",\"GetTitleGain\",\"retval\",\"elems\",\"GAIN_NOT_ENOUGH_SAMPLES\",\"upper\",\"analyzeResult\",\"MAX_dB\",\"meanBits\",\"bits\",\"Takehiro\",\"BitStream\",\"CRC16_POLYNOMIAL\",\"MAX_LENGTH\",\"ga\",\"mpg\",\"ver\",\"_ga\",\"_mpg\",\"_ver\",\"totbit\",\"bufByteIdx\",\"bufBitIdx\",\"putheader_bits\",\"putbits2\",\"Lame\",\"LAME_MAXMP3BUFFER\",\"putbits_noheaders\",\"drain_into_ancillary\",\"remainingBits\",\"getLameShortVersion\",\"disable_reservoir\",\"writeheader\",\"CRC_update\",\"crc\",\"huffman_coder_count1\",\"gi\",\"ix\",\"huffbits\",\"Huffmancode\",\"tableindex\",\"cbits\",\"xbits\",\"linbits\",\"ext\",\"x1\",\"x2\",\"linbits_x1\",\"linbits_x2\",\"ShortHuffmancodebits\",\"region1Start\",\"LongHuffmancodebits\",\"bigvalues\",\"region2Start\",\"TotalBytes\",\"compute_flushbits\",\"total_bytes_output\",\"flushbits\",\"remaining_headers\",\"bitsPerFrame\",\"last_ptr\",\"first_ptr\",\"getframebits\",\"println\",\"bit_rate\",\"brate\",\"CRC_writeheader\",\"byte\",\"flush_bitstream\",\"main_data_begin\",\"NEQ\",\"EQ\",\"scale\",\"add_dummy_byte\",\"resvDrain_pre\",\"error_protection\",\"extension\",\"copyright\",\"original\",\"emphasis\",\"private_bits\",\"band\",\"scfsi\",\"old\",\"encodeSideInfo2\",\"sfb\",\"data_bits\",\"tot_bits\",\"slen1\",\"slen1_tab\",\"slen2\",\"slen2_tab\",\"sfb_partition\",\"scale_bits\",\"sfbs\",\"writeMainData\",\"resvDrain_post\",\"printf\",\"bufferPos\",\"mp3data\",\"minimum\",\"updateMusicCRC\",\"nBytesWritten\",\"pcm_buf\",\"mp3_in\",\"samples_out\",\"hip_decode1_unclipped\",\"init_bit_stream_w\",\"GrInfo\",\"QuantizePVT\",\"Bits\",\"subdv_table\",\"quantize_lines_xrpow_01\",\"istep\",\"xrPos\",\"ixPos\",\"compareval0\",\"quantize_lines_xrpow\",\"remaining\",\"x0\",\"x3\",\"rx0\",\"rx1\",\"rx2\",\"rx3\",\"adj43\",\"huf_tbl_noESC\",\"choose_table\",\"endPos\",\"max1\",\"max2\",\"ix_max\",\"sum1\",\"hlen1\",\"count_bit_noESC\",\"t1\",\"sum2\",\"sum\",\"count_bit_noESC_from2\",\"sum3\",\"hlen2\",\"hlen3\",\"count_bit_noESC_from3\",\"IXMAX_VAL\",\"LARGE_BITS\",\"choice2\",\"choice\",\"t2\",\"count_bit_ESC\",\"recalc_divide_sub\",\"cod_info2\",\"r01_bits\",\"r01_div\",\"r0_tbl\",\"r1_tbl\",\"bigv\",\"r2\",\"a2\",\"bi\",\"r2t\",\"noquant_count_bits\",\"prev_noise\",\"sfb_count1\",\"a1\",\"best_huffman_divide\",\"count_bits\",\"IPOW20\",\"xp\",\"pi\",\"codInfo\",\"prevNoise\",\"prev_data_use\",\"accumulate\",\"accumulate01\",\"xpPos\",\"iData\",\"iDataPos\",\"acc_iData\",\"acc_iDataPos\",\"acc_xp\",\"acc_xpPos\",\"step\",\"pretab\",\"usefullsize\",\"quantize_xrpow\",\"gain\",\"roundfac\",\"r0\",\"r0bits\",\"r0t\",\"r1\",\"r1t\",\"recalc_divide_init\",\"slen1_n\",\"slen2_n\",\"best_scalefac_store\",\"recalc\",\"g0\",\"s1\",\"c1\",\"s2\",\"c2\",\"scfsi_calc\",\"scale_bitcount\",\"scale_bitcount_lsf\",\"scale_short\",\"scale_mixed\",\"scale_long\",\"max_slen1\",\"max_slen2\",\"all_scalefactors_not_negative\",\"max_range_sfac_tab\",\"table_number\",\"row_in_table\",\"partition\",\"nr_sfb\",\"over\",\"max_sfac\",\"partition_table\",\"nr_of_sfb_block\",\"slen3\",\"slen4\",\"log2tab\",\"huffman_init\",\"bv_index\",\"scfb_anz\",\"MeanBits\",\"tak\",\"rv\",\"_tk\",\"_rv\",\"Q_MAX\",\"ipow20\",\"PRECALC_SIZE\",\"Q_MAX2\",\"NSATHSCALE\",\"sfBandIndex\",\"pow20\",\"pow43\",\"ATHmdct\",\"ath\",\"ATHformula\",\"ATHlower\",\"StartLine\",\"iteration_init\",\"ATH_l\",\"ATH_psfb21\",\"ATH_s\",\"ATH_psfb12\",\"samp_freq\",\"ATH_f\",\"noATH\",\"compute_ath\",\"bass\",\"alto\",\"treble\",\"sfb21\",\"exp_nspsytune\",\"longfact\",\"shortfact\",\"on_pe\",\"targ_bits\",\"mean_bits\",\"cbr\",\"tbits\",\"add_bits\",\"mb\",\"extra_bits\",\"ResvMaxBits\",\"max_bits\",\"reduce_side\",\"fac\",\"move_bits\",\"athAdjust\",\"athFloor\",\"calc_xmin\",\"ratio\",\"pxmin\",\"gsfb\",\"pxminPos\",\"ath_over\",\"enable_athaa_fix\",\"rh1\",\"xmin\",\"rh2\",\"en0\",\"xa\",\"xb\",\"ATHonly\",\"max_nonzero\",\"tmpATH\",\"ATHshort\",\"useTemporal\",\"calc_noise_core\",\"startline\",\"noise\",\"ix01\",\"calc_noise\",\"l3_xmin\",\"distort\",\"distortPos\",\"l3_xminPos\",\"over_noise_db\",\"tot_noise_db\",\"max_noise\",\"scalefacPos\",\"over_SSD\",\"noise_log\",\"sl\",\"over_count\",\"tot_noise\",\"over_noise\",\"set_pinfo\",\"sfb2\",\"en1\",\"ifqstep\",\"xfsf\",\"CalcNoiseResult\",\"bw\",\"thr\",\"LAMEsfb\",\"en_s\",\"xfsf_s\",\"thr_s\",\"LAMEsfb_s\",\"LAMEqss\",\"LAMEmainbits\",\"LAMEsfbits\",\"_typeof2\",\"_typeof\",\"_possibleConstructorReturn\",\"_assertThisInitialized\",\"_setPrototypeOf\",\"_inherits\",\"__WEBPACK_AMD_DEFINE_FACTORY__\",\"__WEBPACK_AMD_DEFINE_ARRAY__\",\"__WEBPACK_AMD_DEFINE_RESULT__\",\"root\",\"cachedGuess\",\"zones\",\"links\",\"guesses\",\"logError\",\"momentVersion\",\"major\",\"minor\",\"charCodeToInt\",\"charCode\",\"unpackBase60\",\"whole\",\"fractional\",\"multiplier\",\"arrayToInt\",\"mapIndices\",\"indices\",\"unpack\",\"offsets\",\"untils\",\"intToUntil\",\"abbrs\",\"population\",\"Zone\",\"packedString\",\"_set\",\"OffsetAt\",\"at\",\"timeString\",\"toTimeString\",\"ZoneScore\",\"offsetScore\",\"abbrScore\",\"findChange\",\"low\",\"high\",\"mid\",\"sortZoneScores\",\"localeCompare\",\"addToGuesses\",\"guessesForUserOffsets\",\"guessesOffset\",\"offsetsLength\",\"filteredGuesses\",\"rebuildGuess\",\"intlName\",\"Intl\",\"DateTimeFormat\",\"resolvedOptions\",\"timeZone\",\"normalizeName\",\"zoneScore\",\"change\",\"startYear\",\"userOffsets\",\"zoneScores\",\"getZone\",\"scoreOffsetAt\",\"addZone\",\"packed\",\"normalized\",\"caller\",\"link\",\"addLink\",\"normal0\",\"normal1\",\"needsOffset\",\"isUnixTimestamp\",\"unpacked\",\"_index\",\"timestamp\",\"offsetNext\",\"offsetPrev\",\"moveAmbiguousForward\",\"moveInvalidForward\",\"offsetAt\",\"dataVersion\",\"_zones\",\"_links\",\"_names\",\"zoneExists\",\"didShowError\",\"guess\",\"ignoreCache\",\"abbrWrap\",\"_z\",\"resetZoneWrap\",\"defaultZone\",\"setDefault\",\"parseuri\",\"loc\",\"href\",\"createDebug\",\"prevTime\",\"enabled\",\"curr\",\"coerce\",\"formatter\",\"hash\",\"selectColor\",\"init\",\"instances\",\"disable\",\"skips\",\"plural\",\"long\",\"fmtShort\",\"packetData\",\"_deconstructPacket\",\"placeholder\",\"_placeholder\",\"newData\",\"_reconstructPacket\",\"pendingBlobs\",\"_removeBlobs\",\"curKey\",\"containingObject\",\"fileReader\",\"transports\",\"transportOptions\",\"writeBuffer\",\"prevBufferLen\",\"policyPort\",\"rememberUpgrade\",\"onlyBinaryUpgrades\",\"perMessageDeflate\",\"product\",\"upgrades\",\"pingInterval\",\"pingTimeout\",\"pingIntervalTimer\",\"pingTimeoutTimer\",\"priorWebsocketSuccess\",\"createTransport\",\"EIO\",\"transport\",\"requestTimeout\",\"protocols\",\"setTransport\",\"onDrain\",\"probe\",\"failed\",\"onTransportOpen\",\"upgradeLosesBinary\",\"upgrading\",\"freezeTransport\",\"onTransportClose\",\"onupgrade\",\"onHandshake\",\"setPing\",\"filterUpgrades\",\"onHeartbeat\",\"sendPacket\",\"waitForUpgrade\",\"cleanupAndClose\",\"filteredUpgrades\",\"Request\",\"async\",\"request\",\"sendXhr\",\"pollXhr\",\"xhr\",\"setDisableHeaderCheck\",\"setRequestHeader\",\"withCredentials\",\"hasXDR\",\"onLoad\",\"responseText\",\"onreadystatechange\",\"contentType\",\"getResponseHeader\",\"status\",\"requestsCount\",\"requests\",\"onSuccess\",\"fromError\",\"response\",\"attachEvent\",\"unloadHandler\",\"terminationEvent\",\"arraybuffer\",\"bytes\",\"abv\",\"err_cb\",\"bail\",\"proxy\",\"byteArray\",\"byteCount\",\"byteIndex\",\"stringFromCharCode\",\"ucs2decode\",\"extra\",\"counter\",\"checkScalarValue\",\"codePoint\",\"createByte\",\"encodeCodePoint\",\"readContinuationByte\",\"continuationByte\",\"decodeSymbol\",\"byte1\",\"codePoints\",\"byteString\",\"ucs2encode\",\"chars\",\"encoded1\",\"encoded2\",\"encoded3\",\"encoded4\",\"bufferLength\",\"BlobBuilder\",\"WebKitBlobBuilder\",\"MSBlobBuilder\",\"MozBlobBuilder\",\"blobSupported\",\"blobSupportsArrayBufferView\",\"blobBuilderSupported\",\"append\",\"getBlob\",\"mapArrayBufferViews\",\"copy\",\"byteOffset\",\"BlobBuilderConstructor\",\"bb\",\"part\",\"BlobConstructor\",\"JSONPPolling\",\"rNewline\",\"rEscapedNewline\",\"glob\",\"___eio\",\"script\",\"parentNode\",\"removeChild\",\"form\",\"iframe\",\"insertAt\",\"getElementsByTagName\",\"insertBefore\",\"body\",\"appendChild\",\"area\",\"iframeId\",\"className\",\"position\",\"top\",\"left\",\"setAttribute\",\"complete\",\"initIframe\",\"html\",\"action\",\"submit\",\"BrowserWebSocket\",\"NodeWebSocket\",\"WebSocket\",\"MozWebSocket\",\"WebSocketImpl\",\"WS\",\"usingBrowserWebSocket\",\"check\",\"headers\",\"supports\",\"addEventListeners\",\"onmessage\",\"list\",\"factor\",\"rand\",\"random\",\"deviation\",\"util\",\"bufferFrom\",\"MicrophoneStream\",\"MediaStream\",\"bufferSize\",\"AudioContext\",\"recording\",\"recorderProcess\",\"inputBuffer\",\"getChannelData\",\"audioInput\",\"webkitAudioContext\",\"context\",\"recorder\",\"createScriptProcessor\",\"destination\",\"setStream\",\"createMediaStreamSource\",\"onaudioprocess\",\"stop\",\"getTracks\",\"ex\",\"channels\",\"bitDepth\",\"sampleRate\",\"signed\",\"float\",\"inherits\",\"toRaw\",\"PassThrough\",\"pipeline\",\"_defineProperty\",\"custom\",\"tail\",\"_proto\",\"alloc\",\"allocUnsafe\",\"hasStrings\",\"_getString\",\"_getBuffer\",\"nb\",\"ownKeys\",\"sym\",\"_objectSpread\",\"depth\",\"customInspect\",\"experimentalWarnings\",\"Set\",\"emitWarning\",\"feature\",\"_Object$setPrototypeO\",\"kLastResolve\",\"kLastReject\",\"kError\",\"kEnded\",\"kLastPromise\",\"kHandlePromise\",\"kStream\",\"createIterResult\",\"readAndResolve\",\"iter\",\"resolve\",\"AsyncIteratorPrototype\",\"ReadableStreamAsyncIteratorPrototype\",\"Promise\",\"reject\",\"promise\",\"lastPromise\",\"then\",\"wrapForNext\",\"_this2\",\"_Object$create\",\"ERR_MISSING_ARGS\",\"streams\",\"popCallback\",\"destroys\",\"closed\",\"destroyer\",\"isModern\",\"encodingOrOffset\",\"maxLength\",\"RangeError\",\"fromArrayBuffer\",\"isEncoding\",\"fromString\",\"Presets\",\"Quantize\",\"Reservoir\",\"Version\",\"VBRTag\",\"GetAudio\",\"parse2\",\"mpg2\",\"Parse\",\"ver2\",\"id32\",\"pre2\",\"MPGLib\",\"ID3Tag\",\"_bits\",\"WavHeader\",\"dataOffset\",\"dataLen\",\"fourccToInt\",\"fourcc\",\"RIFF\",\"WAVE\",\"fmt_\",\"readHeader\",\"dataView\",\"getUint32\",\"fmtLen\",\"getUint16\",\"Mp3Encoder\",\"samplerate\",\"kbps\",\"lame\",\"gaud\",\"qu\",\"id3\",\"lame_init\",\"in_samplerate\",\"quality\",\"write_id3tag_automatic\",\"retcode\",\"lame_init_params\",\"maxSamples\",\"encodeBuffer\",\"right\",\"_sz\",\"lame_encode_buffer\",\"subarray\",\"lame_encode_flush\",\"PsyModel\",\"LameGlobalFlags\",\"ReplayGain\",\"CBRNewIterationLoop\",\"V9\",\"V8\",\"V7\",\"V6\",\"V5\",\"V4\",\"V3\",\"V2\",\"V1\",\"V0\",\"R3MIX\",\"STANDARD\",\"EXTREME\",\"INSANE\",\"STANDARD_FAST\",\"EXTREME_FAST\",\"MEDIUM\",\"MEDIUM_FAST\",\"mpglib\",\"mask_adjust\",\"mask_adjust_short\",\"bo_l_weight\",\"bo_s_weight\",\"LowPassHighPass\",\"lowerlimit\",\"BandPass\",\"bitrate\",\"lPass\",\"lowpass\",\"_p\",\"_qu\",\"_id3\",\"_mpglib\",\"LAME_ID\",\"filter_coef\",\"cos\",\"PI\",\"SmpFrqIndex\",\"sample_freq\",\"gpf\",\"FindNearestBitrate\",\"bRate\",\"BitrateIndex\",\"optimum_bandwidth\",\"lh\",\"freq_map\",\"table_index\",\"nearestBitrateFullIndex\",\"calcNeeded\",\"mf_needed\",\"lame_encode_frame\",\"frameNum\",\"InOut\",\"n_in\",\"n_out\",\"NumUsed\",\"num_used\",\"blackman\",\"fcn\",\"wcn\",\"bkwn\",\"sin\",\"fill_buffer_resample\",\"outbuf\",\"outbufPos\",\"desired_len\",\"in_bufferPos\",\"bpc\",\"gcd\",\"intratio\",\"filter_l\",\"BLACKSIZE\",\"time0\",\"joff\",\"xvalue\",\"j2\",\"n_shift\",\"fill_buffer\",\"in_buffer\",\"nsamples\",\"numUsed\",\"class_id\",\"short_blocks\",\"lowpassfreq\",\"highpassfreq\",\"lowpasswidth\",\"highpasswidth\",\"VBR_q\",\"ATHcurve\",\"VBR_mean_bitrate_kbps\",\"VBR_min_bitrate_kbps\",\"VBR_max_bitrate_kbps\",\"VBR_hard_min\",\"quant_comp\",\"quant_comp_short\",\"msfix\",\"attackthre\",\"attackthre_s\",\"athaa_type\",\"ATHtype\",\"athaa_loudapprox\",\"athaa_sensitivity\",\"interChRatio\",\"encoder_padding\",\"preset\",\"lame_init_old\",\"lame_allocated_gfp\",\"full_bitrate_table\",\"lower_range\",\"lower_range_kbps\",\"upper_range\",\"upper_range_kbps\",\"free_format\",\"compression_ratio\",\"map2MP3Frequency\",\"int\",\"VBR_q_frac\",\"linear_int\",\"input_samplefreq\",\"suggested_samplefreq\",\"optimum_samplefreq\",\"decode_only\",\"hip_decode_exit\",\"hip_decode_init\",\"encoder_delay\",\"lowpass_band\",\"highpass_band\",\"minband\",\"freq\",\"maxband\",\"fc1\",\"fc2\",\"lame_init_params_ppflt\",\"id3tag_write_v2\",\"InitVbrTag\",\"lame_init_bitstream\",\"apply_preset\",\"LAME_DEFAULT_QUALITY\",\"maskingadjust\",\"maskingadjust_short\",\"experimentalY\",\"VBRNewIterationLoop\",\"VBROldIterationLoop\",\"vbrmode\",\"ABRIterationLoop\",\"tune\",\"tune_value_a\",\"lame_init_qval\",\"NSATTACKTHRE\",\"NSATTACKTHRE_S\",\"psymodel_init\",\"mp3buffer\",\"mp3bufferPos\",\"mp3buffer_size\",\"mp3buffer_size_remaining\",\"end_padding\",\"frames_left\",\"imp3\",\"samples_to_encode\",\"bunch\",\"frame_num\",\"id3tag_write_v1\",\"buffer_l\",\"buffer_r\",\"update_inbuffer_size\",\"mp3out\",\"mp3size\",\"scale_left\",\"scale_right\",\"in_buffer_ptr\",\"inOut\",\"buf_size\",\"lame_encode_buffer_sample\",\"FFT\",\"fft\",\"LOG10\",\"rpelev\",\"rpelev2\",\"rpelev_s\",\"rpelev2_s\",\"DELBARK\",\"VO_SCALE\",\"NS_PREECHO_ATT2\",\"NSFIRLEN\",\"LN_TO_LOG10\",\"NON_LINEAR_SCALE_ENERGY\",\"psycho_loudness_approx\",\"loudness_power\",\"eql_w\",\"compute_ffts\",\"fftenergy\",\"fftenergy_s\",\"wsamp_l\",\"wsamp_lPos\",\"wsamp_s\",\"wsamp_sPos\",\"gr_out\",\"chn\",\"bufPos\",\"fft_long\",\"fft_short\",\"im\",\"totalenergy\",\"energy_save\",\"ma_max_i1\",\"ma_max_i2\",\"ma_max_m\",\"I1LIMIT\",\"I2LIMIT\",\"MLIMIT\",\"table1\",\"table2\",\"table3\",\"mask_add\",\"m1\",\"m2\",\"kk\",\"shortblock\",\"cb_s\",\"cb_l\",\"table2_\",\"vbrpsy_mask_add\",\"convert_partition2scalefac_s\",\"eb\",\"sblock\",\"sb\",\"enn\",\"thmm\",\"bo_s_sb\",\"b_lim\",\"w_curr\",\"w_next\",\"convert_partition2scalefac_l\",\"bo_l_sb\",\"compute_masking_s\",\"ebb\",\"ecb\",\"NS_INTERP\",\"regcoef_s\",\"pecalc_s\",\"mr\",\"pe_s\",\"regcoef_l\",\"pecalc_l\",\"pe_l\",\"calc_energy\",\"avg\",\"calc_mask_index_l\",\"mask_idx\",\"last_tab_entry\",\"vbrpsy_compute_fft_l\",\"vbrpsy_compute_fft_s\",\"vbrpsy_compute_loudness_approximation_l\",\"masking_ratio\",\"masking_MS_ratio\",\"percep_entropy\",\"percep_MS_entropy\",\"blocktype_d\",\"numchn\",\"pcfact\",\"wsamp_L\",\"wsamp_S\",\"eb_l\",\"eb_s\",\"uselongblock\",\"ns_hpfsmpl\",\"mask_idx_l\",\"mask_idx_s\",\"firbuf\",\"firbufPos\",\"attackThreshold\",\"en_subshort\",\"en_short\",\"attack_intensity\",\"ns_uselongblock\",\"ns_attacks\",\"last_en_subshort\",\"pf\",\"pfPos\",\"pfe\",\"ers_save\",\"lastAttacks\",\"idx\",\"eb2\",\"calc_interchannel_masking\",\"mld\",\"rmid\",\"rside\",\"msfix1\",\"athadjust\",\"msfix2\",\"athlower\",\"thmLR\",\"thmM\",\"thmS\",\"ns_msfix\",\"block_type_set\",\"ppe\",\"ppePos\",\"fircoef_\",\"vbrpsy_skip_masking_s\",\"vbrpsy_skip_masking_l\",\"vbrpsy_compute_masking_s\",\"psyvbr_calc_mask_index_s\",\"dd_n\",\"avg_mask\",\"vbrpsy_compute_masking_l\",\"ecb_limit\",\"ecb_limit_2\",\"ecb_limit_1\",\"vbrpsy_compute_MS_thresholds\",\"cb_mld\",\"ath_cb\",\"ebM\",\"ebS\",\"thmL\",\"thmR\",\"mld_m\",\"thmMS\",\"s3_func_x\",\"bark\",\"hf_slope\",\"tempy\",\"exp\",\"norm_s3_func_x\",\"lim_a\",\"lim_b\",\"s3_func\",\"tempx\",\"sqrt\",\"freq2bark\",\"atan\",\"init_numline\",\"numlines\",\"bo\",\"bm\",\"bval\",\"bval_width\",\"bo_w\",\"sfreq\",\"blksize\",\"scalepos\",\"deltafreq\",\"sbmax\",\"b_frq\",\"sample_freq_frac\",\"ni\",\"bark1\",\"i1\",\"i2\",\"f_tmp\",\"bark2\",\"init_s3_values\",\"npart\",\"norm\",\"use_old_s3\",\"s3\",\"numberOfNoneZero\",\"s3_x_norm\",\"stereo_demask\",\"ATHformula_GB\",\"sub_short_factor\",\"n_chn_psy\",\"n_chn_out\",\"vbrpsy_attack_detection\",\"vbrpsy_compute_block_type\",\"ch01\",\"new_thmm\",\"NS_PREECHO_ATT1\",\"vbrpsy_apply_block_type\",\"useOldS3\",\"bvl_a\",\"snr_l_a\",\"snr_l_b\",\"snr_s_a\",\"snr_s_b\",\"experimentalZ\",\"snr\",\"level\",\"init_fft\",\"frame_duration\",\"freq_inc\",\"eql_balance\",\"window_s\",\"costab\",\"fht\",\"fz\",\"fzPos\",\"k4\",\"fi\",\"tri\",\"k1\",\"k2\",\"k3\",\"kx\",\"f1\",\"f0\",\"f3\",\"f2\",\"g1\",\"g2\",\"g3\",\"rv_tbl\",\"x_real\",\"jj\",\"enwindow\",\"win\",\"tantab_l\",\"cx\",\"cs\",\"order\",\"window_subband\",\"x1Pos\",\"wp\",\"mdct_short\",\"inout\",\"inoutPos\",\"tc0\",\"tc1\",\"tc2\",\"ts0\",\"ts1\",\"ts2\",\"mdct_long\",\"outPos\",\"_in\",\"ct\",\"st\",\"tc3\",\"tc4\",\"ts5\",\"ts6\",\"ts7\",\"ts8\",\"ts3\",\"ts4\",\"tc5\",\"tc6\",\"tc7\",\"tc8\",\"w0\",\"w1\",\"wk\",\"wkPos\",\"mdct_enc\",\"mdct_encPos\",\"samp\",\"sampPos\",\"band0\",\"band1\",\"work\",\"bu\",\"bd\",\"strict_ISO\",\"seen\",\"want\",\"bag\",\"nVbrNumFrames\",\"TotalFrameSize\",\"freqindex\",\"_quantize\",\"quantize\",\"xrpow\",\"ResvFrameBegin\",\"ms_convert\",\"masking_lower_db\",\"init_outer_loop\",\"init_xrpow\",\"outer_loop\",\"iteration_finish_one\",\"ResvFrameEnd\",\"VBRPresets\",\"qual\",\"comp\",\"compS\",\"shThreshold\",\"shThresholdS\",\"adj\",\"adjShort\",\"lower\",\"curve\",\"sens\",\"inter\",\"joint\",\"mod\",\"fix\",\"vbr_q\",\"quant_comp_s\",\"expY\",\"st_lrm\",\"st_s\",\"masking_adj\",\"masking_adj_short\",\"ath_lower\",\"ath_curve\",\"ath_sensitivity\",\"interch\",\"safejoint\",\"sfb21mod\",\"ABRPresets\",\"sc\",\"mask\",\"interCh\",\"sfScale\",\"nsmsfix\",\"nsbass\",\"sfscale\",\"_lame\",\"vbr_old_switch_map\",\"vbr_psy_switch_map\",\"apply_vbr_preset\",\"enforce\",\"vbr_preset\",\"lame_set_VBR_q\",\"abr_switch_map\",\"apply_abr_preset\",\"actual_bitrate\",\"VBRQuantize\",\"CalcNoiseData\",\"tk\",\"BinSearchDirection\",\"loop_break\",\"quant_compare\",\"best\",\"calc\",\"better\",\"klemm_noise\",\"get_klemm_noise\",\"balance_noise\",\"bRefine\",\"ifqstep34\",\"trigger\",\"amp_scalefac_bands\",\"inc_scalefac_scale\",\"amp\",\"inc_subblock_gain\",\"init_xrpow_core\",\"ixwork\",\"ath21\",\"block\",\"ath12\",\"psfb21_analogsilence\",\"BINSEARCH_NONE\",\"BINSEARCH_UP\",\"BINSEARCH_DOWN\",\"trancate_smallspectrums\",\"allowedNoise\",\"trancateThreshold\",\"nsame\",\"cod_info_w\",\"save_xrpow\",\"best_noise_info\",\"best_part2_3_length\",\"bEndOfSearch\",\"best_ggain_pass1\",\"desired_rate\",\"nBits\",\"flagGoneOver\",\"Direction\",\"bin_search_StepSize\",\"age\",\"search_limit\",\"noise_info\",\"maxggain\",\"huff_bits\",\"ResvAdjust\",\"VBR_encode_granule\",\"min_bits\",\"dbits\",\"bst_cod_info\",\"bst_xrpow\",\"Max_bits\",\"real_bits\",\"this_bits\",\"found\",\"get_framebits\",\"frameBits\",\"VBR_old_prepare\",\"bands\",\"analog_silence\",\"mxb\",\"bitpressure_strategy\",\"VBR_new_prepare\",\"maximum_framebits\",\"calc_target_bits\",\"analog_silence_bits\",\"max_frame_bits\",\"res_factor\",\"totbits\",\"maxmp3buf\",\"frameLength\",\"resvLimit\",\"fullFrameBits\",\"resvsize\",\"over_bits\",\"stuffingBits\",\"mdb_bytes\",\"getLameVersion\",\"LAME_MAJOR_VERSION\",\"getLameVeryShortVersion\",\"getPsyVersion\",\"PSY_MAJOR_VERSION\",\"getLameUrl\",\"getLameOsBitness\",\"_v\",\"NUMTOCENTRIES\",\"MAXFRAMESIZE\",\"LAMEHEADERSIZE\",\"XING_BITRATE1\",\"XING_BITRATE2\",\"XING_BITRATE25\",\"ISO_8859_1\",\"VBRTag0\",\"VBRTag1\",\"crc16Lookup\",\"extractInteger\",\"createInteger\",\"createShort\",\"shiftInBitsValue\",\"setLameTagFrameHeader\",\"bbyte\",\"abyte\",\"crcUpdateLookup\",\"addVbr\",\"getVbrTag\",\"pTagData\",\"VBRTagData\",\"hId\",\"hSrIndex\",\"hMode\",\"hBitrate\",\"samprate\",\"equals\",\"isVbrTag\",\"head_flags\",\"frames\",\"toc\",\"vbrScale\",\"headersize\",\"encDelay\",\"encPadding\",\"kbps_header\",\"totalFrameSize\",\"headerSize\",\"getLameTagFrame\",\"indx\",\"seek_point\",\"xingSeekTable\",\"streamIndex\",\"FRAMES_FLAG\",\"streamSize\",\"musicLength\",\"streamBuffer\",\"streamBufferPos\",\"revMethod\",\"misc\",\"musicCRC\",\"abrBitrate\",\"bytesWritten\",\"vbrTypeTranslator\",\"peakSignalAmplitude\",\"radioReplayGain\",\"noiseShaping\",\"stereoMode\",\"nonOptimal\",\"sourceFreq\",\"expNPsyTune\",\"safeJoint\",\"noGapMore\",\"noGapPrevious\",\"noGapCount\",\"noGapCurr\",\"athType\",\"putLameVBR\",\"putVbrTag\",\"seek\",\"id3v2TagSize\",\"fpStream\",\"id3v2Header\",\"readFully\",\"startsWith\",\"skipId3v2\"],\"mappings\":\"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,mBAAA,mBAAA,kBAAA,kBAAA,kBAAA,mBAAA,kBAEA,kBAAA,mBAAA,kBAAA,mBAAA,mBAAA,oBAAA,oBAAA,kBAAA,kBAAA,mBAAA,mBAAA,mBAAA,mBAAA,kBAAA,mBAAA,mBAAA,kBAAA,mBAEA,mBAAA,kBAAA,kBAAA,mBAAA,mBAAA,oBAAA,oBAAA,kBAAA,kBAAA,mBAAA,kBAAA,kBAAA,kBAAA,kBAAA,mBAAA,mBAAA,kBAAA,mBAEA,mBAAA,kBAAA,kBAAA,mBAAA,kBAAA,oBAAA,mBAAA,mBAAA,kBAAA,mBAAA,mBAAA,kBAAA,kBAAA,kBAAA,mBAAA,mBAAA,mBAAA,mBAEA,kBAAA,mBAAA,kBAAA,mBAAA,mBAAA,oBAAA,oBAAA,kBAAA,kBAAA,mBAAA,mBAAA,kBAAA,kBAAA,kBAAA,kBAAA,mBAAA,mBAAA,mBAEA,kBAAA,mBAAA,mBAAA,mBAAA,kBAAA,kBAAA,mBAAA,iBAAA,kBAAA,mBAAA,mBAAA,mBAAA,kBAAA,mBAAA,mBAAA,kBAAA,mBAAA,mBAAA,mBAAA,mBAAA,kBAAA,oBAAA,mBAAA,oBAAA,oBAAA,mBAAA,mBAEA,mBAAA,mBAAA,mBAAA,oBAAA,mBAAA,mBAAA,kBAAA,kBAAA,mBAEA,mBAAA,kBAAA,kBAAA,mBAAA,oBAAA,mBAAA,mBAAA,mBAAA,kBAAA,mBAAA,kBAAA,iBAAA,oBAAA,kBAAA,mBAAA,mBAAA,kBAAA,mBAEA,kBAAA,kBAAA,mBAAA,oBAAA,oBAAA,oBAAA,iBAAA,mBAAA,kBAAA,kBAAA,kBAAA,kBAAA,oBAAA,kBAAA,kBAAA,mBAAA,kBAAA,mBAEA,oBAAA,iBAAA,kBAAA,mBAAA,oBAAA,oBAAA,mBAAA,kBAAA,kBAAA,kBAAA,kBAAA,kBAAA,oBAAA,kBAAA,mBAAA,mBAAA,kBAAA,mBAEA,oBAAA,mBAAA,mBAAA,oBAAA,oBAAA,oBAAA,oBAAA,kBAAA,iBAAA,mBAAA,kBAAA,kBAAA,kBAAA,mBAAA,mBAAA,mBAAA,mBAAA,mBAEA,oBAAA,mBAAA,mBAAA,oBAAA,oBAAA,mBAAA,mBAAA,kBAAA,kBAAA,mBAAA,kBAAA,iBAAA,mBAAA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,IAAA,EAAA,IAAA,GAAA,GAAA,GAAA,MAAA,GAEA,IAAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,IAAA,GAAA,GAAA,GAAA,KAAA,GAEA,IAAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,IAAA,GAAA,GAAA,GAAA,KAAA,GAEA,IAAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,IAAA,GAAA,GAAA,GAAA,KAAA,GAEA,IAAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,IAAA,GAAA,GAAA,GAAA,KAAA,GAEA,IAAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,IAAA,GAAA,GAAA,GAAA,KAAA,GAEA,IAAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,IAAA,GAAA,EAAA,GAAA,KAAA,GAEA,IAAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,IAAA,GAAA,EAAA,GAAA,KAAA,GAEA,IAAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,GAEA,IAAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,IAAA,EAAA,EAAA,IAAA,KAAA,GAEA,IAAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,IAAA,EAAA,IAAA,EAAA,EAAA,IAAA,KAAA,GAEA,IAAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,GAEA,IAAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,GAEA,IAAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,IAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAEA,IAAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,IAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAEA,IAAAA,EAAA,IAAA,EAAA,EAAA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\",\"sourcesContent\":[\"function new_byte(count) {\\n  return new Int8Array(count);\\n}\\n\\nfunction new_short(count) {\\n  return new Int16Array(count);\\n}\\n\\nfunction new_int(count) {\\n  return new Int32Array(count);\\n}\\n\\nfunction new_float(count) {\\n  return new Float32Array(count);\\n}\\n\\nfunction new_double(count) {\\n  return new Float64Array(count);\\n}\\n\\nfunction new_float_n(args) {\\n  if (args.length == 1) {\\n    return new_float(args[0]);\\n  }\\n\\n  var sz = args[0];\\n  args = args.slice(1);\\n  var A = [];\\n\\n  for (var i = 0; i < sz; i++) {\\n    A.push(new_float_n(args));\\n  }\\n\\n  return A;\\n}\\n\\nfunction new_int_n(args) {\\n  if (args.length == 1) {\\n    return new_int(args[0]);\\n  }\\n\\n  var sz = args[0];\\n  args = args.slice(1);\\n  var A = [];\\n\\n  for (var i = 0; i < sz; i++) {\\n    A.push(new_int_n(args));\\n  }\\n\\n  return A;\\n}\\n\\nfunction new_short_n(args) {\\n  if (args.length == 1) {\\n    return new_short(args[0]);\\n  }\\n\\n  var sz = args[0];\\n  args = args.slice(1);\\n  var A = [];\\n\\n  for (var i = 0; i < sz; i++) {\\n    A.push(new_short_n(args));\\n  }\\n\\n  return A;\\n}\\n\\nfunction new_array_n(args) {\\n  if (args.length == 1) {\\n    return new Array(args[0]);\\n  }\\n\\n  var sz = args[0];\\n  args = args.slice(1);\\n  var A = [];\\n\\n  for (var i = 0; i < sz; i++) {\\n    A.push(new_array_n(args));\\n  }\\n\\n  return A;\\n}\\n\\nvar Arrays = {};\\n\\nArrays.fill = function (a, fromIndex, toIndex, val) {\\n  if (arguments.length == 2) {\\n    for (var i = 0; i < a.length; i++) {\\n      a[i] = arguments[1];\\n    }\\n  } else {\\n    for (var i = fromIndex; i < toIndex; i++) {\\n      a[i] = val;\\n    }\\n  }\\n};\\n\\nvar System = {};\\n\\nSystem.arraycopy = function (src, srcPos, dest, destPos, length) {\\n  var srcEnd = srcPos + length;\\n\\n  while (srcPos < srcEnd) {\\n    dest[destPos++] = src[srcPos++];\\n  }\\n};\\n\\nvar Util = {};\\nUtil.SQRT2 = 1.41421356237309504880;\\n\\nUtil.FAST_LOG10 = function (x) {\\n  return Math.log10(x);\\n};\\n\\nUtil.FAST_LOG10_X = function (x, y) {\\n  return Math.log10(x) * y;\\n};\\n\\nfunction ShortBlock(ordinal) {\\n  this.ordinal = ordinal;\\n}\\n/**\\n * LAME may use them, even different block types for L/R.\\n */\\n\\n\\nShortBlock.short_block_allowed = new ShortBlock(0);\\n/**\\n * LAME may use them, but always same block types in L/R.\\n */\\n\\nShortBlock.short_block_coupled = new ShortBlock(1);\\n/**\\n * LAME will not use short blocks, long blocks only.\\n */\\n\\nShortBlock.short_block_dispensed = new ShortBlock(2);\\n/**\\n * LAME will not use long blocks, short blocks only.\\n */\\n\\nShortBlock.short_block_forced = new ShortBlock(3);\\nvar Float = {};\\nFloat.MAX_VALUE = 3.4028235e+38;\\n\\nfunction VbrMode(ordinal) {\\n  this.ordinal = ordinal;\\n}\\n\\nVbrMode.vbr_off = new VbrMode(0);\\nVbrMode.vbr_mt = new VbrMode(1);\\nVbrMode.vbr_rh = new VbrMode(2);\\nVbrMode.vbr_abr = new VbrMode(3);\\nVbrMode.vbr_mtrh = new VbrMode(4);\\nVbrMode.vbr_default = VbrMode.vbr_mtrh;\\n\\nvar assert = function assert(x) {//console.assert(x);\\n};\\n\\nmodule.exports = {\\n  \\\"System\\\": System,\\n  \\\"VbrMode\\\": VbrMode,\\n  \\\"Float\\\": Float,\\n  \\\"ShortBlock\\\": ShortBlock,\\n  \\\"Util\\\": Util,\\n  \\\"Arrays\\\": Arrays,\\n  \\\"new_array_n\\\": new_array_n,\\n  \\\"new_byte\\\": new_byte,\\n  \\\"new_double\\\": new_double,\\n  \\\"new_float\\\": new_float,\\n  \\\"new_float_n\\\": new_float_n,\\n  \\\"new_int\\\": new_int,\\n  \\\"new_int_n\\\": new_int_n,\\n  \\\"new_short\\\": new_short,\\n  \\\"new_short_n\\\": new_short_n,\\n  \\\"assert\\\": assert\\n};\",\"var common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n/**\\n * ENCDELAY The encoder delay.\\n *\\n * Minimum allowed is MDCTDELAY (see below)\\n *\\n * The first 96 samples will be attenuated, so using a value less than 96\\n * will result in corrupt data for the first 96-ENCDELAY samples.\\n *\\n * suggested: 576 set to 1160 to sync with FhG.\\n */\\n\\nEncoder.ENCDELAY = 576;\\n/**\\n * make sure there is at least one complete frame after the last frame\\n * containing real data\\n *\\n * Using a value of 288 would be sufficient for a a very sophisticated\\n * decoder that can decode granule-by-granule instead of frame by frame. But\\n * lets not assume this, and assume the decoder will not decode frame N\\n * unless it also has data for frame N+1\\n */\\n\\nEncoder.POSTDELAY = 1152;\\n/**\\n * delay of the MDCT used in mdct.c original ISO routines had a delay of\\n * 528! Takehiro's routines:\\n */\\n\\nEncoder.MDCTDELAY = 48;\\nEncoder.FFTOFFSET = 224 + Encoder.MDCTDELAY;\\n/**\\n * Most decoders, including the one we use, have a delay of 528 samples.\\n */\\n\\nEncoder.DECDELAY = 528;\\n/**\\n * number of subbands\\n */\\n\\nEncoder.SBLIMIT = 32;\\n/**\\n * parition bands bands\\n */\\n\\nEncoder.CBANDS = 64;\\n/**\\n * number of critical bands/scale factor bands where masking is computed\\n */\\n\\nEncoder.SBPSY_l = 21;\\nEncoder.SBPSY_s = 12;\\n/**\\n * total number of scalefactor bands encoded\\n */\\n\\nEncoder.SBMAX_l = 22;\\nEncoder.SBMAX_s = 13;\\nEncoder.PSFB21 = 6;\\nEncoder.PSFB12 = 6;\\n/**\\n * FFT sizes\\n */\\n\\nEncoder.BLKSIZE = 1024;\\nEncoder.HBLKSIZE = Encoder.BLKSIZE / 2 + 1;\\nEncoder.BLKSIZE_s = 256;\\nEncoder.HBLKSIZE_s = Encoder.BLKSIZE_s / 2 + 1;\\nEncoder.NORM_TYPE = 0;\\nEncoder.START_TYPE = 1;\\nEncoder.SHORT_TYPE = 2;\\nEncoder.STOP_TYPE = 3;\\n/**\\n * <PRE>\\n * Mode Extention:\\n * When we are in stereo mode, there are 4 possible methods to store these\\n * two channels. The stereo modes -m? are using a subset of them.\\n *\\n *  -ms: MPG_MD_LR_LR\\n *  -mj: MPG_MD_LR_LR and MPG_MD_MS_LR\\n *  -mf: MPG_MD_MS_LR\\n *  -mi: all\\n * </PRE>\\n */\\n\\nEncoder.MPG_MD_LR_LR = 0;\\nEncoder.MPG_MD_LR_I = 1;\\nEncoder.MPG_MD_MS_LR = 2;\\nEncoder.MPG_MD_MS_I = 3;\\nEncoder.fircoef = [-0.0207887 * 5, -0.0378413 * 5, -0.0432472 * 5, -0.031183 * 5, 7.79609e-18 * 5, 0.0467745 * 5, 0.10091 * 5, 0.151365 * 5, 0.187098 * 5];\\n\\nfunction Encoder() {\\n  var NewMDCT = require('./NewMDCT.js');\\n\\n  var III_psy_ratio = require('./III_psy_ratio.js');\\n\\n  var FFTOFFSET = Encoder.FFTOFFSET;\\n  var MPG_MD_MS_LR = Encoder.MPG_MD_MS_LR; //BitStream bs;\\n  //PsyModel psy;\\n  //VBRTag vbr;\\n  //QuantizePVT qupvt;\\n\\n  var bs = null;\\n  this.psy = null;\\n  var psy = null;\\n  var vbr = null;\\n  var qupvt = null; //public final void setModules(BitStream bs, PsyModel psy, QuantizePVT qupvt,\\n  //    VBRTag vbr) {\\n\\n  this.setModules = function (_bs, _psy, _qupvt, _vbr) {\\n    bs = _bs;\\n    this.psy = _psy;\\n    psy = _psy;\\n    vbr = _vbr;\\n    qupvt = _qupvt;\\n  };\\n\\n  var newMDCT = new NewMDCT();\\n  /***********************************************************************\\n   *\\n   * encoder and decoder delays\\n   *\\n   ***********************************************************************/\\n\\n  /**\\n   * <PRE>\\n   * layer III enc->dec delay:  1056 (1057?)   (observed)\\n   * layer  II enc->dec delay:   480  (481?)   (observed)\\n   *\\n   * polyphase 256-16             (dec or enc)        = 240\\n   * mdct      256+32  (9*32)     (dec or enc)        = 288\\n   * total:    512+16\\n   *\\n   * My guess is that delay of polyphase filterbank is actualy 240.5\\n   * (there are technical reasons for this, see postings in mp3encoder).\\n   * So total Encode+Decode delay = ENCDELAY + 528 + 1\\n   * </PRE>\\n   */\\n\\n  /**\\n   * auto-adjust of ATH, useful for low volume Gabriel Bouvigne 3 feb 2001\\n   *\\n   * modifies some values in gfp.internal_flags.ATH (gfc.ATH)\\n   */\\n  //private void adjust_ATH(final LameInternalFlags gfc) {\\n\\n  function adjust_ATH(gfc) {\\n    var gr2_max, max_pow;\\n\\n    if (gfc.ATH.useAdjust == 0) {\\n      gfc.ATH.adjust = 1.0;\\n      /* no adjustment */\\n\\n      return;\\n    }\\n    /* jd - 2001 mar 12, 27, jun 30 */\\n\\n    /* loudness based on equal loudness curve; */\\n\\n    /* use granule with maximum combined loudness */\\n\\n\\n    max_pow = gfc.loudness_sq[0][0];\\n    gr2_max = gfc.loudness_sq[1][0];\\n\\n    if (gfc.channels_out == 2) {\\n      max_pow += gfc.loudness_sq[0][1];\\n      gr2_max += gfc.loudness_sq[1][1];\\n    } else {\\n      max_pow += max_pow;\\n      gr2_max += gr2_max;\\n    }\\n\\n    if (gfc.mode_gr == 2) {\\n      max_pow = Math.max(max_pow, gr2_max);\\n    }\\n\\n    max_pow *= 0.5;\\n    /* max_pow approaches 1.0 for full band noise */\\n\\n    /* jd - 2001 mar 31, jun 30 */\\n\\n    /* user tuning of ATH adjustment region */\\n\\n    max_pow *= gfc.ATH.aaSensitivityP;\\n    /*\\n     * adjust ATH depending on range of maximum value\\n     */\\n\\n    /* jd - 2001 feb27, mar12,20, jun30, jul22 */\\n\\n    /* continuous curves based on approximation */\\n\\n    /* to GB's original values. */\\n\\n    /* For an increase in approximate loudness, */\\n\\n    /* set ATH adjust to adjust_limit immediately */\\n\\n    /* after a delay of one frame. */\\n\\n    /* For a loudness decrease, reduce ATH adjust */\\n\\n    /* towards adjust_limit gradually. */\\n\\n    /* max_pow is a loudness squared or a power. */\\n\\n    if (max_pow > 0.03125) {\\n      /* ((1 - 0.000625)/ 31.98) from curve below */\\n      if (gfc.ATH.adjust >= 1.0) {\\n        gfc.ATH.adjust = 1.0;\\n      } else {\\n        /* preceding frame has lower ATH adjust; */\\n\\n        /* ascend only to the preceding adjust_limit */\\n\\n        /* in case there is leading low volume */\\n        if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\\n          gfc.ATH.adjust = gfc.ATH.adjustLimit;\\n        }\\n      }\\n\\n      gfc.ATH.adjustLimit = 1.0;\\n    } else {\\n      /* adjustment curve */\\n\\n      /* about 32 dB maximum adjust (0.000625) */\\n      var adj_lim_new = 31.98 * max_pow + 0.000625;\\n\\n      if (gfc.ATH.adjust >= adj_lim_new) {\\n        /* descend gradually */\\n        gfc.ATH.adjust *= adj_lim_new * 0.075 + 0.925;\\n\\n        if (gfc.ATH.adjust < adj_lim_new) {\\n          /* stop descent */\\n          gfc.ATH.adjust = adj_lim_new;\\n        }\\n      } else {\\n        /* ascend */\\n        if (gfc.ATH.adjustLimit >= adj_lim_new) {\\n          gfc.ATH.adjust = adj_lim_new;\\n        } else {\\n          /* preceding frame has lower ATH adjust; */\\n\\n          /* ascend only to the preceding adjust_limit */\\n          if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\\n            gfc.ATH.adjust = gfc.ATH.adjustLimit;\\n          }\\n        }\\n      }\\n\\n      gfc.ATH.adjustLimit = adj_lim_new;\\n    }\\n  }\\n  /**\\n   * <PRE>\\n   *  some simple statistics\\n   *\\n   *  bitrate index 0: free bitrate . not allowed in VBR mode\\n   *  : bitrates, kbps depending on MPEG version\\n   *  bitrate index 15: forbidden\\n   *\\n   *  mode_ext:\\n   *  0:  LR\\n   *  1:  LR-i\\n   *  2:  MS\\n   *  3:  MS-i\\n   * </PRE>\\n   */\\n\\n\\n  function updateStats(gfc) {\\n    var gr, ch;\\n    assert(0 <= gfc.bitrate_index && gfc.bitrate_index < 16);\\n    assert(0 <= gfc.mode_ext && gfc.mode_ext < 4);\\n    /* count bitrate indices */\\n\\n    gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][4]++;\\n    gfc.bitrate_stereoMode_Hist[15][4]++;\\n    /* count 'em for every mode extension in case of 2 channel encoding */\\n\\n    if (gfc.channels_out == 2) {\\n      gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][gfc.mode_ext]++;\\n      gfc.bitrate_stereoMode_Hist[15][gfc.mode_ext]++;\\n    }\\n\\n    for (gr = 0; gr < gfc.mode_gr; ++gr) {\\n      for (ch = 0; ch < gfc.channels_out; ++ch) {\\n        var bt = gfc.l3_side.tt[gr][ch].block_type | 0;\\n        if (gfc.l3_side.tt[gr][ch].mixed_block_flag != 0) bt = 4;\\n        gfc.bitrate_blockType_Hist[gfc.bitrate_index][bt]++;\\n        gfc.bitrate_blockType_Hist[gfc.bitrate_index][5]++;\\n        gfc.bitrate_blockType_Hist[15][bt]++;\\n        gfc.bitrate_blockType_Hist[15][5]++;\\n      }\\n    }\\n  }\\n\\n  function lame_encode_frame_init(gfp, inbuf) {\\n    var gfc = gfp.internal_flags;\\n    var ch, gr;\\n\\n    if (gfc.lame_encode_frame_init == 0) {\\n      /* prime the MDCT/polyphase filterbank with a short block */\\n      var i, j;\\n      var primebuff0 = new_float(286 + 1152 + 576);\\n      var primebuff1 = new_float(286 + 1152 + 576);\\n      gfc.lame_encode_frame_init = 1;\\n\\n      for (i = 0, j = 0; i < 286 + 576 * (1 + gfc.mode_gr); ++i) {\\n        if (i < 576 * gfc.mode_gr) {\\n          primebuff0[i] = 0;\\n          if (gfc.channels_out == 2) primebuff1[i] = 0;\\n        } else {\\n          primebuff0[i] = inbuf[0][j];\\n          if (gfc.channels_out == 2) primebuff1[i] = inbuf[1][j];\\n          ++j;\\n        }\\n      }\\n      /* polyphase filtering / mdct */\\n\\n\\n      for (gr = 0; gr < gfc.mode_gr; gr++) {\\n        for (ch = 0; ch < gfc.channels_out; ch++) {\\n          gfc.l3_side.tt[gr][ch].block_type = Encoder.SHORT_TYPE;\\n        }\\n      }\\n\\n      newMDCT.mdct_sub48(gfc, primebuff0, primebuff1);\\n      /* check FFT will not use a negative starting offset */\\n\\n      assert(576 >= Encoder.FFTOFFSET);\\n      /* check if we have enough data for FFT */\\n\\n      assert(gfc.mf_size >= Encoder.BLKSIZE + gfp.framesize - Encoder.FFTOFFSET);\\n      /* check if we have enough data for polyphase filterbank */\\n\\n      assert(gfc.mf_size >= 512 + gfp.framesize - 32);\\n    }\\n  }\\n  /**\\n   * <PRE>\\n   * encodeframe()           Layer 3\\n   *\\n   * encode a single frame\\n   *\\n   *\\n   *    lame_encode_frame()\\n   *\\n   *\\n   *                           gr 0            gr 1\\n   *    inbuf:           |--------------|--------------|--------------|\\n   *\\n   *\\n   *    Polyphase (18 windows, each shifted 32)\\n   *    gr 0:\\n   *    window1          <----512---.\\n   *    window18                 <----512---.\\n   *\\n   *    gr 1:\\n   *    window1                         <----512---.\\n   *    window18                                <----512---.\\n   *\\n   *\\n   *\\n   *    MDCT output:  |--------------|--------------|--------------|\\n   *\\n   *    FFT's                    <---------1024---------.\\n   *                                             <---------1024-------.\\n   *\\n   *\\n   *\\n   *        inbuf = buffer of PCM data size=MP3 framesize\\n   *        encoder acts on inbuf[ch][0], but output is delayed by MDCTDELAY\\n   *        so the MDCT coefficints are from inbuf[ch][-MDCTDELAY]\\n   *\\n   *        psy-model FFT has a 1 granule delay, so we feed it data for the\\n   *        next granule.\\n   *        FFT is centered over granule:  224+576+224\\n   *        So FFT starts at:   576-224-MDCTDELAY\\n   *\\n   *        MPEG2:  FFT ends at:  BLKSIZE+576-224-MDCTDELAY      (1328)\\n   *        MPEG1:  FFT ends at:  BLKSIZE+2*576-224-MDCTDELAY    (1904)\\n   *\\n   *        MPEG2:  polyphase first window:  [0..511]\\n   *                          18th window:   [544..1055]          (1056)\\n   *        MPEG1:            36th window:   [1120..1631]         (1632)\\n   *                data needed:  512+framesize-32\\n   *\\n   *        A close look newmdct.c shows that the polyphase filterbank\\n   *        only uses data from [0..510] for each window.  Perhaps because the window\\n   *        used by the filterbank is zero for the last point, so Takehiro's\\n   *        code doesn't bother to compute with it.\\n   *\\n   *        FFT starts at 576-224-MDCTDELAY (304)  = 576-FFTOFFSET\\n   *\\n   * </PRE>\\n   */\\n\\n\\n  this.lame_encode_mp3_frame = function (gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\\n    var mp3count;\\n    var masking_LR = new_array_n([2, 2]);\\n    /*\\n     * LR masking &\\n     * energy\\n     */\\n\\n    masking_LR[0][0] = new III_psy_ratio();\\n    masking_LR[0][1] = new III_psy_ratio();\\n    masking_LR[1][0] = new III_psy_ratio();\\n    masking_LR[1][1] = new III_psy_ratio();\\n    var masking_MS = new_array_n([2, 2]);\\n    /* MS masking & energy */\\n\\n    masking_MS[0][0] = new III_psy_ratio();\\n    masking_MS[0][1] = new III_psy_ratio();\\n    masking_MS[1][0] = new III_psy_ratio();\\n    masking_MS[1][1] = new III_psy_ratio(); //III_psy_ratio masking[][];\\n\\n    var masking;\\n    /* pointer to selected maskings */\\n\\n    var inbuf = [null, null];\\n    var gfc = gfp.internal_flags;\\n    var tot_ener = new_float_n([2, 4]);\\n    var ms_ener_ratio = [.5, .5];\\n    var pe = [[0., 0.], [0., 0.]];\\n    var pe_MS = [[0., 0.], [0., 0.]]; //float[][] pe_use;\\n\\n    var pe_use;\\n    var ch, gr;\\n    inbuf[0] = inbuf_l;\\n    inbuf[1] = inbuf_r;\\n\\n    if (gfc.lame_encode_frame_init == 0) {\\n      /* first run? */\\n      lame_encode_frame_init(gfp, inbuf);\\n    }\\n    /********************** padding *****************************/\\n\\n    /**\\n     * <PRE>\\n     * padding method as described in\\n     * \\\"MPEG-Layer3 / Bitstream Syntax and Decoding\\\"\\n     * by Martin Sieler, Ralph Sperschneider\\n     *\\n     * note: there is no padding for the very first frame\\n     *\\n     * Robert Hegemann 2000-06-22\\n     * </PRE>\\n     */\\n\\n\\n    gfc.padding = 0;\\n\\n    if ((gfc.slot_lag -= gfc.frac_SpF) < 0) {\\n      gfc.slot_lag += gfp.out_samplerate;\\n      gfc.padding = 1;\\n    }\\n    /****************************************\\n     * Stage 1: psychoacoustic model *\\n     ****************************************/\\n\\n\\n    if (gfc.psymodel != 0) {\\n      /*\\n       * psychoacoustic model psy model has a 1 granule (576) delay that\\n       * we must compensate for (mt 6/99).\\n       */\\n      var ret;\\n      var bufp = [null, null];\\n      /* address of beginning of left & right granule */\\n\\n      var bufpPos = 0;\\n      /* address of beginning of left & right granule */\\n\\n      var blocktype = new_int(2);\\n\\n      for (gr = 0; gr < gfc.mode_gr; gr++) {\\n        for (ch = 0; ch < gfc.channels_out; ch++) {\\n          bufp[ch] = inbuf[ch];\\n          bufpPos = 576 + gr * 576 - Encoder.FFTOFFSET;\\n        }\\n\\n        if (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\\n          ret = psy.L3psycho_anal_vbr(gfp, bufp, bufpPos, gr, masking_LR, masking_MS, pe[gr], pe_MS[gr], tot_ener[gr], blocktype);\\n        } else {\\n          ret = psy.L3psycho_anal_ns(gfp, bufp, bufpPos, gr, masking_LR, masking_MS, pe[gr], pe_MS[gr], tot_ener[gr], blocktype);\\n        }\\n\\n        if (ret != 0) return -4;\\n\\n        if (gfp.mode == MPEGMode.JOINT_STEREO) {\\n          ms_ener_ratio[gr] = tot_ener[gr][2] + tot_ener[gr][3];\\n          if (ms_ener_ratio[gr] > 0) ms_ener_ratio[gr] = tot_ener[gr][3] / ms_ener_ratio[gr];\\n        }\\n        /* block type flags */\\n\\n\\n        for (ch = 0; ch < gfc.channels_out; ch++) {\\n          var cod_info = gfc.l3_side.tt[gr][ch];\\n          cod_info.block_type = blocktype[ch];\\n          cod_info.mixed_block_flag = 0;\\n        }\\n      }\\n    } else {\\n      /* no psy model */\\n      for (gr = 0; gr < gfc.mode_gr; gr++) {\\n        for (ch = 0; ch < gfc.channels_out; ch++) {\\n          gfc.l3_side.tt[gr][ch].block_type = Encoder.NORM_TYPE;\\n          gfc.l3_side.tt[gr][ch].mixed_block_flag = 0;\\n          pe_MS[gr][ch] = pe[gr][ch] = 700;\\n        }\\n      }\\n    }\\n    /* auto-adjust of ATH, useful for low volume */\\n\\n\\n    adjust_ATH(gfc);\\n    /****************************************\\n     * Stage 2: MDCT *\\n     ****************************************/\\n\\n    /* polyphase filtering / mdct */\\n\\n    newMDCT.mdct_sub48(gfc, inbuf[0], inbuf[1]);\\n    /****************************************\\n     * Stage 3: MS/LR decision *\\n     ****************************************/\\n\\n    /* Here will be selected MS or LR coding of the 2 stereo channels */\\n\\n    gfc.mode_ext = Encoder.MPG_MD_LR_LR;\\n\\n    if (gfp.force_ms) {\\n      gfc.mode_ext = Encoder.MPG_MD_MS_LR;\\n    } else if (gfp.mode == MPEGMode.JOINT_STEREO) {\\n      /*\\n       * ms_ratio = is scaled, for historical reasons, to look like a\\n       * ratio of side_channel / total. 0 = signal is 100% mono .5 = L & R\\n       * uncorrelated\\n       */\\n\\n      /**\\n       * <PRE>\\n       * [0] and [1] are the results for the two granules in MPEG-1,\\n       * in MPEG-2 it's only a faked averaging of the same value\\n       * _prev is the value of the last granule of the previous frame\\n       * _next is the value of the first granule of the next frame\\n       * </PRE>\\n       */\\n      var sum_pe_MS = 0.;\\n      var sum_pe_LR = 0.;\\n\\n      for (gr = 0; gr < gfc.mode_gr; gr++) {\\n        for (ch = 0; ch < gfc.channels_out; ch++) {\\n          sum_pe_MS += pe_MS[gr][ch];\\n          sum_pe_LR += pe[gr][ch];\\n        }\\n      }\\n      /* based on PE: M/S coding would not use much more bits than L/R */\\n\\n\\n      if (sum_pe_MS <= 1.00 * sum_pe_LR) {\\n        var gi0 = gfc.l3_side.tt[0];\\n        var gi1 = gfc.l3_side.tt[gfc.mode_gr - 1];\\n\\n        if (gi0[0].block_type == gi0[1].block_type && gi1[0].block_type == gi1[1].block_type) {\\n          gfc.mode_ext = Encoder.MPG_MD_MS_LR;\\n        }\\n      }\\n    }\\n    /* bit and noise allocation */\\n\\n\\n    if (gfc.mode_ext == MPG_MD_MS_LR) {\\n      masking = masking_MS;\\n      /* use MS masking */\\n\\n      pe_use = pe_MS;\\n    } else {\\n      masking = masking_LR;\\n      /* use LR masking */\\n\\n      pe_use = pe;\\n    }\\n    /* copy data for MP3 frame analyzer */\\n\\n\\n    if (gfp.analysis && gfc.pinfo != null) {\\n      for (gr = 0; gr < gfc.mode_gr; gr++) {\\n        for (ch = 0; ch < gfc.channels_out; ch++) {\\n          gfc.pinfo.ms_ratio[gr] = gfc.ms_ratio[gr];\\n          gfc.pinfo.ms_ener_ratio[gr] = ms_ener_ratio[gr];\\n          gfc.pinfo.blocktype[gr][ch] = gfc.l3_side.tt[gr][ch].block_type;\\n          gfc.pinfo.pe[gr][ch] = pe_use[gr][ch];\\n          System.arraycopy(gfc.l3_side.tt[gr][ch].xr, 0, gfc.pinfo.xr[gr][ch], 0, 576);\\n          /*\\n           * in psymodel, LR and MS data was stored in pinfo. switch\\n           * to MS data:\\n           */\\n\\n          if (gfc.mode_ext == MPG_MD_MS_LR) {\\n            gfc.pinfo.ers[gr][ch] = gfc.pinfo.ers[gr][ch + 2];\\n            System.arraycopy(gfc.pinfo.energy[gr][ch + 2], 0, gfc.pinfo.energy[gr][ch], 0, gfc.pinfo.energy[gr][ch].length);\\n          }\\n        }\\n      }\\n    }\\n    /****************************************\\n     * Stage 4: quantization loop *\\n     ****************************************/\\n\\n\\n    if (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_abr) {\\n      var i;\\n      var f;\\n\\n      for (i = 0; i < 18; i++) {\\n        gfc.nsPsy.pefirbuf[i] = gfc.nsPsy.pefirbuf[i + 1];\\n      }\\n\\n      f = 0.0;\\n\\n      for (gr = 0; gr < gfc.mode_gr; gr++) {\\n        for (ch = 0; ch < gfc.channels_out; ch++) {\\n          f += pe_use[gr][ch];\\n        }\\n      }\\n\\n      gfc.nsPsy.pefirbuf[18] = f;\\n      f = gfc.nsPsy.pefirbuf[9];\\n\\n      for (i = 0; i < 9; i++) {\\n        f += (gfc.nsPsy.pefirbuf[i] + gfc.nsPsy.pefirbuf[18 - i]) * Encoder.fircoef[i];\\n      }\\n\\n      f = 670 * 5 * gfc.mode_gr * gfc.channels_out / f;\\n\\n      for (gr = 0; gr < gfc.mode_gr; gr++) {\\n        for (ch = 0; ch < gfc.channels_out; ch++) {\\n          pe_use[gr][ch] *= f;\\n        }\\n      }\\n    }\\n\\n    gfc.iteration_loop.iteration_loop(gfp, pe_use, ms_ener_ratio, masking);\\n    /****************************************\\n     * Stage 5: bitstream formatting *\\n     ****************************************/\\n\\n    /* write the frame to the bitstream */\\n\\n    bs.format_bitstream(gfp);\\n    /* copy mp3 bit buffer into array */\\n\\n    mp3count = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 1);\\n    if (gfp.bWriteVbrTag) vbr.addVbrFrame(gfp);\\n\\n    if (gfp.analysis && gfc.pinfo != null) {\\n      for (ch = 0; ch < gfc.channels_out; ch++) {\\n        var j;\\n\\n        for (j = 0; j < FFTOFFSET; j++) {\\n          gfc.pinfo.pcmdata[ch][j] = gfc.pinfo.pcmdata[ch][j + gfp.framesize];\\n        }\\n\\n        for (j = FFTOFFSET; j < 1600; j++) {\\n          gfc.pinfo.pcmdata[ch][j] = inbuf[ch][j - FFTOFFSET];\\n        }\\n      }\\n\\n      qupvt.set_frame_pinfo(gfp, masking);\\n    }\\n\\n    updateStats(gfc);\\n    return mp3count;\\n  };\\n}\\n\\nmodule.exports = Encoder;\",\"/**\\n * Module dependencies.\\n */\\nvar keys = require('./keys');\\n\\nvar hasBinary = require('has-binary2');\\n\\nvar sliceBuffer = require('arraybuffer.slice');\\n\\nvar after = require('after');\\n\\nvar utf8 = require('./utf8');\\n\\nvar base64encoder;\\n\\nif (typeof ArrayBuffer !== 'undefined') {\\n  base64encoder = require('base64-arraybuffer');\\n}\\n/**\\n * Check if we are running an android browser. That requires us to use\\n * ArrayBuffer with polling transports...\\n *\\n * http://ghinda.net/jpeg-blob-ajax-android/\\n */\\n\\n\\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\\n/**\\n * Check if we are running in PhantomJS.\\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\\n * https://github.com/ariya/phantomjs/issues/11395\\n * @type boolean\\n */\\n\\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\\n/**\\n * When true, avoids using Blobs to encode payloads.\\n * @type boolean\\n */\\n\\nvar dontSendBlobs = isAndroid || isPhantomJS;\\n/**\\n * Current protocol version.\\n */\\n\\nexports.protocol = 3;\\n/**\\n * Packet types.\\n */\\n\\nvar packets = exports.packets = {\\n  open: 0 // non-ws\\n  ,\\n  close: 1 // non-ws\\n  ,\\n  ping: 2,\\n  pong: 3,\\n  message: 4,\\n  upgrade: 5,\\n  noop: 6\\n};\\nvar packetslist = keys(packets);\\n/**\\n * Premade error packet.\\n */\\n\\nvar err = {\\n  type: 'error',\\n  data: 'parser error'\\n};\\n/**\\n * Create a blob api even for blob builder when vendor prefixes exist\\n */\\n\\nvar Blob = require('blob');\\n/**\\n * Encodes a packet.\\n *\\n *     <packet type id> [ <data> ]\\n *\\n * Example:\\n *\\n *     5hello world\\n *     3\\n *     4\\n *\\n * Binary is encoded in an identical principle\\n *\\n * @api private\\n */\\n\\n\\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\\n  if (typeof supportsBinary === 'function') {\\n    callback = supportsBinary;\\n    supportsBinary = false;\\n  }\\n\\n  if (typeof utf8encode === 'function') {\\n    callback = utf8encode;\\n    utf8encode = null;\\n  }\\n\\n  var data = packet.data === undefined ? undefined : packet.data.buffer || packet.data;\\n\\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\\n    return encodeArrayBuffer(packet, supportsBinary, callback);\\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\\n    return encodeBlob(packet, supportsBinary, callback);\\n  } // might be an object with { base64: true, data: dataAsBase64String }\\n\\n\\n  if (data && data.base64) {\\n    return encodeBase64Object(packet, callback);\\n  } // Sending data as a utf-8 string\\n\\n\\n  var encoded = packets[packet.type]; // data fragment is optional\\n\\n  if (undefined !== packet.data) {\\n    encoded += utf8encode ? utf8.encode(String(packet.data), {\\n      strict: false\\n    }) : String(packet.data);\\n  }\\n\\n  return callback('' + encoded);\\n};\\n\\nfunction encodeBase64Object(packet, callback) {\\n  // packet data is an object { base64: true, data: dataAsBase64String }\\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\\n  return callback(message);\\n}\\n/**\\n * Encode packet helpers for binary types\\n */\\n\\n\\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\\n  if (!supportsBinary) {\\n    return exports.encodeBase64Packet(packet, callback);\\n  }\\n\\n  var data = packet.data;\\n  var contentArray = new Uint8Array(data);\\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\\n  resultBuffer[0] = packets[packet.type];\\n\\n  for (var i = 0; i < contentArray.length; i++) {\\n    resultBuffer[i + 1] = contentArray[i];\\n  }\\n\\n  return callback(resultBuffer.buffer);\\n}\\n\\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\\n  if (!supportsBinary) {\\n    return exports.encodeBase64Packet(packet, callback);\\n  }\\n\\n  var fr = new FileReader();\\n\\n  fr.onload = function () {\\n    exports.encodePacket({\\n      type: packet.type,\\n      data: fr.result\\n    }, supportsBinary, true, callback);\\n  };\\n\\n  return fr.readAsArrayBuffer(packet.data);\\n}\\n\\nfunction encodeBlob(packet, supportsBinary, callback) {\\n  if (!supportsBinary) {\\n    return exports.encodeBase64Packet(packet, callback);\\n  }\\n\\n  if (dontSendBlobs) {\\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\\n  }\\n\\n  var length = new Uint8Array(1);\\n  length[0] = packets[packet.type];\\n  var blob = new Blob([length.buffer, packet.data]);\\n  return callback(blob);\\n}\\n/**\\n * Encodes a packet with binary data in a base64 string\\n *\\n * @param {Object} packet, has `type` and `data`\\n * @return {String} base64 encoded message\\n */\\n\\n\\nexports.encodeBase64Packet = function (packet, callback) {\\n  var message = 'b' + exports.packets[packet.type];\\n\\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\\n    var fr = new FileReader();\\n\\n    fr.onload = function () {\\n      var b64 = fr.result.split(',')[1];\\n      callback(message + b64);\\n    };\\n\\n    return fr.readAsDataURL(packet.data);\\n  }\\n\\n  var b64data;\\n\\n  try {\\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\\n  } catch (e) {\\n    // iPhone Safari doesn't let you apply with typed arrays\\n    var typed = new Uint8Array(packet.data);\\n    var basic = new Array(typed.length);\\n\\n    for (var i = 0; i < typed.length; i++) {\\n      basic[i] = typed[i];\\n    }\\n\\n    b64data = String.fromCharCode.apply(null, basic);\\n  }\\n\\n  message += btoa(b64data);\\n  return callback(message);\\n};\\n/**\\n * Decodes a packet. Changes format to Blob if requested.\\n *\\n * @return {Object} with `type` and `data` (if any)\\n * @api private\\n */\\n\\n\\nexports.decodePacket = function (data, binaryType, utf8decode) {\\n  if (data === undefined) {\\n    return err;\\n  } // String data\\n\\n\\n  if (typeof data === 'string') {\\n    if (data.charAt(0) === 'b') {\\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\\n    }\\n\\n    if (utf8decode) {\\n      data = tryDecode(data);\\n\\n      if (data === false) {\\n        return err;\\n      }\\n    }\\n\\n    var type = data.charAt(0);\\n\\n    if (Number(type) != type || !packetslist[type]) {\\n      return err;\\n    }\\n\\n    if (data.length > 1) {\\n      return {\\n        type: packetslist[type],\\n        data: data.substring(1)\\n      };\\n    } else {\\n      return {\\n        type: packetslist[type]\\n      };\\n    }\\n  }\\n\\n  var asArray = new Uint8Array(data);\\n  var type = asArray[0];\\n  var rest = sliceBuffer(data, 1);\\n\\n  if (Blob && binaryType === 'blob') {\\n    rest = new Blob([rest]);\\n  }\\n\\n  return {\\n    type: packetslist[type],\\n    data: rest\\n  };\\n};\\n\\nfunction tryDecode(data) {\\n  try {\\n    data = utf8.decode(data, {\\n      strict: false\\n    });\\n  } catch (e) {\\n    return false;\\n  }\\n\\n  return data;\\n}\\n/**\\n * Decodes a packet encoded in a base64 string\\n *\\n * @param {String} base64 encoded message\\n * @return {Object} with `type` and `data` (if any)\\n */\\n\\n\\nexports.decodeBase64Packet = function (msg, binaryType) {\\n  var type = packetslist[msg.charAt(0)];\\n\\n  if (!base64encoder) {\\n    return {\\n      type: type,\\n      data: {\\n        base64: true,\\n        data: msg.substr(1)\\n      }\\n    };\\n  }\\n\\n  var data = base64encoder.decode(msg.substr(1));\\n\\n  if (binaryType === 'blob' && Blob) {\\n    data = new Blob([data]);\\n  }\\n\\n  return {\\n    type: type,\\n    data: data\\n  };\\n};\\n/**\\n * Encodes multiple messages (payload).\\n *\\n *     <length>:data\\n *\\n * Example:\\n *\\n *     11:hello world2:hi\\n *\\n * If any contents are binary, they will be encoded as base64 strings. Base64\\n * encoded strings are marked with a b before the length specifier\\n *\\n * @param {Array} packets\\n * @api private\\n */\\n\\n\\nexports.encodePayload = function (packets, supportsBinary, callback) {\\n  if (typeof supportsBinary === 'function') {\\n    callback = supportsBinary;\\n    supportsBinary = null;\\n  }\\n\\n  var isBinary = hasBinary(packets);\\n\\n  if (supportsBinary && isBinary) {\\n    if (Blob && !dontSendBlobs) {\\n      return exports.encodePayloadAsBlob(packets, callback);\\n    }\\n\\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\\n  }\\n\\n  if (!packets.length) {\\n    return callback('0:');\\n  }\\n\\n  function setLengthHeader(message) {\\n    return message.length + ':' + message;\\n  }\\n\\n  function encodeOne(packet, doneCallback) {\\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function (message) {\\n      doneCallback(null, setLengthHeader(message));\\n    });\\n  }\\n\\n  map(packets, encodeOne, function (err, results) {\\n    return callback(results.join(''));\\n  });\\n};\\n/**\\n * Async array map using after\\n */\\n\\n\\nfunction map(ary, each, done) {\\n  var result = new Array(ary.length);\\n  var next = after(ary.length, done);\\n\\n  var eachWithIndex = function eachWithIndex(i, el, cb) {\\n    each(el, function (error, msg) {\\n      result[i] = msg;\\n      cb(error, result);\\n    });\\n  };\\n\\n  for (var i = 0; i < ary.length; i++) {\\n    eachWithIndex(i, ary[i], next);\\n  }\\n}\\n/*\\n * Decodes data when a payload is maybe expected. Possible binary contents are\\n * decoded from their base64 representation\\n *\\n * @param {String} data, callback method\\n * @api public\\n */\\n\\n\\nexports.decodePayload = function (data, binaryType, callback) {\\n  if (typeof data !== 'string') {\\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\\n  }\\n\\n  if (typeof binaryType === 'function') {\\n    callback = binaryType;\\n    binaryType = null;\\n  }\\n\\n  var packet;\\n\\n  if (data === '') {\\n    // parser error - ignoring payload\\n    return callback(err, 0, 1);\\n  }\\n\\n  var length = '',\\n      n,\\n      msg;\\n\\n  for (var i = 0, l = data.length; i < l; i++) {\\n    var chr = data.charAt(i);\\n\\n    if (chr !== ':') {\\n      length += chr;\\n      continue;\\n    }\\n\\n    if (length === '' || length != (n = Number(length))) {\\n      // parser error - ignoring payload\\n      return callback(err, 0, 1);\\n    }\\n\\n    msg = data.substr(i + 1, n);\\n\\n    if (length != msg.length) {\\n      // parser error - ignoring payload\\n      return callback(err, 0, 1);\\n    }\\n\\n    if (msg.length) {\\n      packet = exports.decodePacket(msg, binaryType, false);\\n\\n      if (err.type === packet.type && err.data === packet.data) {\\n        // parser error in individual packet - ignoring payload\\n        return callback(err, 0, 1);\\n      }\\n\\n      var ret = callback(packet, i + n, l);\\n      if (false === ret) return;\\n    } // advance cursor\\n\\n\\n    i += n;\\n    length = '';\\n  }\\n\\n  if (length !== '') {\\n    // parser error - ignoring payload\\n    return callback(err, 0, 1);\\n  }\\n};\\n/**\\n * Encodes multiple messages (payload) as binary.\\n *\\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\\n * 255><data>\\n *\\n * Example:\\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\\n *\\n * @param {Array} packets\\n * @return {ArrayBuffer} encoded payload\\n * @api private\\n */\\n\\n\\nexports.encodePayloadAsArrayBuffer = function (packets, callback) {\\n  if (!packets.length) {\\n    return callback(new ArrayBuffer(0));\\n  }\\n\\n  function encodeOne(packet, doneCallback) {\\n    exports.encodePacket(packet, true, true, function (data) {\\n      return doneCallback(null, data);\\n    });\\n  }\\n\\n  map(packets, encodeOne, function (err, encodedPackets) {\\n    var totalLength = encodedPackets.reduce(function (acc, p) {\\n      var len;\\n\\n      if (typeof p === 'string') {\\n        len = p.length;\\n      } else {\\n        len = p.byteLength;\\n      }\\n\\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\\n    }, 0);\\n    var resultArray = new Uint8Array(totalLength);\\n    var bufferIndex = 0;\\n    encodedPackets.forEach(function (p) {\\n      var isString = typeof p === 'string';\\n      var ab = p;\\n\\n      if (isString) {\\n        var view = new Uint8Array(p.length);\\n\\n        for (var i = 0; i < p.length; i++) {\\n          view[i] = p.charCodeAt(i);\\n        }\\n\\n        ab = view.buffer;\\n      }\\n\\n      if (isString) {\\n        // not true binary\\n        resultArray[bufferIndex++] = 0;\\n      } else {\\n        // true binary\\n        resultArray[bufferIndex++] = 1;\\n      }\\n\\n      var lenStr = ab.byteLength.toString();\\n\\n      for (var i = 0; i < lenStr.length; i++) {\\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\\n      }\\n\\n      resultArray[bufferIndex++] = 255;\\n      var view = new Uint8Array(ab);\\n\\n      for (var i = 0; i < view.length; i++) {\\n        resultArray[bufferIndex++] = view[i];\\n      }\\n    });\\n    return callback(resultArray.buffer);\\n  });\\n};\\n/**\\n * Encode as Blob\\n */\\n\\n\\nexports.encodePayloadAsBlob = function (packets, callback) {\\n  function encodeOne(packet, doneCallback) {\\n    exports.encodePacket(packet, true, true, function (encoded) {\\n      var binaryIdentifier = new Uint8Array(1);\\n      binaryIdentifier[0] = 1;\\n\\n      if (typeof encoded === 'string') {\\n        var view = new Uint8Array(encoded.length);\\n\\n        for (var i = 0; i < encoded.length; i++) {\\n          view[i] = encoded.charCodeAt(i);\\n        }\\n\\n        encoded = view.buffer;\\n        binaryIdentifier[0] = 0;\\n      }\\n\\n      var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size;\\n      var lenStr = len.toString();\\n      var lengthAry = new Uint8Array(lenStr.length + 1);\\n\\n      for (var i = 0; i < lenStr.length; i++) {\\n        lengthAry[i] = parseInt(lenStr[i]);\\n      }\\n\\n      lengthAry[lenStr.length] = 255;\\n\\n      if (Blob) {\\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\\n        doneCallback(null, blob);\\n      }\\n    });\\n  }\\n\\n  map(packets, encodeOne, function (err, results) {\\n    return callback(new Blob(results));\\n  });\\n};\\n/*\\n * Decodes data when a payload is maybe expected. Strings are decoded by\\n * interpreting each byte as a key code for entries marked to start with 0. See\\n * description of encodePayloadAsBinary\\n *\\n * @param {ArrayBuffer} data, callback method\\n * @api public\\n */\\n\\n\\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\\n  if (typeof binaryType === 'function') {\\n    callback = binaryType;\\n    binaryType = null;\\n  }\\n\\n  var bufferTail = data;\\n  var buffers = [];\\n\\n  while (bufferTail.byteLength > 0) {\\n    var tailArray = new Uint8Array(bufferTail);\\n    var isString = tailArray[0] === 0;\\n    var msgLength = '';\\n\\n    for (var i = 1;; i++) {\\n      if (tailArray[i] === 255) break; // 310 = char length of Number.MAX_VALUE\\n\\n      if (msgLength.length > 310) {\\n        return callback(err, 0, 1);\\n      }\\n\\n      msgLength += tailArray[i];\\n    }\\n\\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\\n    msgLength = parseInt(msgLength);\\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\\n\\n    if (isString) {\\n      try {\\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\\n      } catch (e) {\\n        // iPhone Safari doesn't let you apply to typed arrays\\n        var typed = new Uint8Array(msg);\\n        msg = '';\\n\\n        for (var i = 0; i < typed.length; i++) {\\n          msg += String.fromCharCode(typed[i]);\\n        }\\n      }\\n    }\\n\\n    buffers.push(msg);\\n    bufferTail = sliceBuffer(bufferTail, msgLength);\\n  }\\n\\n  var total = buffers.length;\\n  buffers.forEach(function (buffer, i) {\\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\\n  });\\n};\",\"'use strict';\\n\\nfunction _inheritsLoose(subClass, superClass) {\\n  subClass.prototype = Object.create(superClass.prototype);\\n  subClass.prototype.constructor = subClass;\\n  subClass.__proto__ = superClass;\\n}\\n\\nvar codes = {};\\n\\nfunction createErrorType(code, message, Base) {\\n  if (!Base) {\\n    Base = Error;\\n  }\\n\\n  function getMessage(arg1, arg2, arg3) {\\n    if (typeof message === 'string') {\\n      return message;\\n    } else {\\n      return message(arg1, arg2, arg3);\\n    }\\n  }\\n\\n  var NodeError =\\n  /*#__PURE__*/\\n  function (_Base) {\\n    _inheritsLoose(NodeError, _Base);\\n\\n    function NodeError(arg1, arg2, arg3) {\\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\\n    }\\n\\n    return NodeError;\\n  }(Base);\\n\\n  NodeError.prototype.name = Base.name;\\n  NodeError.prototype.code = code;\\n  codes[code] = NodeError;\\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\\n\\n\\nfunction oneOf(expected, thing) {\\n  if (Array.isArray(expected)) {\\n    var len = expected.length;\\n    expected = expected.map(function (i) {\\n      return String(i);\\n    });\\n\\n    if (len > 2) {\\n      return \\\"one of \\\".concat(thing, \\\" \\\").concat(expected.slice(0, len - 1).join(', '), \\\", or \\\") + expected[len - 1];\\n    } else if (len === 2) {\\n      return \\\"one of \\\".concat(thing, \\\" \\\").concat(expected[0], \\\" or \\\").concat(expected[1]);\\n    } else {\\n      return \\\"of \\\".concat(thing, \\\" \\\").concat(expected[0]);\\n    }\\n  } else {\\n    return \\\"of \\\".concat(thing, \\\" \\\").concat(String(expected));\\n  }\\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\\n\\n\\nfunction startsWith(str, search, pos) {\\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\\n\\n\\nfunction endsWith(str, search, this_len) {\\n  if (this_len === undefined || this_len > str.length) {\\n    this_len = str.length;\\n  }\\n\\n  return str.substring(this_len - search.length, this_len) === search;\\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\\n\\n\\nfunction includes(str, search, start) {\\n  if (typeof start !== 'number') {\\n    start = 0;\\n  }\\n\\n  if (start + search.length > str.length) {\\n    return false;\\n  } else {\\n    return str.indexOf(search, start) !== -1;\\n  }\\n}\\n\\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\\n  return 'The value \\\"' + value + '\\\" is invalid for option \\\"' + name + '\\\"';\\n}, TypeError);\\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\\n  // determiner: 'must be' or 'must not be'\\n  var determiner;\\n\\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\\n    determiner = 'must not be';\\n    expected = expected.replace(/^not /, '');\\n  } else {\\n    determiner = 'must be';\\n  }\\n\\n  var msg;\\n\\n  if (endsWith(name, ' argument')) {\\n    // For cases like 'first argument'\\n    msg = \\\"The \\\".concat(name, \\\" \\\").concat(determiner, \\\" \\\").concat(oneOf(expected, 'type'));\\n  } else {\\n    var type = includes(name, '.') ? 'property' : 'argument';\\n    msg = \\\"The \\\\\\\"\\\".concat(name, \\\"\\\\\\\" \\\").concat(type, \\\" \\\").concat(determiner, \\\" \\\").concat(oneOf(expected, 'type'));\\n  }\\n\\n  msg += \\\". Received type \\\".concat(typeof actual);\\n  return msg;\\n}, TypeError);\\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\\n  return 'The ' + name + ' method is not implemented';\\n});\\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\\n  return 'Cannot call ' + name + ' after a stream was destroyed';\\n});\\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\\n  return 'Unknown encoding: ' + arg;\\n}, TypeError);\\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\\nmodule.exports.codes = codes;\",\"// Copyright Joyent, Inc. and other Node contributors.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a\\n// copy of this software and associated documentation files (the\\n// \\\"Software\\\"), to deal in the Software without restriction, including\\n// without limitation the rights to use, copy, modify, merge, publish,\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\n// persons to whom the Software is furnished to do so, subject to the\\n// following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included\\n// in all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\n// a duplex stream is just a stream that is both readable and writable.\\n// Since JS doesn't have multiple prototypal inheritance, this class\\n// prototypally inherits from Readable, and then parasitically from\\n// Writable.\\n'use strict';\\n/*<replacement>*/\\n\\nvar objectKeys = Object.keys || function (obj) {\\n  var keys = [];\\n\\n  for (var key in obj) {\\n    keys.push(key);\\n  }\\n\\n  return keys;\\n};\\n/*</replacement>*/\\n\\n\\nmodule.exports = Duplex;\\n\\nvar Readable = require('./_stream_readable');\\n\\nvar Writable = require('./_stream_writable');\\n\\nrequire('inherits')(Duplex, Readable);\\n\\n{\\n  // Allow the keys array to be GC'ed.\\n  var keys = objectKeys(Writable.prototype);\\n\\n  for (var v = 0; v < keys.length; v++) {\\n    var method = keys[v];\\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\\n  }\\n}\\n\\nfunction Duplex(options) {\\n  if (!(this instanceof Duplex)) return new Duplex(options);\\n  Readable.call(this, options);\\n  Writable.call(this, options);\\n  this.allowHalfOpen = true;\\n\\n  if (options) {\\n    if (options.readable === false) this.readable = false;\\n    if (options.writable === false) this.writable = false;\\n\\n    if (options.allowHalfOpen === false) {\\n      this.allowHalfOpen = false;\\n      this.once('end', onend);\\n    }\\n  }\\n}\\n\\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\\n  // making it explicit this property is not enumerable\\n  // because otherwise some prototype manipulation in\\n  // userland will fail\\n  enumerable: false,\\n  get: function get() {\\n    return this._writableState.highWaterMark;\\n  }\\n});\\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\\n  // making it explicit this property is not enumerable\\n  // because otherwise some prototype manipulation in\\n  // userland will fail\\n  enumerable: false,\\n  get: function get() {\\n    return this._writableState && this._writableState.getBuffer();\\n  }\\n});\\nObject.defineProperty(Duplex.prototype, 'writableLength', {\\n  // making it explicit this property is not enumerable\\n  // because otherwise some prototype manipulation in\\n  // userland will fail\\n  enumerable: false,\\n  get: function get() {\\n    return this._writableState.length;\\n  }\\n}); // the no-half-open enforcer\\n\\nfunction onend() {\\n  // If the writable side ended, then we're ok.\\n  if (this._writableState.ended) return; // no more data can be written.\\n  // But allow more writes to happen in this tick.\\n\\n  process.nextTick(onEndNT, this);\\n}\\n\\nfunction onEndNT(self) {\\n  self.end();\\n}\\n\\nObject.defineProperty(Duplex.prototype, 'destroyed', {\\n  // making it explicit this property is not enumerable\\n  // because otherwise some prototype manipulation in\\n  // userland will fail\\n  enumerable: false,\\n  get: function get() {\\n    if (this._readableState === undefined || this._writableState === undefined) {\\n      return false;\\n    }\\n\\n    return this._readableState.destroyed && this._writableState.destroyed;\\n  },\\n  set: function set(value) {\\n    // we ignore the value if the stream\\n    // has not been initialized yet\\n    if (this._readableState === undefined || this._writableState === undefined) {\\n      return;\\n    } // backward compatibility, the user is explicitly\\n    // managing destroyed\\n\\n\\n    this._readableState.destroyed = value;\\n    this._writableState.destroyed = value;\\n  }\\n});\",\"/**\\n * This is the web browser implementation of `debug()`.\\n *\\n * Expose `debug()` as the module.\\n */\\nexports = module.exports = require('./debug');\\nexports.log = log;\\nexports.formatArgs = formatArgs;\\nexports.save = save;\\nexports.load = load;\\nexports.useColors = useColors;\\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\\n/**\\n * Colors.\\n */\\n\\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\\n/**\\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\\n * and the Firebug extension (any Firefox version) are known\\n * to support \\\"%c\\\" CSS customizations.\\n *\\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\\n */\\n\\nfunction useColors() {\\n  // NB: In an Electron preload script, document will be defined but not fully\\n  // initialized. Since we know we're in Chrome, we'll just detect this case\\n  // explicitly\\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\\n    return true;\\n  } // Internet Explorer and Edge do not support colors.\\n\\n\\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\\\/(\\\\d+)/)) {\\n    return false;\\n  } // is webkit? http://stackoverflow.com/a/16459606/376773\\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\\n\\n\\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?\\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\\\/(\\\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\\\/(\\\\d+)/);\\n}\\n/**\\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\\n */\\n\\n\\nexports.formatters.j = function (v) {\\n  try {\\n    return JSON.stringify(v);\\n  } catch (err) {\\n    return '[UnexpectedJSONParseError]: ' + err.message;\\n  }\\n};\\n/**\\n * Colorize log arguments if enabled.\\n *\\n * @api public\\n */\\n\\n\\nfunction formatArgs(args) {\\n  var useColors = this.useColors;\\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\\n  if (!useColors) return;\\n  var c = 'color: ' + this.color;\\n  args.splice(1, 0, c, 'color: inherit'); // the final \\\"%c\\\" is somewhat tricky, because there could be other\\n  // arguments passed either before or after the %c, so we need to\\n  // figure out the correct index to insert the CSS into\\n\\n  var index = 0;\\n  var lastC = 0;\\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\\n    if ('%%' === match) return;\\n    index++;\\n\\n    if ('%c' === match) {\\n      // we only are interested in the *last* %c\\n      // (the user may have provided their own)\\n      lastC = index;\\n    }\\n  });\\n  args.splice(lastC, 0, c);\\n}\\n/**\\n * Invokes `console.log()` when available.\\n * No-op when `console.log` is not a \\\"function\\\".\\n *\\n * @api public\\n */\\n\\n\\nfunction log() {\\n  // this hackery is required for IE8/9, where\\n  // the `console.log` function doesn't have 'apply'\\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\\n}\\n/**\\n * Save `namespaces`.\\n *\\n * @param {String} namespaces\\n * @api private\\n */\\n\\n\\nfunction save(namespaces) {\\n  try {\\n    if (null == namespaces) {\\n      exports.storage.removeItem('debug');\\n    } else {\\n      exports.storage.debug = namespaces;\\n    }\\n  } catch (e) {}\\n}\\n/**\\n * Load `namespaces`.\\n *\\n * @return {String} returns the previously persisted debug modes\\n * @api private\\n */\\n\\n\\nfunction load() {\\n  var r;\\n\\n  try {\\n    r = exports.storage.debug;\\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\\n\\n\\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\\n    r = process.env.DEBUG;\\n  }\\n\\n  return r;\\n}\\n/**\\n * Enable namespaces listed in `localStorage.debug` initially.\\n */\\n\\n\\nexports.enable(load());\\n/**\\n * Localstorage attempts to return the localstorage.\\n *\\n * This is necessary because safari throws\\n * when a user disables cookies/localstorage\\n * and you attempt to access it.\\n *\\n * @return {LocalStorage}\\n * @api private\\n */\\n\\nfunction localstorage() {\\n  try {\\n    return window.localStorage;\\n  } catch (e) {}\\n}\",\"/**\\r\\n * Compiles a querystring\\r\\n * Returns string representation of the object\\r\\n *\\r\\n * @param {Object}\\r\\n * @api private\\r\\n */\\nexports.encode = function (obj) {\\n  var str = '';\\n\\n  for (var i in obj) {\\n    if (obj.hasOwnProperty(i)) {\\n      if (str.length) str += '&';\\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\\n    }\\n  }\\n\\n  return str;\\n};\\n/**\\r\\n * Parses a simple querystring into an object\\r\\n *\\r\\n * @param {String} qs\\r\\n * @api private\\r\\n */\\n\\n\\nexports.decode = function (qs) {\\n  var qry = {};\\n  var pairs = qs.split('&');\\n\\n  for (var i = 0, l = pairs.length; i < l; i++) {\\n    var pair = pairs[i].split('=');\\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\\n  }\\n\\n  return qry;\\n};\",\"module.exports = function (a, b) {\\n  var fn = function fn() {};\\n\\n  fn.prototype = b.prototype;\\n  a.prototype = new fn();\\n  a.prototype.constructor = a;\\n};\",\"/**\\n * This is the web browser implementation of `debug()`.\\n *\\n * Expose `debug()` as the module.\\n */\\nexports = module.exports = require('./debug');\\nexports.log = log;\\nexports.formatArgs = formatArgs;\\nexports.save = save;\\nexports.load = load;\\nexports.useColors = useColors;\\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\\n/**\\n * Colors.\\n */\\n\\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\\n/**\\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\\n * and the Firebug extension (any Firefox version) are known\\n * to support \\\"%c\\\" CSS customizations.\\n *\\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\\n */\\n\\nfunction useColors() {\\n  // NB: In an Electron preload script, document will be defined but not fully\\n  // initialized. Since we know we're in Chrome, we'll just detect this case\\n  // explicitly\\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\\n    return true;\\n  } // Internet Explorer and Edge do not support colors.\\n\\n\\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\\\/(\\\\d+)/)) {\\n    return false;\\n  } // is webkit? http://stackoverflow.com/a/16459606/376773\\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\\n\\n\\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?\\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\\\/(\\\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\\\/(\\\\d+)/);\\n}\\n/**\\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\\n */\\n\\n\\nexports.formatters.j = function (v) {\\n  try {\\n    return JSON.stringify(v);\\n  } catch (err) {\\n    return '[UnexpectedJSONParseError]: ' + err.message;\\n  }\\n};\\n/**\\n * Colorize log arguments if enabled.\\n *\\n * @api public\\n */\\n\\n\\nfunction formatArgs(args) {\\n  var useColors = this.useColors;\\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\\n  if (!useColors) return;\\n  var c = 'color: ' + this.color;\\n  args.splice(1, 0, c, 'color: inherit'); // the final \\\"%c\\\" is somewhat tricky, because there could be other\\n  // arguments passed either before or after the %c, so we need to\\n  // figure out the correct index to insert the CSS into\\n\\n  var index = 0;\\n  var lastC = 0;\\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\\n    if ('%%' === match) return;\\n    index++;\\n\\n    if ('%c' === match) {\\n      // we only are interested in the *last* %c\\n      // (the user may have provided their own)\\n      lastC = index;\\n    }\\n  });\\n  args.splice(lastC, 0, c);\\n}\\n/**\\n * Invokes `console.log()` when available.\\n * No-op when `console.log` is not a \\\"function\\\".\\n *\\n * @api public\\n */\\n\\n\\nfunction log() {\\n  // this hackery is required for IE8/9, where\\n  // the `console.log` function doesn't have 'apply'\\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\\n}\\n/**\\n * Save `namespaces`.\\n *\\n * @param {String} namespaces\\n * @api private\\n */\\n\\n\\nfunction save(namespaces) {\\n  try {\\n    if (null == namespaces) {\\n      exports.storage.removeItem('debug');\\n    } else {\\n      exports.storage.debug = namespaces;\\n    }\\n  } catch (e) {}\\n}\\n/**\\n * Load `namespaces`.\\n *\\n * @return {String} returns the previously persisted debug modes\\n * @api private\\n */\\n\\n\\nfunction load() {\\n  var r;\\n\\n  try {\\n    r = exports.storage.debug;\\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\\n\\n\\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\\n    r = process.env.DEBUG;\\n  }\\n\\n  return r;\\n}\\n/**\\n * Enable namespaces listed in `localStorage.debug` initially.\\n */\\n\\n\\nexports.enable(load());\\n/**\\n * Localstorage attempts to return the localstorage.\\n *\\n * This is necessary because safari throws\\n * when a user disables cookies/localstorage\\n * and you attempt to access it.\\n *\\n * @return {LocalStorage}\\n * @api private\\n */\\n\\nfunction localstorage() {\\n  try {\\n    return window.localStorage;\\n  } catch (e) {}\\n}\",\"var common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nvar IIISideInfo = require('./IIISideInfo.js');\\n\\nvar ScaleFac = require('./ScaleFac.js');\\n\\nvar NsPsy = require('./NsPsy.js');\\n\\nvar VBRSeekInfo = require('./VBRSeekInfo.js');\\n\\nvar III_psy_xmin = require('./III_psy_xmin.js');\\n\\nvar Encoder = require('./Encoder.js');\\n\\nvar L3Side = require('./L3Side.js');\\n\\nLameInternalFlags.MFSIZE = 3 * 1152 + Encoder.ENCDELAY - Encoder.MDCTDELAY;\\nLameInternalFlags.MAX_HEADER_BUF = 256;\\nLameInternalFlags.MAX_BITS_PER_CHANNEL = 4095;\\nLameInternalFlags.MAX_BITS_PER_GRANULE = 7680;\\nLameInternalFlags.BPC = 320;\\n\\nfunction LameInternalFlags() {\\n  var MAX_HEADER_LEN = 40;\\n  /********************************************************************\\n   * internal variables NOT set by calling program, and should not be *\\n   * modified by the calling program *\\n   ********************************************************************/\\n\\n  /**\\n   * Some remarks to the Class_ID field: The Class ID is an Identifier for a\\n   * pointer to this struct. It is very unlikely that a pointer to\\n   * lame_global_flags has the same 32 bits in it's structure (large and other\\n   * special properties, for instance prime).\\n   *\\n   * To test that the structure is right and initialized, use: if ( gfc .\\n   * Class_ID == LAME_ID ) ... Other remark: If you set a flag to 0 for uninit\\n   * data and 1 for init data, the right test should be \\\"if (flag == 1)\\\" and\\n   * NOT \\\"if (flag)\\\". Unintended modification of this element will be\\n   * otherwise misinterpreted as an init.\\n   */\\n\\n  this.Class_ID = 0;\\n  this.lame_encode_frame_init = 0;\\n  this.iteration_init_init = 0;\\n  this.fill_buffer_resample_init = 0; //public float mfbuf[][] = new float[2][MFSIZE];\\n\\n  this.mfbuf = new_float_n([2, LameInternalFlags.MFSIZE]);\\n  /**\\n   * granules per frame\\n   */\\n\\n  this.mode_gr = 0;\\n  /**\\n   * number of channels in the input data stream (PCM or decoded PCM)\\n   */\\n\\n  this.channels_in = 0;\\n  /**\\n   * number of channels in the output data stream (not used for decoding)\\n   */\\n\\n  this.channels_out = 0;\\n  /**\\n   * input_samp_rate/output_samp_rate\\n   */\\n  //public double resample_ratio;\\n\\n  this.resample_ratio = 0.;\\n  this.mf_samples_to_encode = 0;\\n  this.mf_size = 0;\\n  /**\\n   * min bitrate index\\n   */\\n\\n  this.VBR_min_bitrate = 0;\\n  /**\\n   * max bitrate index\\n   */\\n\\n  this.VBR_max_bitrate = 0;\\n  this.bitrate_index = 0;\\n  this.samplerate_index = 0;\\n  this.mode_ext = 0;\\n  /* lowpass and highpass filter control */\\n\\n  /**\\n   * normalized frequency bounds of passband\\n   */\\n\\n  this.lowpass1 = 0.;\\n  this.lowpass2 = 0.;\\n  /**\\n   * normalized frequency bounds of passband\\n   */\\n\\n  this.highpass1 = 0.;\\n  this.highpass2 = 0.;\\n  /**\\n   * 0 = none 1 = ISO AAC model 2 = allow scalefac_select=1\\n   */\\n\\n  this.noise_shaping = 0;\\n  /**\\n   * 0 = ISO model: amplify all distorted bands<BR>\\n   * 1 = amplify within 50% of max (on db scale)<BR>\\n   * 2 = amplify only most distorted band<BR>\\n   * 3 = method 1 and refine with method 2<BR>\\n   */\\n\\n  this.noise_shaping_amp = 0;\\n  /**\\n   * 0 = no substep<BR>\\n   * 1 = use substep shaping at last step(VBR only)<BR>\\n   * (not implemented yet)<BR>\\n   * 2 = use substep inside loop<BR>\\n   * 3 = use substep inside loop and last step<BR>\\n   */\\n\\n  this.substep_shaping = 0;\\n  /**\\n   * 1 = gpsycho. 0 = none\\n   */\\n\\n  this.psymodel = 0;\\n  /**\\n   * 0 = stop at over=0, all scalefacs amplified or<BR>\\n   * a scalefac has reached max value<BR>\\n   * 1 = stop when all scalefacs amplified or a scalefac has reached max value<BR>\\n   * 2 = stop when all scalefacs amplified\\n   */\\n\\n  this.noise_shaping_stop = 0;\\n  /**\\n   * 0 = no, 1 = yes\\n   */\\n\\n  this.subblock_gain = 0;\\n  /**\\n   * 0 = no. 1=outside loop 2=inside loop(slow)\\n   */\\n\\n  this.use_best_huffman = 0;\\n  /**\\n   * 0 = stop early after 0 distortion found. 1 = full search\\n   */\\n\\n  this.full_outer_loop = 0; //public IIISideInfo l3_side = new IIISideInfo();\\n\\n  this.l3_side = new IIISideInfo();\\n  this.ms_ratio = new_float(2);\\n  /* used for padding */\\n\\n  /**\\n   * padding for the current frame?\\n   */\\n\\n  this.padding = 0;\\n  this.frac_SpF = 0;\\n  this.slot_lag = 0;\\n  /**\\n   * optional ID3 tags\\n   */\\n  //public ID3TagSpec tag_spec;\\n\\n  this.tag_spec = null;\\n  this.nMusicCRC = 0;\\n  /* variables used by Quantize */\\n  //public int OldValue[] = new int[2];\\n\\n  this.OldValue = new_int(2); //public int CurrentStep[] = new int[2];\\n\\n  this.CurrentStep = new_int(2);\\n  this.masking_lower = 0.; //public int bv_scf[] = new int[576];\\n\\n  this.bv_scf = new_int(576); //public int pseudohalf[] = new int[L3Side.SFBMAX];\\n\\n  this.pseudohalf = new_int(L3Side.SFBMAX);\\n  /**\\n   * will be set in lame_init_params\\n   */\\n\\n  this.sfb21_extra = false;\\n  /* BPC = maximum number of filter convolution windows to precompute */\\n  //public float[][] inbuf_old = new float[2][];\\n\\n  this.inbuf_old = new Array(2); //public float[][] blackfilt = new float[2 * BPC + 1][];\\n\\n  this.blackfilt = new Array(2 * LameInternalFlags.BPC + 1); //public double itime[] = new double[2];\\n\\n  this.itime = new_double(2);\\n  this.sideinfo_len = 0;\\n  /* variables for newmdct.c */\\n  //public float sb_sample[][][][] = new float[2][2][18][Encoder.SBLIMIT];\\n\\n  this.sb_sample = new_float_n([2, 2, 18, Encoder.SBLIMIT]);\\n  this.amp_filter = new_float(32);\\n  /* variables for BitStream */\\n\\n  /**\\n   * <PRE>\\n   * mpeg1: buffer=511 bytes  smallest frame: 96-38(sideinfo)=58\\n   * max number of frames in reservoir:  8\\n   * mpeg2: buffer=255 bytes.  smallest frame: 24-23bytes=1\\n   * with VBR, if you are encoding all silence, it is possible to\\n   * have 8kbs/24khz frames with 1byte of data each, which means we need\\n   * to buffer up to 255 headers!\\n   * </PRE>\\n   */\\n\\n  /**\\n   * also, max_header_buf has to be a power of two\\n   */\\n\\n  /**\\n   * max size of header is 38\\n   */\\n\\n  function Header() {\\n    this.write_timing = 0;\\n    this.ptr = 0; //public byte buf[] = new byte[MAX_HEADER_LEN];\\n\\n    this.buf = new_byte(MAX_HEADER_LEN);\\n  }\\n\\n  this.header = new Array(LameInternalFlags.MAX_HEADER_BUF);\\n  this.h_ptr = 0;\\n  this.w_ptr = 0;\\n  this.ancillary_flag = 0;\\n  /* variables for Reservoir */\\n\\n  /**\\n   * in bits\\n   */\\n\\n  this.ResvSize = 0;\\n  /**\\n   * in bits\\n   */\\n\\n  this.ResvMax = 0; //public ScaleFac scalefac_band = new ScaleFac();\\n\\n  this.scalefac_band = new ScaleFac();\\n  /* daa from PsyModel */\\n\\n  /* The static variables \\\"r\\\", \\\"phi_sav\\\", \\\"new\\\", \\\"old\\\" and \\\"oldest\\\" have */\\n\\n  /* to be remembered for the unpredictability measure. For \\\"r\\\" and */\\n\\n  /* \\\"phi_sav\\\", the first index from the left is the channel select and */\\n\\n  /* the second index is the \\\"age\\\" of the data. */\\n\\n  this.minval_l = new_float(Encoder.CBANDS);\\n  this.minval_s = new_float(Encoder.CBANDS);\\n  this.nb_1 = new_float_n([4, Encoder.CBANDS]);\\n  this.nb_2 = new_float_n([4, Encoder.CBANDS]);\\n  this.nb_s1 = new_float_n([4, Encoder.CBANDS]);\\n  this.nb_s2 = new_float_n([4, Encoder.CBANDS]);\\n  this.s3_ss = null;\\n  this.s3_ll = null;\\n  this.decay = 0.; //public III_psy_xmin[] thm = new III_psy_xmin[4];\\n  //public III_psy_xmin[] en = new III_psy_xmin[4];\\n\\n  this.thm = new Array(4);\\n  this.en = new Array(4);\\n  /**\\n   * fft and energy calculation\\n   */\\n\\n  this.tot_ener = new_float(4);\\n  /* loudness calculation (for adaptive threshold of hearing) */\\n\\n  /**\\n   * loudness^2 approx. per granule and channel\\n   */\\n\\n  this.loudness_sq = new_float_n([2, 2]);\\n  /**\\n   * account for granule delay of L3psycho_anal\\n   */\\n\\n  this.loudness_sq_save = new_float(2);\\n  /**\\n   * Scale Factor Bands\\n   */\\n\\n  this.mld_l = new_float(Encoder.SBMAX_l);\\n  this.mld_s = new_float(Encoder.SBMAX_s);\\n  this.bm_l = new_int(Encoder.SBMAX_l);\\n  this.bo_l = new_int(Encoder.SBMAX_l);\\n  this.bm_s = new_int(Encoder.SBMAX_s);\\n  this.bo_s = new_int(Encoder.SBMAX_s);\\n  this.npart_l = 0;\\n  this.npart_s = 0;\\n  this.s3ind = new_int_n([Encoder.CBANDS, 2]);\\n  this.s3ind_s = new_int_n([Encoder.CBANDS, 2]);\\n  this.numlines_s = new_int(Encoder.CBANDS);\\n  this.numlines_l = new_int(Encoder.CBANDS);\\n  this.rnumlines_l = new_float(Encoder.CBANDS);\\n  this.mld_cb_l = new_float(Encoder.CBANDS);\\n  this.mld_cb_s = new_float(Encoder.CBANDS);\\n  this.numlines_s_num1 = 0;\\n  this.numlines_l_num1 = 0;\\n  /* ratios */\\n\\n  this.pe = new_float(4);\\n  this.ms_ratio_s_old = 0.;\\n  this.ms_ratio_l_old = 0.;\\n  this.ms_ener_ratio_old = 0.;\\n  /**\\n   * block type\\n   */\\n\\n  this.blocktype_old = new_int(2);\\n  /**\\n   * variables used for --nspsytune\\n   */\\n\\n  this.nsPsy = new NsPsy();\\n  /**\\n   * used for Xing VBR header\\n   */\\n\\n  this.VBR_seek_table = new VBRSeekInfo();\\n  /**\\n   * all ATH related stuff\\n   */\\n  //public ATH ATH;\\n\\n  this.ATH = null;\\n  this.PSY = null;\\n  this.nogap_total = 0;\\n  this.nogap_current = 0;\\n  /* ReplayGain */\\n\\n  this.decode_on_the_fly = true;\\n  this.findReplayGain = true;\\n  this.findPeakSample = true;\\n  this.PeakSample = 0.;\\n  this.RadioGain = 0;\\n  this.AudiophileGain = 0; //public ReplayGain rgdata;\\n\\n  this.rgdata = null;\\n  /**\\n   * gain change required for preventing clipping\\n   */\\n\\n  this.noclipGainChange = 0;\\n  /**\\n   * user-specified scale factor required for preventing clipping\\n   */\\n\\n  this.noclipScale = 0.;\\n  /* simple statistics */\\n\\n  this.bitrate_stereoMode_Hist = new_int_n([16, 4 + 1]);\\n  /**\\n   * norm/start/short/stop/mixed(short)/sum\\n   */\\n\\n  this.bitrate_blockType_Hist = new_int_n([16, 4 + 1 + 1]); //public PlottingData pinfo;\\n  //public MPGLib.mpstr_tag hip;\\n\\n  this.pinfo = null;\\n  this.hip = null;\\n  this.in_buffer_nsamples = 0; //public float[] in_buffer_0;\\n  //public float[] in_buffer_1;\\n\\n  this.in_buffer_0 = null;\\n  this.in_buffer_1 = null; //public IIterationLoop iteration_loop;\\n\\n  this.iteration_loop = null;\\n\\n  for (var i = 0; i < this.en.length; i++) {\\n    this.en[i] = new III_psy_xmin();\\n  }\\n\\n  for (var i = 0; i < this.thm.length; i++) {\\n    this.thm[i] = new III_psy_xmin();\\n  }\\n\\n  for (var i = 0; i < this.header.length; i++) {\\n    this.header[i] = new Header();\\n  }\\n}\\n\\nmodule.exports = LameInternalFlags;\",\"var Encoder = require('./Encoder.js');\\n\\nvar L3Side = {};\\n/**\\n * max scalefactor band, max(SBMAX_l, SBMAX_s*3, (SBMAX_s-3)*3+8)\\n */\\n\\nL3Side.SFBMAX = Encoder.SBMAX_s * 3;\\nmodule.exports = L3Side;\",\"!function (e, t) {\\n  \\\"object\\\" == typeof exports && \\\"object\\\" == typeof module ? module.exports = t(require(\\\"moment\\\"), require(\\\"react\\\")) : \\\"function\\\" == typeof define && define.amd ? define([\\\"moment\\\", \\\"react\\\"], t) : \\\"object\\\" == typeof exports ? exports[\\\"react-moment\\\"] = t(require(\\\"moment\\\"), require(\\\"react\\\")) : e[\\\"react-moment\\\"] = t(e.moment, e.react);\\n}(this, function (e, t) {\\n  return function (e) {\\n    var t = {};\\n\\n    function n(r) {\\n      if (t[r]) return t[r].exports;\\n      var o = t[r] = {\\n        i: r,\\n        l: !1,\\n        exports: {}\\n      };\\n      return e[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports;\\n    }\\n\\n    return n.m = e, n.c = t, n.d = function (e, t, r) {\\n      n.o(e, t) || Object.defineProperty(e, t, {\\n        enumerable: !0,\\n        get: r\\n      });\\n    }, n.r = function (e) {\\n      \\\"undefined\\\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\\n        value: \\\"Module\\\"\\n      }), Object.defineProperty(e, \\\"__esModule\\\", {\\n        value: !0\\n      });\\n    }, n.t = function (e, t) {\\n      if (1 & t && (e = n(e)), 8 & t) return e;\\n      if (4 & t && \\\"object\\\" == typeof e && e && e.__esModule) return e;\\n      var r = Object.create(null);\\n      if (n.r(r), Object.defineProperty(r, \\\"default\\\", {\\n        enumerable: !0,\\n        value: e\\n      }), 2 & t && \\\"string\\\" != typeof e) for (var o in e) {\\n        n.d(r, o, function (t) {\\n          return e[t];\\n        }.bind(null, o));\\n      }\\n      return r;\\n    }, n.n = function (e) {\\n      var t = e && e.__esModule ? function () {\\n        return e.default;\\n      } : function () {\\n        return e;\\n      };\\n      return n.d(t, \\\"a\\\", t), t;\\n    }, n.o = function (e, t) {\\n      return Object.prototype.hasOwnProperty.call(e, t);\\n    }, n.p = \\\"\\\", n(n.s = 6);\\n  }([function (e, t, n) {\\n    e.exports = n(3)();\\n  }, function (t, n) {\\n    t.exports = e;\\n  }, function (e, n) {\\n    e.exports = t;\\n  }, function (e, t, n) {\\n    \\\"use strict\\\";\\n\\n    var r = n(4);\\n\\n    function o() {}\\n\\n    function i() {}\\n\\n    i.resetWarningCache = o, e.exports = function () {\\n      function e(e, t, n, o, i, a) {\\n        if (a !== r) {\\n          var l = new Error(\\\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\\\");\\n          throw l.name = \\\"Invariant Violation\\\", l;\\n        }\\n      }\\n\\n      function t() {\\n        return e;\\n      }\\n\\n      e.isRequired = e;\\n      var n = {\\n        array: e,\\n        bool: e,\\n        func: e,\\n        number: e,\\n        object: e,\\n        string: e,\\n        symbol: e,\\n        any: e,\\n        arrayOf: t,\\n        element: e,\\n        elementType: e,\\n        instanceOf: t,\\n        node: e,\\n        objectOf: t,\\n        oneOf: t,\\n        oneOfType: t,\\n        shape: t,\\n        exact: t,\\n        checkPropTypes: i,\\n        resetWarningCache: o\\n      };\\n      return n.PropTypes = n, n;\\n    };\\n  }, function (e, t, n) {\\n    \\\"use strict\\\";\\n\\n    e.exports = \\\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\\\";\\n  }, function (e, t, n) {\\n    var r, o, i, a, l;\\n    /*! Moment Duration Format v2.2.2\\n     *  https://github.com/jsmreese/moment-duration-format\\n     *  Date: 2018-02-16\\n     *\\n     *  Duration format plugin function for the Moment.js library\\n     *  http://momentjs.com/\\n     *\\n     *  Copyright 2018 John Madhavan-Reese\\n     *  Released under the MIT license\\n     */\\n\\n    /*! Moment Duration Format v2.2.2\\n     *  https://github.com/jsmreese/moment-duration-format\\n     *  Date: 2018-02-16\\n     *\\n     *  Duration format plugin function for the Moment.js library\\n     *  http://momentjs.com/\\n     *\\n     *  Copyright 2018 John Madhavan-Reese\\n     *  Released under the MIT license\\n     */\\n\\n    a = this, l = function l(e) {\\n      var t = !1,\\n          n = !1,\\n          r = \\\"escape years months weeks days hours minutes seconds milliseconds general\\\".split(\\\" \\\"),\\n          o = [{\\n        type: \\\"seconds\\\",\\n        targets: [{\\n          type: \\\"minutes\\\",\\n          value: 60\\n        }, {\\n          type: \\\"hours\\\",\\n          value: 3600\\n        }, {\\n          type: \\\"days\\\",\\n          value: 86400\\n        }, {\\n          type: \\\"weeks\\\",\\n          value: 604800\\n        }, {\\n          type: \\\"months\\\",\\n          value: 2678400\\n        }, {\\n          type: \\\"years\\\",\\n          value: 31536e3\\n        }]\\n      }, {\\n        type: \\\"minutes\\\",\\n        targets: [{\\n          type: \\\"hours\\\",\\n          value: 60\\n        }, {\\n          type: \\\"days\\\",\\n          value: 1440\\n        }, {\\n          type: \\\"weeks\\\",\\n          value: 10080\\n        }, {\\n          type: \\\"months\\\",\\n          value: 44640\\n        }, {\\n          type: \\\"years\\\",\\n          value: 525600\\n        }]\\n      }, {\\n        type: \\\"hours\\\",\\n        targets: [{\\n          type: \\\"days\\\",\\n          value: 24\\n        }, {\\n          type: \\\"weeks\\\",\\n          value: 168\\n        }, {\\n          type: \\\"months\\\",\\n          value: 744\\n        }, {\\n          type: \\\"years\\\",\\n          value: 8760\\n        }]\\n      }, {\\n        type: \\\"days\\\",\\n        targets: [{\\n          type: \\\"weeks\\\",\\n          value: 7\\n        }, {\\n          type: \\\"months\\\",\\n          value: 31\\n        }, {\\n          type: \\\"years\\\",\\n          value: 365\\n        }]\\n      }, {\\n        type: \\\"months\\\",\\n        targets: [{\\n          type: \\\"years\\\",\\n          value: 12\\n        }]\\n      }];\\n\\n      function i(e, t) {\\n        return !(t.length > e.length) && -1 !== e.indexOf(t);\\n      }\\n\\n      function a(e) {\\n        for (var t = \\\"\\\"; e;) {\\n          t += \\\"0\\\", e -= 1;\\n        }\\n\\n        return t;\\n      }\\n\\n      function l(e, t, r) {\\n        var o,\\n            i,\\n            u,\\n            s = t.useToLocaleString,\\n            c = t.useGrouping,\\n            m = c && t.grouping.slice(),\\n            f = t.maximumSignificantDigits,\\n            p = t.minimumIntegerDigits || 1,\\n            g = t.fractionDigits || 0,\\n            y = t.groupingSeparator,\\n            h = t.decimalSeparator;\\n\\n        if (s && r) {\\n          var d = {\\n            minimumIntegerDigits: p,\\n            useGrouping: c\\n          };\\n\\n          if (g && (d.maximumFractionDigits = g, d.minimumFractionDigits = g), f && e > 0 && (d.maximumSignificantDigits = f), !n) {\\n            var v = w({}, t);\\n            v.useGrouping = !1, v.decimalSeparator = \\\".\\\", e = parseFloat(l(e, v), 10);\\n          }\\n\\n          return e.toLocaleString(r, d);\\n        }\\n\\n        var b = (f ? e.toPrecision(f + 1) : e.toFixed(g + 1)).split(\\\"e\\\");\\n        u = b[1] || \\\"\\\", i = (b = b[0].split(\\\".\\\"))[1] || \\\"\\\";\\n\\n        var S = (o = b[0] || \\\"\\\").length,\\n            T = i.length,\\n            _ = S + T,\\n            x = o + i;\\n\\n        (f && _ === f + 1 || !f && T === g + 1) && ((x = function (e) {\\n          for (var t = e.split(\\\"\\\").reverse(), n = 0, r = !0; r && n < t.length;) {\\n            n ? \\\"9\\\" === t[n] ? t[n] = \\\"0\\\" : (t[n] = (parseInt(t[n], 10) + 1).toString(), r = !1) : (parseInt(t[n], 10) < 5 && (r = !1), t[n] = \\\"0\\\"), n += 1;\\n          }\\n\\n          return r && t.push(\\\"1\\\"), t.reverse().join(\\\"\\\");\\n        }(x)).length === _ + 1 && (S += 1), T && (x = x.slice(0, -1)), o = x.slice(0, S), i = x.slice(S)), f && (i = i.replace(/0*$/, \\\"\\\"));\\n        var O = parseInt(u, 10);\\n        O > 0 ? i.length <= O ? (o += i += a(O - i.length), i = \\\"\\\") : (o += i.slice(0, O), i = i.slice(O)) : O < 0 && (i = a(Math.abs(O) - o.length) + o + i, o = \\\"0\\\"), f || ((i = i.slice(0, g)).length < g && (i += a(g - i.length)), o.length < p && (o = a(p - o.length) + o));\\n        var V,\\n            D = \\\"\\\";\\n        if (c) for (b = o; b.length;) {\\n          m.length && (V = m.shift()), D && (D = y + D), D = b.slice(-V) + D, b = b.slice(0, -V);\\n        } else D = o;\\n        return i && (D = D + h + i), D;\\n      }\\n\\n      function u(e, t) {\\n        return e.label.length > t.label.length ? -1 : e.label.length < t.label.length ? 1 : 0;\\n      }\\n\\n      var s,\\n          c = {\\n        durationLabelsStandard: {\\n          S: \\\"millisecond\\\",\\n          SS: \\\"milliseconds\\\",\\n          s: \\\"second\\\",\\n          ss: \\\"seconds\\\",\\n          m: \\\"minute\\\",\\n          mm: \\\"minutes\\\",\\n          h: \\\"hour\\\",\\n          hh: \\\"hours\\\",\\n          d: \\\"day\\\",\\n          dd: \\\"days\\\",\\n          w: \\\"week\\\",\\n          ww: \\\"weeks\\\",\\n          M: \\\"month\\\",\\n          MM: \\\"months\\\",\\n          y: \\\"year\\\",\\n          yy: \\\"years\\\"\\n        },\\n        durationLabelsShort: {\\n          S: \\\"msec\\\",\\n          SS: \\\"msecs\\\",\\n          s: \\\"sec\\\",\\n          ss: \\\"secs\\\",\\n          m: \\\"min\\\",\\n          mm: \\\"mins\\\",\\n          h: \\\"hr\\\",\\n          hh: \\\"hrs\\\",\\n          d: \\\"dy\\\",\\n          dd: \\\"dys\\\",\\n          w: \\\"wk\\\",\\n          ww: \\\"wks\\\",\\n          M: \\\"mo\\\",\\n          MM: \\\"mos\\\",\\n          y: \\\"yr\\\",\\n          yy: \\\"yrs\\\"\\n        },\\n        durationTimeTemplates: {\\n          HMS: \\\"h:mm:ss\\\",\\n          HM: \\\"h:mm\\\",\\n          MS: \\\"m:ss\\\"\\n        },\\n        durationLabelTypes: [{\\n          type: \\\"standard\\\",\\n          string: \\\"__\\\"\\n        }, {\\n          type: \\\"short\\\",\\n          string: \\\"_\\\"\\n        }],\\n        durationPluralKey: function durationPluralKey(e, t, n) {\\n          return 1 === t && null === n ? e : e + e;\\n        }\\n      };\\n\\n      function m(e) {\\n        return \\\"[object Array]\\\" === Object.prototype.toString.call(e);\\n      }\\n\\n      function f(e) {\\n        return \\\"[object Object]\\\" === Object.prototype.toString.call(e);\\n      }\\n\\n      function p(e, t) {\\n        var n,\\n            r = 0,\\n            o = e && e.length || 0;\\n\\n        for (\\\"function\\\" != typeof t && (n = t, t = function t(e) {\\n          return e === n;\\n        }); r < o;) {\\n          if (t(e[r])) return e[r];\\n          r += 1;\\n        }\\n      }\\n\\n      function g(e, t) {\\n        var n = 0,\\n            r = e.length;\\n        if (e && r) for (; n < r;) {\\n          if (!1 === t(e[n], n)) return;\\n          n += 1;\\n        }\\n      }\\n\\n      function y(e, t) {\\n        var n = 0,\\n            r = e.length,\\n            o = [];\\n        if (!e || !r) return o;\\n\\n        for (; n < r;) {\\n          o[n] = t(e[n], n), n += 1;\\n        }\\n\\n        return o;\\n      }\\n\\n      function h(e, t) {\\n        return y(e, function (e) {\\n          return e[t];\\n        });\\n      }\\n\\n      function d(e) {\\n        var t = [];\\n        return g(e, function (e) {\\n          e && t.push(e);\\n        }), t;\\n      }\\n\\n      function v(e) {\\n        var t = [];\\n        return g(e, function (e) {\\n          p(t, e) || t.push(e);\\n        }), t;\\n      }\\n\\n      function b(e, t) {\\n        var n = [];\\n        return g(e, function (e) {\\n          g(t, function (t) {\\n            e === t && n.push(e);\\n          });\\n        }), v(n);\\n      }\\n\\n      function S(e, t) {\\n        var n = [];\\n        return g(e, function (r, o) {\\n          if (!t(r)) return n = e.slice(o), !1;\\n        }), n;\\n      }\\n\\n      function w(e, t) {\\n        for (var n in t) {\\n          t.hasOwnProperty(n) && (e[n] = t[n]);\\n        }\\n\\n        return e;\\n      }\\n\\n      function T(e) {\\n        var t = [];\\n\\n        for (var n in e) {\\n          e.hasOwnProperty(n) && t.push(n);\\n        }\\n\\n        return t;\\n      }\\n\\n      function _(e, t) {\\n        var n = 0,\\n            r = e.length;\\n        if (!e || !r) return !1;\\n\\n        for (; n < r;) {\\n          if (!0 === t(e[n], n)) return !0;\\n          n += 1;\\n        }\\n\\n        return !1;\\n      }\\n\\n      function x() {\\n        var e,\\n            t = [].slice.call(arguments),\\n            n = {};\\n        if (g(t, function (t, r) {\\n          if (!r) {\\n            if (!m(t)) throw \\\"Expected array as the first argument to durationsFormat.\\\";\\n            e = t;\\n          }\\n\\n          \\\"string\\\" != typeof t && \\\"function\\\" != typeof t ? \\\"number\\\" != typeof t ? f(t) && w(n, t) : n.precision = t : n.template = t;\\n        }), !e || !e.length) return [];\\n        n.returnMomentTypes = !0;\\n        var o,\\n            i = y(e, function (e) {\\n          return e.format(n);\\n        }),\\n            a = b(r, v(h((o = [], g(i, function (e) {\\n          o = o.concat(e);\\n        }), o), \\\"type\\\"))),\\n            l = n.largest;\\n        return l && (a = a.slice(0, l)), n.returnMomentTypes = !1, n.outputTypes = a, y(e, function (e) {\\n          return e.format(n);\\n        });\\n      }\\n\\n      function O() {\\n        var n = [].slice.call(arguments),\\n            a = w({}, this.format.defaults),\\n            s = this.asMilliseconds(),\\n            x = this.asMonths();\\n        \\\"function\\\" == typeof this.isValid && !1 === this.isValid() && (s = 0, x = 0);\\n        var O = s < 0,\\n            V = e.duration(Math.abs(s), \\\"milliseconds\\\"),\\n            D = e.duration(Math.abs(x), \\\"months\\\");\\n        g(n, function (e) {\\n          \\\"string\\\" != typeof e && \\\"function\\\" != typeof e ? \\\"number\\\" != typeof e ? f(e) && w(a, e) : a.precision = e : a.template = e;\\n        });\\n        var L = {\\n          years: \\\"y\\\",\\n          months: \\\"M\\\",\\n          weeks: \\\"w\\\",\\n          days: \\\"d\\\",\\n          hours: \\\"h\\\",\\n          minutes: \\\"m\\\",\\n          seconds: \\\"s\\\",\\n          milliseconds: \\\"S\\\"\\n        },\\n            M = {\\n          escape: /\\\\[(.+?)\\\\]/,\\n          years: /\\\\*?[Yy]+/,\\n          months: /\\\\*?M+/,\\n          weeks: /\\\\*?[Ww]+/,\\n          days: /\\\\*?[Dd]+/,\\n          hours: /\\\\*?[Hh]+/,\\n          minutes: /\\\\*?m+/,\\n          seconds: /\\\\*?s+/,\\n          milliseconds: /\\\\*?S+/,\\n          general: /.+?/\\n        };\\n        a.types = r;\\n\\n        var j = function j(e) {\\n          return p(r, function (t) {\\n            return M[t].test(e);\\n          });\\n        },\\n            k = new RegExp(y(r, function (e) {\\n          return M[e].source;\\n        }).join(\\\"|\\\"), \\\"g\\\");\\n\\n        a.duration = this;\\n        var P = \\\"function\\\" == typeof a.template ? a.template.apply(a) : a.template,\\n            E = a.outputTypes,\\n            F = a.returnMomentTypes,\\n            I = a.largest,\\n            N = [];\\n        E || (m(a.stopTrim) && (a.stopTrim = a.stopTrim.join(\\\"\\\")), a.stopTrim && g(a.stopTrim.match(k), function (e) {\\n          var t = j(e);\\n          \\\"escape\\\" !== t && \\\"general\\\" !== t && N.push(t);\\n        }));\\n        var G = e.localeData();\\n        G || (G = {}), g(T(c), function (e) {\\n          \\\"function\\\" != typeof c[e] ? G[\\\"_\\\" + e] || (G[\\\"_\\\" + e] = c[e]) : G[e] || (G[e] = c[e]);\\n        }), g(T(G._durationTimeTemplates), function (e) {\\n          P = P.replace(\\\"_\\\" + e + \\\"_\\\", G._durationTimeTemplates[e]);\\n        });\\n        var C = a.userLocale || e.locale(),\\n            R = a.useLeftUnits,\\n            W = a.usePlural,\\n            U = a.precision,\\n            q = a.forceLength,\\n            z = a.useGrouping,\\n            H = a.trunc,\\n            $ = a.useSignificantDigits && U > 0,\\n            A = $ ? a.precision : 0,\\n            B = A,\\n            K = a.minValue,\\n            Y = !1,\\n            J = a.maxValue,\\n            Q = !1,\\n            X = a.useToLocaleString,\\n            Z = a.groupingSeparator,\\n            ee = a.decimalSeparator,\\n            te = a.grouping;\\n        X = X && t;\\n        var ne = a.trim;\\n        m(ne) && (ne = ne.join(\\\" \\\")), null === ne && (I || J || $) && (ne = \\\"all\\\"), null !== ne && !0 !== ne && \\\"left\\\" !== ne && \\\"right\\\" !== ne || (ne = \\\"large\\\"), !1 === ne && (ne = \\\"\\\");\\n\\n        var re = function re(e) {\\n          return e.test(ne);\\n        },\\n            oe = /both/,\\n            ie = /^all|[^sm]all/,\\n            ae = I > 0 || _([/large/, oe, ie], re),\\n            le = _([/small/, oe, ie], re),\\n            ue = _([/mid/, ie], re),\\n            se = _([/final/, ie], re),\\n            ce = y(P.match(k), function (e, t) {\\n          var n = j(e);\\n          return \\\"*\\\" === e.slice(0, 1) && (e = e.slice(1), \\\"escape\\\" !== n && \\\"general\\\" !== n && N.push(n)), {\\n            index: t,\\n            length: e.length,\\n            text: \\\"\\\",\\n            token: \\\"escape\\\" === n ? e.replace(M.escape, \\\"$1\\\") : e,\\n            type: \\\"escape\\\" === n || \\\"general\\\" === n ? null : n\\n          };\\n        }),\\n            me = {\\n          index: 0,\\n          length: 0,\\n          token: \\\"\\\",\\n          text: \\\"\\\",\\n          type: null\\n        },\\n            fe = [];\\n\\n        R && ce.reverse(), g(ce, function (e) {\\n          if (e.type) return (me.type || me.text) && fe.push(me), void (me = e);\\n          R ? me.text = e.token + me.text : me.text += e.token;\\n        }), (me.type || me.text) && fe.push(me), R && fe.reverse();\\n        var pe = b(r, v(d(h(fe, \\\"type\\\"))));\\n        if (!pe.length) return h(fe, \\\"text\\\").join(\\\"\\\");\\n        pe = y(pe, function (e, t) {\\n          var n,\\n              r = t + 1 === pe.length,\\n              o = !t;\\n          n = \\\"years\\\" === e || \\\"months\\\" === e ? D.as(e) : V.as(e);\\n          var i = Math.floor(n),\\n              l = n - i,\\n              u = p(fe, function (t) {\\n            return e === t.type;\\n          });\\n          return o && J && n > J && (Q = !0), r && K && Math.abs(a.duration.as(e)) < K && (Y = !0), o && null === q && u.length > 1 && (q = !0), V.subtract(i, e), D.subtract(i, e), {\\n            rawValue: n,\\n            wholeValue: i,\\n            decimalValue: r ? l : 0,\\n            isSmallest: r,\\n            isLargest: o,\\n            type: e,\\n            tokenLength: u.length\\n          };\\n        });\\n\\n        var ge,\\n            ye = H ? Math.floor : Math.round,\\n            he = function he(e, t) {\\n          var n = Math.pow(10, t);\\n          return ye(e * n) / n;\\n        },\\n            de = !1,\\n            ve = !1,\\n            be = function be(e, t) {\\n          var n = {\\n            useGrouping: z,\\n            groupingSeparator: Z,\\n            decimalSeparator: ee,\\n            grouping: te,\\n            useToLocaleString: X\\n          };\\n          return $ && (A <= 0 ? (e.rawValue = 0, e.wholeValue = 0, e.decimalValue = 0) : (n.maximumSignificantDigits = A, e.significantDigits = A)), Q && !ve && (e.isLargest ? (e.wholeValue = J, e.decimalValue = 0) : (e.wholeValue = 0, e.decimalValue = 0)), Y && !ve && (e.isSmallest ? (e.wholeValue = K, e.decimalValue = 0) : (e.wholeValue = 0, e.decimalValue = 0)), e.isSmallest || e.significantDigits && e.significantDigits - e.wholeValue.toString().length <= 0 ? U < 0 ? e.value = he(e.wholeValue, U) : 0 === U ? e.value = ye(e.wholeValue + e.decimalValue) : $ ? (e.value = H ? he(e.rawValue, A - e.wholeValue.toString().length) : e.rawValue, e.wholeValue && (A -= e.wholeValue.toString().length)) : (n.fractionDigits = U, e.value = H ? e.wholeValue + he(e.decimalValue, U) : e.wholeValue + e.decimalValue) : $ && e.wholeValue ? (e.value = Math.round(he(e.wholeValue, e.significantDigits - e.wholeValue.toString().length)), A -= e.wholeValue.toString().length) : e.value = e.wholeValue, e.tokenLength > 1 && (q || de) && (n.minimumIntegerDigits = e.tokenLength, ve && n.maximumSignificantDigits < e.tokenLength && delete n.maximumSignificantDigits), !de && (e.value > 0 || \\\"\\\" === ne || p(N, e.type) || p(E, e.type)) && (de = !0), e.formattedValue = l(e.value, n, C), n.useGrouping = !1, n.decimalSeparator = \\\".\\\", e.formattedValueEn = l(e.value, n, \\\"en\\\"), 2 === e.tokenLength && \\\"milliseconds\\\" === e.type && (e.formattedValueMS = l(e.value, {\\n            minimumIntegerDigits: 3,\\n            useGrouping: !1\\n          }, \\\"en\\\").slice(0, 2)), e;\\n        };\\n\\n        if ((pe = d(pe = y(pe, be))).length > 1) {\\n          var Se = function Se(e) {\\n            return p(pe, function (t) {\\n              return t.type === e;\\n            });\\n          };\\n\\n          g(o, function (e) {\\n            var t = Se(e.type);\\n            t && g(e.targets, function (e) {\\n              var n = Se(e.type);\\n              n && parseInt(t.formattedValueEn, 10) === e.value && (t.rawValue = 0, t.wholeValue = 0, t.decimalValue = 0, n.rawValue += 1, n.wholeValue += 1, n.decimalValue = 0, n.formattedValueEn = n.wholeValue.toString(), ve = !0);\\n            });\\n          });\\n        }\\n\\n        return ve && (de = !1, A = B, pe = d(pe = y(pe, be))), !E || Q && !a.trim ? (ae && (pe = S(pe, function (e) {\\n          return !e.isSmallest && !e.wholeValue && !p(N, e.type);\\n        })), I && pe.length && (pe = pe.slice(0, I)), le && pe.length > 1 && (ge = function ge(e) {\\n          return !e.wholeValue && !p(N, e.type) && !e.isLargest;\\n        }, pe = S(pe.slice().reverse(), ge).reverse()), ue && (pe = d(pe = y(pe, function (e, t) {\\n          return t > 0 && t < pe.length - 1 && !e.wholeValue ? null : e;\\n        }))), !se || 1 !== pe.length || pe[0].wholeValue || !H && pe[0].isSmallest && pe[0].rawValue < K || (pe = [])) : pe = d(pe = y(pe, function (e) {\\n          return p(E, function (t) {\\n            return e.type === t;\\n          }) ? e : null;\\n        })), F ? pe : (g(fe, function (e) {\\n          var t = L[e.type],\\n              n = p(pe, function (t) {\\n            return t.type === e.type;\\n          });\\n\\n          if (t && n) {\\n            var r = n.formattedValueEn.split(\\\".\\\");\\n            r[0] = parseInt(r[0], 10), r[1] ? r[1] = parseFloat(\\\"0.\\\" + r[1], 10) : r[1] = null;\\n\\n            var o = G.durationPluralKey(t, r[0], r[1]),\\n                a = function (e, t) {\\n              var n = [];\\n              return g(T(t), function (r) {\\n                if (\\\"_durationLabels\\\" === r.slice(0, 15)) {\\n                  var o = r.slice(15).toLowerCase();\\n                  g(T(t[r]), function (i) {\\n                    i.slice(0, 1) === e && n.push({\\n                      type: o,\\n                      key: i,\\n                      label: t[r][i]\\n                    });\\n                  });\\n                }\\n              }), n;\\n            }(t, G),\\n                l = !1,\\n                s = {};\\n\\n            g(G._durationLabelTypes, function (t) {\\n              var n = p(a, function (e) {\\n                return e.type === t.type && e.key === o;\\n              });\\n              n && (s[n.type] = n.label, i(e.text, t.string) && (e.text = e.text.replace(t.string, n.label), l = !0));\\n            }), W && !l && (a.sort(u), g(a, function (t) {\\n              return s[t.type] === t.label ? !i(e.text, t.label) && void 0 : i(e.text, t.label) ? (e.text = e.text.replace(t.label, s[t.type]), !1) : void 0;\\n            }));\\n          }\\n        }), (fe = y(fe, function (e) {\\n          if (!e.type) return e.text;\\n          var t = p(pe, function (t) {\\n            return t.type === e.type;\\n          });\\n          if (!t) return \\\"\\\";\\n          var n = \\\"\\\";\\n          return R && (n += e.text), (O && Q || !O && Y) && (n += \\\"< \\\", Q = !1, Y = !1), (O && Y || !O && Q) && (n += \\\"> \\\", Q = !1, Y = !1), O && (t.value > 0 || \\\"\\\" === ne || p(N, t.type) || p(E, t.type)) && (n += \\\"-\\\", O = !1), \\\"milliseconds\\\" === e.type && t.formattedValueMS ? n += t.formattedValueMS : n += t.formattedValue, R || (n += e.text), n;\\n        })).join(\\\"\\\").replace(/(,| |:|\\\\.)*$/, \\\"\\\").replace(/^(,| |:|\\\\.)*/, \\\"\\\"));\\n      }\\n\\n      function V() {\\n        var e = this.duration,\\n            t = function t(_t) {\\n          return e._data[_t];\\n        },\\n            n = p(this.types, t),\\n            r = function (e, t) {\\n          for (var n = e.length; n -= 1;) {\\n            if (t(e[n])) return e[n];\\n          }\\n        }(this.types, t);\\n\\n        switch (n) {\\n          case \\\"milliseconds\\\":\\n            return \\\"S __\\\";\\n\\n          case \\\"seconds\\\":\\n          case \\\"minutes\\\":\\n            return \\\"*_MS_\\\";\\n\\n          case \\\"hours\\\":\\n            return \\\"_HMS_\\\";\\n\\n          case \\\"days\\\":\\n            if (n === r) return \\\"d __\\\";\\n\\n          case \\\"weeks\\\":\\n            return n === r ? \\\"w __\\\" : (null === this.trim && (this.trim = \\\"both\\\"), \\\"w __, d __, h __\\\");\\n\\n          case \\\"months\\\":\\n            if (n === r) return \\\"M __\\\";\\n\\n          case \\\"years\\\":\\n            return n === r ? \\\"y __\\\" : (null === this.trim && (this.trim = \\\"both\\\"), \\\"y __, M __, d __\\\");\\n\\n          default:\\n            return null === this.trim && (this.trim = \\\"both\\\"), \\\"y __, d __, h __, m __, s __\\\";\\n        }\\n      }\\n\\n      function D(e) {\\n        if (!e) throw \\\"Moment Duration Format init cannot find moment instance.\\\";\\n        e.duration.format = x, e.duration.fn.format = O, e.duration.fn.format.defaults = {\\n          trim: null,\\n          stopTrim: null,\\n          largest: null,\\n          maxValue: null,\\n          minValue: null,\\n          precision: 0,\\n          trunc: !1,\\n          forceLength: null,\\n          userLocale: null,\\n          usePlural: !0,\\n          useLeftUnits: !1,\\n          useGrouping: !0,\\n          useSignificantDigits: !1,\\n          template: V,\\n          useToLocaleString: !0,\\n          groupingSeparator: \\\",\\\",\\n          decimalSeparator: \\\".\\\",\\n          grouping: [3]\\n        }, e.updateLocale(\\\"en\\\", c);\\n      }\\n\\n      return t = !!((s = (s = !0) && function () {\\n        try {\\n          0 .toLocaleString(\\\"i\\\");\\n        } catch (e) {\\n          return \\\"RangeError\\\" === e.name;\\n        }\\n\\n        return !1;\\n      }()) && (s = (s = (s = s && \\\"1\\\" === 1..toLocaleString(\\\"en\\\", {\\n        minimumIntegerDigits: 1\\n      })) && \\\"01\\\" === 1..toLocaleString(\\\"en\\\", {\\n        minimumIntegerDigits: 2\\n      })) && \\\"001\\\" === 1..toLocaleString(\\\"en\\\", {\\n        minimumIntegerDigits: 3\\n      })) && (s = (s = (s = (s = s && \\\"100\\\" === 99.99.toLocaleString(\\\"en\\\", {\\n        maximumFractionDigits: 0,\\n        minimumFractionDigits: 0\\n      })) && \\\"100.0\\\" === 99.99.toLocaleString(\\\"en\\\", {\\n        maximumFractionDigits: 1,\\n        minimumFractionDigits: 1\\n      })) && \\\"99.99\\\" === 99.99.toLocaleString(\\\"en\\\", {\\n        maximumFractionDigits: 2,\\n        minimumFractionDigits: 2\\n      })) && \\\"99.990\\\" === 99.99.toLocaleString(\\\"en\\\", {\\n        maximumFractionDigits: 3,\\n        minimumFractionDigits: 3\\n      })) && (s = (s = (s = (s = (s = s && \\\"100\\\" === 99.99.toLocaleString(\\\"en\\\", {\\n        maximumSignificantDigits: 1\\n      })) && \\\"100\\\" === 99.99.toLocaleString(\\\"en\\\", {\\n        maximumSignificantDigits: 2\\n      })) && \\\"100\\\" === 99.99.toLocaleString(\\\"en\\\", {\\n        maximumSignificantDigits: 3\\n      })) && \\\"99.99\\\" === 99.99.toLocaleString(\\\"en\\\", {\\n        maximumSignificantDigits: 4\\n      })) && \\\"99.99\\\" === 99.99.toLocaleString(\\\"en\\\", {\\n        maximumSignificantDigits: 5\\n      })) && (s = (s = s && \\\"1,000\\\" === 1e3.toLocaleString(\\\"en\\\", {\\n        useGrouping: !0\\n      })) && \\\"1000\\\" === 1e3.toLocaleString(\\\"en\\\", {\\n        useGrouping: !1\\n      }))), n = t && \\\"3.6\\\" === 3.55.toLocaleString(\\\"en\\\", {\\n        useGrouping: !1,\\n        minimumIntegerDigits: 1,\\n        minimumFractionDigits: 1,\\n        maximumFractionDigits: 1\\n      }), D(e), D;\\n    }, o = [n(1)], void 0 === (i = \\\"function\\\" == typeof (r = l) ? r.apply(t, o) : r) || (e.exports = i), a && (a.momentDurationFormatSetup = a.moment ? l(a.moment) : l);\\n  }, function (e, t, n) {\\n    \\\"use strict\\\";\\n\\n    n.r(t);\\n    var r = n(2),\\n        o = n.n(r),\\n        i = n(0),\\n        a = n.n(i),\\n        l = n(1),\\n        u = n.n(l);\\n    n(5);\\n\\n    function s(e) {\\n      return (s = \\\"function\\\" == typeof Symbol && \\\"symbol\\\" == typeof Symbol.iterator ? function (e) {\\n        return typeof e;\\n      } : function (e) {\\n        return e && \\\"function\\\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \\\"symbol\\\" : typeof e;\\n      })(e);\\n    }\\n\\n    function c(e, t) {\\n      if (null == e) return {};\\n\\n      var n,\\n          r,\\n          o = function (e, t) {\\n        if (null == e) return {};\\n        var n,\\n            r,\\n            o = {},\\n            i = Object.keys(e);\\n\\n        for (r = 0; r < i.length; r++) {\\n          n = i[r], t.indexOf(n) >= 0 || (o[n] = e[n]);\\n        }\\n\\n        return o;\\n      }(e, t);\\n\\n      if (Object.getOwnPropertySymbols) {\\n        var i = Object.getOwnPropertySymbols(e);\\n\\n        for (r = 0; r < i.length; r++) {\\n          n = i[r], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);\\n        }\\n      }\\n\\n      return o;\\n    }\\n\\n    function m(e) {\\n      return (m = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\\n        return e.__proto__ || Object.getPrototypeOf(e);\\n      })(e);\\n    }\\n\\n    function f(e) {\\n      if (void 0 === e) throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n      return e;\\n    }\\n\\n    function p(e, t) {\\n      for (var n = 0; n < t.length; n++) {\\n        var r = t[n];\\n        r.enumerable = r.enumerable || !1, r.configurable = !0, \\\"value\\\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\\n      }\\n    }\\n\\n    function g(e, t, n) {\\n      return t && p(e.prototype, t), n && p(e, n), e;\\n    }\\n\\n    function y(e, t) {\\n      return (y = Object.setPrototypeOf || function (e, t) {\\n        return e.__proto__ = t, e;\\n      })(e, t);\\n    }\\n\\n    function h(e, t, n) {\\n      return t in e ? Object.defineProperty(e, t, {\\n        value: n,\\n        enumerable: !0,\\n        configurable: !0,\\n        writable: !0\\n      }) : e[t] = n, e;\\n    }\\n\\n    n.d(t, \\\"default\\\", function () {\\n      return S;\\n    });\\n\\n    var d = [a.a.string, a.a.number, a.a.array, a.a.object],\\n        v = [a.a.string, a.a.array],\\n        b = [a.a.object, a.a.bool],\\n        S = function (e) {\\n      function t(e) {\\n        var n, r, o;\\n        return function (e, t) {\\n          if (!(e instanceof t)) throw new TypeError(\\\"Cannot call a class as a function\\\");\\n        }(this, t), r = this, o = m(t).call(this, e), n = !o || \\\"object\\\" !== s(o) && \\\"function\\\" != typeof o ? f(r) : o, h(f(n), \\\"setTimer\\\", function () {\\n          var e = n.props.interval;\\n          n.clearTimer(), t.pooledTimer || 0 === e || (n.timer = setInterval(function () {\\n            n.update(n.props);\\n          }, e));\\n        }), h(f(n), \\\"clearTimer\\\", function () {\\n          !t.pooledTimer && n.timer && (clearInterval(n.timer), n.timer = null), t.pooledTimer && !n.timer && t.removePooledElement(f(n));\\n        }), h(f(n), \\\"getTitle\\\", function () {\\n          var e = n.props.titleFormat,\\n              r = t.getDatetime(n.props),\\n              o = e || t.globalFormat;\\n          return r.format(o);\\n        }), t.globalMoment || (t.globalMoment = u.a), n.state = {\\n          content: \\\"\\\"\\n        }, n.timer = null, n;\\n      }\\n\\n      return function (e, t) {\\n        if (\\\"function\\\" != typeof t && null !== t) throw new TypeError(\\\"Super expression must either be null or a function\\\");\\n        e.prototype = Object.create(t && t.prototype, {\\n          constructor: {\\n            value: e,\\n            writable: !0,\\n            configurable: !0\\n          }\\n        }), t && y(e, t);\\n      }(t, o.a.Component), g(t, null, [{\\n        key: \\\"startPooledTimer\\\",\\n        value: function value() {\\n          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 6e4;\\n          t.clearPooledTimer(), t.pooledTimer = setInterval(function () {\\n            t.pooledElements.forEach(function (e) {\\n              0 !== e.props.interval && e.update();\\n            });\\n          }, e);\\n        }\\n      }, {\\n        key: \\\"clearPooledTimer\\\",\\n        value: function value() {\\n          t.pooledTimer && (clearInterval(t.pooledTimer), t.pooledTimer = null, t.pooledElements = []);\\n        }\\n      }, {\\n        key: \\\"pushPooledElement\\\",\\n        value: function value(e) {\\n          e instanceof t ? -1 === t.pooledElements.indexOf(e) && t.pooledElements.push(e) : console.error(\\\"Element not an instance of Moment.\\\");\\n        }\\n      }, {\\n        key: \\\"removePooledElement\\\",\\n        value: function value(e) {\\n          var n = t.pooledElements.indexOf(e);\\n          -1 !== n && t.pooledElements.splice(n, 1);\\n        }\\n      }, {\\n        key: \\\"getDatetime\\\",\\n        value: function value(e) {\\n          var n = e.utc,\\n              r = e.unix,\\n              o = e.date,\\n              i = e.locale,\\n              a = e.parse,\\n              l = e.tz,\\n              u = e.local;\\n          o = o || e.children, a = a || t.globalParse, u = u || t.globalLocal, l = l || t.globalTimezone, i = t.globalLocale ? t.globalLocale : i || t.globalMoment.locale();\\n          var s = null;\\n          return s = n ? t.globalMoment.utc(o, a, i) : r ? t.globalMoment(1e3 * o, a, i) : t.globalMoment(o, a, i), l ? s = s.tz(l) : u && (s = s.local()), s;\\n        }\\n      }]), g(t, [{\\n        key: \\\"componentWillMount\\\",\\n        value: function value() {\\n          this.update(this.props);\\n        }\\n      }, {\\n        key: \\\"componentDidMount\\\",\\n        value: function value() {\\n          this.setTimer(), t.pooledTimer && t.pushPooledElement(this);\\n        }\\n      }, {\\n        key: \\\"componentWillReceiveProps\\\",\\n        value: function value(e) {\\n          this.update(e);\\n        }\\n      }, {\\n        key: \\\"componentDidUpdate\\\",\\n        value: function value(e) {\\n          var t = this.props.interval;\\n          e.interval !== t && this.setTimer();\\n        }\\n      }, {\\n        key: \\\"componentWillUnmount\\\",\\n        value: function value() {\\n          this.clearTimer();\\n        }\\n      }, {\\n        key: \\\"update\\\",\\n        value: function value(e) {\\n          var n = e = e || this.props,\\n              r = n.fromNow,\\n              o = n.fromNowDuring,\\n              i = n.from,\\n              a = n.add,\\n              l = n.subtract,\\n              s = n.toNow,\\n              c = n.to,\\n              m = n.ago,\\n              f = n.calendar,\\n              p = n.diff,\\n              g = n.duration,\\n              y = n.durationFromNow,\\n              h = n.unit,\\n              d = n.decimal,\\n              v = n.onChange,\\n              b = e.format;\\n          b = b || t.globalFormat;\\n          var S = t.getDatetime(e);\\n          a && S.add(a), l && S.subtract(l);\\n          var w = Boolean(o) && -S.diff(u()()) < o,\\n              T = \\\"\\\";\\n          T = b && !w ? S.format(b) : i ? S.from(i, m) : r || w ? S.fromNow(m) : c ? S.to(c, m) : s ? S.toNow(m) : f ? S.calendar(null, f) : p ? S.diff(p, h, d) : g ? S.diff(g) : y ? u()().diff(S) : S.toString(), (g || y) && (T = (T = u.a.duration(T)).format(b));\\n\\n          var _ = t.globalFilter || this.props.filter;\\n\\n          T = _(T), this.setState({\\n            content: T\\n          }, function () {\\n            v(T);\\n          });\\n        }\\n      }, {\\n        key: \\\"render\\\",\\n        value: function value() {\\n          var e,\\n              n,\\n              r,\\n              i,\\n              a = this.props,\\n              l = a.withTitle,\\n              u = a.element,\\n              s = c(a, [\\\"withTitle\\\", \\\"element\\\"]),\\n              m = this.state.content,\\n              f = (e = s, n = t.propTypes, r = Object.keys(n), i = Object.assign({}, e), Object.keys(i).filter(function (e) {\\n            return -1 !== r.indexOf(e);\\n          }).forEach(function (e) {\\n            return delete i[e];\\n          }), i);\\n          return l && (f.title = this.getTitle()), o.a.createElement(u || t.globalElement, function (e) {\\n            for (var t = 1; t < arguments.length; t++) {\\n              var n = null != arguments[t] ? arguments[t] : {},\\n                  r = Object.keys(n);\\n              \\\"function\\\" == typeof Object.getOwnPropertySymbols && (r = r.concat(Object.getOwnPropertySymbols(n).filter(function (e) {\\n                return Object.getOwnPropertyDescriptor(n, e).enumerable;\\n              }))), r.forEach(function (t) {\\n                h(e, t, n[t]);\\n              });\\n            }\\n\\n            return e;\\n          }({\\n            dateTime: t.getDatetime(this.props)\\n          }, f), m);\\n        }\\n      }]), t;\\n    }();\\n\\n    h(S, \\\"propTypes\\\", {\\n      element: a.a.any,\\n      date: a.a.oneOfType(d),\\n      parse: a.a.oneOfType(v),\\n      format: a.a.string,\\n      add: a.a.object,\\n      subtract: a.a.object,\\n      ago: a.a.bool,\\n      fromNow: a.a.bool,\\n      fromNowDuring: a.a.number,\\n      from: a.a.oneOfType(d),\\n      toNow: a.a.bool,\\n      to: a.a.oneOfType(d),\\n      calendar: a.a.oneOfType(b),\\n      unix: a.a.bool,\\n      utc: a.a.bool,\\n      local: a.a.bool,\\n      tz: a.a.string,\\n      withTitle: a.a.bool,\\n      titleFormat: a.a.string,\\n      locale: a.a.string,\\n      interval: a.a.number,\\n      diff: a.a.oneOfType(d),\\n      duration: a.a.oneOfType(d),\\n      durationFromNow: a.a.bool,\\n      unit: a.a.string,\\n      decimal: a.a.bool,\\n      filter: a.a.func,\\n      onChange: a.a.func\\n    }), h(S, \\\"defaultProps\\\", {\\n      element: null,\\n      fromNow: !1,\\n      toNow: !1,\\n      calendar: !1,\\n      ago: !1,\\n      unix: !1,\\n      utc: !1,\\n      local: !1,\\n      unit: null,\\n      withTitle: !1,\\n      decimal: !1,\\n      titleFormat: \\\"\\\",\\n      interval: 6e4,\\n      filter: function filter(e) {\\n        return e;\\n      },\\n      onChange: function onChange() {}\\n    }), h(S, \\\"globalMoment\\\", null), h(S, \\\"globalLocale\\\", null), h(S, \\\"globalLocal\\\", null), h(S, \\\"globalFormat\\\", null), h(S, \\\"globalParse\\\", null), h(S, \\\"globalFilter\\\", null), h(S, \\\"globalElement\\\", \\\"time\\\"), h(S, \\\"globalTimezone\\\", null), h(S, \\\"pooledElements\\\", []), h(S, \\\"pooledTimer\\\", null);\\n  }]);\\n});\",\"//! moment.js\\n;\\n\\n(function (global, factory) {\\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\\n})(this, function () {\\n  'use strict';\\n\\n  var hookCallback;\\n\\n  function hooks() {\\n    return hookCallback.apply(null, arguments);\\n  } // This is done to register the method called with moment()\\n  // without creating circular dependencies.\\n\\n\\n  function setHookCallback(callback) {\\n    hookCallback = callback;\\n  }\\n\\n  function isArray(input) {\\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\\n  }\\n\\n  function isObject(input) {\\n    // IE8 will treat undefined and null as object if it wasn't for\\n    // input != null\\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\\n  }\\n\\n  function isObjectEmpty(obj) {\\n    if (Object.getOwnPropertyNames) {\\n      return Object.getOwnPropertyNames(obj).length === 0;\\n    } else {\\n      var k;\\n\\n      for (k in obj) {\\n        if (obj.hasOwnProperty(k)) {\\n          return false;\\n        }\\n      }\\n\\n      return true;\\n    }\\n  }\\n\\n  function isUndefined(input) {\\n    return input === void 0;\\n  }\\n\\n  function isNumber(input) {\\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\\n  }\\n\\n  function isDate(input) {\\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\\n  }\\n\\n  function map(arr, fn) {\\n    var res = [],\\n        i;\\n\\n    for (i = 0; i < arr.length; ++i) {\\n      res.push(fn(arr[i], i));\\n    }\\n\\n    return res;\\n  }\\n\\n  function hasOwnProp(a, b) {\\n    return Object.prototype.hasOwnProperty.call(a, b);\\n  }\\n\\n  function extend(a, b) {\\n    for (var i in b) {\\n      if (hasOwnProp(b, i)) {\\n        a[i] = b[i];\\n      }\\n    }\\n\\n    if (hasOwnProp(b, 'toString')) {\\n      a.toString = b.toString;\\n    }\\n\\n    if (hasOwnProp(b, 'valueOf')) {\\n      a.valueOf = b.valueOf;\\n    }\\n\\n    return a;\\n  }\\n\\n  function createUTC(input, format, locale, strict) {\\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\\n  }\\n\\n  function defaultParsingFlags() {\\n    // We need to deep clone this object.\\n    return {\\n      empty: false,\\n      unusedTokens: [],\\n      unusedInput: [],\\n      overflow: -2,\\n      charsLeftOver: 0,\\n      nullInput: false,\\n      invalidMonth: null,\\n      invalidFormat: false,\\n      userInvalidated: false,\\n      iso: false,\\n      parsedDateParts: [],\\n      meridiem: null,\\n      rfc2822: false,\\n      weekdayMismatch: false\\n    };\\n  }\\n\\n  function getParsingFlags(m) {\\n    if (m._pf == null) {\\n      m._pf = defaultParsingFlags();\\n    }\\n\\n    return m._pf;\\n  }\\n\\n  var some;\\n\\n  if (Array.prototype.some) {\\n    some = Array.prototype.some;\\n  } else {\\n    some = function some(fun) {\\n      var t = Object(this);\\n      var len = t.length >>> 0;\\n\\n      for (var i = 0; i < len; i++) {\\n        if (i in t && fun.call(this, t[i], i, t)) {\\n          return true;\\n        }\\n      }\\n\\n      return false;\\n    };\\n  }\\n\\n  function isValid(m) {\\n    if (m._isValid == null) {\\n      var flags = getParsingFlags(m);\\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\\n        return i != null;\\n      });\\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\\n\\n      if (m._strict) {\\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\\n      }\\n\\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\\n        m._isValid = isNowValid;\\n      } else {\\n        return isNowValid;\\n      }\\n    }\\n\\n    return m._isValid;\\n  }\\n\\n  function createInvalid(flags) {\\n    var m = createUTC(NaN);\\n\\n    if (flags != null) {\\n      extend(getParsingFlags(m), flags);\\n    } else {\\n      getParsingFlags(m).userInvalidated = true;\\n    }\\n\\n    return m;\\n  } // Plugins that add properties should also add the key here (null value),\\n  // so we can properly clone ourselves.\\n\\n\\n  var momentProperties = hooks.momentProperties = [];\\n\\n  function copyConfig(to, from) {\\n    var i, prop, val;\\n\\n    if (!isUndefined(from._isAMomentObject)) {\\n      to._isAMomentObject = from._isAMomentObject;\\n    }\\n\\n    if (!isUndefined(from._i)) {\\n      to._i = from._i;\\n    }\\n\\n    if (!isUndefined(from._f)) {\\n      to._f = from._f;\\n    }\\n\\n    if (!isUndefined(from._l)) {\\n      to._l = from._l;\\n    }\\n\\n    if (!isUndefined(from._strict)) {\\n      to._strict = from._strict;\\n    }\\n\\n    if (!isUndefined(from._tzm)) {\\n      to._tzm = from._tzm;\\n    }\\n\\n    if (!isUndefined(from._isUTC)) {\\n      to._isUTC = from._isUTC;\\n    }\\n\\n    if (!isUndefined(from._offset)) {\\n      to._offset = from._offset;\\n    }\\n\\n    if (!isUndefined(from._pf)) {\\n      to._pf = getParsingFlags(from);\\n    }\\n\\n    if (!isUndefined(from._locale)) {\\n      to._locale = from._locale;\\n    }\\n\\n    if (momentProperties.length > 0) {\\n      for (i = 0; i < momentProperties.length; i++) {\\n        prop = momentProperties[i];\\n        val = from[prop];\\n\\n        if (!isUndefined(val)) {\\n          to[prop] = val;\\n        }\\n      }\\n    }\\n\\n    return to;\\n  }\\n\\n  var updateInProgress = false; // Moment prototype object\\n\\n  function Moment(config) {\\n    copyConfig(this, config);\\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\\n\\n    if (!this.isValid()) {\\n      this._d = new Date(NaN);\\n    } // Prevent infinite loop in case updateOffset creates new moment\\n    // objects.\\n\\n\\n    if (updateInProgress === false) {\\n      updateInProgress = true;\\n      hooks.updateOffset(this);\\n      updateInProgress = false;\\n    }\\n  }\\n\\n  function isMoment(obj) {\\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\\n  }\\n\\n  function absFloor(number) {\\n    if (number < 0) {\\n      // -0 -> 0\\n      return Math.ceil(number) || 0;\\n    } else {\\n      return Math.floor(number);\\n    }\\n  }\\n\\n  function toInt(argumentForCoercion) {\\n    var coercedNumber = +argumentForCoercion,\\n        value = 0;\\n\\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\\n      value = absFloor(coercedNumber);\\n    }\\n\\n    return value;\\n  } // compare two arrays, return the number of differences\\n\\n\\n  function compareArrays(array1, array2, dontConvert) {\\n    var len = Math.min(array1.length, array2.length),\\n        lengthDiff = Math.abs(array1.length - array2.length),\\n        diffs = 0,\\n        i;\\n\\n    for (i = 0; i < len; i++) {\\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\\n        diffs++;\\n      }\\n    }\\n\\n    return diffs + lengthDiff;\\n  }\\n\\n  function warn(msg) {\\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\\n      console.warn('Deprecation warning: ' + msg);\\n    }\\n  }\\n\\n  function deprecate(msg, fn) {\\n    var firstTime = true;\\n    return extend(function () {\\n      if (hooks.deprecationHandler != null) {\\n        hooks.deprecationHandler(null, msg);\\n      }\\n\\n      if (firstTime) {\\n        var args = [];\\n        var arg;\\n\\n        for (var i = 0; i < arguments.length; i++) {\\n          arg = '';\\n\\n          if (typeof arguments[i] === 'object') {\\n            arg += '\\\\n[' + i + '] ';\\n\\n            for (var key in arguments[0]) {\\n              arg += key + ': ' + arguments[0][key] + ', ';\\n            }\\n\\n            arg = arg.slice(0, -2); // Remove trailing comma and space\\n          } else {\\n            arg = arguments[i];\\n          }\\n\\n          args.push(arg);\\n        }\\n\\n        warn(msg + '\\\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\\\n' + new Error().stack);\\n        firstTime = false;\\n      }\\n\\n      return fn.apply(this, arguments);\\n    }, fn);\\n  }\\n\\n  var deprecations = {};\\n\\n  function deprecateSimple(name, msg) {\\n    if (hooks.deprecationHandler != null) {\\n      hooks.deprecationHandler(name, msg);\\n    }\\n\\n    if (!deprecations[name]) {\\n      warn(msg);\\n      deprecations[name] = true;\\n    }\\n  }\\n\\n  hooks.suppressDeprecationWarnings = false;\\n  hooks.deprecationHandler = null;\\n\\n  function isFunction(input) {\\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\\n  }\\n\\n  function set(config) {\\n    var prop, i;\\n\\n    for (i in config) {\\n      prop = config[i];\\n\\n      if (isFunction(prop)) {\\n        this[i] = prop;\\n      } else {\\n        this['_' + i] = prop;\\n      }\\n    }\\n\\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\\n    // TODO: Remove \\\"ordinalParse\\\" fallback in next major release.\\n\\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\\\d{1,2}/.source);\\n  }\\n\\n  function mergeConfigs(parentConfig, childConfig) {\\n    var res = extend({}, parentConfig),\\n        prop;\\n\\n    for (prop in childConfig) {\\n      if (hasOwnProp(childConfig, prop)) {\\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\\n          res[prop] = {};\\n          extend(res[prop], parentConfig[prop]);\\n          extend(res[prop], childConfig[prop]);\\n        } else if (childConfig[prop] != null) {\\n          res[prop] = childConfig[prop];\\n        } else {\\n          delete res[prop];\\n        }\\n      }\\n    }\\n\\n    for (prop in parentConfig) {\\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\\n        // make sure changes to properties don't modify parent config\\n        res[prop] = extend({}, res[prop]);\\n      }\\n    }\\n\\n    return res;\\n  }\\n\\n  function Locale(config) {\\n    if (config != null) {\\n      this.set(config);\\n    }\\n  }\\n\\n  var keys;\\n\\n  if (Object.keys) {\\n    keys = Object.keys;\\n  } else {\\n    keys = function keys(obj) {\\n      var i,\\n          res = [];\\n\\n      for (i in obj) {\\n        if (hasOwnProp(obj, i)) {\\n          res.push(i);\\n        }\\n      }\\n\\n      return res;\\n    };\\n  }\\n\\n  var defaultCalendar = {\\n    sameDay: '[Today at] LT',\\n    nextDay: '[Tomorrow at] LT',\\n    nextWeek: 'dddd [at] LT',\\n    lastDay: '[Yesterday at] LT',\\n    lastWeek: '[Last] dddd [at] LT',\\n    sameElse: 'L'\\n  };\\n\\n  function calendar(key, mom, now) {\\n    var output = this._calendar[key] || this._calendar['sameElse'];\\n    return isFunction(output) ? output.call(mom, now) : output;\\n  }\\n\\n  var defaultLongDateFormat = {\\n    LTS: 'h:mm:ss A',\\n    LT: 'h:mm A',\\n    L: 'MM/DD/YYYY',\\n    LL: 'MMMM D, YYYY',\\n    LLL: 'MMMM D, YYYY h:mm A',\\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\\n  };\\n\\n  function longDateFormat(key) {\\n    var format = this._longDateFormat[key],\\n        formatUpper = this._longDateFormat[key.toUpperCase()];\\n\\n    if (format || !formatUpper) {\\n      return format;\\n    }\\n\\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\\n      return val.slice(1);\\n    });\\n    return this._longDateFormat[key];\\n  }\\n\\n  var defaultInvalidDate = 'Invalid date';\\n\\n  function invalidDate() {\\n    return this._invalidDate;\\n  }\\n\\n  var defaultOrdinal = '%d';\\n  var defaultDayOfMonthOrdinalParse = /\\\\d{1,2}/;\\n\\n  function ordinal(number) {\\n    return this._ordinal.replace('%d', number);\\n  }\\n\\n  var defaultRelativeTime = {\\n    future: 'in %s',\\n    past: '%s ago',\\n    s: 'a few seconds',\\n    ss: '%d seconds',\\n    m: 'a minute',\\n    mm: '%d minutes',\\n    h: 'an hour',\\n    hh: '%d hours',\\n    d: 'a day',\\n    dd: '%d days',\\n    M: 'a month',\\n    MM: '%d months',\\n    y: 'a year',\\n    yy: '%d years'\\n  };\\n\\n  function relativeTime(number, withoutSuffix, string, isFuture) {\\n    var output = this._relativeTime[string];\\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\\n  }\\n\\n  function pastFuture(diff, output) {\\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\\n  }\\n\\n  var aliases = {};\\n\\n  function addUnitAlias(unit, shorthand) {\\n    var lowerCase = unit.toLowerCase();\\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\\n  }\\n\\n  function normalizeUnits(units) {\\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\\n  }\\n\\n  function normalizeObjectUnits(inputObject) {\\n    var normalizedInput = {},\\n        normalizedProp,\\n        prop;\\n\\n    for (prop in inputObject) {\\n      if (hasOwnProp(inputObject, prop)) {\\n        normalizedProp = normalizeUnits(prop);\\n\\n        if (normalizedProp) {\\n          normalizedInput[normalizedProp] = inputObject[prop];\\n        }\\n      }\\n    }\\n\\n    return normalizedInput;\\n  }\\n\\n  var priorities = {};\\n\\n  function addUnitPriority(unit, priority) {\\n    priorities[unit] = priority;\\n  }\\n\\n  function getPrioritizedUnits(unitsObj) {\\n    var units = [];\\n\\n    for (var u in unitsObj) {\\n      units.push({\\n        unit: u,\\n        priority: priorities[u]\\n      });\\n    }\\n\\n    units.sort(function (a, b) {\\n      return a.priority - b.priority;\\n    });\\n    return units;\\n  }\\n\\n  function zeroFill(number, targetLength, forceSign) {\\n    var absNumber = '' + Math.abs(number),\\n        zerosToFill = targetLength - absNumber.length,\\n        sign = number >= 0;\\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\\n  }\\n\\n  var formattingTokens = /(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\\n  var localFormattingTokens = /(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\\n  var formatFunctions = {};\\n  var formatTokenFunctions = {}; // token:    'M'\\n  // padded:   ['MM', 2]\\n  // ordinal:  'Mo'\\n  // callback: function () { this.month() + 1 }\\n\\n  function addFormatToken(token, padded, ordinal, callback) {\\n    var func = callback;\\n\\n    if (typeof callback === 'string') {\\n      func = function func() {\\n        return this[callback]();\\n      };\\n    }\\n\\n    if (token) {\\n      formatTokenFunctions[token] = func;\\n    }\\n\\n    if (padded) {\\n      formatTokenFunctions[padded[0]] = function () {\\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\\n      };\\n    }\\n\\n    if (ordinal) {\\n      formatTokenFunctions[ordinal] = function () {\\n        return this.localeData().ordinal(func.apply(this, arguments), token);\\n      };\\n    }\\n  }\\n\\n  function removeFormattingTokens(input) {\\n    if (input.match(/\\\\[[\\\\s\\\\S]/)) {\\n      return input.replace(/^\\\\[|\\\\]$/g, '');\\n    }\\n\\n    return input.replace(/\\\\\\\\/g, '');\\n  }\\n\\n  function makeFormatFunction(format) {\\n    var array = format.match(formattingTokens),\\n        i,\\n        length;\\n\\n    for (i = 0, length = array.length; i < length; i++) {\\n      if (formatTokenFunctions[array[i]]) {\\n        array[i] = formatTokenFunctions[array[i]];\\n      } else {\\n        array[i] = removeFormattingTokens(array[i]);\\n      }\\n    }\\n\\n    return function (mom) {\\n      var output = '',\\n          i;\\n\\n      for (i = 0; i < length; i++) {\\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\\n      }\\n\\n      return output;\\n    };\\n  } // format date using native date object\\n\\n\\n  function formatMoment(m, format) {\\n    if (!m.isValid()) {\\n      return m.localeData().invalidDate();\\n    }\\n\\n    format = expandFormat(format, m.localeData());\\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\\n    return formatFunctions[format](m);\\n  }\\n\\n  function expandFormat(format, locale) {\\n    var i = 5;\\n\\n    function replaceLongDateFormatTokens(input) {\\n      return locale.longDateFormat(input) || input;\\n    }\\n\\n    localFormattingTokens.lastIndex = 0;\\n\\n    while (i >= 0 && localFormattingTokens.test(format)) {\\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\\n      localFormattingTokens.lastIndex = 0;\\n      i -= 1;\\n    }\\n\\n    return format;\\n  }\\n\\n  var match1 = /\\\\d/; //       0 - 9\\n\\n  var match2 = /\\\\d\\\\d/; //      00 - 99\\n\\n  var match3 = /\\\\d{3}/; //     000 - 999\\n\\n  var match4 = /\\\\d{4}/; //    0000 - 9999\\n\\n  var match6 = /[+-]?\\\\d{6}/; // -999999 - 999999\\n\\n  var match1to2 = /\\\\d\\\\d?/; //       0 - 99\\n\\n  var match3to4 = /\\\\d\\\\d\\\\d\\\\d?/; //     999 - 9999\\n\\n  var match5to6 = /\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d?/; //   99999 - 999999\\n\\n  var match1to3 = /\\\\d{1,3}/; //       0 - 999\\n\\n  var match1to4 = /\\\\d{1,4}/; //       0 - 9999\\n\\n  var match1to6 = /[+-]?\\\\d{1,6}/; // -999999 - 999999\\n\\n  var matchUnsigned = /\\\\d+/; //       0 - inf\\n\\n  var matchSigned = /[+-]?\\\\d+/; //    -inf - inf\\n\\n  var matchOffset = /Z|[+-]\\\\d\\\\d:?\\\\d\\\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\\n\\n  var matchShortOffset = /Z|[+-]\\\\d\\\\d(?::?\\\\d\\\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\\n\\n  var matchTimestamp = /[+-]?\\\\d+(\\\\.\\\\d{1,3})?/; // 123456789 123456789.123\\n  // any word (or two) characters or numbers including two/three word month in arabic.\\n  // includes scottish gaelic two word and hyphenated months\\n\\n  var matchWord = /[0-9]{0,256}['a-z\\\\u00A0-\\\\u05FF\\\\u0700-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFF07\\\\uFF10-\\\\uFFEF]{1,256}|[\\\\u0600-\\\\u06FF\\\\/]{1,256}(\\\\s*?[\\\\u0600-\\\\u06FF]{1,256}){1,2}/i;\\n  var regexes = {};\\n\\n  function addRegexToken(token, regex, strictRegex) {\\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\\n      return isStrict && strictRegex ? strictRegex : regex;\\n    };\\n  }\\n\\n  function getParseRegexForToken(token, config) {\\n    if (!hasOwnProp(regexes, token)) {\\n      return new RegExp(unescapeFormat(token));\\n    }\\n\\n    return regexes[token](config._strict, config._locale);\\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\\n\\n\\n  function unescapeFormat(s) {\\n    return regexEscape(s.replace('\\\\\\\\', '').replace(/\\\\\\\\(\\\\[)|\\\\\\\\(\\\\])|\\\\[([^\\\\]\\\\[]*)\\\\]|\\\\\\\\(.)/g, function (matched, p1, p2, p3, p4) {\\n      return p1 || p2 || p3 || p4;\\n    }));\\n  }\\n\\n  function regexEscape(s) {\\n    return s.replace(/[-\\\\/\\\\\\\\^$*+?.()|[\\\\]{}]/g, '\\\\\\\\$&');\\n  }\\n\\n  var tokens = {};\\n\\n  function addParseToken(token, callback) {\\n    var i,\\n        func = callback;\\n\\n    if (typeof token === 'string') {\\n      token = [token];\\n    }\\n\\n    if (isNumber(callback)) {\\n      func = function func(input, array) {\\n        array[callback] = toInt(input);\\n      };\\n    }\\n\\n    for (i = 0; i < token.length; i++) {\\n      tokens[token[i]] = func;\\n    }\\n  }\\n\\n  function addWeekParseToken(token, callback) {\\n    addParseToken(token, function (input, array, config, token) {\\n      config._w = config._w || {};\\n      callback(input, config._w, config, token);\\n    });\\n  }\\n\\n  function addTimeToArrayFromToken(token, input, config) {\\n    if (input != null && hasOwnProp(tokens, token)) {\\n      tokens[token](input, config._a, config, token);\\n    }\\n  }\\n\\n  var YEAR = 0;\\n  var MONTH = 1;\\n  var DATE = 2;\\n  var HOUR = 3;\\n  var MINUTE = 4;\\n  var SECOND = 5;\\n  var MILLISECOND = 6;\\n  var WEEK = 7;\\n  var WEEKDAY = 8; // FORMATTING\\n\\n  addFormatToken('Y', 0, 0, function () {\\n    var y = this.year();\\n    return y <= 9999 ? '' + y : '+' + y;\\n  });\\n  addFormatToken(0, ['YY', 2], 0, function () {\\n    return this.year() % 100;\\n  });\\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\\n\\n  addUnitAlias('year', 'y'); // PRIORITIES\\n\\n  addUnitPriority('year', 1); // PARSING\\n\\n  addRegexToken('Y', matchSigned);\\n  addRegexToken('YY', match1to2, match2);\\n  addRegexToken('YYYY', match1to4, match4);\\n  addRegexToken('YYYYY', match1to6, match6);\\n  addRegexToken('YYYYYY', match1to6, match6);\\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\\n  addParseToken('YYYY', function (input, array) {\\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\\n  });\\n  addParseToken('YY', function (input, array) {\\n    array[YEAR] = hooks.parseTwoDigitYear(input);\\n  });\\n  addParseToken('Y', function (input, array) {\\n    array[YEAR] = parseInt(input, 10);\\n  }); // HELPERS\\n\\n  function daysInYear(year) {\\n    return isLeapYear(year) ? 366 : 365;\\n  }\\n\\n  function isLeapYear(year) {\\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\\n  } // HOOKS\\n\\n\\n  hooks.parseTwoDigitYear = function (input) {\\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\\n  }; // MOMENTS\\n\\n\\n  var getSetYear = makeGetSet('FullYear', true);\\n\\n  function getIsLeapYear() {\\n    return isLeapYear(this.year());\\n  }\\n\\n  function makeGetSet(unit, keepTime) {\\n    return function (value) {\\n      if (value != null) {\\n        set$1(this, unit, value);\\n        hooks.updateOffset(this, keepTime);\\n        return this;\\n      } else {\\n        return get(this, unit);\\n      }\\n    };\\n  }\\n\\n  function get(mom, unit) {\\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\\n  }\\n\\n  function set$1(mom, unit, value) {\\n    if (mom.isValid() && !isNaN(value)) {\\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\\n      } else {\\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\\n      }\\n    }\\n  } // MOMENTS\\n\\n\\n  function stringGet(units) {\\n    units = normalizeUnits(units);\\n\\n    if (isFunction(this[units])) {\\n      return this[units]();\\n    }\\n\\n    return this;\\n  }\\n\\n  function stringSet(units, value) {\\n    if (typeof units === 'object') {\\n      units = normalizeObjectUnits(units);\\n      var prioritized = getPrioritizedUnits(units);\\n\\n      for (var i = 0; i < prioritized.length; i++) {\\n        this[prioritized[i].unit](units[prioritized[i].unit]);\\n      }\\n    } else {\\n      units = normalizeUnits(units);\\n\\n      if (isFunction(this[units])) {\\n        return this[units](value);\\n      }\\n    }\\n\\n    return this;\\n  }\\n\\n  function mod(n, x) {\\n    return (n % x + x) % x;\\n  }\\n\\n  var indexOf;\\n\\n  if (Array.prototype.indexOf) {\\n    indexOf = Array.prototype.indexOf;\\n  } else {\\n    indexOf = function indexOf(o) {\\n      // I know\\n      var i;\\n\\n      for (i = 0; i < this.length; ++i) {\\n        if (this[i] === o) {\\n          return i;\\n        }\\n      }\\n\\n      return -1;\\n    };\\n  }\\n\\n  function daysInMonth(year, month) {\\n    if (isNaN(year) || isNaN(month)) {\\n      return NaN;\\n    }\\n\\n    var modMonth = mod(month, 12);\\n    year += (month - modMonth) / 12;\\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\\n  } // FORMATTING\\n\\n\\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\\n    return this.month() + 1;\\n  });\\n  addFormatToken('MMM', 0, 0, function (format) {\\n    return this.localeData().monthsShort(this, format);\\n  });\\n  addFormatToken('MMMM', 0, 0, function (format) {\\n    return this.localeData().months(this, format);\\n  }); // ALIASES\\n\\n  addUnitAlias('month', 'M'); // PRIORITY\\n\\n  addUnitPriority('month', 8); // PARSING\\n\\n  addRegexToken('M', match1to2);\\n  addRegexToken('MM', match1to2, match2);\\n  addRegexToken('MMM', function (isStrict, locale) {\\n    return locale.monthsShortRegex(isStrict);\\n  });\\n  addRegexToken('MMMM', function (isStrict, locale) {\\n    return locale.monthsRegex(isStrict);\\n  });\\n  addParseToken(['M', 'MM'], function (input, array) {\\n    array[MONTH] = toInt(input) - 1;\\n  });\\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\\n\\n\\n    if (month != null) {\\n      array[MONTH] = month;\\n    } else {\\n      getParsingFlags(config).invalidMonth = input;\\n    }\\n  }); // LOCALES\\n\\n  var MONTHS_IN_FORMAT = /D[oD]?(\\\\[[^\\\\[\\\\]]*\\\\]|\\\\s)+MMMM?/;\\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\\n\\n  function localeMonths(m, format) {\\n    if (!m) {\\n      return isArray(this._months) ? this._months : this._months['standalone'];\\n    }\\n\\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\\n  }\\n\\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\\n\\n  function localeMonthsShort(m, format) {\\n    if (!m) {\\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\\n    }\\n\\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\\n  }\\n\\n  function handleStrictParse(monthName, format, strict) {\\n    var i,\\n        ii,\\n        mom,\\n        llc = monthName.toLocaleLowerCase();\\n\\n    if (!this._monthsParse) {\\n      // this is not used\\n      this._monthsParse = [];\\n      this._longMonthsParse = [];\\n      this._shortMonthsParse = [];\\n\\n      for (i = 0; i < 12; ++i) {\\n        mom = createUTC([2000, i]);\\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\\n      }\\n    }\\n\\n    if (strict) {\\n      if (format === 'MMM') {\\n        ii = indexOf.call(this._shortMonthsParse, llc);\\n        return ii !== -1 ? ii : null;\\n      } else {\\n        ii = indexOf.call(this._longMonthsParse, llc);\\n        return ii !== -1 ? ii : null;\\n      }\\n    } else {\\n      if (format === 'MMM') {\\n        ii = indexOf.call(this._shortMonthsParse, llc);\\n\\n        if (ii !== -1) {\\n          return ii;\\n        }\\n\\n        ii = indexOf.call(this._longMonthsParse, llc);\\n        return ii !== -1 ? ii : null;\\n      } else {\\n        ii = indexOf.call(this._longMonthsParse, llc);\\n\\n        if (ii !== -1) {\\n          return ii;\\n        }\\n\\n        ii = indexOf.call(this._shortMonthsParse, llc);\\n        return ii !== -1 ? ii : null;\\n      }\\n    }\\n  }\\n\\n  function localeMonthsParse(monthName, format, strict) {\\n    var i, mom, regex;\\n\\n    if (this._monthsParseExact) {\\n      return handleStrictParse.call(this, monthName, format, strict);\\n    }\\n\\n    if (!this._monthsParse) {\\n      this._monthsParse = [];\\n      this._longMonthsParse = [];\\n      this._shortMonthsParse = [];\\n    } // TODO: add sorting\\n    // Sorting makes sure if one month (or abbr) is a prefix of another\\n    // see sorting in computeMonthsParse\\n\\n\\n    for (i = 0; i < 12; i++) {\\n      // make the regex if we don't have it already\\n      mom = createUTC([2000, i]);\\n\\n      if (strict && !this._longMonthsParse[i]) {\\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\\n      }\\n\\n      if (!strict && !this._monthsParse[i]) {\\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\\n      } // test the regex\\n\\n\\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\\n        return i;\\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\\n        return i;\\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\\n        return i;\\n      }\\n    }\\n  } // MOMENTS\\n\\n\\n  function setMonth(mom, value) {\\n    var dayOfMonth;\\n\\n    if (!mom.isValid()) {\\n      // No op\\n      return mom;\\n    }\\n\\n    if (typeof value === 'string') {\\n      if (/^\\\\d+$/.test(value)) {\\n        value = toInt(value);\\n      } else {\\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\\n\\n        if (!isNumber(value)) {\\n          return mom;\\n        }\\n      }\\n    }\\n\\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\\n\\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\\n\\n    return mom;\\n  }\\n\\n  function getSetMonth(value) {\\n    if (value != null) {\\n      setMonth(this, value);\\n      hooks.updateOffset(this, true);\\n      return this;\\n    } else {\\n      return get(this, 'Month');\\n    }\\n  }\\n\\n  function getDaysInMonth() {\\n    return daysInMonth(this.year(), this.month());\\n  }\\n\\n  var defaultMonthsShortRegex = matchWord;\\n\\n  function monthsShortRegex(isStrict) {\\n    if (this._monthsParseExact) {\\n      if (!hasOwnProp(this, '_monthsRegex')) {\\n        computeMonthsParse.call(this);\\n      }\\n\\n      if (isStrict) {\\n        return this._monthsShortStrictRegex;\\n      } else {\\n        return this._monthsShortRegex;\\n      }\\n    } else {\\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\\n        this._monthsShortRegex = defaultMonthsShortRegex;\\n      }\\n\\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\\n    }\\n  }\\n\\n  var defaultMonthsRegex = matchWord;\\n\\n  function monthsRegex(isStrict) {\\n    if (this._monthsParseExact) {\\n      if (!hasOwnProp(this, '_monthsRegex')) {\\n        computeMonthsParse.call(this);\\n      }\\n\\n      if (isStrict) {\\n        return this._monthsStrictRegex;\\n      } else {\\n        return this._monthsRegex;\\n      }\\n    } else {\\n      if (!hasOwnProp(this, '_monthsRegex')) {\\n        this._monthsRegex = defaultMonthsRegex;\\n      }\\n\\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\\n    }\\n  }\\n\\n  function computeMonthsParse() {\\n    function cmpLenRev(a, b) {\\n      return b.length - a.length;\\n    }\\n\\n    var shortPieces = [],\\n        longPieces = [],\\n        mixedPieces = [],\\n        i,\\n        mom;\\n\\n    for (i = 0; i < 12; i++) {\\n      // make the regex if we don't have it already\\n      mom = createUTC([2000, i]);\\n      shortPieces.push(this.monthsShort(mom, ''));\\n      longPieces.push(this.months(mom, ''));\\n      mixedPieces.push(this.months(mom, ''));\\n      mixedPieces.push(this.monthsShort(mom, ''));\\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\\n    // will match the longer piece.\\n\\n\\n    shortPieces.sort(cmpLenRev);\\n    longPieces.sort(cmpLenRev);\\n    mixedPieces.sort(cmpLenRev);\\n\\n    for (i = 0; i < 12; i++) {\\n      shortPieces[i] = regexEscape(shortPieces[i]);\\n      longPieces[i] = regexEscape(longPieces[i]);\\n    }\\n\\n    for (i = 0; i < 24; i++) {\\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\\n    }\\n\\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\\n    this._monthsShortRegex = this._monthsRegex;\\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\\n  }\\n\\n  function createDate(y, m, d, h, M, s, ms) {\\n    // can't just apply() to create a date:\\n    // https://stackoverflow.com/q/181348\\n    var date; // the date constructor remaps years 0-99 to 1900-1999\\n\\n    if (y < 100 && y >= 0) {\\n      // preserve leap years using a full 400 year cycle, then reset\\n      date = new Date(y + 400, m, d, h, M, s, ms);\\n\\n      if (isFinite(date.getFullYear())) {\\n        date.setFullYear(y);\\n      }\\n    } else {\\n      date = new Date(y, m, d, h, M, s, ms);\\n    }\\n\\n    return date;\\n  }\\n\\n  function createUTCDate(y) {\\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\\n\\n    if (y < 100 && y >= 0) {\\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\\n\\n      args[0] = y + 400;\\n      date = new Date(Date.UTC.apply(null, args));\\n\\n      if (isFinite(date.getUTCFullYear())) {\\n        date.setUTCFullYear(y);\\n      }\\n    } else {\\n      date = new Date(Date.UTC.apply(null, arguments));\\n    }\\n\\n    return date;\\n  } // start-of-first-week - start-of-year\\n\\n\\n  function firstWeekOffset(year, dow, doy) {\\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\\n    fwd = 7 + dow - doy,\\n        // first-week day local weekday -- which local weekday is fwd\\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\\n    return -fwdlw + fwd - 1;\\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\\n\\n\\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\\n    var localWeekday = (7 + weekday - dow) % 7,\\n        weekOffset = firstWeekOffset(year, dow, doy),\\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\\n        resYear,\\n        resDayOfYear;\\n\\n    if (dayOfYear <= 0) {\\n      resYear = year - 1;\\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\\n    } else if (dayOfYear > daysInYear(year)) {\\n      resYear = year + 1;\\n      resDayOfYear = dayOfYear - daysInYear(year);\\n    } else {\\n      resYear = year;\\n      resDayOfYear = dayOfYear;\\n    }\\n\\n    return {\\n      year: resYear,\\n      dayOfYear: resDayOfYear\\n    };\\n  }\\n\\n  function weekOfYear(mom, dow, doy) {\\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\\n        resWeek,\\n        resYear;\\n\\n    if (week < 1) {\\n      resYear = mom.year() - 1;\\n      resWeek = week + weeksInYear(resYear, dow, doy);\\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\\n      resYear = mom.year() + 1;\\n    } else {\\n      resYear = mom.year();\\n      resWeek = week;\\n    }\\n\\n    return {\\n      week: resWeek,\\n      year: resYear\\n    };\\n  }\\n\\n  function weeksInYear(year, dow, doy) {\\n    var weekOffset = firstWeekOffset(year, dow, doy),\\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\\n  } // FORMATTING\\n\\n\\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\\n\\n  addUnitAlias('week', 'w');\\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\\n\\n  addUnitPriority('week', 5);\\n  addUnitPriority('isoWeek', 5); // PARSING\\n\\n  addRegexToken('w', match1to2);\\n  addRegexToken('ww', match1to2, match2);\\n  addRegexToken('W', match1to2);\\n  addRegexToken('WW', match1to2, match2);\\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\\n    week[token.substr(0, 1)] = toInt(input);\\n  }); // HELPERS\\n  // LOCALES\\n\\n  function localeWeek(mom) {\\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\\n  }\\n\\n  var defaultLocaleWeek = {\\n    dow: 0,\\n    // Sunday is the first day of the week.\\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\\n\\n  };\\n\\n  function localeFirstDayOfWeek() {\\n    return this._week.dow;\\n  }\\n\\n  function localeFirstDayOfYear() {\\n    return this._week.doy;\\n  } // MOMENTS\\n\\n\\n  function getSetWeek(input) {\\n    var week = this.localeData().week(this);\\n    return input == null ? week : this.add((input - week) * 7, 'd');\\n  }\\n\\n  function getSetISOWeek(input) {\\n    var week = weekOfYear(this, 1, 4).week;\\n    return input == null ? week : this.add((input - week) * 7, 'd');\\n  } // FORMATTING\\n\\n\\n  addFormatToken('d', 0, 'do', 'day');\\n  addFormatToken('dd', 0, 0, function (format) {\\n    return this.localeData().weekdaysMin(this, format);\\n  });\\n  addFormatToken('ddd', 0, 0, function (format) {\\n    return this.localeData().weekdaysShort(this, format);\\n  });\\n  addFormatToken('dddd', 0, 0, function (format) {\\n    return this.localeData().weekdays(this, format);\\n  });\\n  addFormatToken('e', 0, 0, 'weekday');\\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\\n\\n  addUnitAlias('day', 'd');\\n  addUnitAlias('weekday', 'e');\\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\\n\\n  addUnitPriority('day', 11);\\n  addUnitPriority('weekday', 11);\\n  addUnitPriority('isoWeekday', 11); // PARSING\\n\\n  addRegexToken('d', match1to2);\\n  addRegexToken('e', match1to2);\\n  addRegexToken('E', match1to2);\\n  addRegexToken('dd', function (isStrict, locale) {\\n    return locale.weekdaysMinRegex(isStrict);\\n  });\\n  addRegexToken('ddd', function (isStrict, locale) {\\n    return locale.weekdaysShortRegex(isStrict);\\n  });\\n  addRegexToken('dddd', function (isStrict, locale) {\\n    return locale.weekdaysRegex(isStrict);\\n  });\\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\\n\\n\\n    if (weekday != null) {\\n      week.d = weekday;\\n    } else {\\n      getParsingFlags(config).invalidWeekday = input;\\n    }\\n  });\\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\\n    week[token] = toInt(input);\\n  }); // HELPERS\\n\\n  function parseWeekday(input, locale) {\\n    if (typeof input !== 'string') {\\n      return input;\\n    }\\n\\n    if (!isNaN(input)) {\\n      return parseInt(input, 10);\\n    }\\n\\n    input = locale.weekdaysParse(input);\\n\\n    if (typeof input === 'number') {\\n      return input;\\n    }\\n\\n    return null;\\n  }\\n\\n  function parseIsoWeekday(input, locale) {\\n    if (typeof input === 'string') {\\n      return locale.weekdaysParse(input) % 7 || 7;\\n    }\\n\\n    return isNaN(input) ? null : input;\\n  } // LOCALES\\n\\n\\n  function shiftWeekdays(ws, n) {\\n    return ws.slice(n, 7).concat(ws.slice(0, n));\\n  }\\n\\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\\n\\n  function localeWeekdays(m, format) {\\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\\n  }\\n\\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\\n\\n  function localeWeekdaysShort(m) {\\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\\n  }\\n\\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\\n\\n  function localeWeekdaysMin(m) {\\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\\n  }\\n\\n  function handleStrictParse$1(weekdayName, format, strict) {\\n    var i,\\n        ii,\\n        mom,\\n        llc = weekdayName.toLocaleLowerCase();\\n\\n    if (!this._weekdaysParse) {\\n      this._weekdaysParse = [];\\n      this._shortWeekdaysParse = [];\\n      this._minWeekdaysParse = [];\\n\\n      for (i = 0; i < 7; ++i) {\\n        mom = createUTC([2000, 1]).day(i);\\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\\n      }\\n    }\\n\\n    if (strict) {\\n      if (format === 'dddd') {\\n        ii = indexOf.call(this._weekdaysParse, llc);\\n        return ii !== -1 ? ii : null;\\n      } else if (format === 'ddd') {\\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\\n        return ii !== -1 ? ii : null;\\n      } else {\\n        ii = indexOf.call(this._minWeekdaysParse, llc);\\n        return ii !== -1 ? ii : null;\\n      }\\n    } else {\\n      if (format === 'dddd') {\\n        ii = indexOf.call(this._weekdaysParse, llc);\\n\\n        if (ii !== -1) {\\n          return ii;\\n        }\\n\\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\\n\\n        if (ii !== -1) {\\n          return ii;\\n        }\\n\\n        ii = indexOf.call(this._minWeekdaysParse, llc);\\n        return ii !== -1 ? ii : null;\\n      } else if (format === 'ddd') {\\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\\n\\n        if (ii !== -1) {\\n          return ii;\\n        }\\n\\n        ii = indexOf.call(this._weekdaysParse, llc);\\n\\n        if (ii !== -1) {\\n          return ii;\\n        }\\n\\n        ii = indexOf.call(this._minWeekdaysParse, llc);\\n        return ii !== -1 ? ii : null;\\n      } else {\\n        ii = indexOf.call(this._minWeekdaysParse, llc);\\n\\n        if (ii !== -1) {\\n          return ii;\\n        }\\n\\n        ii = indexOf.call(this._weekdaysParse, llc);\\n\\n        if (ii !== -1) {\\n          return ii;\\n        }\\n\\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\\n        return ii !== -1 ? ii : null;\\n      }\\n    }\\n  }\\n\\n  function localeWeekdaysParse(weekdayName, format, strict) {\\n    var i, mom, regex;\\n\\n    if (this._weekdaysParseExact) {\\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\\n    }\\n\\n    if (!this._weekdaysParse) {\\n      this._weekdaysParse = [];\\n      this._minWeekdaysParse = [];\\n      this._shortWeekdaysParse = [];\\n      this._fullWeekdaysParse = [];\\n    }\\n\\n    for (i = 0; i < 7; i++) {\\n      // make the regex if we don't have it already\\n      mom = createUTC([2000, 1]).day(i);\\n\\n      if (strict && !this._fullWeekdaysParse[i]) {\\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\\\\\.?') + '$', 'i');\\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\\\\\.?') + '$', 'i');\\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\\\\\.?') + '$', 'i');\\n      }\\n\\n      if (!this._weekdaysParse[i]) {\\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\\n      } // test the regex\\n\\n\\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\\n        return i;\\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\\n        return i;\\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\\n        return i;\\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\\n        return i;\\n      }\\n    }\\n  } // MOMENTS\\n\\n\\n  function getSetDayOfWeek(input) {\\n    if (!this.isValid()) {\\n      return input != null ? this : NaN;\\n    }\\n\\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\\n\\n    if (input != null) {\\n      input = parseWeekday(input, this.localeData());\\n      return this.add(input - day, 'd');\\n    } else {\\n      return day;\\n    }\\n  }\\n\\n  function getSetLocaleDayOfWeek(input) {\\n    if (!this.isValid()) {\\n      return input != null ? this : NaN;\\n    }\\n\\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\\n    return input == null ? weekday : this.add(input - weekday, 'd');\\n  }\\n\\n  function getSetISODayOfWeek(input) {\\n    if (!this.isValid()) {\\n      return input != null ? this : NaN;\\n    } // behaves the same as moment#day except\\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\\n    // as a setter, sunday should belong to the previous week.\\n\\n\\n    if (input != null) {\\n      var weekday = parseIsoWeekday(input, this.localeData());\\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\\n    } else {\\n      return this.day() || 7;\\n    }\\n  }\\n\\n  var defaultWeekdaysRegex = matchWord;\\n\\n  function weekdaysRegex(isStrict) {\\n    if (this._weekdaysParseExact) {\\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\\n        computeWeekdaysParse.call(this);\\n      }\\n\\n      if (isStrict) {\\n        return this._weekdaysStrictRegex;\\n      } else {\\n        return this._weekdaysRegex;\\n      }\\n    } else {\\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\\n        this._weekdaysRegex = defaultWeekdaysRegex;\\n      }\\n\\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\\n    }\\n  }\\n\\n  var defaultWeekdaysShortRegex = matchWord;\\n\\n  function weekdaysShortRegex(isStrict) {\\n    if (this._weekdaysParseExact) {\\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\\n        computeWeekdaysParse.call(this);\\n      }\\n\\n      if (isStrict) {\\n        return this._weekdaysShortStrictRegex;\\n      } else {\\n        return this._weekdaysShortRegex;\\n      }\\n    } else {\\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\\n      }\\n\\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\\n    }\\n  }\\n\\n  var defaultWeekdaysMinRegex = matchWord;\\n\\n  function weekdaysMinRegex(isStrict) {\\n    if (this._weekdaysParseExact) {\\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\\n        computeWeekdaysParse.call(this);\\n      }\\n\\n      if (isStrict) {\\n        return this._weekdaysMinStrictRegex;\\n      } else {\\n        return this._weekdaysMinRegex;\\n      }\\n    } else {\\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\\n      }\\n\\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\\n    }\\n  }\\n\\n  function computeWeekdaysParse() {\\n    function cmpLenRev(a, b) {\\n      return b.length - a.length;\\n    }\\n\\n    var minPieces = [],\\n        shortPieces = [],\\n        longPieces = [],\\n        mixedPieces = [],\\n        i,\\n        mom,\\n        minp,\\n        shortp,\\n        longp;\\n\\n    for (i = 0; i < 7; i++) {\\n      // make the regex if we don't have it already\\n      mom = createUTC([2000, 1]).day(i);\\n      minp = this.weekdaysMin(mom, '');\\n      shortp = this.weekdaysShort(mom, '');\\n      longp = this.weekdays(mom, '');\\n      minPieces.push(minp);\\n      shortPieces.push(shortp);\\n      longPieces.push(longp);\\n      mixedPieces.push(minp);\\n      mixedPieces.push(shortp);\\n      mixedPieces.push(longp);\\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\\n    // will match the longer piece.\\n\\n\\n    minPieces.sort(cmpLenRev);\\n    shortPieces.sort(cmpLenRev);\\n    longPieces.sort(cmpLenRev);\\n    mixedPieces.sort(cmpLenRev);\\n\\n    for (i = 0; i < 7; i++) {\\n      shortPieces[i] = regexEscape(shortPieces[i]);\\n      longPieces[i] = regexEscape(longPieces[i]);\\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\\n    }\\n\\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\\n    this._weekdaysShortRegex = this._weekdaysRegex;\\n    this._weekdaysMinRegex = this._weekdaysRegex;\\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\\n  } // FORMATTING\\n\\n\\n  function hFormat() {\\n    return this.hours() % 12 || 12;\\n  }\\n\\n  function kFormat() {\\n    return this.hours() || 24;\\n  }\\n\\n  addFormatToken('H', ['HH', 2], 0, 'hour');\\n  addFormatToken('h', ['hh', 2], 0, hFormat);\\n  addFormatToken('k', ['kk', 2], 0, kFormat);\\n  addFormatToken('hmm', 0, 0, function () {\\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\\n  });\\n  addFormatToken('hmmss', 0, 0, function () {\\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\\n  });\\n  addFormatToken('Hmm', 0, 0, function () {\\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\\n  });\\n  addFormatToken('Hmmss', 0, 0, function () {\\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\\n  });\\n\\n  function meridiem(token, lowercase) {\\n    addFormatToken(token, 0, 0, function () {\\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\\n    });\\n  }\\n\\n  meridiem('a', true);\\n  meridiem('A', false); // ALIASES\\n\\n  addUnitAlias('hour', 'h'); // PRIORITY\\n\\n  addUnitPriority('hour', 13); // PARSING\\n\\n  function matchMeridiem(isStrict, locale) {\\n    return locale._meridiemParse;\\n  }\\n\\n  addRegexToken('a', matchMeridiem);\\n  addRegexToken('A', matchMeridiem);\\n  addRegexToken('H', match1to2);\\n  addRegexToken('h', match1to2);\\n  addRegexToken('k', match1to2);\\n  addRegexToken('HH', match1to2, match2);\\n  addRegexToken('hh', match1to2, match2);\\n  addRegexToken('kk', match1to2, match2);\\n  addRegexToken('hmm', match3to4);\\n  addRegexToken('hmmss', match5to6);\\n  addRegexToken('Hmm', match3to4);\\n  addRegexToken('Hmmss', match5to6);\\n  addParseToken(['H', 'HH'], HOUR);\\n  addParseToken(['k', 'kk'], function (input, array, config) {\\n    var kInput = toInt(input);\\n    array[HOUR] = kInput === 24 ? 0 : kInput;\\n  });\\n  addParseToken(['a', 'A'], function (input, array, config) {\\n    config._isPm = config._locale.isPM(input);\\n    config._meridiem = input;\\n  });\\n  addParseToken(['h', 'hh'], function (input, array, config) {\\n    array[HOUR] = toInt(input);\\n    getParsingFlags(config).bigHour = true;\\n  });\\n  addParseToken('hmm', function (input, array, config) {\\n    var pos = input.length - 2;\\n    array[HOUR] = toInt(input.substr(0, pos));\\n    array[MINUTE] = toInt(input.substr(pos));\\n    getParsingFlags(config).bigHour = true;\\n  });\\n  addParseToken('hmmss', function (input, array, config) {\\n    var pos1 = input.length - 4;\\n    var pos2 = input.length - 2;\\n    array[HOUR] = toInt(input.substr(0, pos1));\\n    array[MINUTE] = toInt(input.substr(pos1, 2));\\n    array[SECOND] = toInt(input.substr(pos2));\\n    getParsingFlags(config).bigHour = true;\\n  });\\n  addParseToken('Hmm', function (input, array, config) {\\n    var pos = input.length - 2;\\n    array[HOUR] = toInt(input.substr(0, pos));\\n    array[MINUTE] = toInt(input.substr(pos));\\n  });\\n  addParseToken('Hmmss', function (input, array, config) {\\n    var pos1 = input.length - 4;\\n    var pos2 = input.length - 2;\\n    array[HOUR] = toInt(input.substr(0, pos1));\\n    array[MINUTE] = toInt(input.substr(pos1, 2));\\n    array[SECOND] = toInt(input.substr(pos2));\\n  }); // LOCALES\\n\\n  function localeIsPM(input) {\\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\\n    // Using charAt should be more compatible.\\n    return (input + '').toLowerCase().charAt(0) === 'p';\\n  }\\n\\n  var defaultLocaleMeridiemParse = /[ap]\\\\.?m?\\\\.?/i;\\n\\n  function localeMeridiem(hours, minutes, isLower) {\\n    if (hours > 11) {\\n      return isLower ? 'pm' : 'PM';\\n    } else {\\n      return isLower ? 'am' : 'AM';\\n    }\\n  } // MOMENTS\\n  // Setting the hour should keep the time, because the user explicitly\\n  // specified which hour they want. So trying to maintain the same hour (in\\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\\n  // this rule.\\n\\n\\n  var getSetHour = makeGetSet('Hours', true);\\n  var baseConfig = {\\n    calendar: defaultCalendar,\\n    longDateFormat: defaultLongDateFormat,\\n    invalidDate: defaultInvalidDate,\\n    ordinal: defaultOrdinal,\\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\\n    relativeTime: defaultRelativeTime,\\n    months: defaultLocaleMonths,\\n    monthsShort: defaultLocaleMonthsShort,\\n    week: defaultLocaleWeek,\\n    weekdays: defaultLocaleWeekdays,\\n    weekdaysMin: defaultLocaleWeekdaysMin,\\n    weekdaysShort: defaultLocaleWeekdaysShort,\\n    meridiemParse: defaultLocaleMeridiemParse\\n  }; // internal storage for locale config files\\n\\n  var locales = {};\\n  var localeFamilies = {};\\n  var globalLocale;\\n\\n  function normalizeLocale(key) {\\n    return key ? key.toLowerCase().replace('_', '-') : key;\\n  } // pick the locale from the array\\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\\n\\n\\n  function chooseLocale(names) {\\n    var i = 0,\\n        j,\\n        next,\\n        locale,\\n        split;\\n\\n    while (i < names.length) {\\n      split = normalizeLocale(names[i]).split('-');\\n      j = split.length;\\n      next = normalizeLocale(names[i + 1]);\\n      next = next ? next.split('-') : null;\\n\\n      while (j > 0) {\\n        locale = loadLocale(split.slice(0, j).join('-'));\\n\\n        if (locale) {\\n          return locale;\\n        }\\n\\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\\n          //the next array item is better than a shallower substring of this one\\n          break;\\n        }\\n\\n        j--;\\n      }\\n\\n      i++;\\n    }\\n\\n    return globalLocale;\\n  }\\n\\n  function loadLocale(name) {\\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\\n\\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\\n      try {\\n        oldLocale = globalLocale._abbr;\\n        var aliasedRequire = require;\\n        aliasedRequire('./locale/' + name);\\n        getSetGlobalLocale(oldLocale);\\n      } catch (e) {}\\n    }\\n\\n    return locales[name];\\n  } // This function will load locale and then set the global locale.  If\\n  // no arguments are passed in, it will simply return the current global\\n  // locale key.\\n\\n\\n  function getSetGlobalLocale(key, values) {\\n    var data;\\n\\n    if (key) {\\n      if (isUndefined(values)) {\\n        data = getLocale(key);\\n      } else {\\n        data = defineLocale(key, values);\\n      }\\n\\n      if (data) {\\n        // moment.duration._locale = moment._locale = data;\\n        globalLocale = data;\\n      } else {\\n        if (typeof console !== 'undefined' && console.warn) {\\n          //warn user if arguments are passed but the locale could not be set\\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\\n        }\\n      }\\n    }\\n\\n    return globalLocale._abbr;\\n  }\\n\\n  function defineLocale(name, config) {\\n    if (config !== null) {\\n      var locale,\\n          parentConfig = baseConfig;\\n      config.abbr = name;\\n\\n      if (locales[name] != null) {\\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\\n        parentConfig = locales[name]._config;\\n      } else if (config.parentLocale != null) {\\n        if (locales[config.parentLocale] != null) {\\n          parentConfig = locales[config.parentLocale]._config;\\n        } else {\\n          locale = loadLocale(config.parentLocale);\\n\\n          if (locale != null) {\\n            parentConfig = locale._config;\\n          } else {\\n            if (!localeFamilies[config.parentLocale]) {\\n              localeFamilies[config.parentLocale] = [];\\n            }\\n\\n            localeFamilies[config.parentLocale].push({\\n              name: name,\\n              config: config\\n            });\\n            return null;\\n          }\\n        }\\n      }\\n\\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\\n\\n      if (localeFamilies[name]) {\\n        localeFamilies[name].forEach(function (x) {\\n          defineLocale(x.name, x.config);\\n        });\\n      } // backwards compat for now: also set the locale\\n      // make sure we set the locale AFTER all child locales have been\\n      // created, so we won't end up with the child locale set.\\n\\n\\n      getSetGlobalLocale(name);\\n      return locales[name];\\n    } else {\\n      // useful for testing\\n      delete locales[name];\\n      return null;\\n    }\\n  }\\n\\n  function updateLocale(name, config) {\\n    if (config != null) {\\n      var locale,\\n          tmpLocale,\\n          parentConfig = baseConfig; // MERGE\\n\\n      tmpLocale = loadLocale(name);\\n\\n      if (tmpLocale != null) {\\n        parentConfig = tmpLocale._config;\\n      }\\n\\n      config = mergeConfigs(parentConfig, config);\\n      locale = new Locale(config);\\n      locale.parentLocale = locales[name];\\n      locales[name] = locale; // backwards compat for now: also set the locale\\n\\n      getSetGlobalLocale(name);\\n    } else {\\n      // pass null for config to unupdate, useful for tests\\n      if (locales[name] != null) {\\n        if (locales[name].parentLocale != null) {\\n          locales[name] = locales[name].parentLocale;\\n        } else if (locales[name] != null) {\\n          delete locales[name];\\n        }\\n      }\\n    }\\n\\n    return locales[name];\\n  } // returns locale data\\n\\n\\n  function getLocale(key) {\\n    var locale;\\n\\n    if (key && key._locale && key._locale._abbr) {\\n      key = key._locale._abbr;\\n    }\\n\\n    if (!key) {\\n      return globalLocale;\\n    }\\n\\n    if (!isArray(key)) {\\n      //short-circuit everything else\\n      locale = loadLocale(key);\\n\\n      if (locale) {\\n        return locale;\\n      }\\n\\n      key = [key];\\n    }\\n\\n    return chooseLocale(key);\\n  }\\n\\n  function listLocales() {\\n    return keys(locales);\\n  }\\n\\n  function checkOverflow(m) {\\n    var overflow;\\n    var a = m._a;\\n\\n    if (a && getParsingFlags(m).overflow === -2) {\\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\\n\\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\\n        overflow = DATE;\\n      }\\n\\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\\n        overflow = WEEK;\\n      }\\n\\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\\n        overflow = WEEKDAY;\\n      }\\n\\n      getParsingFlags(m).overflow = overflow;\\n    }\\n\\n    return m;\\n  } // Pick the first defined of two or three arguments.\\n\\n\\n  function defaults(a, b, c) {\\n    if (a != null) {\\n      return a;\\n    }\\n\\n    if (b != null) {\\n      return b;\\n    }\\n\\n    return c;\\n  }\\n\\n  function currentDateArray(config) {\\n    // hooks is actually the exported moment object\\n    var nowValue = new Date(hooks.now());\\n\\n    if (config._useUTC) {\\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\\n    }\\n\\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\\n  } // convert an array to a date.\\n  // the array should mirror the parameters below\\n  // note: all values past the year are optional and will default to the lowest possible value.\\n  // [year, month, day , hour, minute, second, millisecond]\\n\\n\\n  function configFromArray(config) {\\n    var i,\\n        date,\\n        input = [],\\n        currentDate,\\n        expectedWeekday,\\n        yearToUse;\\n\\n    if (config._d) {\\n      return;\\n    }\\n\\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\\n\\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\\n      dayOfYearFromWeekInfo(config);\\n    } //if the day of the year is set, figure out what it is\\n\\n\\n    if (config._dayOfYear != null) {\\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\\n\\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\\n        getParsingFlags(config)._overflowDayOfYear = true;\\n      }\\n\\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\\n      config._a[MONTH] = date.getUTCMonth();\\n      config._a[DATE] = date.getUTCDate();\\n    } // Default to current date.\\n    // * if no year, month, day of month are given, default to today\\n    // * if day of month is given, default month and year\\n    // * if month is given, default only year\\n    // * if year is given, don't default anything\\n\\n\\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\\n      config._a[i] = input[i] = currentDate[i];\\n    } // Zero out whatever was not defaulted, including time\\n\\n\\n    for (; i < 7; i++) {\\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\\n    } // Check for 24:00:00.000\\n\\n\\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\\n      config._nextDay = true;\\n      config._a[HOUR] = 0;\\n    }\\n\\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\\n    // with parseZone.\\n\\n    if (config._tzm != null) {\\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\\n    }\\n\\n    if (config._nextDay) {\\n      config._a[HOUR] = 24;\\n    } // check for mismatching day of week\\n\\n\\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\\n      getParsingFlags(config).weekdayMismatch = true;\\n    }\\n  }\\n\\n  function dayOfYearFromWeekInfo(config) {\\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\\n    w = config._w;\\n\\n    if (w.GG != null || w.W != null || w.E != null) {\\n      dow = 1;\\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\\n      // how we interpret now (local, utc, fixed offset). So create\\n      // a now version of current config (take local/utc/offset flags, and\\n      // create now).\\n\\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\\n      week = defaults(w.W, 1);\\n      weekday = defaults(w.E, 1);\\n\\n      if (weekday < 1 || weekday > 7) {\\n        weekdayOverflow = true;\\n      }\\n    } else {\\n      dow = config._locale._week.dow;\\n      doy = config._locale._week.doy;\\n      var curWeek = weekOfYear(createLocal(), dow, doy);\\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\\n\\n      week = defaults(w.w, curWeek.week);\\n\\n      if (w.d != null) {\\n        // weekday -- low day numbers are considered next week\\n        weekday = w.d;\\n\\n        if (weekday < 0 || weekday > 6) {\\n          weekdayOverflow = true;\\n        }\\n      } else if (w.e != null) {\\n        // local weekday -- counting starts from beginning of week\\n        weekday = w.e + dow;\\n\\n        if (w.e < 0 || w.e > 6) {\\n          weekdayOverflow = true;\\n        }\\n      } else {\\n        // default to beginning of week\\n        weekday = dow;\\n      }\\n    }\\n\\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\\n      getParsingFlags(config)._overflowWeeks = true;\\n    } else if (weekdayOverflow != null) {\\n      getParsingFlags(config)._overflowWeekday = true;\\n    } else {\\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\\n      config._a[YEAR] = temp.year;\\n      config._dayOfYear = temp.dayOfYear;\\n    }\\n  } // iso 8601 regex\\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\\n\\n\\n  var extendedIsoRegex = /^\\\\s*((?:[+-]\\\\d{6}|\\\\d{4})-(?:\\\\d\\\\d-\\\\d\\\\d|W\\\\d\\\\d-\\\\d|W\\\\d\\\\d|\\\\d\\\\d\\\\d|\\\\d\\\\d))(?:(T| )(\\\\d\\\\d(?::\\\\d\\\\d(?::\\\\d\\\\d(?:[.,]\\\\d+)?)?)?)([\\\\+\\\\-]\\\\d\\\\d(?::?\\\\d\\\\d)?|\\\\s*Z)?)?$/;\\n  var basicIsoRegex = /^\\\\s*((?:[+-]\\\\d{6}|\\\\d{4})(?:\\\\d\\\\d\\\\d\\\\d|W\\\\d\\\\d\\\\d|W\\\\d\\\\d|\\\\d\\\\d\\\\d|\\\\d\\\\d))(?:(T| )(\\\\d\\\\d(?:\\\\d\\\\d(?:\\\\d\\\\d(?:[.,]\\\\d+)?)?)?)([\\\\+\\\\-]\\\\d\\\\d(?::?\\\\d\\\\d)?|\\\\s*Z)?)?$/;\\n  var tzRegex = /Z|[+-]\\\\d\\\\d(?::?\\\\d\\\\d)?/;\\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\\\d{6}-\\\\d\\\\d-\\\\d\\\\d/], ['YYYY-MM-DD', /\\\\d{4}-\\\\d\\\\d-\\\\d\\\\d/], ['GGGG-[W]WW-E', /\\\\d{4}-W\\\\d\\\\d-\\\\d/], ['GGGG-[W]WW', /\\\\d{4}-W\\\\d\\\\d/, false], ['YYYY-DDD', /\\\\d{4}-\\\\d{3}/], ['YYYY-MM', /\\\\d{4}-\\\\d\\\\d/, false], ['YYYYYYMMDD', /[+-]\\\\d{10}/], ['YYYYMMDD', /\\\\d{8}/], // YYYYMM is NOT allowed by the standard\\n  ['GGGG[W]WWE', /\\\\d{4}W\\\\d{3}/], ['GGGG[W]WW', /\\\\d{4}W\\\\d{2}/, false], ['YYYYDDD', /\\\\d{7}/]]; // iso time formats and regexes\\n\\n  var isoTimes = [['HH:mm:ss.SSSS', /\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d\\\\.\\\\d+/], ['HH:mm:ss,SSSS', /\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d,\\\\d+/], ['HH:mm:ss', /\\\\d\\\\d:\\\\d\\\\d:\\\\d\\\\d/], ['HH:mm', /\\\\d\\\\d:\\\\d\\\\d/], ['HHmmss.SSSS', /\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\.\\\\d+/], ['HHmmss,SSSS', /\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d,\\\\d+/], ['HHmmss', /\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d/], ['HHmm', /\\\\d\\\\d\\\\d\\\\d/], ['HH', /\\\\d\\\\d/]];\\n  var aspNetJsonRegex = /^\\\\/?Date\\\\((\\\\-?\\\\d+)/i; // date from iso format\\n\\n  function configFromISO(config) {\\n    var i,\\n        l,\\n        string = config._i,\\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\\n        allowTime,\\n        dateFormat,\\n        timeFormat,\\n        tzFormat;\\n\\n    if (match) {\\n      getParsingFlags(config).iso = true;\\n\\n      for (i = 0, l = isoDates.length; i < l; i++) {\\n        if (isoDates[i][1].exec(match[1])) {\\n          dateFormat = isoDates[i][0];\\n          allowTime = isoDates[i][2] !== false;\\n          break;\\n        }\\n      }\\n\\n      if (dateFormat == null) {\\n        config._isValid = false;\\n        return;\\n      }\\n\\n      if (match[3]) {\\n        for (i = 0, l = isoTimes.length; i < l; i++) {\\n          if (isoTimes[i][1].exec(match[3])) {\\n            // match[2] should be 'T' or space\\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\\n            break;\\n          }\\n        }\\n\\n        if (timeFormat == null) {\\n          config._isValid = false;\\n          return;\\n        }\\n      }\\n\\n      if (!allowTime && timeFormat != null) {\\n        config._isValid = false;\\n        return;\\n      }\\n\\n      if (match[4]) {\\n        if (tzRegex.exec(match[4])) {\\n          tzFormat = 'Z';\\n        } else {\\n          config._isValid = false;\\n          return;\\n        }\\n      }\\n\\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\\n      configFromStringAndFormat(config);\\n    } else {\\n      config._isValid = false;\\n    }\\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\\n\\n\\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\\\s)?(\\\\d{1,2})\\\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\\\s(\\\\d{2,4})\\\\s(\\\\d\\\\d):(\\\\d\\\\d)(?::(\\\\d\\\\d))?\\\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\\\d{4}))$/;\\n\\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\\n\\n    if (secondStr) {\\n      result.push(parseInt(secondStr, 10));\\n    }\\n\\n    return result;\\n  }\\n\\n  function untruncateYear(yearStr) {\\n    var year = parseInt(yearStr, 10);\\n\\n    if (year <= 49) {\\n      return 2000 + year;\\n    } else if (year <= 999) {\\n      return 1900 + year;\\n    }\\n\\n    return year;\\n  }\\n\\n  function preprocessRFC2822(s) {\\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\\n    return s.replace(/\\\\([^)]*\\\\)|[\\\\n\\\\t]/g, ' ').replace(/(\\\\s\\\\s+)/g, ' ').replace(/^\\\\s\\\\s*/, '').replace(/\\\\s\\\\s*$/, '');\\n  }\\n\\n  function checkWeekday(weekdayStr, parsedInput, config) {\\n    if (weekdayStr) {\\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\\n\\n      if (weekdayProvided !== weekdayActual) {\\n        getParsingFlags(config).weekdayMismatch = true;\\n        config._isValid = false;\\n        return false;\\n      }\\n    }\\n\\n    return true;\\n  }\\n\\n  var obsOffsets = {\\n    UT: 0,\\n    GMT: 0,\\n    EDT: -4 * 60,\\n    EST: -5 * 60,\\n    CDT: -5 * 60,\\n    CST: -6 * 60,\\n    MDT: -6 * 60,\\n    MST: -7 * 60,\\n    PDT: -7 * 60,\\n    PST: -8 * 60\\n  };\\n\\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\\n    if (obsOffset) {\\n      return obsOffsets[obsOffset];\\n    } else if (militaryOffset) {\\n      // the only allowed military tz is Z\\n      return 0;\\n    } else {\\n      var hm = parseInt(numOffset, 10);\\n      var m = hm % 100,\\n          h = (hm - m) / 100;\\n      return h * 60 + m;\\n    }\\n  } // date and time from ref 2822 format\\n\\n\\n  function configFromRFC2822(config) {\\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\\n\\n    if (match) {\\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\\n\\n      if (!checkWeekday(match[1], parsedArray, config)) {\\n        return;\\n      }\\n\\n      config._a = parsedArray;\\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\\n      config._d = createUTCDate.apply(null, config._a);\\n\\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\\n\\n      getParsingFlags(config).rfc2822 = true;\\n    } else {\\n      config._isValid = false;\\n    }\\n  } // date from iso format or fallback\\n\\n\\n  function configFromString(config) {\\n    var matched = aspNetJsonRegex.exec(config._i);\\n\\n    if (matched !== null) {\\n      config._d = new Date(+matched[1]);\\n      return;\\n    }\\n\\n    configFromISO(config);\\n\\n    if (config._isValid === false) {\\n      delete config._isValid;\\n    } else {\\n      return;\\n    }\\n\\n    configFromRFC2822(config);\\n\\n    if (config._isValid === false) {\\n      delete config._isValid;\\n    } else {\\n      return;\\n    } // Final attempt, use Input Fallback\\n\\n\\n    hooks.createFromInputFallback(config);\\n  }\\n\\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\\n  }); // constant that refers to the ISO standard\\n\\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\\n\\n\\n  hooks.RFC_2822 = function () {}; // date from string and format string\\n\\n\\n  function configFromStringAndFormat(config) {\\n    // TODO: Move this to another part of the creation flow to prevent circular deps\\n    if (config._f === hooks.ISO_8601) {\\n      configFromISO(config);\\n      return;\\n    }\\n\\n    if (config._f === hooks.RFC_2822) {\\n      configFromRFC2822(config);\\n      return;\\n    }\\n\\n    config._a = [];\\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\\n\\n    var string = '' + config._i,\\n        i,\\n        parsedInput,\\n        tokens,\\n        token,\\n        skipped,\\n        stringLength = string.length,\\n        totalParsedInputLength = 0;\\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\\n\\n    for (i = 0; i < tokens.length; i++) {\\n      token = tokens[i];\\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\\n      //         'regex', getParseRegexForToken(token, config));\\n\\n      if (parsedInput) {\\n        skipped = string.substr(0, string.indexOf(parsedInput));\\n\\n        if (skipped.length > 0) {\\n          getParsingFlags(config).unusedInput.push(skipped);\\n        }\\n\\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\\n        totalParsedInputLength += parsedInput.length;\\n      } // don't parse if it's not a known token\\n\\n\\n      if (formatTokenFunctions[token]) {\\n        if (parsedInput) {\\n          getParsingFlags(config).empty = false;\\n        } else {\\n          getParsingFlags(config).unusedTokens.push(token);\\n        }\\n\\n        addTimeToArrayFromToken(token, parsedInput, config);\\n      } else if (config._strict && !parsedInput) {\\n        getParsingFlags(config).unusedTokens.push(token);\\n      }\\n    } // add remaining unparsed input length to the string\\n\\n\\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\\n\\n    if (string.length > 0) {\\n      getParsingFlags(config).unusedInput.push(string);\\n    } // clear _12h flag if hour is <= 12\\n\\n\\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\\n      getParsingFlags(config).bigHour = undefined;\\n    }\\n\\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\\n\\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\\n    configFromArray(config);\\n    checkOverflow(config);\\n  }\\n\\n  function meridiemFixWrap(locale, hour, meridiem) {\\n    var isPm;\\n\\n    if (meridiem == null) {\\n      // nothing to do\\n      return hour;\\n    }\\n\\n    if (locale.meridiemHour != null) {\\n      return locale.meridiemHour(hour, meridiem);\\n    } else if (locale.isPM != null) {\\n      // Fallback\\n      isPm = locale.isPM(meridiem);\\n\\n      if (isPm && hour < 12) {\\n        hour += 12;\\n      }\\n\\n      if (!isPm && hour === 12) {\\n        hour = 0;\\n      }\\n\\n      return hour;\\n    } else {\\n      // this is not supposed to happen\\n      return hour;\\n    }\\n  } // date from string and array of format strings\\n\\n\\n  function configFromStringAndArray(config) {\\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\\n\\n    if (config._f.length === 0) {\\n      getParsingFlags(config).invalidFormat = true;\\n      config._d = new Date(NaN);\\n      return;\\n    }\\n\\n    for (i = 0; i < config._f.length; i++) {\\n      currentScore = 0;\\n      tempConfig = copyConfig({}, config);\\n\\n      if (config._useUTC != null) {\\n        tempConfig._useUTC = config._useUTC;\\n      }\\n\\n      tempConfig._f = config._f[i];\\n      configFromStringAndFormat(tempConfig);\\n\\n      if (!isValid(tempConfig)) {\\n        continue;\\n      } // if there is any input that was not parsed add a penalty for that format\\n\\n\\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\\n\\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\\n      getParsingFlags(tempConfig).score = currentScore;\\n\\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\\n        scoreToBeat = currentScore;\\n        bestMoment = tempConfig;\\n      }\\n    }\\n\\n    extend(config, bestMoment || tempConfig);\\n  }\\n\\n  function configFromObject(config) {\\n    if (config._d) {\\n      return;\\n    }\\n\\n    var i = normalizeObjectUnits(config._i);\\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\\n      return obj && parseInt(obj, 10);\\n    });\\n    configFromArray(config);\\n  }\\n\\n  function createFromConfig(config) {\\n    var res = new Moment(checkOverflow(prepareConfig(config)));\\n\\n    if (res._nextDay) {\\n      // Adding is smart enough around DST\\n      res.add(1, 'd');\\n      res._nextDay = undefined;\\n    }\\n\\n    return res;\\n  }\\n\\n  function prepareConfig(config) {\\n    var input = config._i,\\n        format = config._f;\\n    config._locale = config._locale || getLocale(config._l);\\n\\n    if (input === null || format === undefined && input === '') {\\n      return createInvalid({\\n        nullInput: true\\n      });\\n    }\\n\\n    if (typeof input === 'string') {\\n      config._i = input = config._locale.preparse(input);\\n    }\\n\\n    if (isMoment(input)) {\\n      return new Moment(checkOverflow(input));\\n    } else if (isDate(input)) {\\n      config._d = input;\\n    } else if (isArray(format)) {\\n      configFromStringAndArray(config);\\n    } else if (format) {\\n      configFromStringAndFormat(config);\\n    } else {\\n      configFromInput(config);\\n    }\\n\\n    if (!isValid(config)) {\\n      config._d = null;\\n    }\\n\\n    return config;\\n  }\\n\\n  function configFromInput(config) {\\n    var input = config._i;\\n\\n    if (isUndefined(input)) {\\n      config._d = new Date(hooks.now());\\n    } else if (isDate(input)) {\\n      config._d = new Date(input.valueOf());\\n    } else if (typeof input === 'string') {\\n      configFromString(config);\\n    } else if (isArray(input)) {\\n      config._a = map(input.slice(0), function (obj) {\\n        return parseInt(obj, 10);\\n      });\\n      configFromArray(config);\\n    } else if (isObject(input)) {\\n      configFromObject(config);\\n    } else if (isNumber(input)) {\\n      // from milliseconds\\n      config._d = new Date(input);\\n    } else {\\n      hooks.createFromInputFallback(config);\\n    }\\n  }\\n\\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\\n    var c = {};\\n\\n    if (locale === true || locale === false) {\\n      strict = locale;\\n      locale = undefined;\\n    }\\n\\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\\n      input = undefined;\\n    } // object construction must be done this way.\\n    // https://github.com/moment/moment/issues/1423\\n\\n\\n    c._isAMomentObject = true;\\n    c._useUTC = c._isUTC = isUTC;\\n    c._l = locale;\\n    c._i = input;\\n    c._f = format;\\n    c._strict = strict;\\n    return createFromConfig(c);\\n  }\\n\\n  function createLocal(input, format, locale, strict) {\\n    return createLocalOrUTC(input, format, locale, strict, false);\\n  }\\n\\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\\n    var other = createLocal.apply(null, arguments);\\n\\n    if (this.isValid() && other.isValid()) {\\n      return other < this ? this : other;\\n    } else {\\n      return createInvalid();\\n    }\\n  });\\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\\n    var other = createLocal.apply(null, arguments);\\n\\n    if (this.isValid() && other.isValid()) {\\n      return other > this ? this : other;\\n    } else {\\n      return createInvalid();\\n    }\\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\\n  // other. This relies on the function fn to be transitive.\\n  //\\n  // moments should either be an array of moment objects or an array, whose\\n  // first element is an array of moment objects.\\n\\n  function pickBy(fn, moments) {\\n    var res, i;\\n\\n    if (moments.length === 1 && isArray(moments[0])) {\\n      moments = moments[0];\\n    }\\n\\n    if (!moments.length) {\\n      return createLocal();\\n    }\\n\\n    res = moments[0];\\n\\n    for (i = 1; i < moments.length; ++i) {\\n      if (!moments[i].isValid() || moments[i][fn](res)) {\\n        res = moments[i];\\n      }\\n    }\\n\\n    return res;\\n  } // TODO: Use [].sort instead?\\n\\n\\n  function min() {\\n    var args = [].slice.call(arguments, 0);\\n    return pickBy('isBefore', args);\\n  }\\n\\n  function max() {\\n    var args = [].slice.call(arguments, 0);\\n    return pickBy('isAfter', args);\\n  }\\n\\n  var now = function now() {\\n    return Date.now ? Date.now() : +new Date();\\n  };\\n\\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\\n\\n  function isDurationValid(m) {\\n    for (var key in m) {\\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\\n        return false;\\n      }\\n    }\\n\\n    var unitHasDecimal = false;\\n\\n    for (var i = 0; i < ordering.length; ++i) {\\n      if (m[ordering[i]]) {\\n        if (unitHasDecimal) {\\n          return false; // only allow non-integers for smallest unit\\n        }\\n\\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\\n          unitHasDecimal = true;\\n        }\\n      }\\n    }\\n\\n    return true;\\n  }\\n\\n  function isValid$1() {\\n    return this._isValid;\\n  }\\n\\n  function createInvalid$1() {\\n    return createDuration(NaN);\\n  }\\n\\n  function Duration(duration) {\\n    var normalizedInput = normalizeObjectUnits(duration),\\n        years = normalizedInput.year || 0,\\n        quarters = normalizedInput.quarter || 0,\\n        months = normalizedInput.month || 0,\\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\\n        days = normalizedInput.day || 0,\\n        hours = normalizedInput.hour || 0,\\n        minutes = normalizedInput.minute || 0,\\n        seconds = normalizedInput.second || 0,\\n        milliseconds = normalizedInput.millisecond || 0;\\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\\n\\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\\n    minutes * 6e4 + // 1000 * 60\\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\\n    // Because of dateAddRemove treats 24 hours as different from a\\n    // day when working around DST, we need to store them separately\\n\\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\\n    // which months you are are talking about, so we have to store\\n    // it separately.\\n\\n    this._months = +months + quarters * 3 + years * 12;\\n    this._data = {};\\n    this._locale = getLocale();\\n\\n    this._bubble();\\n  }\\n\\n  function isDuration(obj) {\\n    return obj instanceof Duration;\\n  }\\n\\n  function absRound(number) {\\n    if (number < 0) {\\n      return Math.round(-1 * number) * -1;\\n    } else {\\n      return Math.round(number);\\n    }\\n  } // FORMATTING\\n\\n\\n  function offset(token, separator) {\\n    addFormatToken(token, 0, 0, function () {\\n      var offset = this.utcOffset();\\n      var sign = '+';\\n\\n      if (offset < 0) {\\n        offset = -offset;\\n        sign = '-';\\n      }\\n\\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\\n    });\\n  }\\n\\n  offset('Z', ':');\\n  offset('ZZ', ''); // PARSING\\n\\n  addRegexToken('Z', matchShortOffset);\\n  addRegexToken('ZZ', matchShortOffset);\\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\\n    config._useUTC = true;\\n    config._tzm = offsetFromString(matchShortOffset, input);\\n  }); // HELPERS\\n  // timezone chunker\\n  // '+10:00' > ['10',  '00']\\n  // '-1530'  > ['-15', '30']\\n\\n  var chunkOffset = /([\\\\+\\\\-]|\\\\d\\\\d)/gi;\\n\\n  function offsetFromString(matcher, string) {\\n    var matches = (string || '').match(matcher);\\n\\n    if (matches === null) {\\n      return null;\\n    }\\n\\n    var chunk = matches[matches.length - 1] || [];\\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\\n\\n\\n  function cloneWithOffset(input, model) {\\n    var res, diff;\\n\\n    if (model._isUTC) {\\n      res = model.clone();\\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\\n\\n      res._d.setTime(res._d.valueOf() + diff);\\n\\n      hooks.updateOffset(res, false);\\n      return res;\\n    } else {\\n      return createLocal(input).local();\\n    }\\n  }\\n\\n  function getDateOffset(m) {\\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\\n    // https://github.com/moment/moment/pull/1871\\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\\n  } // HOOKS\\n  // This function will be called whenever a moment is mutated.\\n  // It is intended to keep the offset in sync with the timezone.\\n\\n\\n  hooks.updateOffset = function () {}; // MOMENTS\\n  // keepLocalTime = true means only change the timezone, without\\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\\n  // +0200, so we adjust the time as needed, to be valid.\\n  //\\n  // Keeping the time actually adds/subtracts (one hour)\\n  // from the actual represented time. That is why we call updateOffset\\n  // a second time. In case it wants us to change the offset again\\n  // _changeInProgress == true case, then we have to adjust, because\\n  // there is no such time in the given timezone.\\n\\n\\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\\n    var offset = this._offset || 0,\\n        localAdjust;\\n\\n    if (!this.isValid()) {\\n      return input != null ? this : NaN;\\n    }\\n\\n    if (input != null) {\\n      if (typeof input === 'string') {\\n        input = offsetFromString(matchShortOffset, input);\\n\\n        if (input === null) {\\n          return this;\\n        }\\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\\n        input = input * 60;\\n      }\\n\\n      if (!this._isUTC && keepLocalTime) {\\n        localAdjust = getDateOffset(this);\\n      }\\n\\n      this._offset = input;\\n      this._isUTC = true;\\n\\n      if (localAdjust != null) {\\n        this.add(localAdjust, 'm');\\n      }\\n\\n      if (offset !== input) {\\n        if (!keepLocalTime || this._changeInProgress) {\\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\\n        } else if (!this._changeInProgress) {\\n          this._changeInProgress = true;\\n          hooks.updateOffset(this, true);\\n          this._changeInProgress = null;\\n        }\\n      }\\n\\n      return this;\\n    } else {\\n      return this._isUTC ? offset : getDateOffset(this);\\n    }\\n  }\\n\\n  function getSetZone(input, keepLocalTime) {\\n    if (input != null) {\\n      if (typeof input !== 'string') {\\n        input = -input;\\n      }\\n\\n      this.utcOffset(input, keepLocalTime);\\n      return this;\\n    } else {\\n      return -this.utcOffset();\\n    }\\n  }\\n\\n  function setOffsetToUTC(keepLocalTime) {\\n    return this.utcOffset(0, keepLocalTime);\\n  }\\n\\n  function setOffsetToLocal(keepLocalTime) {\\n    if (this._isUTC) {\\n      this.utcOffset(0, keepLocalTime);\\n      this._isUTC = false;\\n\\n      if (keepLocalTime) {\\n        this.subtract(getDateOffset(this), 'm');\\n      }\\n    }\\n\\n    return this;\\n  }\\n\\n  function setOffsetToParsedOffset() {\\n    if (this._tzm != null) {\\n      this.utcOffset(this._tzm, false, true);\\n    } else if (typeof this._i === 'string') {\\n      var tZone = offsetFromString(matchOffset, this._i);\\n\\n      if (tZone != null) {\\n        this.utcOffset(tZone);\\n      } else {\\n        this.utcOffset(0, true);\\n      }\\n    }\\n\\n    return this;\\n  }\\n\\n  function hasAlignedHourOffset(input) {\\n    if (!this.isValid()) {\\n      return false;\\n    }\\n\\n    input = input ? createLocal(input).utcOffset() : 0;\\n    return (this.utcOffset() - input) % 60 === 0;\\n  }\\n\\n  function isDaylightSavingTime() {\\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\\n  }\\n\\n  function isDaylightSavingTimeShifted() {\\n    if (!isUndefined(this._isDSTShifted)) {\\n      return this._isDSTShifted;\\n    }\\n\\n    var c = {};\\n    copyConfig(c, this);\\n    c = prepareConfig(c);\\n\\n    if (c._a) {\\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\\n    } else {\\n      this._isDSTShifted = false;\\n    }\\n\\n    return this._isDSTShifted;\\n  }\\n\\n  function isLocal() {\\n    return this.isValid() ? !this._isUTC : false;\\n  }\\n\\n  function isUtcOffset() {\\n    return this.isValid() ? this._isUTC : false;\\n  }\\n\\n  function isUtc() {\\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\\n  } // ASP.NET json date format regex\\n\\n\\n  var aspNetRegex = /^(\\\\-|\\\\+)?(?:(\\\\d*)[. ])?(\\\\d+)\\\\:(\\\\d+)(?:\\\\:(\\\\d+)(\\\\.\\\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\\n  // and further modified to allow for strings containing both week and day\\n\\n  var isoRegex = /^(-|\\\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\\n\\n  function createDuration(input, key) {\\n    var duration = input,\\n        // matching against regexp is expensive, do it on demand\\n    match = null,\\n        sign,\\n        ret,\\n        diffRes;\\n\\n    if (isDuration(input)) {\\n      duration = {\\n        ms: input._milliseconds,\\n        d: input._days,\\n        M: input._months\\n      };\\n    } else if (isNumber(input)) {\\n      duration = {};\\n\\n      if (key) {\\n        duration[key] = input;\\n      } else {\\n        duration.milliseconds = input;\\n      }\\n    } else if (!!(match = aspNetRegex.exec(input))) {\\n      sign = match[1] === '-' ? -1 : 1;\\n      duration = {\\n        y: 0,\\n        d: toInt(match[DATE]) * sign,\\n        h: toInt(match[HOUR]) * sign,\\n        m: toInt(match[MINUTE]) * sign,\\n        s: toInt(match[SECOND]) * sign,\\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\\n\\n      };\\n    } else if (!!(match = isoRegex.exec(input))) {\\n      sign = match[1] === '-' ? -1 : 1;\\n      duration = {\\n        y: parseIso(match[2], sign),\\n        M: parseIso(match[3], sign),\\n        w: parseIso(match[4], sign),\\n        d: parseIso(match[5], sign),\\n        h: parseIso(match[6], sign),\\n        m: parseIso(match[7], sign),\\n        s: parseIso(match[8], sign)\\n      };\\n    } else if (duration == null) {\\n      // checks for null or undefined\\n      duration = {};\\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\\n      duration = {};\\n      duration.ms = diffRes.milliseconds;\\n      duration.M = diffRes.months;\\n    }\\n\\n    ret = new Duration(duration);\\n\\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\\n      ret._locale = input._locale;\\n    }\\n\\n    return ret;\\n  }\\n\\n  createDuration.fn = Duration.prototype;\\n  createDuration.invalid = createInvalid$1;\\n\\n  function parseIso(inp, sign) {\\n    // We'd normally use ~~inp for this, but unfortunately it also\\n    // converts floats to ints.\\n    // inp may be undefined, so careful calling replace on it.\\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\\n\\n    return (isNaN(res) ? 0 : res) * sign;\\n  }\\n\\n  function positiveMomentsDifference(base, other) {\\n    var res = {};\\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\\n\\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\\n      --res.months;\\n    }\\n\\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\\n    return res;\\n  }\\n\\n  function momentsDifference(base, other) {\\n    var res;\\n\\n    if (!(base.isValid() && other.isValid())) {\\n      return {\\n        milliseconds: 0,\\n        months: 0\\n      };\\n    }\\n\\n    other = cloneWithOffset(other, base);\\n\\n    if (base.isBefore(other)) {\\n      res = positiveMomentsDifference(base, other);\\n    } else {\\n      res = positiveMomentsDifference(other, base);\\n      res.milliseconds = -res.milliseconds;\\n      res.months = -res.months;\\n    }\\n\\n    return res;\\n  } // TODO: remove 'name' arg after deprecation is removed\\n\\n\\n  function createAdder(direction, name) {\\n    return function (val, period) {\\n      var dur, tmp; //invert the arguments, but complain about it\\n\\n      if (period !== null && !isNaN(+period)) {\\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\\n        tmp = val;\\n        val = period;\\n        period = tmp;\\n      }\\n\\n      val = typeof val === 'string' ? +val : val;\\n      dur = createDuration(val, period);\\n      addSubtract(this, dur, direction);\\n      return this;\\n    };\\n  }\\n\\n  function addSubtract(mom, duration, isAdding, updateOffset) {\\n    var milliseconds = duration._milliseconds,\\n        days = absRound(duration._days),\\n        months = absRound(duration._months);\\n\\n    if (!mom.isValid()) {\\n      // No op\\n      return;\\n    }\\n\\n    updateOffset = updateOffset == null ? true : updateOffset;\\n\\n    if (months) {\\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\\n    }\\n\\n    if (days) {\\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\\n    }\\n\\n    if (milliseconds) {\\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\\n    }\\n\\n    if (updateOffset) {\\n      hooks.updateOffset(mom, days || months);\\n    }\\n  }\\n\\n  var add = createAdder(1, 'add');\\n  var subtract = createAdder(-1, 'subtract');\\n\\n  function getCalendarFormat(myMoment, now) {\\n    var diff = myMoment.diff(now, 'days', true);\\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\\n  }\\n\\n  function calendar$1(time, formats) {\\n    // We want to compare the start of today, vs this.\\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\\n    var now = time || createLocal(),\\n        sod = cloneWithOffset(now, this).startOf('day'),\\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\\n  }\\n\\n  function clone() {\\n    return new Moment(this);\\n  }\\n\\n  function isAfter(input, units) {\\n    var localInput = isMoment(input) ? input : createLocal(input);\\n\\n    if (!(this.isValid() && localInput.isValid())) {\\n      return false;\\n    }\\n\\n    units = normalizeUnits(units) || 'millisecond';\\n\\n    if (units === 'millisecond') {\\n      return this.valueOf() > localInput.valueOf();\\n    } else {\\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\\n    }\\n  }\\n\\n  function isBefore(input, units) {\\n    var localInput = isMoment(input) ? input : createLocal(input);\\n\\n    if (!(this.isValid() && localInput.isValid())) {\\n      return false;\\n    }\\n\\n    units = normalizeUnits(units) || 'millisecond';\\n\\n    if (units === 'millisecond') {\\n      return this.valueOf() < localInput.valueOf();\\n    } else {\\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\\n    }\\n  }\\n\\n  function isBetween(from, to, units, inclusivity) {\\n    var localFrom = isMoment(from) ? from : createLocal(from),\\n        localTo = isMoment(to) ? to : createLocal(to);\\n\\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\\n      return false;\\n    }\\n\\n    inclusivity = inclusivity || '()';\\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\\n  }\\n\\n  function isSame(input, units) {\\n    var localInput = isMoment(input) ? input : createLocal(input),\\n        inputMs;\\n\\n    if (!(this.isValid() && localInput.isValid())) {\\n      return false;\\n    }\\n\\n    units = normalizeUnits(units) || 'millisecond';\\n\\n    if (units === 'millisecond') {\\n      return this.valueOf() === localInput.valueOf();\\n    } else {\\n      inputMs = localInput.valueOf();\\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\\n    }\\n  }\\n\\n  function isSameOrAfter(input, units) {\\n    return this.isSame(input, units) || this.isAfter(input, units);\\n  }\\n\\n  function isSameOrBefore(input, units) {\\n    return this.isSame(input, units) || this.isBefore(input, units);\\n  }\\n\\n  function diff(input, units, asFloat) {\\n    var that, zoneDelta, output;\\n\\n    if (!this.isValid()) {\\n      return NaN;\\n    }\\n\\n    that = cloneWithOffset(input, this);\\n\\n    if (!that.isValid()) {\\n      return NaN;\\n    }\\n\\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\\n    units = normalizeUnits(units);\\n\\n    switch (units) {\\n      case 'year':\\n        output = monthDiff(this, that) / 12;\\n        break;\\n\\n      case 'month':\\n        output = monthDiff(this, that);\\n        break;\\n\\n      case 'quarter':\\n        output = monthDiff(this, that) / 3;\\n        break;\\n\\n      case 'second':\\n        output = (this - that) / 1e3;\\n        break;\\n      // 1000\\n\\n      case 'minute':\\n        output = (this - that) / 6e4;\\n        break;\\n      // 1000 * 60\\n\\n      case 'hour':\\n        output = (this - that) / 36e5;\\n        break;\\n      // 1000 * 60 * 60\\n\\n      case 'day':\\n        output = (this - that - zoneDelta) / 864e5;\\n        break;\\n      // 1000 * 60 * 60 * 24, negate dst\\n\\n      case 'week':\\n        output = (this - that - zoneDelta) / 6048e5;\\n        break;\\n      // 1000 * 60 * 60 * 24 * 7, negate dst\\n\\n      default:\\n        output = this - that;\\n    }\\n\\n    return asFloat ? output : absFloor(output);\\n  }\\n\\n  function monthDiff(a, b) {\\n    // difference in months\\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\\n        // b is in (anchor - 1 month, anchor + 1 month)\\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\\n        anchor2,\\n        adjust;\\n\\n    if (b - anchor < 0) {\\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\\n\\n      adjust = (b - anchor) / (anchor - anchor2);\\n    } else {\\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\\n\\n      adjust = (b - anchor) / (anchor2 - anchor);\\n    } //check for negative zero, return zero if negative zero\\n\\n\\n    return -(wholeMonthDiff + adjust) || 0;\\n  }\\n\\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\\n\\n  function toString() {\\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\\n  }\\n\\n  function toISOString(keepOffset) {\\n    if (!this.isValid()) {\\n      return null;\\n    }\\n\\n    var utc = keepOffset !== true;\\n    var m = utc ? this.clone().utc() : this;\\n\\n    if (m.year() < 0 || m.year() > 9999) {\\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\\n    }\\n\\n    if (isFunction(Date.prototype.toISOString)) {\\n      // native implementation is ~50x faster, use it when we can\\n      if (utc) {\\n        return this.toDate().toISOString();\\n      } else {\\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\\n      }\\n    }\\n\\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\\n  }\\n  /**\\n   * Return a human readable representation of a moment that can\\n   * also be evaluated to get a new moment which is the same\\n   *\\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\\n   */\\n\\n\\n  function inspect() {\\n    if (!this.isValid()) {\\n      return 'moment.invalid(/* ' + this._i + ' */)';\\n    }\\n\\n    var func = 'moment';\\n    var zone = '';\\n\\n    if (!this.isLocal()) {\\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\\n      zone = 'Z';\\n    }\\n\\n    var prefix = '[' + func + '(\\\"]';\\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\\n    var suffix = zone + '[\\\")]';\\n    return this.format(prefix + year + datetime + suffix);\\n  }\\n\\n  function format(inputString) {\\n    if (!inputString) {\\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\\n    }\\n\\n    var output = formatMoment(this, inputString);\\n    return this.localeData().postformat(output);\\n  }\\n\\n  function from(time, withoutSuffix) {\\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\\n      return createDuration({\\n        to: this,\\n        from: time\\n      }).locale(this.locale()).humanize(!withoutSuffix);\\n    } else {\\n      return this.localeData().invalidDate();\\n    }\\n  }\\n\\n  function fromNow(withoutSuffix) {\\n    return this.from(createLocal(), withoutSuffix);\\n  }\\n\\n  function to(time, withoutSuffix) {\\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\\n      return createDuration({\\n        from: this,\\n        to: time\\n      }).locale(this.locale()).humanize(!withoutSuffix);\\n    } else {\\n      return this.localeData().invalidDate();\\n    }\\n  }\\n\\n  function toNow(withoutSuffix) {\\n    return this.to(createLocal(), withoutSuffix);\\n  } // If passed a locale key, it will set the locale for this\\n  // instance.  Otherwise, it will return the locale configuration\\n  // variables for this instance.\\n\\n\\n  function locale(key) {\\n    var newLocaleData;\\n\\n    if (key === undefined) {\\n      return this._locale._abbr;\\n    } else {\\n      newLocaleData = getLocale(key);\\n\\n      if (newLocaleData != null) {\\n        this._locale = newLocaleData;\\n      }\\n\\n      return this;\\n    }\\n  }\\n\\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\\n    if (key === undefined) {\\n      return this.localeData();\\n    } else {\\n      return this.locale(key);\\n    }\\n  });\\n\\n  function localeData() {\\n    return this._locale;\\n  }\\n\\n  var MS_PER_SECOND = 1000;\\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\\n\\n  function mod$1(dividend, divisor) {\\n    return (dividend % divisor + divisor) % divisor;\\n  }\\n\\n  function localStartOfDate(y, m, d) {\\n    // the date constructor remaps years 0-99 to 1900-1999\\n    if (y < 100 && y >= 0) {\\n      // preserve leap years using a full 400 year cycle, then reset\\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\\n    } else {\\n      return new Date(y, m, d).valueOf();\\n    }\\n  }\\n\\n  function utcStartOfDate(y, m, d) {\\n    // Date.UTC remaps years 0-99 to 1900-1999\\n    if (y < 100 && y >= 0) {\\n      // preserve leap years using a full 400 year cycle, then reset\\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\\n    } else {\\n      return Date.UTC(y, m, d);\\n    }\\n  }\\n\\n  function startOf(units) {\\n    var time;\\n    units = normalizeUnits(units);\\n\\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\\n      return this;\\n    }\\n\\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\\n\\n    switch (units) {\\n      case 'year':\\n        time = startOfDate(this.year(), 0, 1);\\n        break;\\n\\n      case 'quarter':\\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\\n        break;\\n\\n      case 'month':\\n        time = startOfDate(this.year(), this.month(), 1);\\n        break;\\n\\n      case 'week':\\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\\n        break;\\n\\n      case 'isoWeek':\\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\\n        break;\\n\\n      case 'day':\\n      case 'date':\\n        time = startOfDate(this.year(), this.month(), this.date());\\n        break;\\n\\n      case 'hour':\\n        time = this._d.valueOf();\\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\\n        break;\\n\\n      case 'minute':\\n        time = this._d.valueOf();\\n        time -= mod$1(time, MS_PER_MINUTE);\\n        break;\\n\\n      case 'second':\\n        time = this._d.valueOf();\\n        time -= mod$1(time, MS_PER_SECOND);\\n        break;\\n    }\\n\\n    this._d.setTime(time);\\n\\n    hooks.updateOffset(this, true);\\n    return this;\\n  }\\n\\n  function endOf(units) {\\n    var time;\\n    units = normalizeUnits(units);\\n\\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\\n      return this;\\n    }\\n\\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\\n\\n    switch (units) {\\n      case 'year':\\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\\n        break;\\n\\n      case 'quarter':\\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\\n        break;\\n\\n      case 'month':\\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\\n        break;\\n\\n      case 'week':\\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\\n        break;\\n\\n      case 'isoWeek':\\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\\n        break;\\n\\n      case 'day':\\n      case 'date':\\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\\n        break;\\n\\n      case 'hour':\\n        time = this._d.valueOf();\\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\\n        break;\\n\\n      case 'minute':\\n        time = this._d.valueOf();\\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\\n        break;\\n\\n      case 'second':\\n        time = this._d.valueOf();\\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\\n        break;\\n    }\\n\\n    this._d.setTime(time);\\n\\n    hooks.updateOffset(this, true);\\n    return this;\\n  }\\n\\n  function valueOf() {\\n    return this._d.valueOf() - (this._offset || 0) * 60000;\\n  }\\n\\n  function unix() {\\n    return Math.floor(this.valueOf() / 1000);\\n  }\\n\\n  function toDate() {\\n    return new Date(this.valueOf());\\n  }\\n\\n  function toArray() {\\n    var m = this;\\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\\n  }\\n\\n  function toObject() {\\n    var m = this;\\n    return {\\n      years: m.year(),\\n      months: m.month(),\\n      date: m.date(),\\n      hours: m.hours(),\\n      minutes: m.minutes(),\\n      seconds: m.seconds(),\\n      milliseconds: m.milliseconds()\\n    };\\n  }\\n\\n  function toJSON() {\\n    // new Date(NaN).toJSON() === null\\n    return this.isValid() ? this.toISOString() : null;\\n  }\\n\\n  function isValid$2() {\\n    return isValid(this);\\n  }\\n\\n  function parsingFlags() {\\n    return extend({}, getParsingFlags(this));\\n  }\\n\\n  function invalidAt() {\\n    return getParsingFlags(this).overflow;\\n  }\\n\\n  function creationData() {\\n    return {\\n      input: this._i,\\n      format: this._f,\\n      locale: this._locale,\\n      isUTC: this._isUTC,\\n      strict: this._strict\\n    };\\n  } // FORMATTING\\n\\n\\n  addFormatToken(0, ['gg', 2], 0, function () {\\n    return this.weekYear() % 100;\\n  });\\n  addFormatToken(0, ['GG', 2], 0, function () {\\n    return this.isoWeekYear() % 100;\\n  });\\n\\n  function addWeekYearFormatToken(token, getter) {\\n    addFormatToken(0, [token, token.length], 0, getter);\\n  }\\n\\n  addWeekYearFormatToken('gggg', 'weekYear');\\n  addWeekYearFormatToken('ggggg', 'weekYear');\\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\\n\\n  addUnitAlias('weekYear', 'gg');\\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\\n\\n  addUnitPriority('weekYear', 1);\\n  addUnitPriority('isoWeekYear', 1); // PARSING\\n\\n  addRegexToken('G', matchSigned);\\n  addRegexToken('g', matchSigned);\\n  addRegexToken('GG', match1to2, match2);\\n  addRegexToken('gg', match1to2, match2);\\n  addRegexToken('GGGG', match1to4, match4);\\n  addRegexToken('gggg', match1to4, match4);\\n  addRegexToken('GGGGG', match1to6, match6);\\n  addRegexToken('ggggg', match1to6, match6);\\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\\n    week[token.substr(0, 2)] = toInt(input);\\n  });\\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\\n    week[token] = hooks.parseTwoDigitYear(input);\\n  }); // MOMENTS\\n\\n  function getSetWeekYear(input) {\\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\\n  }\\n\\n  function getSetISOWeekYear(input) {\\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\\n  }\\n\\n  function getISOWeeksInYear() {\\n    return weeksInYear(this.year(), 1, 4);\\n  }\\n\\n  function getWeeksInYear() {\\n    var weekInfo = this.localeData()._week;\\n\\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\\n  }\\n\\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\\n    var weeksTarget;\\n\\n    if (input == null) {\\n      return weekOfYear(this, dow, doy).year;\\n    } else {\\n      weeksTarget = weeksInYear(input, dow, doy);\\n\\n      if (week > weeksTarget) {\\n        week = weeksTarget;\\n      }\\n\\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\\n    }\\n  }\\n\\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\\n    this.year(date.getUTCFullYear());\\n    this.month(date.getUTCMonth());\\n    this.date(date.getUTCDate());\\n    return this;\\n  } // FORMATTING\\n\\n\\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\\n\\n  addUnitAlias('quarter', 'Q'); // PRIORITY\\n\\n  addUnitPriority('quarter', 7); // PARSING\\n\\n  addRegexToken('Q', match1);\\n  addParseToken('Q', function (input, array) {\\n    array[MONTH] = (toInt(input) - 1) * 3;\\n  }); // MOMENTS\\n\\n  function getSetQuarter(input) {\\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\\n  } // FORMATTING\\n\\n\\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\\n\\n  addUnitAlias('date', 'D'); // PRIORITY\\n\\n  addUnitPriority('date', 9); // PARSING\\n\\n  addRegexToken('D', match1to2);\\n  addRegexToken('DD', match1to2, match2);\\n  addRegexToken('Do', function (isStrict, locale) {\\n    // TODO: Remove \\\"ordinalParse\\\" fallback in next major release.\\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\\n  });\\n  addParseToken(['D', 'DD'], DATE);\\n  addParseToken('Do', function (input, array) {\\n    array[DATE] = toInt(input.match(match1to2)[0]);\\n  }); // MOMENTS\\n\\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\\n\\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\\n\\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\\n\\n  addUnitPriority('dayOfYear', 4); // PARSING\\n\\n  addRegexToken('DDD', match1to3);\\n  addRegexToken('DDDD', match3);\\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\\n    config._dayOfYear = toInt(input);\\n  }); // HELPERS\\n  // MOMENTS\\n\\n  function getSetDayOfYear(input) {\\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\\n  } // FORMATTING\\n\\n\\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\\n\\n  addUnitAlias('minute', 'm'); // PRIORITY\\n\\n  addUnitPriority('minute', 14); // PARSING\\n\\n  addRegexToken('m', match1to2);\\n  addRegexToken('mm', match1to2, match2);\\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\\n\\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\\n\\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\\n\\n  addUnitAlias('second', 's'); // PRIORITY\\n\\n  addUnitPriority('second', 15); // PARSING\\n\\n  addRegexToken('s', match1to2);\\n  addRegexToken('ss', match1to2, match2);\\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\\n\\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\\n\\n  addFormatToken('S', 0, 0, function () {\\n    return ~~(this.millisecond() / 100);\\n  });\\n  addFormatToken(0, ['SS', 2], 0, function () {\\n    return ~~(this.millisecond() / 10);\\n  });\\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\\n  addFormatToken(0, ['SSSS', 4], 0, function () {\\n    return this.millisecond() * 10;\\n  });\\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\\n    return this.millisecond() * 100;\\n  });\\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\\n    return this.millisecond() * 1000;\\n  });\\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\\n    return this.millisecond() * 10000;\\n  });\\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\\n    return this.millisecond() * 100000;\\n  });\\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\\n    return this.millisecond() * 1000000;\\n  }); // ALIASES\\n\\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\\n\\n  addUnitPriority('millisecond', 16); // PARSING\\n\\n  addRegexToken('S', match1to3, match1);\\n  addRegexToken('SS', match1to3, match2);\\n  addRegexToken('SSS', match1to3, match3);\\n  var token;\\n\\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\\n    addRegexToken(token, matchUnsigned);\\n  }\\n\\n  function parseMs(input, array) {\\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\\n  }\\n\\n  for (token = 'S'; token.length <= 9; token += 'S') {\\n    addParseToken(token, parseMs);\\n  } // MOMENTS\\n\\n\\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\\n\\n  addFormatToken('z', 0, 0, 'zoneAbbr');\\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\\n\\n  function getZoneAbbr() {\\n    return this._isUTC ? 'UTC' : '';\\n  }\\n\\n  function getZoneName() {\\n    return this._isUTC ? 'Coordinated Universal Time' : '';\\n  }\\n\\n  var proto = Moment.prototype;\\n  proto.add = add;\\n  proto.calendar = calendar$1;\\n  proto.clone = clone;\\n  proto.diff = diff;\\n  proto.endOf = endOf;\\n  proto.format = format;\\n  proto.from = from;\\n  proto.fromNow = fromNow;\\n  proto.to = to;\\n  proto.toNow = toNow;\\n  proto.get = stringGet;\\n  proto.invalidAt = invalidAt;\\n  proto.isAfter = isAfter;\\n  proto.isBefore = isBefore;\\n  proto.isBetween = isBetween;\\n  proto.isSame = isSame;\\n  proto.isSameOrAfter = isSameOrAfter;\\n  proto.isSameOrBefore = isSameOrBefore;\\n  proto.isValid = isValid$2;\\n  proto.lang = lang;\\n  proto.locale = locale;\\n  proto.localeData = localeData;\\n  proto.max = prototypeMax;\\n  proto.min = prototypeMin;\\n  proto.parsingFlags = parsingFlags;\\n  proto.set = stringSet;\\n  proto.startOf = startOf;\\n  proto.subtract = subtract;\\n  proto.toArray = toArray;\\n  proto.toObject = toObject;\\n  proto.toDate = toDate;\\n  proto.toISOString = toISOString;\\n  proto.inspect = inspect;\\n  proto.toJSON = toJSON;\\n  proto.toString = toString;\\n  proto.unix = unix;\\n  proto.valueOf = valueOf;\\n  proto.creationData = creationData;\\n  proto.year = getSetYear;\\n  proto.isLeapYear = getIsLeapYear;\\n  proto.weekYear = getSetWeekYear;\\n  proto.isoWeekYear = getSetISOWeekYear;\\n  proto.quarter = proto.quarters = getSetQuarter;\\n  proto.month = getSetMonth;\\n  proto.daysInMonth = getDaysInMonth;\\n  proto.week = proto.weeks = getSetWeek;\\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\\n  proto.weeksInYear = getWeeksInYear;\\n  proto.isoWeeksInYear = getISOWeeksInYear;\\n  proto.date = getSetDayOfMonth;\\n  proto.day = proto.days = getSetDayOfWeek;\\n  proto.weekday = getSetLocaleDayOfWeek;\\n  proto.isoWeekday = getSetISODayOfWeek;\\n  proto.dayOfYear = getSetDayOfYear;\\n  proto.hour = proto.hours = getSetHour;\\n  proto.minute = proto.minutes = getSetMinute;\\n  proto.second = proto.seconds = getSetSecond;\\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\\n  proto.utcOffset = getSetOffset;\\n  proto.utc = setOffsetToUTC;\\n  proto.local = setOffsetToLocal;\\n  proto.parseZone = setOffsetToParsedOffset;\\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\\n  proto.isDST = isDaylightSavingTime;\\n  proto.isLocal = isLocal;\\n  proto.isUtcOffset = isUtcOffset;\\n  proto.isUtc = isUtc;\\n  proto.isUTC = isUtc;\\n  proto.zoneAbbr = getZoneAbbr;\\n  proto.zoneName = getZoneName;\\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\\n\\n  function createUnix(input) {\\n    return createLocal(input * 1000);\\n  }\\n\\n  function createInZone() {\\n    return createLocal.apply(null, arguments).parseZone();\\n  }\\n\\n  function preParsePostFormat(string) {\\n    return string;\\n  }\\n\\n  var proto$1 = Locale.prototype;\\n  proto$1.calendar = calendar;\\n  proto$1.longDateFormat = longDateFormat;\\n  proto$1.invalidDate = invalidDate;\\n  proto$1.ordinal = ordinal;\\n  proto$1.preparse = preParsePostFormat;\\n  proto$1.postformat = preParsePostFormat;\\n  proto$1.relativeTime = relativeTime;\\n  proto$1.pastFuture = pastFuture;\\n  proto$1.set = set;\\n  proto$1.months = localeMonths;\\n  proto$1.monthsShort = localeMonthsShort;\\n  proto$1.monthsParse = localeMonthsParse;\\n  proto$1.monthsRegex = monthsRegex;\\n  proto$1.monthsShortRegex = monthsShortRegex;\\n  proto$1.week = localeWeek;\\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\\n  proto$1.weekdays = localeWeekdays;\\n  proto$1.weekdaysMin = localeWeekdaysMin;\\n  proto$1.weekdaysShort = localeWeekdaysShort;\\n  proto$1.weekdaysParse = localeWeekdaysParse;\\n  proto$1.weekdaysRegex = weekdaysRegex;\\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\\n  proto$1.isPM = localeIsPM;\\n  proto$1.meridiem = localeMeridiem;\\n\\n  function get$1(format, index, field, setter) {\\n    var locale = getLocale();\\n    var utc = createUTC().set(setter, index);\\n    return locale[field](utc, format);\\n  }\\n\\n  function listMonthsImpl(format, index, field) {\\n    if (isNumber(format)) {\\n      index = format;\\n      format = undefined;\\n    }\\n\\n    format = format || '';\\n\\n    if (index != null) {\\n      return get$1(format, index, field, 'month');\\n    }\\n\\n    var i;\\n    var out = [];\\n\\n    for (i = 0; i < 12; i++) {\\n      out[i] = get$1(format, i, field, 'month');\\n    }\\n\\n    return out;\\n  } // ()\\n  // (5)\\n  // (fmt, 5)\\n  // (fmt)\\n  // (true)\\n  // (true, 5)\\n  // (true, fmt, 5)\\n  // (true, fmt)\\n\\n\\n  function listWeekdaysImpl(localeSorted, format, index, field) {\\n    if (typeof localeSorted === 'boolean') {\\n      if (isNumber(format)) {\\n        index = format;\\n        format = undefined;\\n      }\\n\\n      format = format || '';\\n    } else {\\n      format = localeSorted;\\n      index = format;\\n      localeSorted = false;\\n\\n      if (isNumber(format)) {\\n        index = format;\\n        format = undefined;\\n      }\\n\\n      format = format || '';\\n    }\\n\\n    var locale = getLocale(),\\n        shift = localeSorted ? locale._week.dow : 0;\\n\\n    if (index != null) {\\n      return get$1(format, (index + shift) % 7, field, 'day');\\n    }\\n\\n    var i;\\n    var out = [];\\n\\n    for (i = 0; i < 7; i++) {\\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\\n    }\\n\\n    return out;\\n  }\\n\\n  function listMonths(format, index) {\\n    return listMonthsImpl(format, index, 'months');\\n  }\\n\\n  function listMonthsShort(format, index) {\\n    return listMonthsImpl(format, index, 'monthsShort');\\n  }\\n\\n  function listWeekdays(localeSorted, format, index) {\\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\\n  }\\n\\n  function listWeekdaysShort(localeSorted, format, index) {\\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\\n  }\\n\\n  function listWeekdaysMin(localeSorted, format, index) {\\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\\n  }\\n\\n  getSetGlobalLocale('en', {\\n    dayOfMonthOrdinalParse: /\\\\d{1,2}(th|st|nd|rd)/,\\n    ordinal: function ordinal(number) {\\n      var b = number % 10,\\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\\n      return number + output;\\n    }\\n  }); // Side effect imports\\n\\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\\n  var mathAbs = Math.abs;\\n\\n  function abs() {\\n    var data = this._data;\\n    this._milliseconds = mathAbs(this._milliseconds);\\n    this._days = mathAbs(this._days);\\n    this._months = mathAbs(this._months);\\n    data.milliseconds = mathAbs(data.milliseconds);\\n    data.seconds = mathAbs(data.seconds);\\n    data.minutes = mathAbs(data.minutes);\\n    data.hours = mathAbs(data.hours);\\n    data.months = mathAbs(data.months);\\n    data.years = mathAbs(data.years);\\n    return this;\\n  }\\n\\n  function addSubtract$1(duration, input, value, direction) {\\n    var other = createDuration(input, value);\\n    duration._milliseconds += direction * other._milliseconds;\\n    duration._days += direction * other._days;\\n    duration._months += direction * other._months;\\n    return duration._bubble();\\n  } // supports only 2.0-style add(1, 's') or add(duration)\\n\\n\\n  function add$1(input, value) {\\n    return addSubtract$1(this, input, value, 1);\\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\\n\\n\\n  function subtract$1(input, value) {\\n    return addSubtract$1(this, input, value, -1);\\n  }\\n\\n  function absCeil(number) {\\n    if (number < 0) {\\n      return Math.floor(number);\\n    } else {\\n      return Math.ceil(number);\\n    }\\n  }\\n\\n  function bubble() {\\n    var milliseconds = this._milliseconds;\\n    var days = this._days;\\n    var months = this._months;\\n    var data = this._data;\\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\\n    // check: https://github.com/moment/moment/issues/2166\\n\\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\\n      days = 0;\\n      months = 0;\\n    } // The following code bubbles up values, see the tests for\\n    // examples of what that means.\\n\\n\\n    data.milliseconds = milliseconds % 1000;\\n    seconds = absFloor(milliseconds / 1000);\\n    data.seconds = seconds % 60;\\n    minutes = absFloor(seconds / 60);\\n    data.minutes = minutes % 60;\\n    hours = absFloor(minutes / 60);\\n    data.hours = hours % 24;\\n    days += absFloor(hours / 24); // convert days to months\\n\\n    monthsFromDays = absFloor(daysToMonths(days));\\n    months += monthsFromDays;\\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\\n\\n    years = absFloor(months / 12);\\n    months %= 12;\\n    data.days = days;\\n    data.months = months;\\n    data.years = years;\\n    return this;\\n  }\\n\\n  function daysToMonths(days) {\\n    // 400 years have 146097 days (taking into account leap year rules)\\n    // 400 years have 12 months === 4800\\n    return days * 4800 / 146097;\\n  }\\n\\n  function monthsToDays(months) {\\n    // the reverse of daysToMonths\\n    return months * 146097 / 4800;\\n  }\\n\\n  function as(units) {\\n    if (!this.isValid()) {\\n      return NaN;\\n    }\\n\\n    var days;\\n    var months;\\n    var milliseconds = this._milliseconds;\\n    units = normalizeUnits(units);\\n\\n    if (units === 'month' || units === 'quarter' || units === 'year') {\\n      days = this._days + milliseconds / 864e5;\\n      months = this._months + daysToMonths(days);\\n\\n      switch (units) {\\n        case 'month':\\n          return months;\\n\\n        case 'quarter':\\n          return months / 3;\\n\\n        case 'year':\\n          return months / 12;\\n      }\\n    } else {\\n      // handle milliseconds separately because of floating point math errors (issue #1867)\\n      days = this._days + Math.round(monthsToDays(this._months));\\n\\n      switch (units) {\\n        case 'week':\\n          return days / 7 + milliseconds / 6048e5;\\n\\n        case 'day':\\n          return days + milliseconds / 864e5;\\n\\n        case 'hour':\\n          return days * 24 + milliseconds / 36e5;\\n\\n        case 'minute':\\n          return days * 1440 + milliseconds / 6e4;\\n\\n        case 'second':\\n          return days * 86400 + milliseconds / 1000;\\n        // Math.floor prevents floating point math errors here\\n\\n        case 'millisecond':\\n          return Math.floor(days * 864e5) + milliseconds;\\n\\n        default:\\n          throw new Error('Unknown unit ' + units);\\n      }\\n    }\\n  } // TODO: Use this.as('ms')?\\n\\n\\n  function valueOf$1() {\\n    if (!this.isValid()) {\\n      return NaN;\\n    }\\n\\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\\n  }\\n\\n  function makeAs(alias) {\\n    return function () {\\n      return this.as(alias);\\n    };\\n  }\\n\\n  var asMilliseconds = makeAs('ms');\\n  var asSeconds = makeAs('s');\\n  var asMinutes = makeAs('m');\\n  var asHours = makeAs('h');\\n  var asDays = makeAs('d');\\n  var asWeeks = makeAs('w');\\n  var asMonths = makeAs('M');\\n  var asQuarters = makeAs('Q');\\n  var asYears = makeAs('y');\\n\\n  function clone$1() {\\n    return createDuration(this);\\n  }\\n\\n  function get$2(units) {\\n    units = normalizeUnits(units);\\n    return this.isValid() ? this[units + 's']() : NaN;\\n  }\\n\\n  function makeGetter(name) {\\n    return function () {\\n      return this.isValid() ? this._data[name] : NaN;\\n    };\\n  }\\n\\n  var milliseconds = makeGetter('milliseconds');\\n  var seconds = makeGetter('seconds');\\n  var minutes = makeGetter('minutes');\\n  var hours = makeGetter('hours');\\n  var days = makeGetter('days');\\n  var months = makeGetter('months');\\n  var years = makeGetter('years');\\n\\n  function weeks() {\\n    return absFloor(this.days() / 7);\\n  }\\n\\n  var round = Math.round;\\n  var thresholds = {\\n    ss: 44,\\n    // a few seconds to seconds\\n    s: 45,\\n    // seconds to minute\\n    m: 45,\\n    // minutes to hour\\n    h: 22,\\n    // hours to day\\n    d: 26,\\n    // days to month\\n    M: 11 // months to year\\n\\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\\n\\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\\n  }\\n\\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\\n    var duration = createDuration(posNegDuration).abs();\\n    var seconds = round(duration.as('s'));\\n    var minutes = round(duration.as('m'));\\n    var hours = round(duration.as('h'));\\n    var days = round(duration.as('d'));\\n    var months = round(duration.as('M'));\\n    var years = round(duration.as('y'));\\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\\n    a[2] = withoutSuffix;\\n    a[3] = +posNegDuration > 0;\\n    a[4] = locale;\\n    return substituteTimeAgo.apply(null, a);\\n  } // This function allows you to set the rounding function for relative time strings\\n\\n\\n  function getSetRelativeTimeRounding(roundingFunction) {\\n    if (roundingFunction === undefined) {\\n      return round;\\n    }\\n\\n    if (typeof roundingFunction === 'function') {\\n      round = roundingFunction;\\n      return true;\\n    }\\n\\n    return false;\\n  } // This function allows you to set a threshold for relative time strings\\n\\n\\n  function getSetRelativeTimeThreshold(threshold, limit) {\\n    if (thresholds[threshold] === undefined) {\\n      return false;\\n    }\\n\\n    if (limit === undefined) {\\n      return thresholds[threshold];\\n    }\\n\\n    thresholds[threshold] = limit;\\n\\n    if (threshold === 's') {\\n      thresholds.ss = limit - 1;\\n    }\\n\\n    return true;\\n  }\\n\\n  function humanize(withSuffix) {\\n    if (!this.isValid()) {\\n      return this.localeData().invalidDate();\\n    }\\n\\n    var locale = this.localeData();\\n    var output = relativeTime$1(this, !withSuffix, locale);\\n\\n    if (withSuffix) {\\n      output = locale.pastFuture(+this, output);\\n    }\\n\\n    return locale.postformat(output);\\n  }\\n\\n  var abs$1 = Math.abs;\\n\\n  function sign(x) {\\n    return (x > 0) - (x < 0) || +x;\\n  }\\n\\n  function toISOString$1() {\\n    // for ISO strings we do not use the normal bubbling rules:\\n    //  * milliseconds bubble up until they become hours\\n    //  * days do not bubble at all\\n    //  * months bubble up until they become years\\n    // This is because there is no context-free conversion between hours and days\\n    // (think of clock changes)\\n    // and also not between days and months (28-31 days per month)\\n    if (!this.isValid()) {\\n      return this.localeData().invalidDate();\\n    }\\n\\n    var seconds = abs$1(this._milliseconds) / 1000;\\n    var days = abs$1(this._days);\\n    var months = abs$1(this._months);\\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\\n\\n    minutes = absFloor(seconds / 60);\\n    hours = absFloor(minutes / 60);\\n    seconds %= 60;\\n    minutes %= 60; // 12 months -> 1 year\\n\\n    years = absFloor(months / 12);\\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\\n\\n    var Y = years;\\n    var M = months;\\n    var D = days;\\n    var h = hours;\\n    var m = minutes;\\n    var s = seconds ? seconds.toFixed(3).replace(/\\\\.?0+$/, '') : '';\\n    var total = this.asSeconds();\\n\\n    if (!total) {\\n      // this is the same as C#'s (Noda) and python (isodate)...\\n      // but not other JS (goog.date)\\n      return 'P0D';\\n    }\\n\\n    var totalSign = total < 0 ? '-' : '';\\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\\n  }\\n\\n  var proto$2 = Duration.prototype;\\n  proto$2.isValid = isValid$1;\\n  proto$2.abs = abs;\\n  proto$2.add = add$1;\\n  proto$2.subtract = subtract$1;\\n  proto$2.as = as;\\n  proto$2.asMilliseconds = asMilliseconds;\\n  proto$2.asSeconds = asSeconds;\\n  proto$2.asMinutes = asMinutes;\\n  proto$2.asHours = asHours;\\n  proto$2.asDays = asDays;\\n  proto$2.asWeeks = asWeeks;\\n  proto$2.asMonths = asMonths;\\n  proto$2.asQuarters = asQuarters;\\n  proto$2.asYears = asYears;\\n  proto$2.valueOf = valueOf$1;\\n  proto$2._bubble = bubble;\\n  proto$2.clone = clone$1;\\n  proto$2.get = get$2;\\n  proto$2.milliseconds = milliseconds;\\n  proto$2.seconds = seconds;\\n  proto$2.minutes = minutes;\\n  proto$2.hours = hours;\\n  proto$2.days = days;\\n  proto$2.weeks = weeks;\\n  proto$2.months = months;\\n  proto$2.years = years;\\n  proto$2.humanize = humanize;\\n  proto$2.toISOString = toISOString$1;\\n  proto$2.toString = toISOString$1;\\n  proto$2.toJSON = toISOString$1;\\n  proto$2.locale = locale;\\n  proto$2.localeData = localeData;\\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\\n  proto$2.lang = lang; // Side effect imports\\n  // FORMATTING\\n\\n  addFormatToken('X', 0, 0, 'unix');\\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\\n\\n  addRegexToken('x', matchSigned);\\n  addRegexToken('X', matchTimestamp);\\n  addParseToken('X', function (input, array, config) {\\n    config._d = new Date(parseFloat(input, 10) * 1000);\\n  });\\n  addParseToken('x', function (input, array, config) {\\n    config._d = new Date(toInt(input));\\n  }); // Side effect imports\\n\\n  hooks.version = '2.24.0';\\n  setHookCallback(createLocal);\\n  hooks.fn = proto;\\n  hooks.min = min;\\n  hooks.max = max;\\n  hooks.now = now;\\n  hooks.utc = createUTC;\\n  hooks.unix = createUnix;\\n  hooks.months = listMonths;\\n  hooks.isDate = isDate;\\n  hooks.locale = getSetGlobalLocale;\\n  hooks.invalid = createInvalid;\\n  hooks.duration = createDuration;\\n  hooks.isMoment = isMoment;\\n  hooks.weekdays = listWeekdays;\\n  hooks.parseZone = createInZone;\\n  hooks.localeData = getLocale;\\n  hooks.isDuration = isDuration;\\n  hooks.monthsShort = listMonthsShort;\\n  hooks.weekdaysMin = listWeekdaysMin;\\n  hooks.defineLocale = defineLocale;\\n  hooks.updateLocale = updateLocale;\\n  hooks.locales = listLocales;\\n  hooks.weekdaysShort = listWeekdaysShort;\\n  hooks.normalizeUnits = normalizeUnits;\\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\\n  hooks.calendarFormat = getCalendarFormat;\\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\\n\\n  hooks.HTML5_FMT = {\\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\\n    // <input type=\\\"datetime-local\\\" />\\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\\n    // <input type=\\\"datetime-local\\\" step=\\\"1\\\" />\\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\\n    // <input type=\\\"datetime-local\\\" step=\\\"0.001\\\" />\\n    DATE: 'YYYY-MM-DD',\\n    // <input type=\\\"date\\\" />\\n    TIME: 'HH:mm',\\n    // <input type=\\\"time\\\" />\\n    TIME_SECONDS: 'HH:mm:ss',\\n    // <input type=\\\"time\\\" step=\\\"1\\\" />\\n    TIME_MS: 'HH:mm:ss.SSS',\\n    // <input type=\\\"time\\\" step=\\\"0.001\\\" />\\n    WEEK: 'GGGG-[W]WW',\\n    // <input type=\\\"week\\\" />\\n    MONTH: 'YYYY-MM' // <input type=\\\"month\\\" />\\n\\n  };\\n  return hooks;\\n});\",\"var moment = module.exports = require(\\\"./moment-timezone\\\");\\n\\nmoment.tz.load(require('./data/packed/latest.json'));\",\"/**\\n * Module dependencies.\\n */\\nvar debug = require('debug')('socket.io-parser');\\n\\nvar Emitter = require('component-emitter');\\n\\nvar binary = require('./binary');\\n\\nvar isArray = require('isarray');\\n\\nvar isBuf = require('./is-buffer');\\n/**\\n * Protocol version.\\n *\\n * @api public\\n */\\n\\n\\nexports.protocol = 4;\\n/**\\n * Packet types.\\n *\\n * @api public\\n */\\n\\nexports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'ACK', 'ERROR', 'BINARY_EVENT', 'BINARY_ACK'];\\n/**\\n * Packet type `connect`.\\n *\\n * @api public\\n */\\n\\nexports.CONNECT = 0;\\n/**\\n * Packet type `disconnect`.\\n *\\n * @api public\\n */\\n\\nexports.DISCONNECT = 1;\\n/**\\n * Packet type `event`.\\n *\\n * @api public\\n */\\n\\nexports.EVENT = 2;\\n/**\\n * Packet type `ack`.\\n *\\n * @api public\\n */\\n\\nexports.ACK = 3;\\n/**\\n * Packet type `error`.\\n *\\n * @api public\\n */\\n\\nexports.ERROR = 4;\\n/**\\n * Packet type 'binary event'\\n *\\n * @api public\\n */\\n\\nexports.BINARY_EVENT = 5;\\n/**\\n * Packet type `binary ack`. For acks with binary arguments.\\n *\\n * @api public\\n */\\n\\nexports.BINARY_ACK = 6;\\n/**\\n * Encoder constructor.\\n *\\n * @api public\\n */\\n\\nexports.Encoder = Encoder;\\n/**\\n * Decoder constructor.\\n *\\n * @api public\\n */\\n\\nexports.Decoder = Decoder;\\n/**\\n * A socket.io Encoder instance\\n *\\n * @api public\\n */\\n\\nfunction Encoder() {}\\n\\nvar ERROR_PACKET = exports.ERROR + '\\\"encode error\\\"';\\n/**\\n * Encode a packet as a single string if non-binary, or as a\\n * buffer sequence, depending on packet type.\\n *\\n * @param {Object} obj - packet object\\n * @param {Function} callback - function to handle encodings (likely engine.write)\\n * @return Calls callback with Array of encodings\\n * @api public\\n */\\n\\nEncoder.prototype.encode = function (obj, callback) {\\n  debug('encoding packet %j', obj);\\n\\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\\n    encodeAsBinary(obj, callback);\\n  } else {\\n    var encoding = encodeAsString(obj);\\n    callback([encoding]);\\n  }\\n};\\n/**\\n * Encode packet as string.\\n *\\n * @param {Object} packet\\n * @return {String} encoded\\n * @api private\\n */\\n\\n\\nfunction encodeAsString(obj) {\\n  // first is type\\n  var str = '' + obj.type; // attachments if we have them\\n\\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\\n    str += obj.attachments + '-';\\n  } // if we have a namespace other than `/`\\n  // we append it followed by a comma `,`\\n\\n\\n  if (obj.nsp && '/' !== obj.nsp) {\\n    str += obj.nsp + ',';\\n  } // immediately followed by the id\\n\\n\\n  if (null != obj.id) {\\n    str += obj.id;\\n  } // json data\\n\\n\\n  if (null != obj.data) {\\n    var payload = tryStringify(obj.data);\\n\\n    if (payload !== false) {\\n      str += payload;\\n    } else {\\n      return ERROR_PACKET;\\n    }\\n  }\\n\\n  debug('encoded %j as %s', obj, str);\\n  return str;\\n}\\n\\nfunction tryStringify(str) {\\n  try {\\n    return JSON.stringify(str);\\n  } catch (e) {\\n    return false;\\n  }\\n}\\n/**\\n * Encode packet as 'buffer sequence' by removing blobs, and\\n * deconstructing packet into object with placeholders and\\n * a list of buffers.\\n *\\n * @param {Object} packet\\n * @return {Buffer} encoded\\n * @api private\\n */\\n\\n\\nfunction encodeAsBinary(obj, callback) {\\n  function writeEncoding(bloblessData) {\\n    var deconstruction = binary.deconstructPacket(bloblessData);\\n    var pack = encodeAsString(deconstruction.packet);\\n    var buffers = deconstruction.buffers;\\n    buffers.unshift(pack); // add packet info to beginning of data list\\n\\n    callback(buffers); // write all the buffers\\n  }\\n\\n  binary.removeBlobs(obj, writeEncoding);\\n}\\n/**\\n * A socket.io Decoder instance\\n *\\n * @return {Object} decoder\\n * @api public\\n */\\n\\n\\nfunction Decoder() {\\n  this.reconstructor = null;\\n}\\n/**\\n * Mix in `Emitter` with Decoder.\\n */\\n\\n\\nEmitter(Decoder.prototype);\\n/**\\n * Decodes an encoded packet string into packet JSON.\\n *\\n * @param {String} obj - encoded packet\\n * @return {Object} packet\\n * @api public\\n */\\n\\nDecoder.prototype.add = function (obj) {\\n  var packet;\\n\\n  if (typeof obj === 'string') {\\n    packet = decodeString(obj);\\n\\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) {\\n      // binary packet's json\\n      this.reconstructor = new BinaryReconstructor(packet); // no attachments, labeled binary but no binary data to follow\\n\\n      if (this.reconstructor.reconPack.attachments === 0) {\\n        this.emit('decoded', packet);\\n      }\\n    } else {\\n      // non-binary full packet\\n      this.emit('decoded', packet);\\n    }\\n  } else if (isBuf(obj) || obj.base64) {\\n    // raw binary data\\n    if (!this.reconstructor) {\\n      throw new Error('got binary data when not reconstructing a packet');\\n    } else {\\n      packet = this.reconstructor.takeBinaryData(obj);\\n\\n      if (packet) {\\n        // received final buffer\\n        this.reconstructor = null;\\n        this.emit('decoded', packet);\\n      }\\n    }\\n  } else {\\n    throw new Error('Unknown type: ' + obj);\\n  }\\n};\\n/**\\n * Decode a packet String (JSON data)\\n *\\n * @param {String} str\\n * @return {Object} packet\\n * @api private\\n */\\n\\n\\nfunction decodeString(str) {\\n  var i = 0; // look up type\\n\\n  var p = {\\n    type: Number(str.charAt(0))\\n  };\\n\\n  if (null == exports.types[p.type]) {\\n    return error('unknown packet type ' + p.type);\\n  } // look up attachments if type binary\\n\\n\\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\\n    var buf = '';\\n\\n    while (str.charAt(++i) !== '-') {\\n      buf += str.charAt(i);\\n      if (i == str.length) break;\\n    }\\n\\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\\n      throw new Error('Illegal attachments');\\n    }\\n\\n    p.attachments = Number(buf);\\n  } // look up namespace (if any)\\n\\n\\n  if ('/' === str.charAt(i + 1)) {\\n    p.nsp = '';\\n\\n    while (++i) {\\n      var c = str.charAt(i);\\n      if (',' === c) break;\\n      p.nsp += c;\\n      if (i === str.length) break;\\n    }\\n  } else {\\n    p.nsp = '/';\\n  } // look up id\\n\\n\\n  var next = str.charAt(i + 1);\\n\\n  if ('' !== next && Number(next) == next) {\\n    p.id = '';\\n\\n    while (++i) {\\n      var c = str.charAt(i);\\n\\n      if (null == c || Number(c) != c) {\\n        --i;\\n        break;\\n      }\\n\\n      p.id += str.charAt(i);\\n      if (i === str.length) break;\\n    }\\n\\n    p.id = Number(p.id);\\n  } // look up json data\\n\\n\\n  if (str.charAt(++i)) {\\n    var payload = tryParse(str.substr(i));\\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\\n\\n    if (isPayloadValid) {\\n      p.data = payload;\\n    } else {\\n      return error('invalid payload');\\n    }\\n  }\\n\\n  debug('decoded %s as %j', str, p);\\n  return p;\\n}\\n\\nfunction tryParse(str) {\\n  try {\\n    return JSON.parse(str);\\n  } catch (e) {\\n    return false;\\n  }\\n}\\n/**\\n * Deallocates a parser's resources\\n *\\n * @api public\\n */\\n\\n\\nDecoder.prototype.destroy = function () {\\n  if (this.reconstructor) {\\n    this.reconstructor.finishedReconstruction();\\n  }\\n};\\n/**\\n * A manager of a binary event's 'buffer sequence'. Should\\n * be constructed whenever a packet of type BINARY_EVENT is\\n * decoded.\\n *\\n * @param {Object} packet\\n * @return {BinaryReconstructor} initialized reconstructor\\n * @api private\\n */\\n\\n\\nfunction BinaryReconstructor(packet) {\\n  this.reconPack = packet;\\n  this.buffers = [];\\n}\\n/**\\n * Method to be called when binary data received from connection\\n * after a BINARY_EVENT packet.\\n *\\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\\n * @return {null | Object} returns null if more binary data is expected or\\n *   a reconstructed packet object if all buffers have been received.\\n * @api private\\n */\\n\\n\\nBinaryReconstructor.prototype.takeBinaryData = function (binData) {\\n  this.buffers.push(binData);\\n\\n  if (this.buffers.length === this.reconPack.attachments) {\\n    // done with buffer list\\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\\n    this.finishedReconstruction();\\n    return packet;\\n  }\\n\\n  return null;\\n};\\n/**\\n * Cleans up binary packet reconstruction variables.\\n *\\n * @api private\\n */\\n\\n\\nBinaryReconstructor.prototype.finishedReconstruction = function () {\\n  this.reconPack = null;\\n  this.buffers = [];\\n};\\n\\nfunction error(msg) {\\n  return {\\n    type: exports.ERROR,\\n    data: 'parser error: ' + msg\\n  };\\n}\",\"// browser shim for xmlhttprequest module\\nvar hasCORS = require('has-cors');\\n\\nmodule.exports = function (opts) {\\n  var xdomain = opts.xdomain; // scheme must be same when usign XDomainRequest\\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\\n\\n  var xscheme = opts.xscheme; // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\\n  // https://github.com/Automattic/engine.io-client/pull/217\\n\\n  var enablesXDR = opts.enablesXDR; // XMLHttpRequest can be disabled on IE\\n\\n  try {\\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\\n      return new XMLHttpRequest();\\n    }\\n  } catch (e) {} // Use XDomainRequest for IE8 if enablesXDR is true\\n  // because loading bar keeps flashing when using jsonp-polling\\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\\n\\n\\n  try {\\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\\n      return new XDomainRequest();\\n    }\\n  } catch (e) {}\\n\\n  if (!xdomain) {\\n    try {\\n      return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\\n    } catch (e) {}\\n  }\\n};\",\"/**\\n * Module dependencies.\\n */\\nvar parser = require('engine.io-parser');\\n\\nvar Emitter = require('component-emitter');\\n/**\\n * Module exports.\\n */\\n\\n\\nmodule.exports = Transport;\\n/**\\n * Transport abstract constructor.\\n *\\n * @param {Object} options.\\n * @api private\\n */\\n\\nfunction Transport(opts) {\\n  this.path = opts.path;\\n  this.hostname = opts.hostname;\\n  this.port = opts.port;\\n  this.secure = opts.secure;\\n  this.query = opts.query;\\n  this.timestampParam = opts.timestampParam;\\n  this.timestampRequests = opts.timestampRequests;\\n  this.readyState = '';\\n  this.agent = opts.agent || false;\\n  this.socket = opts.socket;\\n  this.enablesXDR = opts.enablesXDR; // SSL options for Node.js client\\n\\n  this.pfx = opts.pfx;\\n  this.key = opts.key;\\n  this.passphrase = opts.passphrase;\\n  this.cert = opts.cert;\\n  this.ca = opts.ca;\\n  this.ciphers = opts.ciphers;\\n  this.rejectUnauthorized = opts.rejectUnauthorized;\\n  this.forceNode = opts.forceNode; // results of ReactNative environment detection\\n\\n  this.isReactNative = opts.isReactNative; // other options for Node.js client\\n\\n  this.extraHeaders = opts.extraHeaders;\\n  this.localAddress = opts.localAddress;\\n}\\n/**\\n * Mix in `Emitter`.\\n */\\n\\n\\nEmitter(Transport.prototype);\\n/**\\n * Emits an error.\\n *\\n * @param {String} str\\n * @return {Transport} for chaining\\n * @api public\\n */\\n\\nTransport.prototype.onError = function (msg, desc) {\\n  var err = new Error(msg);\\n  err.type = 'TransportError';\\n  err.description = desc;\\n  this.emit('error', err);\\n  return this;\\n};\\n/**\\n * Opens the transport.\\n *\\n * @api public\\n */\\n\\n\\nTransport.prototype.open = function () {\\n  if ('closed' === this.readyState || '' === this.readyState) {\\n    this.readyState = 'opening';\\n    this.doOpen();\\n  }\\n\\n  return this;\\n};\\n/**\\n * Closes the transport.\\n *\\n * @api private\\n */\\n\\n\\nTransport.prototype.close = function () {\\n  if ('opening' === this.readyState || 'open' === this.readyState) {\\n    this.doClose();\\n    this.onClose();\\n  }\\n\\n  return this;\\n};\\n/**\\n * Sends multiple packets.\\n *\\n * @param {Array} packets\\n * @api private\\n */\\n\\n\\nTransport.prototype.send = function (packets) {\\n  if ('open' === this.readyState) {\\n    this.write(packets);\\n  } else {\\n    throw new Error('Transport not open');\\n  }\\n};\\n/**\\n * Called upon open\\n *\\n * @api private\\n */\\n\\n\\nTransport.prototype.onOpen = function () {\\n  this.readyState = 'open';\\n  this.writable = true;\\n  this.emit('open');\\n};\\n/**\\n * Called with data.\\n *\\n * @param {String} data\\n * @api private\\n */\\n\\n\\nTransport.prototype.onData = function (data) {\\n  var packet = parser.decodePacket(data, this.socket.binaryType);\\n  this.onPacket(packet);\\n};\\n/**\\n * Called with a decoded packet.\\n */\\n\\n\\nTransport.prototype.onPacket = function (packet) {\\n  this.emit('packet', packet);\\n};\\n/**\\n * Called upon close.\\n *\\n * @api private\\n */\\n\\n\\nTransport.prototype.onClose = function () {\\n  this.readyState = 'closed';\\n  this.emit('close');\\n};\",\"/**\\r\\n * Expose `Emitter`.\\r\\n */\\nif (typeof module !== 'undefined') {\\n  module.exports = Emitter;\\n}\\n/**\\r\\n * Initialize a new `Emitter`.\\r\\n *\\r\\n * @api public\\r\\n */\\n\\n\\nfunction Emitter(obj) {\\n  if (obj) return mixin(obj);\\n}\\n\\n;\\n/**\\r\\n * Mixin the emitter properties.\\r\\n *\\r\\n * @param {Object} obj\\r\\n * @return {Object}\\r\\n * @api private\\r\\n */\\n\\nfunction mixin(obj) {\\n  for (var key in Emitter.prototype) {\\n    obj[key] = Emitter.prototype[key];\\n  }\\n\\n  return obj;\\n}\\n/**\\r\\n * Listen on the given `event` with `fn`.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Function} fn\\r\\n * @return {Emitter}\\r\\n * @api public\\r\\n */\\n\\n\\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\\n  this._callbacks = this._callbacks || {};\\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\\n  return this;\\n};\\n/**\\r\\n * Adds an `event` listener that will be invoked a single\\r\\n * time then automatically removed.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Function} fn\\r\\n * @return {Emitter}\\r\\n * @api public\\r\\n */\\n\\n\\nEmitter.prototype.once = function (event, fn) {\\n  function on() {\\n    this.off(event, on);\\n    fn.apply(this, arguments);\\n  }\\n\\n  on.fn = fn;\\n  this.on(event, on);\\n  return this;\\n};\\n/**\\r\\n * Remove the given callback for `event` or all\\r\\n * registered callbacks.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Function} fn\\r\\n * @return {Emitter}\\r\\n * @api public\\r\\n */\\n\\n\\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\\n  this._callbacks = this._callbacks || {}; // all\\n\\n  if (0 == arguments.length) {\\n    this._callbacks = {};\\n    return this;\\n  } // specific event\\n\\n\\n  var callbacks = this._callbacks['$' + event];\\n  if (!callbacks) return this; // remove all handlers\\n\\n  if (1 == arguments.length) {\\n    delete this._callbacks['$' + event];\\n    return this;\\n  } // remove specific handler\\n\\n\\n  var cb;\\n\\n  for (var i = 0; i < callbacks.length; i++) {\\n    cb = callbacks[i];\\n\\n    if (cb === fn || cb.fn === fn) {\\n      callbacks.splice(i, 1);\\n      break;\\n    }\\n  }\\n\\n  return this;\\n};\\n/**\\r\\n * Emit `event` with the given args.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Mixed} ...\\r\\n * @return {Emitter}\\r\\n */\\n\\n\\nEmitter.prototype.emit = function (event) {\\n  this._callbacks = this._callbacks || {};\\n  var args = [].slice.call(arguments, 1),\\n      callbacks = this._callbacks['$' + event];\\n\\n  if (callbacks) {\\n    callbacks = callbacks.slice(0);\\n\\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\\n      callbacks[i].apply(this, args);\\n    }\\n  }\\n\\n  return this;\\n};\\n/**\\r\\n * Return array of callbacks for `event`.\\r\\n *\\r\\n * @param {String} event\\r\\n * @return {Array}\\r\\n * @api public\\r\\n */\\n\\n\\nEmitter.prototype.listeners = function (event) {\\n  this._callbacks = this._callbacks || {};\\n  return this._callbacks['$' + event] || [];\\n};\\n/**\\r\\n * Check if this emitter has `event` handlers.\\r\\n *\\r\\n * @param {String} event\\r\\n * @return {Boolean}\\r\\n * @api public\\r\\n */\\n\\n\\nEmitter.prototype.hasListeners = function (event) {\\n  return !!this.listeners(event).length;\\n};\",\"// Ported from https://github.com/mafintosh/end-of-stream with\\n// permission from the author, Mathias Buus (@mafintosh).\\n'use strict';\\n\\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\\n\\nfunction once(callback) {\\n  var called = false;\\n  return function () {\\n    if (called) return;\\n    called = true;\\n\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    callback.apply(this, args);\\n  };\\n}\\n\\nfunction noop() {}\\n\\nfunction isRequest(stream) {\\n  return stream.setHeader && typeof stream.abort === 'function';\\n}\\n\\nfunction eos(stream, opts, callback) {\\n  if (typeof opts === 'function') return eos(stream, null, opts);\\n  if (!opts) opts = {};\\n  callback = once(callback || noop);\\n  var readable = opts.readable || opts.readable !== false && stream.readable;\\n  var writable = opts.writable || opts.writable !== false && stream.writable;\\n\\n  var onlegacyfinish = function onlegacyfinish() {\\n    if (!stream.writable) onfinish();\\n  };\\n\\n  var writableEnded = stream._writableState && stream._writableState.finished;\\n\\n  var onfinish = function onfinish() {\\n    writable = false;\\n    writableEnded = true;\\n    if (!readable) callback.call(stream);\\n  };\\n\\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\\n\\n  var onend = function onend() {\\n    readable = false;\\n    readableEnded = true;\\n    if (!writable) callback.call(stream);\\n  };\\n\\n  var onerror = function onerror(err) {\\n    callback.call(stream, err);\\n  };\\n\\n  var onclose = function onclose() {\\n    var err;\\n\\n    if (readable && !readableEnded) {\\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\\n      return callback.call(stream, err);\\n    }\\n\\n    if (writable && !writableEnded) {\\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\\n      return callback.call(stream, err);\\n    }\\n  };\\n\\n  var onrequest = function onrequest() {\\n    stream.req.on('finish', onfinish);\\n  };\\n\\n  if (isRequest(stream)) {\\n    stream.on('complete', onfinish);\\n    stream.on('abort', onclose);\\n    if (stream.req) onrequest();else stream.on('request', onrequest);\\n  } else if (writable && !stream._writableState) {\\n    // legacy streams\\n    stream.on('end', onlegacyfinish);\\n    stream.on('close', onlegacyfinish);\\n  }\\n\\n  stream.on('end', onend);\\n  stream.on('finish', onfinish);\\n  if (opts.error !== false) stream.on('error', onerror);\\n  stream.on('close', onclose);\\n  return function () {\\n    stream.removeListener('complete', onfinish);\\n    stream.removeListener('abort', onclose);\\n    stream.removeListener('request', onrequest);\\n    if (stream.req) stream.req.removeListener('finish', onfinish);\\n    stream.removeListener('end', onlegacyfinish);\\n    stream.removeListener('close', onlegacyfinish);\\n    stream.removeListener('finish', onfinish);\\n    stream.removeListener('end', onend);\\n    stream.removeListener('error', onerror);\\n    stream.removeListener('close', onclose);\\n  };\\n}\\n\\nmodule.exports = eos;\",\"//package mp3;\\nvar common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nvar L3Side = require('./L3Side.js');\\n\\nfunction GrInfo() {\\n  //float xr[] = new float[576];\\n  this.xr = new_float(576); //int l3_enc[] = new int[576];\\n\\n  this.l3_enc = new_int(576); //int scalefac[] = new int[L3Side.SFBMAX];\\n\\n  this.scalefac = new_int(L3Side.SFBMAX);\\n  this.xrpow_max = 0.;\\n  this.part2_3_length = 0;\\n  this.big_values = 0;\\n  this.count1 = 0;\\n  this.global_gain = 0;\\n  this.scalefac_compress = 0;\\n  this.block_type = 0;\\n  this.mixed_block_flag = 0;\\n  this.table_select = new_int(3);\\n  this.subblock_gain = new_int(3 + 1);\\n  this.region0_count = 0;\\n  this.region1_count = 0;\\n  this.preflag = 0;\\n  this.scalefac_scale = 0;\\n  this.count1table_select = 0;\\n  this.part2_length = 0;\\n  this.sfb_lmax = 0;\\n  this.sfb_smin = 0;\\n  this.psy_lmax = 0;\\n  this.sfbmax = 0;\\n  this.psymax = 0;\\n  this.sfbdivide = 0;\\n  this.width = new_int(L3Side.SFBMAX);\\n  this.window = new_int(L3Side.SFBMAX);\\n  this.count1bits = 0;\\n  /**\\n   * added for LSF\\n   */\\n\\n  this.sfb_partition_table = null;\\n  this.slen = new_int(4);\\n  this.max_nonzero_coeff = 0;\\n  var self = this;\\n\\n  function clone_int(array) {\\n    return new Int32Array(array);\\n  }\\n\\n  function clone_float(array) {\\n    return new Float32Array(array);\\n  }\\n\\n  this.assign = function (other) {\\n    self.xr = clone_float(other.xr); //.slice(0); //clone();\\n\\n    self.l3_enc = clone_int(other.l3_enc); //.slice(0); //clone();\\n\\n    self.scalefac = clone_int(other.scalefac); //.slice(0); //clone();\\n\\n    self.xrpow_max = other.xrpow_max;\\n    self.part2_3_length = other.part2_3_length;\\n    self.big_values = other.big_values;\\n    self.count1 = other.count1;\\n    self.global_gain = other.global_gain;\\n    self.scalefac_compress = other.scalefac_compress;\\n    self.block_type = other.block_type;\\n    self.mixed_block_flag = other.mixed_block_flag;\\n    self.table_select = clone_int(other.table_select); //.slice(0); //clone();\\n\\n    self.subblock_gain = clone_int(other.subblock_gain); //.slice(0); //.clone();\\n\\n    self.region0_count = other.region0_count;\\n    self.region1_count = other.region1_count;\\n    self.preflag = other.preflag;\\n    self.scalefac_scale = other.scalefac_scale;\\n    self.count1table_select = other.count1table_select;\\n    self.part2_length = other.part2_length;\\n    self.sfb_lmax = other.sfb_lmax;\\n    self.sfb_smin = other.sfb_smin;\\n    self.psy_lmax = other.psy_lmax;\\n    self.sfbmax = other.sfbmax;\\n    self.psymax = other.psymax;\\n    self.sfbdivide = other.sfbdivide;\\n    self.width = clone_int(other.width); //.slice(0); //.clone();\\n\\n    self.window = clone_int(other.window); //.slice(0); //.clone();\\n\\n    self.count1bits = other.count1bits;\\n    self.sfb_partition_table = other.sfb_partition_table.slice(0); //.clone();\\n\\n    self.slen = clone_int(other.slen); //.slice(0); //.clone();\\n\\n    self.max_nonzero_coeff = other.max_nonzero_coeff;\\n  };\\n}\\n\\nmodule.exports = GrInfo;\",\"function HuffCodeTab(len, max, tab, hl) {\\n  this.xlen = len;\\n  this.linmax = max;\\n  this.table = tab;\\n  this.hlen = hl;\\n}\\n\\nvar Tables = {};\\nTables.t1HB = [1, 1, 1, 0];\\nTables.t2HB = [1, 2, 1, 3, 1, 1, 3, 2, 0];\\nTables.t3HB = [3, 2, 1, 1, 1, 1, 3, 2, 0];\\nTables.t5HB = [1, 2, 6, 5, 3, 1, 4, 4, 7, 5, 7, 1, 6, 1, 1, 0];\\nTables.t6HB = [7, 3, 5, 1, 6, 2, 3, 2, 5, 4, 4, 1, 3, 3, 2, 0];\\nTables.t7HB = [1, 2, 10, 19, 16, 10, 3, 3, 7, 10, 5, 3, 11, 4, 13, 17, 8, 4, 12, 11, 18, 15, 11, 2, 7, 6, 9, 14, 3, 1, 6, 4, 5, 3, 2, 0];\\nTables.t8HB = [3, 4, 6, 18, 12, 5, 5, 1, 2, 16, 9, 3, 7, 3, 5, 14, 7, 3, 19, 17, 15, 13, 10, 4, 13, 5, 8, 11, 5, 1, 12, 4, 4, 1, 1, 0];\\nTables.t9HB = [7, 5, 9, 14, 15, 7, 6, 4, 5, 5, 6, 7, 7, 6, 8, 8, 8, 5, 15, 6, 9, 10, 5, 1, 11, 7, 9, 6, 4, 1, 14, 4, 6, 2, 6, 0];\\nTables.t10HB = [1, 2, 10, 23, 35, 30, 12, 17, 3, 3, 8, 12, 18, 21, 12, 7, 11, 9, 15, 21, 32, 40, 19, 6, 14, 13, 22, 34, 46, 23, 18, 7, 20, 19, 33, 47, 27, 22, 9, 3, 31, 22, 41, 26, 21, 20, 5, 3, 14, 13, 10, 11, 16, 6, 5, 1, 9, 8, 7, 8, 4, 4, 2, 0];\\nTables.t11HB = [3, 4, 10, 24, 34, 33, 21, 15, 5, 3, 4, 10, 32, 17, 11, 10, 11, 7, 13, 18, 30, 31, 20, 5, 25, 11, 19, 59, 27, 18, 12, 5, 35, 33, 31, 58, 30, 16, 7, 5, 28, 26, 32, 19, 17, 15, 8, 14, 14, 12, 9, 13, 14, 9, 4, 1, 11, 4, 6, 6, 6, 3, 2, 0];\\nTables.t12HB = [9, 6, 16, 33, 41, 39, 38, 26, 7, 5, 6, 9, 23, 16, 26, 11, 17, 7, 11, 14, 21, 30, 10, 7, 17, 10, 15, 12, 18, 28, 14, 5, 32, 13, 22, 19, 18, 16, 9, 5, 40, 17, 31, 29, 17, 13, 4, 2, 27, 12, 11, 15, 10, 7, 4, 1, 27, 12, 8, 12, 6, 3, 1, 0];\\nTables.t13HB = [1, 5, 14, 21, 34, 51, 46, 71, 42, 52, 68, 52, 67, 44, 43, 19, 3, 4, 12, 19, 31, 26, 44, 33, 31, 24, 32, 24, 31, 35, 22, 14, 15, 13, 23, 36, 59, 49, 77, 65, 29, 40, 30, 40, 27, 33, 42, 16, 22, 20, 37, 61, 56, 79, 73, 64, 43, 76, 56, 37, 26, 31, 25, 14, 35, 16, 60, 57, 97, 75, 114, 91, 54, 73, 55, 41, 48, 53, 23, 24, 58, 27, 50, 96, 76, 70, 93, 84, 77, 58, 79, 29, 74, 49, 41, 17, 47, 45, 78, 74, 115, 94, 90, 79, 69, 83, 71, 50, 59, 38, 36, 15, 72, 34, 56, 95, 92, 85, 91, 90, 86, 73, 77, 65, 51, 44, 43, 42, 43, 20, 30, 44, 55, 78, 72, 87, 78, 61, 46, 54, 37, 30, 20, 16, 53, 25, 41, 37, 44, 59, 54, 81, 66, 76, 57, 54, 37, 18, 39, 11, 35, 33, 31, 57, 42, 82, 72, 80, 47, 58, 55, 21, 22, 26, 38, 22, 53, 25, 23, 38, 70, 60, 51, 36, 55, 26, 34, 23, 27, 14, 9, 7, 34, 32, 28, 39, 49, 75, 30, 52, 48, 40, 52, 28, 18, 17, 9, 5, 45, 21, 34, 64, 56, 50, 49, 45, 31, 19, 12, 15, 10, 7, 6, 3, 48, 23, 20, 39, 36, 35, 53, 21, 16, 23, 13, 10, 6, 1, 4, 2, 16, 15, 17, 27, 25, 20, 29, 11, 17, 12, 16, 8, 1, 1, 0, 1];\\nTables.t15HB = [7, 12, 18, 53, 47, 76, 124, 108, 89, 123, 108, 119, 107, 81, 122, 63, 13, 5, 16, 27, 46, 36, 61, 51, 42, 70, 52, 83, 65, 41, 59, 36, 19, 17, 15, 24, 41, 34, 59, 48, 40, 64, 50, 78, 62, 80, 56, 33, 29, 28, 25, 43, 39, 63, 55, 93, 76, 59, 93, 72, 54, 75, 50, 29, 52, 22, 42, 40, 67, 57, 95, 79, 72, 57, 89, 69, 49, 66, 46, 27, 77, 37, 35, 66, 58, 52, 91, 74, 62, 48, 79, 63, 90, 62, 40, 38, 125, 32, 60, 56, 50, 92, 78, 65, 55, 87, 71, 51, 73, 51, 70, 30, 109, 53, 49, 94, 88, 75, 66, 122, 91, 73, 56, 42, 64, 44, 21, 25, 90, 43, 41, 77, 73, 63, 56, 92, 77, 66, 47, 67, 48, 53, 36, 20, 71, 34, 67, 60, 58, 49, 88, 76, 67, 106, 71, 54, 38, 39, 23, 15, 109, 53, 51, 47, 90, 82, 58, 57, 48, 72, 57, 41, 23, 27, 62, 9, 86, 42, 40, 37, 70, 64, 52, 43, 70, 55, 42, 25, 29, 18, 11, 11, 118, 68, 30, 55, 50, 46, 74, 65, 49, 39, 24, 16, 22, 13, 14, 7, 91, 44, 39, 38, 34, 63, 52, 45, 31, 52, 28, 19, 14, 8, 9, 3, 123, 60, 58, 53, 47, 43, 32, 22, 37, 24, 17, 12, 15, 10, 2, 1, 71, 37, 34, 30, 28, 20, 17, 26, 21, 16, 10, 6, 8, 6, 2, 0];\\nTables.t16HB = [1, 5, 14, 44, 74, 63, 110, 93, 172, 149, 138, 242, 225, 195, 376, 17, 3, 4, 12, 20, 35, 62, 53, 47, 83, 75, 68, 119, 201, 107, 207, 9, 15, 13, 23, 38, 67, 58, 103, 90, 161, 72, 127, 117, 110, 209, 206, 16, 45, 21, 39, 69, 64, 114, 99, 87, 158, 140, 252, 212, 199, 387, 365, 26, 75, 36, 68, 65, 115, 101, 179, 164, 155, 264, 246, 226, 395, 382, 362, 9, 66, 30, 59, 56, 102, 185, 173, 265, 142, 253, 232, 400, 388, 378, 445, 16, 111, 54, 52, 100, 184, 178, 160, 133, 257, 244, 228, 217, 385, 366, 715, 10, 98, 48, 91, 88, 165, 157, 148, 261, 248, 407, 397, 372, 380, 889, 884, 8, 85, 84, 81, 159, 156, 143, 260, 249, 427, 401, 392, 383, 727, 713, 708, 7, 154, 76, 73, 141, 131, 256, 245, 426, 406, 394, 384, 735, 359, 710, 352, 11, 139, 129, 67, 125, 247, 233, 229, 219, 393, 743, 737, 720, 885, 882, 439, 4, 243, 120, 118, 115, 227, 223, 396, 746, 742, 736, 721, 712, 706, 223, 436, 6, 202, 224, 222, 218, 216, 389, 386, 381, 364, 888, 443, 707, 440, 437, 1728, 4, 747, 211, 210, 208, 370, 379, 734, 723, 714, 1735, 883, 877, 876, 3459, 865, 2, 377, 369, 102, 187, 726, 722, 358, 711, 709, 866, 1734, 871, 3458, 870, 434, 0, 12, 10, 7, 11, 10, 17, 11, 9, 13, 12, 10, 7, 5, 3, 1, 3];\\nTables.t24HB = [15, 13, 46, 80, 146, 262, 248, 434, 426, 669, 653, 649, 621, 517, 1032, 88, 14, 12, 21, 38, 71, 130, 122, 216, 209, 198, 327, 345, 319, 297, 279, 42, 47, 22, 41, 74, 68, 128, 120, 221, 207, 194, 182, 340, 315, 295, 541, 18, 81, 39, 75, 70, 134, 125, 116, 220, 204, 190, 178, 325, 311, 293, 271, 16, 147, 72, 69, 135, 127, 118, 112, 210, 200, 188, 352, 323, 306, 285, 540, 14, 263, 66, 129, 126, 119, 114, 214, 202, 192, 180, 341, 317, 301, 281, 262, 12, 249, 123, 121, 117, 113, 215, 206, 195, 185, 347, 330, 308, 291, 272, 520, 10, 435, 115, 111, 109, 211, 203, 196, 187, 353, 332, 313, 298, 283, 531, 381, 17, 427, 212, 208, 205, 201, 193, 186, 177, 169, 320, 303, 286, 268, 514, 377, 16, 335, 199, 197, 191, 189, 181, 174, 333, 321, 305, 289, 275, 521, 379, 371, 11, 668, 184, 183, 179, 175, 344, 331, 314, 304, 290, 277, 530, 383, 373, 366, 10, 652, 346, 171, 168, 164, 318, 309, 299, 287, 276, 263, 513, 375, 368, 362, 6, 648, 322, 316, 312, 307, 302, 292, 284, 269, 261, 512, 376, 370, 364, 359, 4, 620, 300, 296, 294, 288, 282, 273, 266, 515, 380, 374, 369, 365, 361, 357, 2, 1033, 280, 278, 274, 267, 264, 259, 382, 378, 372, 367, 363, 360, 358, 356, 0, 43, 20, 19, 17, 15, 13, 11, 9, 7, 6, 4, 7, 5, 3, 1, 3];\\nTables.t32HB = [1 << 0, 5 << 1, 4 << 1, 5 << 2, 6 << 1, 5 << 2, 4 << 2, 4 << 3, 7 << 1, 3 << 2, 6 << 2, 0 << 3, 7 << 2, 2 << 3, 3 << 3, 1 << 4];\\nTables.t33HB = [15 << 0, 14 << 1, 13 << 1, 12 << 2, 11 << 1, 10 << 2, 9 << 2, 8 << 3, 7 << 1, 6 << 2, 5 << 2, 4 << 3, 3 << 2, 2 << 3, 1 << 3, 0 << 4];\\nTables.t1l = [1, 4, 3, 5];\\nTables.t2l = [1, 4, 7, 4, 5, 7, 6, 7, 8];\\nTables.t3l = [2, 3, 7, 4, 4, 7, 6, 7, 8];\\nTables.t5l = [1, 4, 7, 8, 4, 5, 8, 9, 7, 8, 9, 10, 8, 8, 9, 10];\\nTables.t6l = [3, 4, 6, 8, 4, 4, 6, 7, 5, 6, 7, 8, 7, 7, 8, 9];\\nTables.t7l = [1, 4, 7, 9, 9, 10, 4, 6, 8, 9, 9, 10, 7, 7, 9, 10, 10, 11, 8, 9, 10, 11, 11, 11, 8, 9, 10, 11, 11, 12, 9, 10, 11, 12, 12, 12];\\nTables.t8l = [2, 4, 7, 9, 9, 10, 4, 4, 6, 10, 10, 10, 7, 6, 8, 10, 10, 11, 9, 10, 10, 11, 11, 12, 9, 9, 10, 11, 12, 12, 10, 10, 11, 11, 13, 13];\\nTables.t9l = [3, 4, 6, 7, 9, 10, 4, 5, 6, 7, 8, 10, 5, 6, 7, 8, 9, 10, 7, 7, 8, 9, 9, 10, 8, 8, 9, 9, 10, 11, 9, 9, 10, 10, 11, 11];\\nTables.t10l = [1, 4, 7, 9, 10, 10, 10, 11, 4, 6, 8, 9, 10, 11, 10, 10, 7, 8, 9, 10, 11, 12, 11, 11, 8, 9, 10, 11, 12, 12, 11, 12, 9, 10, 11, 12, 12, 12, 12, 12, 10, 11, 12, 12, 13, 13, 12, 13, 9, 10, 11, 12, 12, 12, 13, 13, 10, 10, 11, 12, 12, 13, 13, 13];\\nTables.t11l = [2, 4, 6, 8, 9, 10, 9, 10, 4, 5, 6, 8, 10, 10, 9, 10, 6, 7, 8, 9, 10, 11, 10, 10, 8, 8, 9, 11, 10, 12, 10, 11, 9, 10, 10, 11, 11, 12, 11, 12, 9, 10, 11, 12, 12, 13, 12, 13, 9, 9, 9, 10, 11, 12, 12, 12, 9, 9, 10, 11, 12, 12, 12, 12];\\nTables.t12l = [4, 4, 6, 8, 9, 10, 10, 10, 4, 5, 6, 7, 9, 9, 10, 10, 6, 6, 7, 8, 9, 10, 9, 10, 7, 7, 8, 8, 9, 10, 10, 10, 8, 8, 9, 9, 10, 10, 10, 11, 9, 9, 10, 10, 10, 11, 10, 11, 9, 9, 9, 10, 10, 11, 11, 12, 10, 10, 10, 11, 11, 11, 11, 12];\\nTables.t13l = [1, 5, 7, 8, 9, 10, 10, 11, 10, 11, 12, 12, 13, 13, 14, 14, 4, 6, 8, 9, 10, 10, 11, 11, 11, 11, 12, 12, 13, 14, 14, 14, 7, 8, 9, 10, 11, 11, 12, 12, 11, 12, 12, 13, 13, 14, 15, 15, 8, 9, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 15, 9, 9, 11, 11, 12, 12, 13, 13, 12, 13, 13, 14, 14, 15, 15, 16, 10, 10, 11, 12, 12, 12, 13, 13, 13, 13, 14, 13, 15, 15, 16, 16, 10, 11, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 15, 15, 16, 16, 11, 11, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 16, 18, 18, 10, 10, 11, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 16, 17, 17, 11, 11, 12, 12, 13, 13, 13, 15, 14, 15, 15, 16, 16, 16, 18, 17, 11, 12, 12, 13, 13, 14, 14, 15, 14, 15, 16, 15, 16, 17, 18, 19, 12, 12, 12, 13, 14, 14, 14, 14, 15, 15, 15, 16, 17, 17, 17, 18, 12, 13, 13, 14, 14, 15, 14, 15, 16, 16, 17, 17, 17, 18, 18, 18, 13, 13, 14, 15, 15, 15, 16, 16, 16, 16, 16, 17, 18, 17, 18, 18, 14, 14, 14, 15, 15, 15, 17, 16, 16, 19, 17, 17, 17, 19, 18, 18, 13, 14, 15, 16, 16, 16, 17, 16, 17, 17, 18, 18, 21, 20, 21, 18];\\nTables.t15l = [3, 5, 6, 8, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14, 5, 5, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 6, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 13, 13, 13, 7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13, 8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14, 10, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 14, 14, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 14, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 14, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15, 12, 12, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 15, 15, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 14, 15, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15];\\nTables.t16_5l = [1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 11, 4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 11, 7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 12, 9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 13, 10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 12, 10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 13, 11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 13, 11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 13, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 13, 12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 14, 12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 13, 13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 14, 13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 14, 15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 14, 14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 14, 11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 12];\\nTables.t16l = [1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 10, 4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 10, 7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 11, 9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 12, 10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 11, 10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 12, 11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 12, 11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 12, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 12, 12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 13, 12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 12, 13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 13, 15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 13, 14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 13, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10];\\nTables.t24l = [4, 5, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 13, 10, 5, 6, 7, 8, 9, 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 10, 7, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 9, 8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 12, 13, 9, 10, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 9, 10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 9, 11, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 10, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 10, 12, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10, 12, 12, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 10, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10, 13, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 10, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 6];\\nTables.t32l = [1 + 0, 4 + 1, 4 + 1, 5 + 2, 4 + 1, 6 + 2, 5 + 2, 6 + 3, 4 + 1, 5 + 2, 5 + 2, 6 + 3, 5 + 2, 6 + 3, 6 + 3, 6 + 4];\\nTables.t33l = [4 + 0, 4 + 1, 4 + 1, 4 + 2, 4 + 1, 4 + 2, 4 + 2, 4 + 3, 4 + 1, 4 + 2, 4 + 2, 4 + 3, 4 + 2, 4 + 3, 4 + 3, 4 + 4];\\nTables.ht = [\\n/* xlen, linmax, table, hlen */\\nnew HuffCodeTab(0, 0, null, null), new HuffCodeTab(2, 0, Tables.t1HB, Tables.t1l), new HuffCodeTab(3, 0, Tables.t2HB, Tables.t2l), new HuffCodeTab(3, 0, Tables.t3HB, Tables.t3l), new HuffCodeTab(0, 0, null, null),\\n/* Apparently not used */\\nnew HuffCodeTab(4, 0, Tables.t5HB, Tables.t5l), new HuffCodeTab(4, 0, Tables.t6HB, Tables.t6l), new HuffCodeTab(6, 0, Tables.t7HB, Tables.t7l), new HuffCodeTab(6, 0, Tables.t8HB, Tables.t8l), new HuffCodeTab(6, 0, Tables.t9HB, Tables.t9l), new HuffCodeTab(8, 0, Tables.t10HB, Tables.t10l), new HuffCodeTab(8, 0, Tables.t11HB, Tables.t11l), new HuffCodeTab(8, 0, Tables.t12HB, Tables.t12l), new HuffCodeTab(16, 0, Tables.t13HB, Tables.t13l), new HuffCodeTab(0, 0, null, Tables.t16_5l),\\n/* Apparently not used */\\nnew HuffCodeTab(16, 0, Tables.t15HB, Tables.t15l), new HuffCodeTab(1, 1, Tables.t16HB, Tables.t16l), new HuffCodeTab(2, 3, Tables.t16HB, Tables.t16l), new HuffCodeTab(3, 7, Tables.t16HB, Tables.t16l), new HuffCodeTab(4, 15, Tables.t16HB, Tables.t16l), new HuffCodeTab(6, 63, Tables.t16HB, Tables.t16l), new HuffCodeTab(8, 255, Tables.t16HB, Tables.t16l), new HuffCodeTab(10, 1023, Tables.t16HB, Tables.t16l), new HuffCodeTab(13, 8191, Tables.t16HB, Tables.t16l), new HuffCodeTab(4, 15, Tables.t24HB, Tables.t24l), new HuffCodeTab(5, 31, Tables.t24HB, Tables.t24l), new HuffCodeTab(6, 63, Tables.t24HB, Tables.t24l), new HuffCodeTab(7, 127, Tables.t24HB, Tables.t24l), new HuffCodeTab(8, 255, Tables.t24HB, Tables.t24l), new HuffCodeTab(9, 511, Tables.t24HB, Tables.t24l), new HuffCodeTab(11, 2047, Tables.t24HB, Tables.t24l), new HuffCodeTab(13, 8191, Tables.t24HB, Tables.t24l), new HuffCodeTab(0, 0, Tables.t32HB, Tables.t32l), new HuffCodeTab(0, 0, Tables.t33HB, Tables.t33l)];\\n/**\\n * <CODE>\\n *  for (i = 0; i < 16*16; i++) [\\n *      largetbl[i] = ((ht[16].hlen[i]) << 16) + ht[24].hlen[i];\\n *  ]\\n * </CODE>\\n *\\n */\\n\\nTables.largetbl = [0x010004, 0x050005, 0x070007, 0x090008, 0x0a0009, 0x0a000a, 0x0b000a, 0x0b000b, 0x0c000b, 0x0c000c, 0x0c000c, 0x0d000c, 0x0d000c, 0x0d000c, 0x0e000d, 0x0a000a, 0x040005, 0x060006, 0x080007, 0x090008, 0x0a0009, 0x0b000a, 0x0b000a, 0x0b000b, 0x0c000b, 0x0c000b, 0x0c000c, 0x0d000c, 0x0e000c, 0x0d000c, 0x0e000c, 0x0a000a, 0x070007, 0x080007, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000b, 0x0d000b, 0x0c000b, 0x0d000b, 0x0d000c, 0x0d000c, 0x0e000c, 0x0e000d, 0x0b0009, 0x090008, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0c000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0c0009, 0x0a0009, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000d, 0x0b0009, 0x0a000a, 0x0a0009, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0e000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0c0009, 0x0b000a, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000d, 0x0c0009, 0x0b000b, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x11000d, 0x11000d, 0x0c000a, 0x0b000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b, 0x0f000b, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000d, 0x10000d, 0x0c000a, 0x0c000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b, 0x0f000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0f000d, 0x10000d, 0x0f000d, 0x0d000a, 0x0c000c, 0x0d000b, 0x0c000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x10000c, 0x10000c, 0x10000d, 0x11000d, 0x11000d, 0x10000d, 0x0c000a, 0x0d000c, 0x0d000c, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x10000c, 0x10000c, 0x10000c, 0x10000c, 0x10000d, 0x10000d, 0x0f000d, 0x10000d, 0x0d000a, 0x0d000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x11000c, 0x10000d, 0x10000d, 0x10000d, 0x10000d, 0x12000d, 0x0d000a, 0x0f000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000c, 0x10000d, 0x12000d, 0x11000d, 0x11000d, 0x11000d, 0x13000d, 0x11000d, 0x0d000a, 0x0e000d, 0x0f000c, 0x0d000c, 0x0e000c, 0x10000c, 0x10000c, 0x0f000c, 0x10000d, 0x10000d, 0x11000d, 0x12000d, 0x11000d, 0x13000d, 0x11000d, 0x10000d, 0x0d000a, 0x0a0009, 0x0a0009, 0x0a0009, 0x0b0009, 0x0b0009, 0x0c0009, 0x0c0009, 0x0c0009, 0x0d0009, 0x0d0009, 0x0d0009, 0x0d000a, 0x0d000a, 0x0d000a, 0x0d000a, 0x0a0006];\\n/**\\n * <CODE>\\n *  for (i = 0; i < 3*3; i++) [\\n *      table23[i] = ((ht[2].hlen[i]) << 16) + ht[3].hlen[i];\\n *  ]\\n * </CODE>\\n *\\n */\\n\\nTables.table23 = [0x010002, 0x040003, 0x070007, 0x040004, 0x050004, 0x070007, 0x060006, 0x070007, 0x080008];\\n/**\\n * <CODE>\\n *  for (i = 0; i < 4*4; i++) [\\n *       table56[i] = ((ht[5].hlen[i]) << 16) + ht[6].hlen[i];\\n *   ]\\n * </CODE>\\n *\\n */\\n\\nTables.table56 = [0x010003, 0x040004, 0x070006, 0x080008, 0x040004, 0x050004, 0x080006, 0x090007, 0x070005, 0x080006, 0x090007, 0x0a0008, 0x080007, 0x080007, 0x090008, 0x0a0009];\\nTables.bitrate_table = [[0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1],\\n/* MPEG 2 */\\n[0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1],\\n/* MPEG 1 */\\n[0, 8, 16, 24, 32, 40, 48, 56, 64, -1, -1, -1, -1, -1, -1, -1]];\\n/**\\n * MPEG 2, MPEG 1, MPEG 2.5.\\n */\\n\\nTables.samplerate_table = [[22050, 24000, 16000, -1], [44100, 48000, 32000, -1], [11025, 12000, 8000, -1]];\\n/**\\n * This is the scfsi_band table from 2.4.2.7 of the IS.\\n */\\n\\nTables.scfsi_band = [0, 6, 11, 16, 21];\\nmodule.exports = Tables;\",\"export default function _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\",\"function _defineProperties(target, props) {\\n  for (var i = 0; i < props.length; i++) {\\n    var descriptor = props[i];\\n    descriptor.enumerable = descriptor.enumerable || false;\\n    descriptor.configurable = true;\\n    if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n    Object.defineProperty(target, descriptor.key, descriptor);\\n  }\\n}\\n\\nexport default function _createClass(Constructor, protoProps, staticProps) {\\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n  if (staticProps) _defineProperties(Constructor, staticProps);\\n  return Constructor;\\n}\",\"export default function _getPrototypeOf(o) {\\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\\n    return o.__proto__ || Object.getPrototypeOf(o);\\n  };\\n  return _getPrototypeOf(o);\\n}\",\"/**\\n * Module dependencies.\\n */\\nvar url = require('./url');\\n\\nvar parser = require('socket.io-parser');\\n\\nvar Manager = require('./manager');\\n\\nvar debug = require('debug')('socket.io-client');\\n/**\\n * Module exports.\\n */\\n\\n\\nmodule.exports = exports = lookup;\\n/**\\n * Managers cache.\\n */\\n\\nvar cache = exports.managers = {};\\n/**\\n * Looks up an existing `Manager` for multiplexing.\\n * If the user summons:\\n *\\n *   `io('http://localhost/a');`\\n *   `io('http://localhost/b');`\\n *\\n * We reuse the existing instance based on same scheme/port/host,\\n * and we initialize sockets for each namespace.\\n *\\n * @api public\\n */\\n\\nfunction lookup(uri, opts) {\\n  if (typeof uri === 'object') {\\n    opts = uri;\\n    uri = undefined;\\n  }\\n\\n  opts = opts || {};\\n  var parsed = url(uri);\\n  var source = parsed.source;\\n  var id = parsed.id;\\n  var path = parsed.path;\\n  var sameNamespace = cache[id] && path in cache[id].nsps;\\n  var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\\n  var io;\\n\\n  if (newConnection) {\\n    debug('ignoring socket cache for %s', source);\\n    io = Manager(source, opts);\\n  } else {\\n    if (!cache[id]) {\\n      debug('new io instance for %s', source);\\n      cache[id] = Manager(source, opts);\\n    }\\n\\n    io = cache[id];\\n  }\\n\\n  if (parsed.query && !opts.query) {\\n    opts.query = parsed.query;\\n  }\\n\\n  return io.socket(parsed.path, opts);\\n}\\n/**\\n * Protocol version.\\n *\\n * @api public\\n */\\n\\n\\nexports.protocol = parser.protocol;\\n/**\\n * `connect`.\\n *\\n * @param {String} uri\\n * @api public\\n */\\n\\nexports.connect = lookup;\\n/**\\n * Expose constructors for standalone build.\\n *\\n * @api public\\n */\\n\\nexports.Manager = require('./manager');\\nexports.Socket = require('./socket');\",\"/**\\r\\n * Parses an URI\\r\\n *\\r\\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\\r\\n * @api private\\r\\n */\\nvar re = /^(?:(?![^:@]+:[^:@\\\\/]*@)(http|https|ws|wss):\\\\/\\\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\\\/?#]*)(?::(\\\\d*))?)(((\\\\/(?:[^?#](?![^?#\\\\/]*\\\\.[^?#\\\\/.]+(?:[?#]|$)))*\\\\/?)?([^?#\\\\/]*))(?:\\\\?([^#]*))?(?:#(.*))?)/;\\nvar parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\\n\\nmodule.exports = function parseuri(str) {\\n  var src = str,\\n      b = str.indexOf('['),\\n      e = str.indexOf(']');\\n\\n  if (b != -1 && e != -1) {\\n    str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\\n  }\\n\\n  var m = re.exec(str || ''),\\n      uri = {},\\n      i = 14;\\n\\n  while (i--) {\\n    uri[parts[i]] = m[i] || '';\\n  }\\n\\n  if (b != -1 && e != -1) {\\n    uri.source = src;\\n    uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\\n    uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\\n    uri.ipv6uri = true;\\n  }\\n\\n  return uri;\\n};\",\"var toString = {}.toString;\\n\\nmodule.exports = Array.isArray || function (arr) {\\n  return toString.call(arr) == '[object Array]';\\n};\",\"module.exports = isBuf;\\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\\n\\nvar isView = function isView(obj) {\\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;\\n};\\n/**\\n * Returns true if obj is a buffer or an arraybuffer.\\n *\\n * @api private\\n */\\n\\n\\nfunction isBuf(obj) {\\n  return withNativeBuffer && Buffer.isBuffer(obj) || withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj));\\n}\",\"/**\\n * Module dependencies.\\n */\\nvar eio = require('engine.io-client');\\n\\nvar Socket = require('./socket');\\n\\nvar Emitter = require('component-emitter');\\n\\nvar parser = require('socket.io-parser');\\n\\nvar on = require('./on');\\n\\nvar bind = require('component-bind');\\n\\nvar debug = require('debug')('socket.io-client:manager');\\n\\nvar indexOf = require('indexof');\\n\\nvar Backoff = require('backo2');\\n/**\\n * IE6+ hasOwnProperty\\n */\\n\\n\\nvar has = Object.prototype.hasOwnProperty;\\n/**\\n * Module exports\\n */\\n\\nmodule.exports = Manager;\\n/**\\n * `Manager` constructor.\\n *\\n * @param {String} engine instance or engine uri/opts\\n * @param {Object} options\\n * @api public\\n */\\n\\nfunction Manager(uri, opts) {\\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\\n\\n  if (uri && 'object' === typeof uri) {\\n    opts = uri;\\n    uri = undefined;\\n  }\\n\\n  opts = opts || {};\\n  opts.path = opts.path || '/socket.io';\\n  this.nsps = {};\\n  this.subs = [];\\n  this.opts = opts;\\n  this.reconnection(opts.reconnection !== false);\\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\\n  this.backoff = new Backoff({\\n    min: this.reconnectionDelay(),\\n    max: this.reconnectionDelayMax(),\\n    jitter: this.randomizationFactor()\\n  });\\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\\n  this.readyState = 'closed';\\n  this.uri = uri;\\n  this.connecting = [];\\n  this.lastPing = null;\\n  this.encoding = false;\\n  this.packetBuffer = [];\\n\\n  var _parser = opts.parser || parser;\\n\\n  this.encoder = new _parser.Encoder();\\n  this.decoder = new _parser.Decoder();\\n  this.autoConnect = opts.autoConnect !== false;\\n  if (this.autoConnect) this.open();\\n}\\n/**\\n * Propagate given event to sockets and emit on `this`\\n *\\n * @api private\\n */\\n\\n\\nManager.prototype.emitAll = function () {\\n  this.emit.apply(this, arguments);\\n\\n  for (var nsp in this.nsps) {\\n    if (has.call(this.nsps, nsp)) {\\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\\n    }\\n  }\\n};\\n/**\\n * Update `socket.id` of all sockets\\n *\\n * @api private\\n */\\n\\n\\nManager.prototype.updateSocketIds = function () {\\n  for (var nsp in this.nsps) {\\n    if (has.call(this.nsps, nsp)) {\\n      this.nsps[nsp].id = this.generateId(nsp);\\n    }\\n  }\\n};\\n/**\\n * generate `socket.id` for the given `nsp`\\n *\\n * @param {String} nsp\\n * @return {String}\\n * @api private\\n */\\n\\n\\nManager.prototype.generateId = function (nsp) {\\n  return (nsp === '/' ? '' : nsp + '#') + this.engine.id;\\n};\\n/**\\n * Mix in `Emitter`.\\n */\\n\\n\\nEmitter(Manager.prototype);\\n/**\\n * Sets the `reconnection` config.\\n *\\n * @param {Boolean} true/false if it should automatically reconnect\\n * @return {Manager} self or value\\n * @api public\\n */\\n\\nManager.prototype.reconnection = function (v) {\\n  if (!arguments.length) return this._reconnection;\\n  this._reconnection = !!v;\\n  return this;\\n};\\n/**\\n * Sets the reconnection attempts config.\\n *\\n * @param {Number} max reconnection attempts before giving up\\n * @return {Manager} self or value\\n * @api public\\n */\\n\\n\\nManager.prototype.reconnectionAttempts = function (v) {\\n  if (!arguments.length) return this._reconnectionAttempts;\\n  this._reconnectionAttempts = v;\\n  return this;\\n};\\n/**\\n * Sets the delay between reconnections.\\n *\\n * @param {Number} delay\\n * @return {Manager} self or value\\n * @api public\\n */\\n\\n\\nManager.prototype.reconnectionDelay = function (v) {\\n  if (!arguments.length) return this._reconnectionDelay;\\n  this._reconnectionDelay = v;\\n  this.backoff && this.backoff.setMin(v);\\n  return this;\\n};\\n\\nManager.prototype.randomizationFactor = function (v) {\\n  if (!arguments.length) return this._randomizationFactor;\\n  this._randomizationFactor = v;\\n  this.backoff && this.backoff.setJitter(v);\\n  return this;\\n};\\n/**\\n * Sets the maximum delay between reconnections.\\n *\\n * @param {Number} delay\\n * @return {Manager} self or value\\n * @api public\\n */\\n\\n\\nManager.prototype.reconnectionDelayMax = function (v) {\\n  if (!arguments.length) return this._reconnectionDelayMax;\\n  this._reconnectionDelayMax = v;\\n  this.backoff && this.backoff.setMax(v);\\n  return this;\\n};\\n/**\\n * Sets the connection timeout. `false` to disable\\n *\\n * @return {Manager} self or value\\n * @api public\\n */\\n\\n\\nManager.prototype.timeout = function (v) {\\n  if (!arguments.length) return this._timeout;\\n  this._timeout = v;\\n  return this;\\n};\\n/**\\n * Starts trying to reconnect if reconnection is enabled and we have not\\n * started reconnecting yet\\n *\\n * @api private\\n */\\n\\n\\nManager.prototype.maybeReconnectOnOpen = function () {\\n  // Only try to reconnect if it's the first time we're connecting\\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\\n    // keeps reconnection from firing twice for the same reconnection loop\\n    this.reconnect();\\n  }\\n};\\n/**\\n * Sets the current transport `socket`.\\n *\\n * @param {Function} optional, callback\\n * @return {Manager} self\\n * @api public\\n */\\n\\n\\nManager.prototype.open = Manager.prototype.connect = function (fn, opts) {\\n  debug('readyState %s', this.readyState);\\n  if (~this.readyState.indexOf('open')) return this;\\n  debug('opening %s', this.uri);\\n  this.engine = eio(this.uri, this.opts);\\n  var socket = this.engine;\\n  var self = this;\\n  this.readyState = 'opening';\\n  this.skipReconnect = false; // emit `open`\\n\\n  var openSub = on(socket, 'open', function () {\\n    self.onopen();\\n    fn && fn();\\n  }); // emit `connect_error`\\n\\n  var errorSub = on(socket, 'error', function (data) {\\n    debug('connect_error');\\n    self.cleanup();\\n    self.readyState = 'closed';\\n    self.emitAll('connect_error', data);\\n\\n    if (fn) {\\n      var err = new Error('Connection error');\\n      err.data = data;\\n      fn(err);\\n    } else {\\n      // Only do this if there is no fn to handle the error\\n      self.maybeReconnectOnOpen();\\n    }\\n  }); // emit `connect_timeout`\\n\\n  if (false !== this._timeout) {\\n    var timeout = this._timeout;\\n    debug('connect attempt will timeout after %d', timeout); // set timer\\n\\n    var timer = setTimeout(function () {\\n      debug('connect attempt timed out after %d', timeout);\\n      openSub.destroy();\\n      socket.close();\\n      socket.emit('error', 'timeout');\\n      self.emitAll('connect_timeout', timeout);\\n    }, timeout);\\n    this.subs.push({\\n      destroy: function destroy() {\\n        clearTimeout(timer);\\n      }\\n    });\\n  }\\n\\n  this.subs.push(openSub);\\n  this.subs.push(errorSub);\\n  return this;\\n};\\n/**\\n * Called upon transport open.\\n *\\n * @api private\\n */\\n\\n\\nManager.prototype.onopen = function () {\\n  debug('open'); // clear old subs\\n\\n  this.cleanup(); // mark as open\\n\\n  this.readyState = 'open';\\n  this.emit('open'); // add new subs\\n\\n  var socket = this.engine;\\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\\n};\\n/**\\n * Called upon a ping.\\n *\\n * @api private\\n */\\n\\n\\nManager.prototype.onping = function () {\\n  this.lastPing = new Date();\\n  this.emitAll('ping');\\n};\\n/**\\n * Called upon a packet.\\n *\\n * @api private\\n */\\n\\n\\nManager.prototype.onpong = function () {\\n  this.emitAll('pong', new Date() - this.lastPing);\\n};\\n/**\\n * Called with data.\\n *\\n * @api private\\n */\\n\\n\\nManager.prototype.ondata = function (data) {\\n  this.decoder.add(data);\\n};\\n/**\\n * Called when parser fully decodes a packet.\\n *\\n * @api private\\n */\\n\\n\\nManager.prototype.ondecoded = function (packet) {\\n  this.emit('packet', packet);\\n};\\n/**\\n * Called upon socket error.\\n *\\n * @api private\\n */\\n\\n\\nManager.prototype.onerror = function (err) {\\n  debug('error', err);\\n  this.emitAll('error', err);\\n};\\n/**\\n * Creates a new socket for the given `nsp`.\\n *\\n * @return {Socket}\\n * @api public\\n */\\n\\n\\nManager.prototype.socket = function (nsp, opts) {\\n  var socket = this.nsps[nsp];\\n\\n  if (!socket) {\\n    socket = new Socket(this, nsp, opts);\\n    this.nsps[nsp] = socket;\\n    var self = this;\\n    socket.on('connecting', onConnecting);\\n    socket.on('connect', function () {\\n      socket.id = self.generateId(nsp);\\n    });\\n\\n    if (this.autoConnect) {\\n      // manually call here since connecting event is fired before listening\\n      onConnecting();\\n    }\\n  }\\n\\n  function onConnecting() {\\n    if (!~indexOf(self.connecting, socket)) {\\n      self.connecting.push(socket);\\n    }\\n  }\\n\\n  return socket;\\n};\\n/**\\n * Called upon a socket close.\\n *\\n * @param {Socket} socket\\n */\\n\\n\\nManager.prototype.destroy = function (socket) {\\n  var index = indexOf(this.connecting, socket);\\n  if (~index) this.connecting.splice(index, 1);\\n  if (this.connecting.length) return;\\n  this.close();\\n};\\n/**\\n * Writes a packet.\\n *\\n * @param {Object} packet\\n * @api private\\n */\\n\\n\\nManager.prototype.packet = function (packet) {\\n  debug('writing packet %j', packet);\\n  var self = this;\\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\\n\\n  if (!self.encoding) {\\n    // encode, then write to engine with result\\n    self.encoding = true;\\n    this.encoder.encode(packet, function (encodedPackets) {\\n      for (var i = 0; i < encodedPackets.length; i++) {\\n        self.engine.write(encodedPackets[i], packet.options);\\n      }\\n\\n      self.encoding = false;\\n      self.processPacketQueue();\\n    });\\n  } else {\\n    // add packet to the queue\\n    self.packetBuffer.push(packet);\\n  }\\n};\\n/**\\n * If packet buffer is non-empty, begins encoding the\\n * next packet in line.\\n *\\n * @api private\\n */\\n\\n\\nManager.prototype.processPacketQueue = function () {\\n  if (this.packetBuffer.length > 0 && !this.encoding) {\\n    var pack = this.packetBuffer.shift();\\n    this.packet(pack);\\n  }\\n};\\n/**\\n * Clean up transport subscriptions and packet buffer.\\n *\\n * @api private\\n */\\n\\n\\nManager.prototype.cleanup = function () {\\n  debug('cleanup');\\n  var subsLength = this.subs.length;\\n\\n  for (var i = 0; i < subsLength; i++) {\\n    var sub = this.subs.shift();\\n    sub.destroy();\\n  }\\n\\n  this.packetBuffer = [];\\n  this.encoding = false;\\n  this.lastPing = null;\\n  this.decoder.destroy();\\n};\\n/**\\n * Close the current socket.\\n *\\n * @api private\\n */\\n\\n\\nManager.prototype.close = Manager.prototype.disconnect = function () {\\n  debug('disconnect');\\n  this.skipReconnect = true;\\n  this.reconnecting = false;\\n\\n  if ('opening' === this.readyState) {\\n    // `onclose` will not fire because\\n    // an open event never happened\\n    this.cleanup();\\n  }\\n\\n  this.backoff.reset();\\n  this.readyState = 'closed';\\n  if (this.engine) this.engine.close();\\n};\\n/**\\n * Called upon engine close.\\n *\\n * @api private\\n */\\n\\n\\nManager.prototype.onclose = function (reason) {\\n  debug('onclose');\\n  this.cleanup();\\n  this.backoff.reset();\\n  this.readyState = 'closed';\\n  this.emit('close', reason);\\n\\n  if (this._reconnection && !this.skipReconnect) {\\n    this.reconnect();\\n  }\\n};\\n/**\\n * Attempt a reconnection.\\n *\\n * @api private\\n */\\n\\n\\nManager.prototype.reconnect = function () {\\n  if (this.reconnecting || this.skipReconnect) return this;\\n  var self = this;\\n\\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\\n    debug('reconnect failed');\\n    this.backoff.reset();\\n    this.emitAll('reconnect_failed');\\n    this.reconnecting = false;\\n  } else {\\n    var delay = this.backoff.duration();\\n    debug('will wait %dms before reconnect attempt', delay);\\n    this.reconnecting = true;\\n    var timer = setTimeout(function () {\\n      if (self.skipReconnect) return;\\n      debug('attempting reconnect');\\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\\n      self.emitAll('reconnecting', self.backoff.attempts); // check again for the case socket closed in above events\\n\\n      if (self.skipReconnect) return;\\n      self.open(function (err) {\\n        if (err) {\\n          debug('reconnect attempt error');\\n          self.reconnecting = false;\\n          self.reconnect();\\n          self.emitAll('reconnect_error', err.data);\\n        } else {\\n          debug('reconnect success');\\n          self.onreconnect();\\n        }\\n      });\\n    }, delay);\\n    this.subs.push({\\n      destroy: function destroy() {\\n        clearTimeout(timer);\\n      }\\n    });\\n  }\\n};\\n/**\\n * Called upon successful reconnect.\\n *\\n * @api private\\n */\\n\\n\\nManager.prototype.onreconnect = function () {\\n  var attempt = this.backoff.attempts;\\n  this.reconnecting = false;\\n  this.backoff.reset();\\n  this.updateSocketIds();\\n  this.emitAll('reconnect', attempt);\\n};\",\"/**\\n * Module dependencies\\n */\\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\\n\\nvar XHR = require('./polling-xhr');\\n\\nvar JSONP = require('./polling-jsonp');\\n\\nvar websocket = require('./websocket');\\n/**\\n * Export transports.\\n */\\n\\n\\nexports.polling = polling;\\nexports.websocket = websocket;\\n/**\\n * Polling transport polymorphic constructor.\\n * Decides on xhr vs jsonp based on feature detection.\\n *\\n * @api private\\n */\\n\\nfunction polling(opts) {\\n  var xhr;\\n  var xd = false;\\n  var xs = false;\\n  var jsonp = false !== opts.jsonp;\\n\\n  if (typeof location !== 'undefined') {\\n    var isSSL = 'https:' === location.protocol;\\n    var port = location.port; // some user agents have empty `location.port`\\n\\n    if (!port) {\\n      port = isSSL ? 443 : 80;\\n    }\\n\\n    xd = opts.hostname !== location.hostname || port !== opts.port;\\n    xs = opts.secure !== isSSL;\\n  }\\n\\n  opts.xdomain = xd;\\n  opts.xscheme = xs;\\n  xhr = new XMLHttpRequest(opts);\\n\\n  if ('open' in xhr && !opts.forceJSONP) {\\n    return new XHR(opts);\\n  } else {\\n    if (!jsonp) throw new Error('JSONP disabled');\\n    return new JSONP(opts);\\n  }\\n}\",\"/**\\n * Module dependencies.\\n */\\nvar Transport = require('../transport');\\n\\nvar parseqs = require('parseqs');\\n\\nvar parser = require('engine.io-parser');\\n\\nvar inherit = require('component-inherit');\\n\\nvar yeast = require('yeast');\\n\\nvar debug = require('debug')('engine.io-client:polling');\\n/**\\n * Module exports.\\n */\\n\\n\\nmodule.exports = Polling;\\n/**\\n * Is XHR2 supported?\\n */\\n\\nvar hasXHR2 = function () {\\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\\n\\n  var xhr = new XMLHttpRequest({\\n    xdomain: false\\n  });\\n  return null != xhr.responseType;\\n}();\\n/**\\n * Polling interface.\\n *\\n * @param {Object} opts\\n * @api private\\n */\\n\\n\\nfunction Polling(opts) {\\n  var forceBase64 = opts && opts.forceBase64;\\n\\n  if (!hasXHR2 || forceBase64) {\\n    this.supportsBinary = false;\\n  }\\n\\n  Transport.call(this, opts);\\n}\\n/**\\n * Inherits from Transport.\\n */\\n\\n\\ninherit(Polling, Transport);\\n/**\\n * Transport name.\\n */\\n\\nPolling.prototype.name = 'polling';\\n/**\\n * Opens the socket (triggers polling). We write a PING message to determine\\n * when the transport is open.\\n *\\n * @api private\\n */\\n\\nPolling.prototype.doOpen = function () {\\n  this.poll();\\n};\\n/**\\n * Pauses polling.\\n *\\n * @param {Function} callback upon buffers are flushed and transport is paused\\n * @api private\\n */\\n\\n\\nPolling.prototype.pause = function (onPause) {\\n  var self = this;\\n  this.readyState = 'pausing';\\n\\n  function pause() {\\n    debug('paused');\\n    self.readyState = 'paused';\\n    onPause();\\n  }\\n\\n  if (this.polling || !this.writable) {\\n    var total = 0;\\n\\n    if (this.polling) {\\n      debug('we are currently polling - waiting to pause');\\n      total++;\\n      this.once('pollComplete', function () {\\n        debug('pre-pause polling complete');\\n        --total || pause();\\n      });\\n    }\\n\\n    if (!this.writable) {\\n      debug('we are currently writing - waiting to pause');\\n      total++;\\n      this.once('drain', function () {\\n        debug('pre-pause writing complete');\\n        --total || pause();\\n      });\\n    }\\n  } else {\\n    pause();\\n  }\\n};\\n/**\\n * Starts polling cycle.\\n *\\n * @api public\\n */\\n\\n\\nPolling.prototype.poll = function () {\\n  debug('polling');\\n  this.polling = true;\\n  this.doPoll();\\n  this.emit('poll');\\n};\\n/**\\n * Overloads onData to detect payloads.\\n *\\n * @api private\\n */\\n\\n\\nPolling.prototype.onData = function (data) {\\n  var self = this;\\n  debug('polling got data %s', data);\\n\\n  var callback = function callback(packet, index, total) {\\n    // if its the first message we consider the transport open\\n    if ('opening' === self.readyState) {\\n      self.onOpen();\\n    } // if its a close packet, we close the ongoing requests\\n\\n\\n    if ('close' === packet.type) {\\n      self.onClose();\\n      return false;\\n    } // otherwise bypass onData and handle the message\\n\\n\\n    self.onPacket(packet);\\n  }; // decode payload\\n\\n\\n  parser.decodePayload(data, this.socket.binaryType, callback); // if an event did not trigger closing\\n\\n  if ('closed' !== this.readyState) {\\n    // if we got data we're not polling\\n    this.polling = false;\\n    this.emit('pollComplete');\\n\\n    if ('open' === this.readyState) {\\n      this.poll();\\n    } else {\\n      debug('ignoring poll - transport state \\\"%s\\\"', this.readyState);\\n    }\\n  }\\n};\\n/**\\n * For polling, send a close packet.\\n *\\n * @api private\\n */\\n\\n\\nPolling.prototype.doClose = function () {\\n  var self = this;\\n\\n  function close() {\\n    debug('writing close packet');\\n    self.write([{\\n      type: 'close'\\n    }]);\\n  }\\n\\n  if ('open' === this.readyState) {\\n    debug('transport open - closing');\\n    close();\\n  } else {\\n    // in case we're trying to close while\\n    // handshaking is in progress (GH-164)\\n    debug('transport not open - deferring close');\\n    this.once('open', close);\\n  }\\n};\\n/**\\n * Writes a packets payload.\\n *\\n * @param {Array} data packets\\n * @param {Function} drain callback\\n * @api private\\n */\\n\\n\\nPolling.prototype.write = function (packets) {\\n  var self = this;\\n  this.writable = false;\\n\\n  var callbackfn = function callbackfn() {\\n    self.writable = true;\\n    self.emit('drain');\\n  };\\n\\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\\n    self.doWrite(data, callbackfn);\\n  });\\n};\\n/**\\n * Generates uri for connection.\\n *\\n * @api private\\n */\\n\\n\\nPolling.prototype.uri = function () {\\n  var query = this.query || {};\\n  var schema = this.secure ? 'https' : 'http';\\n  var port = ''; // cache busting is forced\\n\\n  if (false !== this.timestampRequests) {\\n    query[this.timestampParam] = yeast();\\n  }\\n\\n  if (!this.supportsBinary && !query.sid) {\\n    query.b64 = 1;\\n  }\\n\\n  query = parseqs.encode(query); // avoid port if default for schema\\n\\n  if (this.port && ('https' === schema && Number(this.port) !== 443 || 'http' === schema && Number(this.port) !== 80)) {\\n    port = ':' + this.port;\\n  } // prepend ? to query\\n\\n\\n  if (query.length) {\\n    query = '?' + query;\\n  }\\n\\n  var ipv6 = this.hostname.indexOf(':') !== -1;\\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\\n};\",\"/* global Blob File */\\n\\n/*\\n * Module requirements.\\n */\\nvar isArray = require('isarray');\\n\\nvar toString = Object.prototype.toString;\\nvar withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\\nvar withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\\n/**\\n * Module exports.\\n */\\n\\nmodule.exports = hasBinary;\\n/**\\n * Checks for binary data.\\n *\\n * Supports Buffer, ArrayBuffer, Blob and File.\\n *\\n * @param {Object} anything\\n * @api public\\n */\\n\\nfunction hasBinary(obj) {\\n  if (!obj || typeof obj !== 'object') {\\n    return false;\\n  }\\n\\n  if (isArray(obj)) {\\n    for (var i = 0, l = obj.length; i < l; i++) {\\n      if (hasBinary(obj[i])) {\\n        return true;\\n      }\\n    }\\n\\n    return false;\\n  }\\n\\n  if (typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj) || typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer || withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {\\n    return true;\\n  } // see: https://github.com/Automattic/has-binary/pull/4\\n\\n\\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\\n    return hasBinary(obj.toJSON(), true);\\n  }\\n\\n  for (var key in obj) {\\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\\n      return true;\\n    }\\n  }\\n\\n  return false;\\n}\",\"'use strict';\\n\\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),\\n    length = 64,\\n    map = {},\\n    seed = 0,\\n    i = 0,\\n    prev;\\n/**\\n * Return a string representing the specified number.\\n *\\n * @param {Number} num The number to convert.\\n * @returns {String} The string representation of the number.\\n * @api public\\n */\\n\\nfunction encode(num) {\\n  var encoded = '';\\n\\n  do {\\n    encoded = alphabet[num % length] + encoded;\\n    num = Math.floor(num / length);\\n  } while (num > 0);\\n\\n  return encoded;\\n}\\n/**\\n * Return the integer value specified by the given string.\\n *\\n * @param {String} str The string to convert.\\n * @returns {Number} The integer value represented by the string.\\n * @api public\\n */\\n\\n\\nfunction decode(str) {\\n  var decoded = 0;\\n\\n  for (i = 0; i < str.length; i++) {\\n    decoded = decoded * length + map[str.charAt(i)];\\n  }\\n\\n  return decoded;\\n}\\n/**\\n * Yeast: A tiny growing id generator.\\n *\\n * @returns {String} A unique id.\\n * @api public\\n */\\n\\n\\nfunction yeast() {\\n  var now = encode(+new Date());\\n  if (now !== prev) return seed = 0, prev = now;\\n  return now + '.' + encode(seed++);\\n} //\\n// Map each character to its index.\\n//\\n\\n\\nfor (; i < length; i++) {\\n  map[alphabet[i]] = i;\\n} //\\n// Expose the `yeast`, `encode` and `decode` functions.\\n//\\n\\n\\nyeast.encode = encode;\\nyeast.decode = decode;\\nmodule.exports = yeast;\",\"var indexOf = [].indexOf;\\n\\nmodule.exports = function (arr, obj) {\\n  if (indexOf) return arr.indexOf(obj);\\n\\n  for (var i = 0; i < arr.length; ++i) {\\n    if (arr[i] === obj) return i;\\n  }\\n\\n  return -1;\\n};\",\"/**\\n * Module dependencies.\\n */\\nvar parser = require('socket.io-parser');\\n\\nvar Emitter = require('component-emitter');\\n\\nvar toArray = require('to-array');\\n\\nvar on = require('./on');\\n\\nvar bind = require('component-bind');\\n\\nvar debug = require('debug')('socket.io-client:socket');\\n\\nvar parseqs = require('parseqs');\\n\\nvar hasBin = require('has-binary2');\\n/**\\n * Module exports.\\n */\\n\\n\\nmodule.exports = exports = Socket;\\n/**\\n * Internal events (blacklisted).\\n * These events can't be emitted by the user.\\n *\\n * @api private\\n */\\n\\nvar events = {\\n  connect: 1,\\n  connect_error: 1,\\n  connect_timeout: 1,\\n  connecting: 1,\\n  disconnect: 1,\\n  error: 1,\\n  reconnect: 1,\\n  reconnect_attempt: 1,\\n  reconnect_failed: 1,\\n  reconnect_error: 1,\\n  reconnecting: 1,\\n  ping: 1,\\n  pong: 1\\n};\\n/**\\n * Shortcut to `Emitter#emit`.\\n */\\n\\nvar emit = Emitter.prototype.emit;\\n/**\\n * `Socket` constructor.\\n *\\n * @api public\\n */\\n\\nfunction Socket(io, nsp, opts) {\\n  this.io = io;\\n  this.nsp = nsp;\\n  this.json = this; // compat\\n\\n  this.ids = 0;\\n  this.acks = {};\\n  this.receiveBuffer = [];\\n  this.sendBuffer = [];\\n  this.connected = false;\\n  this.disconnected = true;\\n  this.flags = {};\\n\\n  if (opts && opts.query) {\\n    this.query = opts.query;\\n  }\\n\\n  if (this.io.autoConnect) this.open();\\n}\\n/**\\n * Mix in `Emitter`.\\n */\\n\\n\\nEmitter(Socket.prototype);\\n/**\\n * Subscribe to open, close and packet events\\n *\\n * @api private\\n */\\n\\nSocket.prototype.subEvents = function () {\\n  if (this.subs) return;\\n  var io = this.io;\\n  this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\\n};\\n/**\\n * \\\"Opens\\\" the socket.\\n *\\n * @api public\\n */\\n\\n\\nSocket.prototype.open = Socket.prototype.connect = function () {\\n  if (this.connected) return this;\\n  this.subEvents();\\n  this.io.open(); // ensure open\\n\\n  if ('open' === this.io.readyState) this.onopen();\\n  this.emit('connecting');\\n  return this;\\n};\\n/**\\n * Sends a `message` event.\\n *\\n * @return {Socket} self\\n * @api public\\n */\\n\\n\\nSocket.prototype.send = function () {\\n  var args = toArray(arguments);\\n  args.unshift('message');\\n  this.emit.apply(this, args);\\n  return this;\\n};\\n/**\\n * Override `emit`.\\n * If the event is in `events`, it's emitted normally.\\n *\\n * @param {String} event name\\n * @return {Socket} self\\n * @api public\\n */\\n\\n\\nSocket.prototype.emit = function (ev) {\\n  if (events.hasOwnProperty(ev)) {\\n    emit.apply(this, arguments);\\n    return this;\\n  }\\n\\n  var args = toArray(arguments);\\n  var packet = {\\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\\n    data: args\\n  };\\n  packet.options = {};\\n  packet.options.compress = !this.flags || false !== this.flags.compress; // event ack callback\\n\\n  if ('function' === typeof args[args.length - 1]) {\\n    debug('emitting packet with ack id %d', this.ids);\\n    this.acks[this.ids] = args.pop();\\n    packet.id = this.ids++;\\n  }\\n\\n  if (this.connected) {\\n    this.packet(packet);\\n  } else {\\n    this.sendBuffer.push(packet);\\n  }\\n\\n  this.flags = {};\\n  return this;\\n};\\n/**\\n * Sends a packet.\\n *\\n * @param {Object} packet\\n * @api private\\n */\\n\\n\\nSocket.prototype.packet = function (packet) {\\n  packet.nsp = this.nsp;\\n  this.io.packet(packet);\\n};\\n/**\\n * Called upon engine `open`.\\n *\\n * @api private\\n */\\n\\n\\nSocket.prototype.onopen = function () {\\n  debug('transport is open - connecting'); // write connect packet if necessary\\n\\n  if ('/' !== this.nsp) {\\n    if (this.query) {\\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\\n      debug('sending connect packet with query %s', query);\\n      this.packet({\\n        type: parser.CONNECT,\\n        query: query\\n      });\\n    } else {\\n      this.packet({\\n        type: parser.CONNECT\\n      });\\n    }\\n  }\\n};\\n/**\\n * Called upon engine `close`.\\n *\\n * @param {String} reason\\n * @api private\\n */\\n\\n\\nSocket.prototype.onclose = function (reason) {\\n  debug('close (%s)', reason);\\n  this.connected = false;\\n  this.disconnected = true;\\n  delete this.id;\\n  this.emit('disconnect', reason);\\n};\\n/**\\n * Called with socket packet.\\n *\\n * @param {Object} packet\\n * @api private\\n */\\n\\n\\nSocket.prototype.onpacket = function (packet) {\\n  var sameNamespace = packet.nsp === this.nsp;\\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\\n  if (!sameNamespace && !rootNamespaceError) return;\\n\\n  switch (packet.type) {\\n    case parser.CONNECT:\\n      this.onconnect();\\n      break;\\n\\n    case parser.EVENT:\\n      this.onevent(packet);\\n      break;\\n\\n    case parser.BINARY_EVENT:\\n      this.onevent(packet);\\n      break;\\n\\n    case parser.ACK:\\n      this.onack(packet);\\n      break;\\n\\n    case parser.BINARY_ACK:\\n      this.onack(packet);\\n      break;\\n\\n    case parser.DISCONNECT:\\n      this.ondisconnect();\\n      break;\\n\\n    case parser.ERROR:\\n      this.emit('error', packet.data);\\n      break;\\n  }\\n};\\n/**\\n * Called upon a server event.\\n *\\n * @param {Object} packet\\n * @api private\\n */\\n\\n\\nSocket.prototype.onevent = function (packet) {\\n  var args = packet.data || [];\\n  debug('emitting event %j', args);\\n\\n  if (null != packet.id) {\\n    debug('attaching ack callback to event');\\n    args.push(this.ack(packet.id));\\n  }\\n\\n  if (this.connected) {\\n    emit.apply(this, args);\\n  } else {\\n    this.receiveBuffer.push(args);\\n  }\\n};\\n/**\\n * Produces an ack callback to emit with an event.\\n *\\n * @api private\\n */\\n\\n\\nSocket.prototype.ack = function (id) {\\n  var self = this;\\n  var sent = false;\\n  return function () {\\n    // prevent double callbacks\\n    if (sent) return;\\n    sent = true;\\n    var args = toArray(arguments);\\n    debug('sending ack %j', args);\\n    self.packet({\\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\\n      id: id,\\n      data: args\\n    });\\n  };\\n};\\n/**\\n * Called upon a server acknowlegement.\\n *\\n * @param {Object} packet\\n * @api private\\n */\\n\\n\\nSocket.prototype.onack = function (packet) {\\n  var ack = this.acks[packet.id];\\n\\n  if ('function' === typeof ack) {\\n    debug('calling ack %s with %j', packet.id, packet.data);\\n    ack.apply(this, packet.data);\\n    delete this.acks[packet.id];\\n  } else {\\n    debug('bad ack %s', packet.id);\\n  }\\n};\\n/**\\n * Called upon server connect.\\n *\\n * @api private\\n */\\n\\n\\nSocket.prototype.onconnect = function () {\\n  this.connected = true;\\n  this.disconnected = false;\\n  this.emit('connect');\\n  this.emitBuffered();\\n};\\n/**\\n * Emit buffered events (received and emitted).\\n *\\n * @api private\\n */\\n\\n\\nSocket.prototype.emitBuffered = function () {\\n  var i;\\n\\n  for (i = 0; i < this.receiveBuffer.length; i++) {\\n    emit.apply(this, this.receiveBuffer[i]);\\n  }\\n\\n  this.receiveBuffer = [];\\n\\n  for (i = 0; i < this.sendBuffer.length; i++) {\\n    this.packet(this.sendBuffer[i]);\\n  }\\n\\n  this.sendBuffer = [];\\n};\\n/**\\n * Called upon server disconnect.\\n *\\n * @api private\\n */\\n\\n\\nSocket.prototype.ondisconnect = function () {\\n  debug('server disconnect (%s)', this.nsp);\\n  this.destroy();\\n  this.onclose('io server disconnect');\\n};\\n/**\\n * Called upon forced client/server side disconnections,\\n * this method ensures the manager stops tracking us and\\n * that reconnections don't get triggered for this.\\n *\\n * @api private.\\n */\\n\\n\\nSocket.prototype.destroy = function () {\\n  if (this.subs) {\\n    // clean subscriptions to avoid reconnections\\n    for (var i = 0; i < this.subs.length; i++) {\\n      this.subs[i].destroy();\\n    }\\n\\n    this.subs = null;\\n  }\\n\\n  this.io.destroy(this);\\n};\\n/**\\n * Disconnects the socket manually.\\n *\\n * @return {Socket} self\\n * @api public\\n */\\n\\n\\nSocket.prototype.close = Socket.prototype.disconnect = function () {\\n  if (this.connected) {\\n    debug('performing disconnect (%s)', this.nsp);\\n    this.packet({\\n      type: parser.DISCONNECT\\n    });\\n  } // remove socket from pool\\n\\n\\n  this.destroy();\\n\\n  if (this.connected) {\\n    // fire events\\n    this.onclose('io client disconnect');\\n  }\\n\\n  return this;\\n};\\n/**\\n * Sets the compress flag.\\n *\\n * @param {Boolean} if `true`, compresses the sending data\\n * @return {Socket} self\\n * @api public\\n */\\n\\n\\nSocket.prototype.compress = function (compress) {\\n  this.flags.compress = compress;\\n  return this;\\n};\\n/**\\n * Sets the binary flag\\n *\\n * @param {Boolean} whether the emitted data contains binary\\n * @return {Socket} self\\n * @api public\\n */\\n\\n\\nSocket.prototype.binary = function (binary) {\\n  this.flags.binary = binary;\\n  return this;\\n};\",\"/**\\r\\n * Expose `Emitter`.\\r\\n */\\nif (typeof module !== 'undefined') {\\n  module.exports = Emitter;\\n}\\n/**\\r\\n * Initialize a new `Emitter`.\\r\\n *\\r\\n * @api public\\r\\n */\\n\\n\\nfunction Emitter(obj) {\\n  if (obj) return mixin(obj);\\n}\\n\\n;\\n/**\\r\\n * Mixin the emitter properties.\\r\\n *\\r\\n * @param {Object} obj\\r\\n * @return {Object}\\r\\n * @api private\\r\\n */\\n\\nfunction mixin(obj) {\\n  for (var key in Emitter.prototype) {\\n    obj[key] = Emitter.prototype[key];\\n  }\\n\\n  return obj;\\n}\\n/**\\r\\n * Listen on the given `event` with `fn`.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Function} fn\\r\\n * @return {Emitter}\\r\\n * @api public\\r\\n */\\n\\n\\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\\n  this._callbacks = this._callbacks || {};\\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\\n  return this;\\n};\\n/**\\r\\n * Adds an `event` listener that will be invoked a single\\r\\n * time then automatically removed.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Function} fn\\r\\n * @return {Emitter}\\r\\n * @api public\\r\\n */\\n\\n\\nEmitter.prototype.once = function (event, fn) {\\n  function on() {\\n    this.off(event, on);\\n    fn.apply(this, arguments);\\n  }\\n\\n  on.fn = fn;\\n  this.on(event, on);\\n  return this;\\n};\\n/**\\r\\n * Remove the given callback for `event` or all\\r\\n * registered callbacks.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Function} fn\\r\\n * @return {Emitter}\\r\\n * @api public\\r\\n */\\n\\n\\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\\n  this._callbacks = this._callbacks || {}; // all\\n\\n  if (0 == arguments.length) {\\n    this._callbacks = {};\\n    return this;\\n  } // specific event\\n\\n\\n  var callbacks = this._callbacks['$' + event];\\n  if (!callbacks) return this; // remove all handlers\\n\\n  if (1 == arguments.length) {\\n    delete this._callbacks['$' + event];\\n    return this;\\n  } // remove specific handler\\n\\n\\n  var cb;\\n\\n  for (var i = 0; i < callbacks.length; i++) {\\n    cb = callbacks[i];\\n\\n    if (cb === fn || cb.fn === fn) {\\n      callbacks.splice(i, 1);\\n      break;\\n    }\\n  }\\n\\n  return this;\\n};\\n/**\\r\\n * Emit `event` with the given args.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Mixed} ...\\r\\n * @return {Emitter}\\r\\n */\\n\\n\\nEmitter.prototype.emit = function (event) {\\n  this._callbacks = this._callbacks || {};\\n  var args = [].slice.call(arguments, 1),\\n      callbacks = this._callbacks['$' + event];\\n\\n  if (callbacks) {\\n    callbacks = callbacks.slice(0);\\n\\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\\n      callbacks[i].apply(this, args);\\n    }\\n  }\\n\\n  return this;\\n};\\n/**\\r\\n * Return array of callbacks for `event`.\\r\\n *\\r\\n * @param {String} event\\r\\n * @return {Array}\\r\\n * @api public\\r\\n */\\n\\n\\nEmitter.prototype.listeners = function (event) {\\n  this._callbacks = this._callbacks || {};\\n  return this._callbacks['$' + event] || [];\\n};\\n/**\\r\\n * Check if this emitter has `event` handlers.\\r\\n *\\r\\n * @param {String} event\\r\\n * @return {Boolean}\\r\\n * @api public\\r\\n */\\n\\n\\nEmitter.prototype.hasListeners = function (event) {\\n  return !!this.listeners(event).length;\\n};\",\"/**\\n * Module exports.\\n */\\nmodule.exports = on;\\n/**\\n * Helper for subscriptions.\\n *\\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\\n * @param {String} event name\\n * @param {Function} callback\\n * @api public\\n */\\n\\nfunction on(obj, ev, fn) {\\n  obj.on(ev, fn);\\n  return {\\n    destroy: function destroy() {\\n      obj.removeListener(ev, fn);\\n    }\\n  };\\n}\",\"/**\\n * Slice reference.\\n */\\nvar slice = [].slice;\\n/**\\n * Bind `obj` to `fn`.\\n *\\n * @param {Object} obj\\n * @param {Function|String} fn or string\\n * @return {Function}\\n * @api public\\n */\\n\\nmodule.exports = function (obj, fn) {\\n  if ('string' == typeof fn) fn = obj[fn];\\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\\n  var args = slice.call(arguments, 2);\\n  return function () {\\n    return fn.apply(obj, args.concat(slice.call(arguments)));\\n  };\\n};\",\"// Copyright Joyent, Inc. and other Node contributors.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a\\n// copy of this software and associated documentation files (the\\n// \\\"Software\\\"), to deal in the Software without restriction, including\\n// without limitation the rights to use, copy, modify, merge, publish,\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\n// persons to whom the Software is furnished to do so, subject to the\\n// following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included\\n// in all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\n'use strict';\\n\\nmodule.exports = Readable;\\n/*<replacement>*/\\n\\nvar Duplex;\\n/*</replacement>*/\\n\\nReadable.ReadableState = ReadableState;\\n/*<replacement>*/\\n\\nvar EE = require('events').EventEmitter;\\n\\nvar EElistenerCount = function EElistenerCount(emitter, type) {\\n  return emitter.listeners(type).length;\\n};\\n/*</replacement>*/\\n\\n/*<replacement>*/\\n\\n\\nvar Stream = require('./internal/streams/stream');\\n/*</replacement>*/\\n\\n\\nvar Buffer = require('buffer').Buffer;\\n\\nvar OurUint8Array = global.Uint8Array || function () {};\\n\\nfunction _uint8ArrayToBuffer(chunk) {\\n  return Buffer.from(chunk);\\n}\\n\\nfunction _isUint8Array(obj) {\\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\\n}\\n/*<replacement>*/\\n\\n\\nvar debugUtil = require('util');\\n\\nvar debug;\\n\\nif (debugUtil && debugUtil.debuglog) {\\n  debug = debugUtil.debuglog('stream');\\n} else {\\n  debug = function debug() {};\\n}\\n/*</replacement>*/\\n\\n\\nvar BufferList = require('./internal/streams/buffer_list');\\n\\nvar destroyImpl = require('./internal/streams/destroy');\\n\\nvar _require = require('./internal/streams/state'),\\n    getHighWaterMark = _require.getHighWaterMark;\\n\\nvar _require$codes = require('../errors').codes,\\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\\n\\nvar _require2 = require('../experimentalWarning'),\\n    emitExperimentalWarning = _require2.emitExperimentalWarning; // Lazy loaded to improve the startup performance.\\n\\n\\nvar StringDecoder;\\nvar createReadableStreamAsyncIterator;\\n\\nrequire('inherits')(Readable, Stream);\\n\\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\\n\\nfunction prependListener(emitter, event, fn) {\\n  // Sadly this is not cacheable as some libraries bundle their own\\n  // event emitter implementation with them.\\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\\n  // to continue to work with older versions of Node.js that do not include\\n  // the prependListener() method. The goal is to eventually remove this hack.\\n\\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\\n}\\n\\nfunction ReadableState(options, stream, isDuplex) {\\n  Duplex = Duplex || require('./_stream_duplex');\\n  options = options || {}; // Duplex streams are both readable and writable, but share\\n  // the same options object.\\n  // However, some cases require setting options to different\\n  // values for the readable and the writable sides of the duplex stream.\\n  // These options can be provided separately as readableXXX and writableXXX.\\n\\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\\n  // make all the buffer merging and length checks go away\\n\\n  this.objectMode = !!options.objectMode;\\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\\n  // Note: 0 is a valid value, means \\\"don't call _read preemptively ever\\\"\\n\\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\\n  // linked list can remove elements from the beginning faster than\\n  // array.shift()\\n\\n  this.buffer = new BufferList();\\n  this.length = 0;\\n  this.pipes = null;\\n  this.pipesCount = 0;\\n  this.flowing = null;\\n  this.ended = false;\\n  this.endEmitted = false;\\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\\n  // immediately, or on a later tick.  We set this to true at first, because\\n  // any actions that shouldn't happen until \\\"later\\\" should generally also\\n  // not happen before the first read call.\\n\\n  this.sync = true; // whenever we return null, then we set a flag to say\\n  // that we're awaiting a 'readable' event emission.\\n\\n  this.needReadable = false;\\n  this.emittedReadable = false;\\n  this.readableListening = false;\\n  this.resumeScheduled = false;\\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\\n\\n  this.emitClose = options.emitClose !== false; // has it been destroyed\\n\\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\\n  // encoding is 'binary' so we have to make this configurable.\\n  // Everything else in the universe uses 'utf8', though.\\n\\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\\n\\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\\n\\n  this.readingMore = false;\\n  this.decoder = null;\\n  this.encoding = null;\\n\\n  if (options.encoding) {\\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\\n    this.decoder = new StringDecoder(options.encoding);\\n    this.encoding = options.encoding;\\n  }\\n}\\n\\nfunction Readable(options) {\\n  Duplex = Duplex || require('./_stream_duplex');\\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\\n  // the ReadableState constructor, at least with V8 6.5\\n\\n  var isDuplex = this instanceof Duplex;\\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\\n\\n  this.readable = true;\\n\\n  if (options) {\\n    if (typeof options.read === 'function') this._read = options.read;\\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\\n  }\\n\\n  Stream.call(this);\\n}\\n\\nObject.defineProperty(Readable.prototype, 'destroyed', {\\n  // making it explicit this property is not enumerable\\n  // because otherwise some prototype manipulation in\\n  // userland will fail\\n  enumerable: false,\\n  get: function get() {\\n    if (this._readableState === undefined) {\\n      return false;\\n    }\\n\\n    return this._readableState.destroyed;\\n  },\\n  set: function set(value) {\\n    // we ignore the value if the stream\\n    // has not been initialized yet\\n    if (!this._readableState) {\\n      return;\\n    } // backward compatibility, the user is explicitly\\n    // managing destroyed\\n\\n\\n    this._readableState.destroyed = value;\\n  }\\n});\\nReadable.prototype.destroy = destroyImpl.destroy;\\nReadable.prototype._undestroy = destroyImpl.undestroy;\\n\\nReadable.prototype._destroy = function (err, cb) {\\n  cb(err);\\n}; // Manually shove something into the read() buffer.\\n// This returns true if the highWaterMark has not been hit yet,\\n// similar to how Writable.write() returns true if you should\\n// write() some more.\\n\\n\\nReadable.prototype.push = function (chunk, encoding) {\\n  var state = this._readableState;\\n  var skipChunkCheck;\\n\\n  if (!state.objectMode) {\\n    if (typeof chunk === 'string') {\\n      encoding = encoding || state.defaultEncoding;\\n\\n      if (encoding !== state.encoding) {\\n        chunk = Buffer.from(chunk, encoding);\\n        encoding = '';\\n      }\\n\\n      skipChunkCheck = true;\\n    }\\n  } else {\\n    skipChunkCheck = true;\\n  }\\n\\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\\n}; // Unshift should *always* be something directly out of read()\\n\\n\\nReadable.prototype.unshift = function (chunk) {\\n  return readableAddChunk(this, chunk, null, true, false);\\n};\\n\\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\\n  debug('readableAddChunk', chunk);\\n  var state = stream._readableState;\\n\\n  if (chunk === null) {\\n    state.reading = false;\\n    onEofChunk(stream, state);\\n  } else {\\n    var er;\\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\\n\\n    if (er) {\\n      stream.emit('error', er);\\n    } else if (state.objectMode || chunk && chunk.length > 0) {\\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\\n        chunk = _uint8ArrayToBuffer(chunk);\\n      }\\n\\n      if (addToFront) {\\n        if (state.endEmitted) stream.emit('error', new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\\n      } else if (state.ended) {\\n        stream.emit('error', new ERR_STREAM_PUSH_AFTER_EOF());\\n      } else if (state.destroyed) {\\n        return false;\\n      } else {\\n        state.reading = false;\\n\\n        if (state.decoder && !encoding) {\\n          chunk = state.decoder.write(chunk);\\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\\n        } else {\\n          addChunk(stream, state, chunk, false);\\n        }\\n      }\\n    } else if (!addToFront) {\\n      state.reading = false;\\n      maybeReadMore(stream, state);\\n    }\\n  } // We can push more data if we are below the highWaterMark.\\n  // Also, if we have no data yet, we can stand some more bytes.\\n  // This is to work around cases where hwm=0, such as the repl.\\n\\n\\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\\n}\\n\\nfunction addChunk(stream, state, chunk, addToFront) {\\n  if (state.flowing && state.length === 0 && !state.sync) {\\n    state.awaitDrain = 0;\\n    stream.emit('data', chunk);\\n  } else {\\n    // update the buffer info.\\n    state.length += state.objectMode ? 1 : chunk.length;\\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\\n    if (state.needReadable) emitReadable(stream);\\n  }\\n\\n  maybeReadMore(stream, state);\\n}\\n\\nfunction chunkInvalid(state, chunk) {\\n  var er;\\n\\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\\n  }\\n\\n  return er;\\n}\\n\\nReadable.prototype.isPaused = function () {\\n  return this._readableState.flowing === false;\\n}; // backwards compatibility.\\n\\n\\nReadable.prototype.setEncoding = function (enc) {\\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\\n  this._readableState.decoder = new StringDecoder(enc); // if setEncoding(null), decoder.encoding equals utf8\\n\\n  this._readableState.encoding = this._readableState.decoder.encoding;\\n  return this;\\n}; // Don't raise the hwm > 8MB\\n\\n\\nvar MAX_HWM = 0x800000;\\n\\nfunction computeNewHighWaterMark(n) {\\n  if (n >= MAX_HWM) {\\n    n = MAX_HWM;\\n  } else {\\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\\n    // tiny amounts\\n    n--;\\n    n |= n >>> 1;\\n    n |= n >>> 2;\\n    n |= n >>> 4;\\n    n |= n >>> 8;\\n    n |= n >>> 16;\\n    n++;\\n  }\\n\\n  return n;\\n} // This function is designed to be inlinable, so please take care when making\\n// changes to the function body.\\n\\n\\nfunction howMuchToRead(n, state) {\\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\\n  if (state.objectMode) return 1;\\n\\n  if (n !== n) {\\n    // Only flow one buffer at a time\\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\\n  } // If we're asking for more than the current hwm, then raise the hwm.\\n\\n\\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\\n  if (n <= state.length) return n; // Don't have enough\\n\\n  if (!state.ended) {\\n    state.needReadable = true;\\n    return 0;\\n  }\\n\\n  return state.length;\\n} // you can override either this method, or the async _read(n) below.\\n\\n\\nReadable.prototype.read = function (n) {\\n  debug('read', n);\\n  n = parseInt(n, 10);\\n  var state = this._readableState;\\n  var nOrig = n;\\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\\n  // already have a bunch of data in the buffer, then just trigger\\n  // the 'readable' event and move on.\\n\\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\\n    debug('read: emitReadable', state.length, state.ended);\\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\\n    return null;\\n  }\\n\\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\\n\\n  if (n === 0 && state.ended) {\\n    if (state.length === 0) endReadable(this);\\n    return null;\\n  } // All the actual chunk generation logic needs to be\\n  // *below* the call to _read.  The reason is that in certain\\n  // synthetic stream cases, such as passthrough streams, _read\\n  // may be a completely synchronous operation which may change\\n  // the state of the read buffer, providing enough data when\\n  // before there was *not* enough.\\n  //\\n  // So, the steps are:\\n  // 1. Figure out what the state of things will be after we do\\n  // a read from the buffer.\\n  //\\n  // 2. If that resulting state will trigger a _read, then call _read.\\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\\n  // deeply ugly to write APIs this way, but that still doesn't mean\\n  // that the Readable class should behave improperly, as streams are\\n  // designed to be sync/async agnostic.\\n  // Take note if the _read call is sync or async (ie, if the read call\\n  // has returned yet), so that we know whether or not it's safe to emit\\n  // 'readable' etc.\\n  //\\n  // 3. Actually pull the requested chunks out of the buffer and return.\\n  // if we need a readable event, then we need to do some reading.\\n\\n\\n  var doRead = state.needReadable;\\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\\n\\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\\n    doRead = true;\\n    debug('length less than watermark', doRead);\\n  } // however, if we've ended, then there's no point, and if we're already\\n  // reading, then it's unnecessary.\\n\\n\\n  if (state.ended || state.reading) {\\n    doRead = false;\\n    debug('reading or ended', doRead);\\n  } else if (doRead) {\\n    debug('do read');\\n    state.reading = true;\\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\\n\\n    if (state.length === 0) state.needReadable = true; // call internal read method\\n\\n    this._read(state.highWaterMark);\\n\\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\\n    // and we need to re-evaluate how much data we can return to the user.\\n\\n    if (!state.reading) n = howMuchToRead(nOrig, state);\\n  }\\n\\n  var ret;\\n  if (n > 0) ret = fromList(n, state);else ret = null;\\n\\n  if (ret === null) {\\n    state.needReadable = true;\\n    n = 0;\\n  } else {\\n    state.length -= n;\\n    state.awaitDrain = 0;\\n  }\\n\\n  if (state.length === 0) {\\n    // If we have nothing in the buffer, then we want to know\\n    // as soon as we *do* get something into the buffer.\\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\\n\\n    if (nOrig !== n && state.ended) endReadable(this);\\n  }\\n\\n  if (ret !== null) this.emit('data', ret);\\n  return ret;\\n};\\n\\nfunction onEofChunk(stream, state) {\\n  if (state.ended) return;\\n\\n  if (state.decoder) {\\n    var chunk = state.decoder.end();\\n\\n    if (chunk && chunk.length) {\\n      state.buffer.push(chunk);\\n      state.length += state.objectMode ? 1 : chunk.length;\\n    }\\n  }\\n\\n  state.ended = true;\\n\\n  if (state.sync) {\\n    // if we are sync, wait until next tick to emit the data.\\n    // Otherwise we risk emitting data in the flow()\\n    // the readable code triggers during a read() call\\n    emitReadable(stream);\\n  } else {\\n    // emit 'readable' now to make sure it gets picked up.\\n    state.needReadable = false;\\n\\n    if (!state.emittedReadable) {\\n      state.emittedReadable = true;\\n      emitReadable_(stream);\\n    }\\n  }\\n} // Don't emit readable right away in sync mode, because this can trigger\\n// another read() call => stack overflow.  This way, it might trigger\\n// a nextTick recursion warning, but that's not so bad.\\n\\n\\nfunction emitReadable(stream) {\\n  var state = stream._readableState;\\n  state.needReadable = false;\\n\\n  if (!state.emittedReadable) {\\n    debug('emitReadable', state.flowing);\\n    state.emittedReadable = true;\\n    process.nextTick(emitReadable_, stream);\\n  }\\n}\\n\\nfunction emitReadable_(stream) {\\n  var state = stream._readableState;\\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\\n\\n  if (!state.destroyed && (state.length || state.ended)) {\\n    stream.emit('readable');\\n  } // The stream needs another readable event if\\n  // 1. It is not flowing, as the flow mechanism will take\\n  //    care of it.\\n  // 2. It is not ended.\\n  // 3. It is below the highWaterMark, so we can schedule\\n  //    another readable later.\\n\\n\\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\\n  flow(stream);\\n} // at this point, the user has presumably seen the 'readable' event,\\n// and called read() to consume some data.  that may have triggered\\n// in turn another _read(n) call, in which case reading = true if\\n// it's in progress.\\n// However, if we're not ended, or reading, and the length < hwm,\\n// then go ahead and try to read some more preemptively.\\n\\n\\nfunction maybeReadMore(stream, state) {\\n  if (!state.readingMore) {\\n    state.readingMore = true;\\n    process.nextTick(maybeReadMore_, stream, state);\\n  }\\n}\\n\\nfunction maybeReadMore_(stream, state) {\\n  // Attempt to read more data if we should.\\n  //\\n  // The conditions for reading more data are (one of):\\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\\n  //   is responsible for filling the buffer with enough data if such data\\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\\n  //   when the stream consumer calls read() instead.\\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\\n  //   the loop below is responsible for ensuring read() is called. Failing to\\n  //   call read here would abort the flow and there's no other mechanism for\\n  //   continuing the flow if the stream consumer has just subscribed to the\\n  //   'data' event.\\n  //\\n  // In addition to the above conditions to keep reading data, the following\\n  // conditions prevent the data from being read:\\n  // - The stream has ended (state.ended).\\n  // - There is already a pending 'read' operation (state.reading). This is a\\n  //   case where the the stream has called the implementation defined _read()\\n  //   method, but they are processing the call asynchronously and have _not_\\n  //   called push() with new data. In this case we skip performing more\\n  //   read()s. The execution ends in this method again after the _read() ends\\n  //   up calling push() with more data.\\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\\n    var len = state.length;\\n    debug('maybeReadMore read 0');\\n    stream.read(0);\\n    if (len === state.length) // didn't get any data, stop spinning.\\n      break;\\n  }\\n\\n  state.readingMore = false;\\n} // abstract method.  to be overridden in specific implementation classes.\\n// call cb(er, data) where data is <= n in length.\\n// for virtual (non-string, non-buffer) streams, \\\"length\\\" is somewhat\\n// arbitrary, and perhaps not very meaningful.\\n\\n\\nReadable.prototype._read = function (n) {\\n  this.emit('error', new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\\n};\\n\\nReadable.prototype.pipe = function (dest, pipeOpts) {\\n  var src = this;\\n  var state = this._readableState;\\n\\n  switch (state.pipesCount) {\\n    case 0:\\n      state.pipes = dest;\\n      break;\\n\\n    case 1:\\n      state.pipes = [state.pipes, dest];\\n      break;\\n\\n    default:\\n      state.pipes.push(dest);\\n      break;\\n  }\\n\\n  state.pipesCount += 1;\\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\\n  var endFn = doEnd ? onend : unpipe;\\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\\n  dest.on('unpipe', onunpipe);\\n\\n  function onunpipe(readable, unpipeInfo) {\\n    debug('onunpipe');\\n\\n    if (readable === src) {\\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\\n        unpipeInfo.hasUnpiped = true;\\n        cleanup();\\n      }\\n    }\\n  }\\n\\n  function onend() {\\n    debug('onend');\\n    dest.end();\\n  } // when the dest drains, it reduces the awaitDrain counter\\n  // on the source.  This would be more elegant with a .once()\\n  // handler in flow(), but adding and removing repeatedly is\\n  // too slow.\\n\\n\\n  var ondrain = pipeOnDrain(src);\\n  dest.on('drain', ondrain);\\n  var cleanedUp = false;\\n\\n  function cleanup() {\\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\\n\\n    dest.removeListener('close', onclose);\\n    dest.removeListener('finish', onfinish);\\n    dest.removeListener('drain', ondrain);\\n    dest.removeListener('error', onerror);\\n    dest.removeListener('unpipe', onunpipe);\\n    src.removeListener('end', onend);\\n    src.removeListener('end', unpipe);\\n    src.removeListener('data', ondata);\\n    cleanedUp = true; // if the reader is waiting for a drain event from this\\n    // specific writer, then it would cause it to never start\\n    // flowing again.\\n    // So, if this is awaiting a drain, then we just call it now.\\n    // If we don't know, then assume that we are waiting for one.\\n\\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\\n  }\\n\\n  src.on('data', ondata);\\n\\n  function ondata(chunk) {\\n    debug('ondata');\\n    var ret = dest.write(chunk);\\n    debug('dest.write', ret);\\n\\n    if (ret === false) {\\n      // If the user unpiped during `dest.write()`, it is possible\\n      // to get stuck in a permanently paused state if that write\\n      // also returned false.\\n      // => Check whether `dest` is still a piping destination.\\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\\n        debug('false write response, pause', state.awaitDrain);\\n        state.awaitDrain++;\\n      }\\n\\n      src.pause();\\n    }\\n  } // if the dest has an error, then stop piping into it.\\n  // however, don't suppress the throwing behavior for this.\\n\\n\\n  function onerror(er) {\\n    debug('onerror', er);\\n    unpipe();\\n    dest.removeListener('error', onerror);\\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\\n  } // Make sure our error handler is attached before userland ones.\\n\\n\\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\\n\\n  function onclose() {\\n    dest.removeListener('finish', onfinish);\\n    unpipe();\\n  }\\n\\n  dest.once('close', onclose);\\n\\n  function onfinish() {\\n    debug('onfinish');\\n    dest.removeListener('close', onclose);\\n    unpipe();\\n  }\\n\\n  dest.once('finish', onfinish);\\n\\n  function unpipe() {\\n    debug('unpipe');\\n    src.unpipe(dest);\\n  } // tell the dest that it's being piped to\\n\\n\\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\\n\\n  if (!state.flowing) {\\n    debug('pipe resume');\\n    src.resume();\\n  }\\n\\n  return dest;\\n};\\n\\nfunction pipeOnDrain(src) {\\n  return function pipeOnDrainFunctionResult() {\\n    var state = src._readableState;\\n    debug('pipeOnDrain', state.awaitDrain);\\n    if (state.awaitDrain) state.awaitDrain--;\\n\\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\\n      state.flowing = true;\\n      flow(src);\\n    }\\n  };\\n}\\n\\nReadable.prototype.unpipe = function (dest) {\\n  var state = this._readableState;\\n  var unpipeInfo = {\\n    hasUnpiped: false\\n  }; // if we're not piping anywhere, then do nothing.\\n\\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\\n\\n  if (state.pipesCount === 1) {\\n    // passed in one, but it's not the right one.\\n    if (dest && dest !== state.pipes) return this;\\n    if (!dest) dest = state.pipes; // got a match.\\n\\n    state.pipes = null;\\n    state.pipesCount = 0;\\n    state.flowing = false;\\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\\n    return this;\\n  } // slow case. multiple pipe destinations.\\n\\n\\n  if (!dest) {\\n    // remove all.\\n    var dests = state.pipes;\\n    var len = state.pipesCount;\\n    state.pipes = null;\\n    state.pipesCount = 0;\\n    state.flowing = false;\\n\\n    for (var i = 0; i < len; i++) {\\n      dests[i].emit('unpipe', this, {\\n        hasUnpiped: false\\n      });\\n    }\\n\\n    return this;\\n  } // try to find the right one.\\n\\n\\n  var index = indexOf(state.pipes, dest);\\n  if (index === -1) return this;\\n  state.pipes.splice(index, 1);\\n  state.pipesCount -= 1;\\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\\n  dest.emit('unpipe', this, unpipeInfo);\\n  return this;\\n}; // set up data events if they are asked for\\n// Ensure readable listeners eventually get something\\n\\n\\nReadable.prototype.on = function (ev, fn) {\\n  var res = Stream.prototype.on.call(this, ev, fn);\\n  var state = this._readableState;\\n\\n  if (ev === 'data') {\\n    // update readableListening so that resume() may be a no-op\\n    // a few lines down. This is needed to support once('readable').\\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\\n\\n    if (state.flowing !== false) this.resume();\\n  } else if (ev === 'readable') {\\n    if (!state.endEmitted && !state.readableListening) {\\n      state.readableListening = state.needReadable = true;\\n      state.flowing = false;\\n      state.emittedReadable = false;\\n      debug('on readable', state.length, state.reading);\\n\\n      if (state.length) {\\n        emitReadable(this);\\n      } else if (!state.reading) {\\n        process.nextTick(nReadingNextTick, this);\\n      }\\n    }\\n  }\\n\\n  return res;\\n};\\n\\nReadable.prototype.addListener = Readable.prototype.on;\\n\\nReadable.prototype.removeListener = function (ev, fn) {\\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\\n\\n  if (ev === 'readable') {\\n    // We need to check if there is someone still listening to\\n    // readable and reset the state. However this needs to happen\\n    // after readable has been emitted but before I/O (nextTick) to\\n    // support once('readable', fn) cycles. This means that calling\\n    // resume within the same tick will have no\\n    // effect.\\n    process.nextTick(updateReadableListening, this);\\n  }\\n\\n  return res;\\n};\\n\\nReadable.prototype.removeAllListeners = function (ev) {\\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\\n\\n  if (ev === 'readable' || ev === undefined) {\\n    // We need to check if there is someone still listening to\\n    // readable and reset the state. However this needs to happen\\n    // after readable has been emitted but before I/O (nextTick) to\\n    // support once('readable', fn) cycles. This means that calling\\n    // resume within the same tick will have no\\n    // effect.\\n    process.nextTick(updateReadableListening, this);\\n  }\\n\\n  return res;\\n};\\n\\nfunction updateReadableListening(self) {\\n  var state = self._readableState;\\n  state.readableListening = self.listenerCount('readable') > 0;\\n\\n  if (state.resumeScheduled && !state.paused) {\\n    // flowing needs to be set to true now, otherwise\\n    // the upcoming resume will not flow.\\n    state.flowing = true; // crude way to check if we should resume\\n  } else if (self.listenerCount('data') > 0) {\\n    self.resume();\\n  }\\n}\\n\\nfunction nReadingNextTick(self) {\\n  debug('readable nexttick read 0');\\n  self.read(0);\\n} // pause() and resume() are remnants of the legacy readable stream API\\n// If the user uses them, then switch into old mode.\\n\\n\\nReadable.prototype.resume = function () {\\n  var state = this._readableState;\\n\\n  if (!state.flowing) {\\n    debug('resume'); // we flow only if there is no one listening\\n    // for readable, but we still have to call\\n    // resume()\\n\\n    state.flowing = !state.readableListening;\\n    resume(this, state);\\n  }\\n\\n  state.paused = false;\\n  return this;\\n};\\n\\nfunction resume(stream, state) {\\n  if (!state.resumeScheduled) {\\n    state.resumeScheduled = true;\\n    process.nextTick(resume_, stream, state);\\n  }\\n}\\n\\nfunction resume_(stream, state) {\\n  debug('resume', state.reading);\\n\\n  if (!state.reading) {\\n    stream.read(0);\\n  }\\n\\n  state.resumeScheduled = false;\\n  stream.emit('resume');\\n  flow(stream);\\n  if (state.flowing && !state.reading) stream.read(0);\\n}\\n\\nReadable.prototype.pause = function () {\\n  debug('call pause flowing=%j', this._readableState.flowing);\\n\\n  if (this._readableState.flowing !== false) {\\n    debug('pause');\\n    this._readableState.flowing = false;\\n    this.emit('pause');\\n  }\\n\\n  this._readableState.paused = true;\\n  return this;\\n};\\n\\nfunction flow(stream) {\\n  var state = stream._readableState;\\n  debug('flow', state.flowing);\\n\\n  while (state.flowing && stream.read() !== null) {\\n    ;\\n  }\\n} // wrap an old-style stream as the async data source.\\n// This is *not* part of the readable stream interface.\\n// It is an ugly unfortunate mess of history.\\n\\n\\nReadable.prototype.wrap = function (stream) {\\n  var _this = this;\\n\\n  var state = this._readableState;\\n  var paused = false;\\n  stream.on('end', function () {\\n    debug('wrapped end');\\n\\n    if (state.decoder && !state.ended) {\\n      var chunk = state.decoder.end();\\n      if (chunk && chunk.length) _this.push(chunk);\\n    }\\n\\n    _this.push(null);\\n  });\\n  stream.on('data', function (chunk) {\\n    debug('wrapped data');\\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\\n\\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\\n\\n    var ret = _this.push(chunk);\\n\\n    if (!ret) {\\n      paused = true;\\n      stream.pause();\\n    }\\n  }); // proxy all the other methods.\\n  // important when wrapping filters and duplexes.\\n\\n  for (var i in stream) {\\n    if (this[i] === undefined && typeof stream[i] === 'function') {\\n      this[i] = function methodWrap(method) {\\n        return function methodWrapReturnFunction() {\\n          return stream[method].apply(stream, arguments);\\n        };\\n      }(i);\\n    }\\n  } // proxy certain important events.\\n\\n\\n  for (var n = 0; n < kProxyEvents.length; n++) {\\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\\n  } // when we try to consume some more bytes, simply unpause the\\n  // underlying stream.\\n\\n\\n  this._read = function (n) {\\n    debug('wrapped _read', n);\\n\\n    if (paused) {\\n      paused = false;\\n      stream.resume();\\n    }\\n  };\\n\\n  return this;\\n};\\n\\nif (typeof Symbol === 'function') {\\n  Readable.prototype[Symbol.asyncIterator] = function () {\\n    emitExperimentalWarning('Readable[Symbol.asyncIterator]');\\n\\n    if (createReadableStreamAsyncIterator === undefined) {\\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\\n    }\\n\\n    return createReadableStreamAsyncIterator(this);\\n  };\\n}\\n\\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\\n  // making it explicit this property is not enumerable\\n  // because otherwise some prototype manipulation in\\n  // userland will fail\\n  enumerable: false,\\n  get: function get() {\\n    return this._readableState.highWaterMark;\\n  }\\n});\\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\\n  // making it explicit this property is not enumerable\\n  // because otherwise some prototype manipulation in\\n  // userland will fail\\n  enumerable: false,\\n  get: function get() {\\n    return this._readableState && this._readableState.buffer;\\n  }\\n});\\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\\n  // making it explicit this property is not enumerable\\n  // because otherwise some prototype manipulation in\\n  // userland will fail\\n  enumerable: false,\\n  get: function get() {\\n    return this._readableState.flowing;\\n  },\\n  set: function set(state) {\\n    if (this._readableState) {\\n      this._readableState.flowing = state;\\n    }\\n  }\\n}); // exposed for testing purposes only.\\n\\nReadable._fromList = fromList;\\nObject.defineProperty(Readable.prototype, 'readableLength', {\\n  // making it explicit this property is not enumerable\\n  // because otherwise some prototype manipulation in\\n  // userland will fail\\n  enumerable: false,\\n  get: function get() {\\n    return this._readableState.length;\\n  }\\n}); // Pluck off n bytes from an array of buffers.\\n// Length is the combined lengths of all the buffers in the list.\\n// This function is designed to be inlinable, so please take care when making\\n// changes to the function body.\\n\\nfunction fromList(n, state) {\\n  // nothing buffered\\n  if (state.length === 0) return null;\\n  var ret;\\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\\n    // read it all, truncate the list\\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\\n    state.buffer.clear();\\n  } else {\\n    // read part of list\\n    ret = state.buffer.consume(n, state.decoder);\\n  }\\n  return ret;\\n}\\n\\nfunction endReadable(stream) {\\n  var state = stream._readableState;\\n  debug('endReadable', state.endEmitted);\\n\\n  if (!state.endEmitted) {\\n    state.ended = true;\\n    process.nextTick(endReadableNT, state, stream);\\n  }\\n}\\n\\nfunction endReadableNT(state, stream) {\\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\\n\\n  if (!state.endEmitted && state.length === 0) {\\n    state.endEmitted = true;\\n    stream.readable = false;\\n    stream.emit('end');\\n  }\\n}\\n\\nfunction indexOf(xs, x) {\\n  for (var i = 0, l = xs.length; i < l; i++) {\\n    if (xs[i] === x) return i;\\n  }\\n\\n  return -1;\\n}\",\"module.exports = require('events').EventEmitter;\",\"'use strict'; // undocumented cb() API, needed for core, not for public API\\n\\nfunction destroy(err, cb) {\\n  var _this = this;\\n\\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\\n\\n  if (readableDestroyed || writableDestroyed) {\\n    if (cb) {\\n      cb(err);\\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\\n      process.nextTick(emitErrorNT, this, err);\\n    }\\n\\n    return this;\\n  } // we set destroyed to true before firing error callbacks in order\\n  // to make it re-entrance safe in case destroy() is called within callbacks\\n\\n\\n  if (this._readableState) {\\n    this._readableState.destroyed = true;\\n  } // if this is a duplex stream mark the writable part as destroyed as well\\n\\n\\n  if (this._writableState) {\\n    this._writableState.destroyed = true;\\n  }\\n\\n  this._destroy(err || null, function (err) {\\n    if (!cb && err) {\\n      process.nextTick(emitErrorAndCloseNT, _this, err);\\n\\n      if (_this._writableState) {\\n        _this._writableState.errorEmitted = true;\\n      }\\n    } else if (cb) {\\n      process.nextTick(emitCloseNT, _this);\\n      cb(err);\\n    } else {\\n      process.nextTick(emitCloseNT, _this);\\n    }\\n  });\\n\\n  return this;\\n}\\n\\nfunction emitErrorAndCloseNT(self, err) {\\n  emitErrorNT(self, err);\\n  emitCloseNT(self);\\n}\\n\\nfunction emitCloseNT(self) {\\n  if (self._writableState && !self._writableState.emitClose) return;\\n  if (self._readableState && !self._readableState.emitClose) return;\\n  self.emit('close');\\n}\\n\\nfunction undestroy() {\\n  if (this._readableState) {\\n    this._readableState.destroyed = false;\\n    this._readableState.reading = false;\\n    this._readableState.ended = false;\\n    this._readableState.endEmitted = false;\\n  }\\n\\n  if (this._writableState) {\\n    this._writableState.destroyed = false;\\n    this._writableState.ended = false;\\n    this._writableState.ending = false;\\n    this._writableState.finalCalled = false;\\n    this._writableState.prefinished = false;\\n    this._writableState.finished = false;\\n    this._writableState.errorEmitted = false;\\n  }\\n}\\n\\nfunction emitErrorNT(self, err) {\\n  self.emit('error', err);\\n}\\n\\nmodule.exports = {\\n  destroy: destroy,\\n  undestroy: undestroy\\n};\",\"'use strict';\\n\\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\\n\\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\\n}\\n\\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\\n\\n  if (hwm != null) {\\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\\n      var name = isDuplex ? duplexKey : 'highWaterMark';\\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\\n    }\\n\\n    return Math.floor(hwm);\\n  } // Default value\\n\\n\\n  return state.objectMode ? 16 : 16 * 1024;\\n}\\n\\nmodule.exports = {\\n  getHighWaterMark: getHighWaterMark\\n};\",\"// Copyright Joyent, Inc. and other Node contributors.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a\\n// copy of this software and associated documentation files (the\\n// \\\"Software\\\"), to deal in the Software without restriction, including\\n// without limitation the rights to use, copy, modify, merge, publish,\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\n// persons to whom the Software is furnished to do so, subject to the\\n// following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included\\n// in all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\n// A bit simpler than readable streams.\\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\\n// the drain event emission and buffering.\\n'use strict';\\n\\nmodule.exports = Writable;\\n/* <replacement> */\\n\\nfunction WriteReq(chunk, encoding, cb) {\\n  this.chunk = chunk;\\n  this.encoding = encoding;\\n  this.callback = cb;\\n  this.next = null;\\n} // It seems a linked list but it is not\\n// there will be only 2 of these for each stream\\n\\n\\nfunction CorkedRequest(state) {\\n  var _this = this;\\n\\n  this.next = null;\\n  this.entry = null;\\n\\n  this.finish = function () {\\n    onCorkedFinish(_this, state);\\n  };\\n}\\n/* </replacement> */\\n\\n/*<replacement>*/\\n\\n\\nvar Duplex;\\n/*</replacement>*/\\n\\nWritable.WritableState = WritableState;\\n/*<replacement>*/\\n\\nvar internalUtil = {\\n  deprecate: require('util-deprecate')\\n};\\n/*</replacement>*/\\n\\n/*<replacement>*/\\n\\nvar Stream = require('./internal/streams/stream');\\n/*</replacement>*/\\n\\n\\nvar Buffer = require('buffer').Buffer;\\n\\nvar OurUint8Array = global.Uint8Array || function () {};\\n\\nfunction _uint8ArrayToBuffer(chunk) {\\n  return Buffer.from(chunk);\\n}\\n\\nfunction _isUint8Array(obj) {\\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\\n}\\n\\nvar destroyImpl = require('./internal/streams/destroy');\\n\\nvar _require = require('./internal/streams/state'),\\n    getHighWaterMark = _require.getHighWaterMark;\\n\\nvar _require$codes = require('../errors').codes,\\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\\n\\nrequire('inherits')(Writable, Stream);\\n\\nfunction nop() {}\\n\\nfunction WritableState(options, stream, isDuplex) {\\n  Duplex = Duplex || require('./_stream_duplex');\\n  options = options || {}; // Duplex streams are both readable and writable, but share\\n  // the same options object.\\n  // However, some cases require setting options to different\\n  // values for the readable and the writable sides of the duplex stream,\\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\\n\\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\\n  // contains buffers or objects.\\n\\n  this.objectMode = !!options.objectMode;\\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\\n  // Note: 0 is a valid value, means that we always return false if\\n  // the entire buffer is not flushed immediately on write()\\n\\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\\n\\n  this.finalCalled = false; // drain event flag.\\n\\n  this.needDrain = false; // at the start of calling end()\\n\\n  this.ending = false; // when end() has been called, and returned\\n\\n  this.ended = false; // when 'finish' is emitted\\n\\n  this.finished = false; // has it been destroyed\\n\\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\\n  // this is here so that some node-core streams can optimize string\\n  // handling at a lower level.\\n\\n  var noDecode = options.decodeStrings === false;\\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\\n  // encoding is 'binary' so we have to make this configurable.\\n  // Everything else in the universe uses 'utf8', though.\\n\\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\\n  // of how much we're waiting to get pushed to some underlying\\n  // socket or file.\\n\\n  this.length = 0; // a flag to see when we're in the middle of a write.\\n\\n  this.writing = false; // when true all writes will be buffered until .uncork() call\\n\\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\\n  // or on a later tick.  We set this to true at first, because any\\n  // actions that shouldn't happen until \\\"later\\\" should generally also\\n  // not happen before the first write call.\\n\\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\\n  // may call the _write() callback in the same tick, so that we don't\\n  // end up in an overlapped onwrite situation.\\n\\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\\n\\n  this.onwrite = function (er) {\\n    onwrite(stream, er);\\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\\n\\n\\n  this.writecb = null; // the amount that is being written when _write is called.\\n\\n  this.writelen = 0;\\n  this.bufferedRequest = null;\\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\\n  // this must be 0 before 'finish' can be emitted\\n\\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\\n  // This is relevant for synchronous Transform streams\\n\\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\\n\\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\\n\\n  this.emitClose = options.emitClose !== false; // count buffered requests\\n\\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\\n  // one allocated and free to use, and we maintain at most two\\n\\n  this.corkedRequestsFree = new CorkedRequest(this);\\n}\\n\\nWritableState.prototype.getBuffer = function getBuffer() {\\n  var current = this.bufferedRequest;\\n  var out = [];\\n\\n  while (current) {\\n    out.push(current);\\n    current = current.next;\\n  }\\n\\n  return out;\\n};\\n\\n(function () {\\n  try {\\n    Object.defineProperty(WritableState.prototype, 'buffer', {\\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\\n        return this.getBuffer();\\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\\n    });\\n  } catch (_) {}\\n})(); // Test _writableState for inheritance to account for Duplex streams,\\n// whose prototype chain only points to Readable.\\n\\n\\nvar realHasInstance;\\n\\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\\n  realHasInstance = Function.prototype[Symbol.hasInstance];\\n  Object.defineProperty(Writable, Symbol.hasInstance, {\\n    value: function value(object) {\\n      if (realHasInstance.call(this, object)) return true;\\n      if (this !== Writable) return false;\\n      return object && object._writableState instanceof WritableState;\\n    }\\n  });\\n} else {\\n  realHasInstance = function realHasInstance(object) {\\n    return object instanceof this;\\n  };\\n}\\n\\nfunction Writable(options) {\\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\\n  // `realHasInstance` is necessary because using plain `instanceof`\\n  // would return false, as no `_writableState` property is attached.\\n  // Trying to use the custom `instanceof` for Writable here will also break the\\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\\n  // `_writableState` that would lead to infinite recursion.\\n  // Checking for a Stream.Duplex instance is faster here instead of inside\\n  // the WritableState constructor, at least with V8 6.5\\n\\n  var isDuplex = this instanceof Duplex;\\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\\n\\n  this.writable = true;\\n\\n  if (options) {\\n    if (typeof options.write === 'function') this._write = options.write;\\n    if (typeof options.writev === 'function') this._writev = options.writev;\\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\\n    if (typeof options.final === 'function') this._final = options.final;\\n  }\\n\\n  Stream.call(this);\\n} // Otherwise people can pipe Writable streams, which is just wrong.\\n\\n\\nWritable.prototype.pipe = function () {\\n  this.emit('error', new ERR_STREAM_CANNOT_PIPE());\\n};\\n\\nfunction writeAfterEnd(stream, cb) {\\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\\n\\n  stream.emit('error', er);\\n  process.nextTick(cb, er);\\n} // Checks that a user-supplied chunk is valid, especially for the particular\\n// mode the stream is in. Currently this means that `null` is never accepted\\n// and undefined/non-string values are only allowed in object mode.\\n\\n\\nfunction validChunk(stream, state, chunk, cb) {\\n  var er;\\n\\n  if (chunk === null) {\\n    er = new ERR_STREAM_NULL_VALUES();\\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\\n  }\\n\\n  if (er) {\\n    stream.emit('error', er);\\n    process.nextTick(cb, er);\\n    return false;\\n  }\\n\\n  return true;\\n}\\n\\nWritable.prototype.write = function (chunk, encoding, cb) {\\n  var state = this._writableState;\\n  var ret = false;\\n\\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\\n\\n  if (isBuf && !Buffer.isBuffer(chunk)) {\\n    chunk = _uint8ArrayToBuffer(chunk);\\n  }\\n\\n  if (typeof encoding === 'function') {\\n    cb = encoding;\\n    encoding = null;\\n  }\\n\\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\\n  if (typeof cb !== 'function') cb = nop;\\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\\n    state.pendingcb++;\\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\\n  }\\n  return ret;\\n};\\n\\nWritable.prototype.cork = function () {\\n  this._writableState.corked++;\\n};\\n\\nWritable.prototype.uncork = function () {\\n  var state = this._writableState;\\n\\n  if (state.corked) {\\n    state.corked--;\\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\\n  }\\n};\\n\\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\\n  // node::ParseEncoding() requires lower case.\\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\\n  this._writableState.defaultEncoding = encoding;\\n  return this;\\n};\\n\\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\\n  // making it explicit this property is not enumerable\\n  // because otherwise some prototype manipulation in\\n  // userland will fail\\n  enumerable: false,\\n  get: function get() {\\n    return this._writableState && this._writableState.getBuffer();\\n  }\\n});\\n\\nfunction decodeChunk(state, chunk, encoding) {\\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\\n    chunk = Buffer.from(chunk, encoding);\\n  }\\n\\n  return chunk;\\n}\\n\\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\\n  // making it explicit this property is not enumerable\\n  // because otherwise some prototype manipulation in\\n  // userland will fail\\n  enumerable: false,\\n  get: function get() {\\n    return this._writableState.highWaterMark;\\n  }\\n}); // if we're already writing something, then just put this\\n// in the queue, and wait our turn.  Otherwise, call _write\\n// If we return false, then we need a drain event, so set that flag.\\n\\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\\n  if (!isBuf) {\\n    var newChunk = decodeChunk(state, chunk, encoding);\\n\\n    if (chunk !== newChunk) {\\n      isBuf = true;\\n      encoding = 'buffer';\\n      chunk = newChunk;\\n    }\\n  }\\n\\n  var len = state.objectMode ? 1 : chunk.length;\\n  state.length += len;\\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\\n\\n  if (!ret) state.needDrain = true;\\n\\n  if (state.writing || state.corked) {\\n    var last = state.lastBufferedRequest;\\n    state.lastBufferedRequest = {\\n      chunk: chunk,\\n      encoding: encoding,\\n      isBuf: isBuf,\\n      callback: cb,\\n      next: null\\n    };\\n\\n    if (last) {\\n      last.next = state.lastBufferedRequest;\\n    } else {\\n      state.bufferedRequest = state.lastBufferedRequest;\\n    }\\n\\n    state.bufferedRequestCount += 1;\\n  } else {\\n    doWrite(stream, state, false, len, chunk, encoding, cb);\\n  }\\n\\n  return ret;\\n}\\n\\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\\n  state.writelen = len;\\n  state.writecb = cb;\\n  state.writing = true;\\n  state.sync = true;\\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\\n  state.sync = false;\\n}\\n\\nfunction onwriteError(stream, state, sync, er, cb) {\\n  --state.pendingcb;\\n\\n  if (sync) {\\n    // defer the callback if we are being called synchronously\\n    // to avoid piling up things on the stack\\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\\n    // after error\\n\\n    process.nextTick(finishMaybe, stream, state);\\n    stream._writableState.errorEmitted = true;\\n    stream.emit('error', er);\\n  } else {\\n    // the caller expect this to happen before if\\n    // it is async\\n    cb(er);\\n    stream._writableState.errorEmitted = true;\\n    stream.emit('error', er); // this can emit finish, but finish must\\n    // always follow error\\n\\n    finishMaybe(stream, state);\\n  }\\n}\\n\\nfunction onwriteStateUpdate(state) {\\n  state.writing = false;\\n  state.writecb = null;\\n  state.length -= state.writelen;\\n  state.writelen = 0;\\n}\\n\\nfunction onwrite(stream, er) {\\n  var state = stream._writableState;\\n  var sync = state.sync;\\n  var cb = state.writecb;\\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\\n  onwriteStateUpdate(state);\\n  if (er) onwriteError(stream, state, sync, er, cb);else {\\n    // Check if we're actually ready to finish, but don't emit yet\\n    var finished = needFinish(state) || stream.destroyed;\\n\\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\\n      clearBuffer(stream, state);\\n    }\\n\\n    if (sync) {\\n      process.nextTick(afterWrite, stream, state, finished, cb);\\n    } else {\\n      afterWrite(stream, state, finished, cb);\\n    }\\n  }\\n}\\n\\nfunction afterWrite(stream, state, finished, cb) {\\n  if (!finished) onwriteDrain(stream, state);\\n  state.pendingcb--;\\n  cb();\\n  finishMaybe(stream, state);\\n} // Must force callback to be called on nextTick, so that we don't\\n// emit 'drain' before the write() consumer gets the 'false' return\\n// value, and has a chance to attach a 'drain' listener.\\n\\n\\nfunction onwriteDrain(stream, state) {\\n  if (state.length === 0 && state.needDrain) {\\n    state.needDrain = false;\\n    stream.emit('drain');\\n  }\\n} // if there's something in the buffer waiting, then process it\\n\\n\\nfunction clearBuffer(stream, state) {\\n  state.bufferProcessing = true;\\n  var entry = state.bufferedRequest;\\n\\n  if (stream._writev && entry && entry.next) {\\n    // Fast case, write everything using _writev()\\n    var l = state.bufferedRequestCount;\\n    var buffer = new Array(l);\\n    var holder = state.corkedRequestsFree;\\n    holder.entry = entry;\\n    var count = 0;\\n    var allBuffers = true;\\n\\n    while (entry) {\\n      buffer[count] = entry;\\n      if (!entry.isBuf) allBuffers = false;\\n      entry = entry.next;\\n      count += 1;\\n    }\\n\\n    buffer.allBuffers = allBuffers;\\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\\n    // as the hot path ends with doWrite\\n\\n    state.pendingcb++;\\n    state.lastBufferedRequest = null;\\n\\n    if (holder.next) {\\n      state.corkedRequestsFree = holder.next;\\n      holder.next = null;\\n    } else {\\n      state.corkedRequestsFree = new CorkedRequest(state);\\n    }\\n\\n    state.bufferedRequestCount = 0;\\n  } else {\\n    // Slow case, write chunks one-by-one\\n    while (entry) {\\n      var chunk = entry.chunk;\\n      var encoding = entry.encoding;\\n      var cb = entry.callback;\\n      var len = state.objectMode ? 1 : chunk.length;\\n      doWrite(stream, state, false, len, chunk, encoding, cb);\\n      entry = entry.next;\\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\\n      // it means that we need to wait until it does.\\n      // also, that means that the chunk and cb are currently\\n      // being processed, so move the buffer counter past them.\\n\\n      if (state.writing) {\\n        break;\\n      }\\n    }\\n\\n    if (entry === null) state.lastBufferedRequest = null;\\n  }\\n\\n  state.bufferedRequest = entry;\\n  state.bufferProcessing = false;\\n}\\n\\nWritable.prototype._write = function (chunk, encoding, cb) {\\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\\n};\\n\\nWritable.prototype._writev = null;\\n\\nWritable.prototype.end = function (chunk, encoding, cb) {\\n  var state = this._writableState;\\n\\n  if (typeof chunk === 'function') {\\n    cb = chunk;\\n    chunk = null;\\n    encoding = null;\\n  } else if (typeof encoding === 'function') {\\n    cb = encoding;\\n    encoding = null;\\n  }\\n\\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\\n\\n  if (state.corked) {\\n    state.corked = 1;\\n    this.uncork();\\n  } // ignore unnecessary end() calls.\\n\\n\\n  if (!state.ending) endWritable(this, state, cb);\\n  return this;\\n};\\n\\nObject.defineProperty(Writable.prototype, 'writableLength', {\\n  // making it explicit this property is not enumerable\\n  // because otherwise some prototype manipulation in\\n  // userland will fail\\n  enumerable: false,\\n  get: function get() {\\n    return this._writableState.length;\\n  }\\n});\\n\\nfunction needFinish(state) {\\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\\n}\\n\\nfunction callFinal(stream, state) {\\n  stream._final(function (err) {\\n    state.pendingcb--;\\n\\n    if (err) {\\n      stream.emit('error', err);\\n    }\\n\\n    state.prefinished = true;\\n    stream.emit('prefinish');\\n    finishMaybe(stream, state);\\n  });\\n}\\n\\nfunction prefinish(stream, state) {\\n  if (!state.prefinished && !state.finalCalled) {\\n    if (typeof stream._final === 'function' && !state.destroyed) {\\n      state.pendingcb++;\\n      state.finalCalled = true;\\n      process.nextTick(callFinal, stream, state);\\n    } else {\\n      state.prefinished = true;\\n      stream.emit('prefinish');\\n    }\\n  }\\n}\\n\\nfunction finishMaybe(stream, state) {\\n  var need = needFinish(state);\\n\\n  if (need) {\\n    prefinish(stream, state);\\n\\n    if (state.pendingcb === 0) {\\n      state.finished = true;\\n      stream.emit('finish');\\n    }\\n  }\\n\\n  return need;\\n}\\n\\nfunction endWritable(stream, state, cb) {\\n  state.ending = true;\\n  finishMaybe(stream, state);\\n\\n  if (cb) {\\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\\n  }\\n\\n  state.ended = true;\\n  stream.writable = false;\\n}\\n\\nfunction onCorkedFinish(corkReq, state, err) {\\n  var entry = corkReq.entry;\\n  corkReq.entry = null;\\n\\n  while (entry) {\\n    var cb = entry.callback;\\n    state.pendingcb--;\\n    cb(err);\\n    entry = entry.next;\\n  } // reuse the free corkReq.\\n\\n\\n  state.corkedRequestsFree.next = corkReq;\\n}\\n\\nObject.defineProperty(Writable.prototype, 'destroyed', {\\n  // making it explicit this property is not enumerable\\n  // because otherwise some prototype manipulation in\\n  // userland will fail\\n  enumerable: false,\\n  get: function get() {\\n    if (this._writableState === undefined) {\\n      return false;\\n    }\\n\\n    return this._writableState.destroyed;\\n  },\\n  set: function set(value) {\\n    // we ignore the value if the stream\\n    // has not been initialized yet\\n    if (!this._writableState) {\\n      return;\\n    } // backward compatibility, the user is explicitly\\n    // managing destroyed\\n\\n\\n    this._writableState.destroyed = value;\\n  }\\n});\\nWritable.prototype.destroy = destroyImpl.destroy;\\nWritable.prototype._undestroy = destroyImpl.undestroy;\\n\\nWritable.prototype._destroy = function (err, cb) {\\n  cb(err);\\n};\",\"// Copyright Joyent, Inc. and other Node contributors.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a\\n// copy of this software and associated documentation files (the\\n// \\\"Software\\\"), to deal in the Software without restriction, including\\n// without limitation the rights to use, copy, modify, merge, publish,\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\n// persons to whom the Software is furnished to do so, subject to the\\n// following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included\\n// in all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\n// a transform stream is a readable/writable stream where you do\\n// something with the data.  Sometimes it's called a \\\"filter\\\",\\n// but that's not a great name for it, since that implies a thing where\\n// some bits pass through, and others are simply ignored.  (That would\\n// be a valid example of a transform, of course.)\\n//\\n// While the output is causally related to the input, it's not a\\n// necessarily symmetric or synchronous transformation.  For example,\\n// a zlib stream might take multiple plain-text writes(), and then\\n// emit a single compressed chunk some time in the future.\\n//\\n// Here's how this works:\\n//\\n// The Transform stream has all the aspects of the readable and writable\\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\\n// internally, and returns false if there's a lot of pending writes\\n// buffered up.  When you call read(), that calls _read(n) until\\n// there's enough pending readable data buffered up.\\n//\\n// In a transform stream, the written data is placed in a buffer.  When\\n// _read(n) is called, it transforms the queued up data, calling the\\n// buffered _write cb's as it consumes chunks.  If consuming a single\\n// written chunk would result in multiple output chunks, then the first\\n// outputted bit calls the readcb, and subsequent chunks just go into\\n// the read buffer, and will cause it to emit 'readable' if necessary.\\n//\\n// This way, back-pressure is actually determined by the reading side,\\n// since _read has to be called to start processing a new chunk.  However,\\n// a pathological inflate type of transform can cause excessive buffering\\n// here.  For example, imagine a stream where every byte of input is\\n// interpreted as an integer from 0-255, and then results in that many\\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\\n// 1kb of data being output.  In this case, you could write a very small\\n// amount of input, and end up with a very large amount of output.  In\\n// such a pathological inflating mechanism, there'd be no way to tell\\n// the system to stop doing the transform.  A single 4MB write could\\n// cause the system to run out of memory.\\n//\\n// However, even in such a pathological case, only a single written chunk\\n// would be consumed, and then the rest would wait (un-transformed) until\\n// the results of the previous transformed chunk were consumed.\\n'use strict';\\n\\nmodule.exports = Transform;\\n\\nvar _require$codes = require('../errors').codes,\\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\\n\\nvar Duplex = require('./_stream_duplex');\\n\\nrequire('inherits')(Transform, Duplex);\\n\\nfunction afterTransform(er, data) {\\n  var ts = this._transformState;\\n  ts.transforming = false;\\n  var cb = ts.writecb;\\n\\n  if (cb === null) {\\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\\n  }\\n\\n  ts.writechunk = null;\\n  ts.writecb = null;\\n  if (data != null) // single equals check for both `null` and `undefined`\\n    this.push(data);\\n  cb(er);\\n  var rs = this._readableState;\\n  rs.reading = false;\\n\\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\\n    this._read(rs.highWaterMark);\\n  }\\n}\\n\\nfunction Transform(options) {\\n  if (!(this instanceof Transform)) return new Transform(options);\\n  Duplex.call(this, options);\\n  this._transformState = {\\n    afterTransform: afterTransform.bind(this),\\n    needTransform: false,\\n    transforming: false,\\n    writecb: null,\\n    writechunk: null,\\n    writeencoding: null\\n  }; // start out asking for a readable event once data is transformed.\\n\\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\\n  // that Readable wants before the first _read call, so unset the\\n  // sync guard flag.\\n\\n  this._readableState.sync = false;\\n\\n  if (options) {\\n    if (typeof options.transform === 'function') this._transform = options.transform;\\n    if (typeof options.flush === 'function') this._flush = options.flush;\\n  } // When the writable side finishes, then flush out anything remaining.\\n\\n\\n  this.on('prefinish', prefinish);\\n}\\n\\nfunction prefinish() {\\n  var _this = this;\\n\\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\\n    this._flush(function (er, data) {\\n      done(_this, er, data);\\n    });\\n  } else {\\n    done(this, null, null);\\n  }\\n}\\n\\nTransform.prototype.push = function (chunk, encoding) {\\n  this._transformState.needTransform = false;\\n  return Duplex.prototype.push.call(this, chunk, encoding);\\n}; // This is the part where you do stuff!\\n// override this function in implementation classes.\\n// 'chunk' is an input chunk.\\n//\\n// Call `push(newChunk)` to pass along transformed output\\n// to the readable side.  You may call 'push' zero or more times.\\n//\\n// Call `cb(err)` when you are done with this chunk.  If you pass\\n// an error, then that'll put the hurt on the whole operation.  If you\\n// never call cb(), then you'll never get another chunk.\\n\\n\\nTransform.prototype._transform = function (chunk, encoding, cb) {\\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\\n};\\n\\nTransform.prototype._write = function (chunk, encoding, cb) {\\n  var ts = this._transformState;\\n  ts.writecb = cb;\\n  ts.writechunk = chunk;\\n  ts.writeencoding = encoding;\\n\\n  if (!ts.transforming) {\\n    var rs = this._readableState;\\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\\n  }\\n}; // Doesn't matter what the args are here.\\n// _transform does all the work.\\n// That we got here means that the readable side wants more data.\\n\\n\\nTransform.prototype._read = function (n) {\\n  var ts = this._transformState;\\n\\n  if (ts.writechunk !== null && !ts.transforming) {\\n    ts.transforming = true;\\n\\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\\n  } else {\\n    // mark that we need a transform, so that any data that comes in\\n    // will get processed, now that we've asked for it.\\n    ts.needTransform = true;\\n  }\\n};\\n\\nTransform.prototype._destroy = function (err, cb) {\\n  Duplex.prototype._destroy.call(this, err, function (err2) {\\n    cb(err2);\\n  });\\n};\\n\\nfunction done(stream, er, data) {\\n  if (er) return stream.emit('error', er);\\n  if (data != null) // single equals check for both `null` and `undefined`\\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\\n  // if there's nothing in the write buffer, then that means\\n  // that nothing more will ever be provided\\n\\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\\n  return stream.push(null);\\n}\",\"var Encoder = require('./Encoder.js');\\n\\nvar common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nfunction III_psy_xmin() {\\n  this.l = new_float(Encoder.SBMAX_l);\\n  this.s = new_float_n([Encoder.SBMAX_s, 3]);\\n  var self = this;\\n\\n  this.assign = function (iii_psy_xmin) {\\n    System.arraycopy(iii_psy_xmin.l, 0, self.l, 0, Encoder.SBMAX_l);\\n\\n    for (var i = 0; i < Encoder.SBMAX_s; i++) {\\n      for (var j = 0; j < 3; j++) {\\n        self.s[i][j] = iii_psy_xmin.s[i][j];\\n      }\\n    }\\n  };\\n}\\n\\nmodule.exports = III_psy_xmin;\",\"//package mp3;\\n\\n/* MPEG modes */\\nfunction MPEGMode(ordinal) {\\n  var _ordinal = ordinal;\\n\\n  this.ordinal = function () {\\n    return _ordinal;\\n  };\\n}\\n\\nMPEGMode.STEREO = new MPEGMode(0);\\nMPEGMode.JOINT_STEREO = new MPEGMode(1);\\nMPEGMode.DUAL_CHANNEL = new MPEGMode(2);\\nMPEGMode.MONO = new MPEGMode(3);\\nMPEGMode.NOT_SET = new MPEGMode(4);\\nmodule.exports = MPEGMode;\",\"//package mp3;\\n\\n/**\\n * Layer III side information.\\n *\\n * @author Ken\\n *\\n */\\nvar common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nvar Encoder = require('./Encoder.js');\\n\\nfunction ScaleFac(arrL, arrS, arr21, arr12) {\\n  this.l = new_int(1 + Encoder.SBMAX_l);\\n  this.s = new_int(1 + Encoder.SBMAX_s);\\n  this.psfb21 = new_int(1 + Encoder.PSFB21);\\n  this.psfb12 = new_int(1 + Encoder.PSFB12);\\n  var l = this.l;\\n  var s = this.s;\\n\\n  if (arguments.length == 4) {\\n    //public ScaleFac(final int[] arrL, final int[] arrS, final int[] arr21,\\n    //    final int[] arr12) {\\n    this.arrL = arguments[0];\\n    this.arrS = arguments[1];\\n    this.arr21 = arguments[2];\\n    this.arr12 = arguments[3];\\n    System.arraycopy(this.arrL, 0, l, 0, Math.min(this.arrL.length, this.l.length));\\n    System.arraycopy(this.arrS, 0, s, 0, Math.min(this.arrS.length, this.s.length));\\n    System.arraycopy(this.arr21, 0, this.psfb21, 0, Math.min(this.arr21.length, this.psfb21.length));\\n    System.arraycopy(this.arr12, 0, this.psfb12, 0, Math.min(this.arr12.length, this.psfb12.length));\\n  }\\n}\\n\\nmodule.exports = ScaleFac;\",\"/*\\n *  ReplayGainAnalysis - analyzes input samples and give the recommended dB change\\n *  Copyright (C) 2001 David Robinson and Glen Sawyer\\n *  Improvements and optimizations added by Frank Klemm, and by Marcel Muller \\n *\\n *  This library is free software; you can redistribute it and/or\\n *  modify it under the terms of the GNU Lesser General Public\\n *  License as published by the Free Software Foundation; either\\n *  version 2.1 of the License, or (at your option) any later version.\\n *\\n *  This library is distributed in the hope that it will be useful,\\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n *  Lesser General Public License for more details.\\n *\\n *  You should have received a copy of the GNU Lesser General Public\\n *  License along with this library; if not, write to the Free Software\\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\\n *\\n *  concept and filter values by David Robinson (David@Robinson.org)\\n *    -- blame him if you think the idea is flawed\\n *  original coding by Glen Sawyer (mp3gain@hotmail.com)\\n *    -- blame him if you think this runs too slowly, or the coding is otherwise flawed\\n *\\n *  lots of code improvements by Frank Klemm ( http://www.uni-jena.de/~pfk/mpp/ )\\n *    -- credit him for all the _good_ programming ;)\\n *\\n *\\n *  For an explanation of the concepts and the basic algorithms involved, go to:\\n *    http://www.replaygain.org/\\n */\\n\\n/*\\n *  Here's the deal. Call\\n *\\n *    InitGainAnalysis ( long samplefreq );\\n *\\n *  to initialize everything. Call\\n *\\n *    AnalyzeSamples ( var Float_t*  left_samples,\\n *                     var Float_t*  right_samples,\\n *                     size_t          num_samples,\\n *                     int             num_channels );\\n *\\n *  as many times as you want, with as many or as few samples as you want.\\n *  If mono, pass the sample buffer in through left_samples, leave\\n *  right_samples NULL, and make sure num_channels = 1.\\n *\\n *    GetTitleGain()\\n *\\n *  will return the recommended dB level change for all samples analyzed\\n *  SINCE THE LAST TIME you called GetTitleGain() OR InitGainAnalysis().\\n *\\n *    GetAlbumGain()\\n *\\n *  will return the recommended dB level change for all samples analyzed\\n *  since InitGainAnalysis() was called and finalized with GetTitleGain().\\n *\\n *  Pseudo-code to process an album:\\n *\\n *    Float_t       l_samples [4096];\\n *    Float_t       r_samples [4096];\\n *    size_t        num_samples;\\n *    unsigned int  num_songs;\\n *    unsigned int  i;\\n *\\n *    InitGainAnalysis ( 44100 );\\n *    for ( i = 1; i <= num_songs; i++ ) {\\n *        while ( ( num_samples = getSongSamples ( song[i], left_samples, right_samples ) ) > 0 )\\n *            AnalyzeSamples ( left_samples, right_samples, num_samples, 2 );\\n *        fprintf (\\\"Recommended dB change for song %2d: %+6.2 dB\\\\n\\\", i, GetTitleGain() );\\n *    }\\n *    fprintf (\\\"Recommended dB change for whole album: %+6.2 dB\\\\n\\\", GetAlbumGain() );\\n */\\n\\n/*\\n *  So here's the main source of potential code confusion:\\n *\\n *  The filters applied to the incoming samples are IIR filters,\\n *  meaning they rely on up to <filter order> number of previous samples\\n *  AND up to <filter order> number of previous filtered samples.\\n *\\n *  I set up the AnalyzeSamples routine to minimize memory usage and interface\\n *  complexity. The speed isn't compromised too much (I don't think), but the\\n *  internal complexity is higher than it should be for such a relatively\\n *  simple routine.\\n *\\n *  Optimization/clarity suggestions are welcome.\\n */\\nvar common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n/**\\n * Table entries per dB\\n */\\n\\nGainAnalysis.STEPS_per_dB = 100.;\\n/**\\n * Table entries for 0...MAX_dB (normal max. values are 70...80 dB)\\n */\\n\\nGainAnalysis.MAX_dB = 120.;\\nGainAnalysis.GAIN_NOT_ENOUGH_SAMPLES = -24601;\\nGainAnalysis.GAIN_ANALYSIS_ERROR = 0;\\nGainAnalysis.GAIN_ANALYSIS_OK = 1;\\nGainAnalysis.INIT_GAIN_ANALYSIS_ERROR = 0;\\nGainAnalysis.INIT_GAIN_ANALYSIS_OK = 1;\\nGainAnalysis.YULE_ORDER = 10;\\nGainAnalysis.MAX_ORDER = GainAnalysis.YULE_ORDER;\\nGainAnalysis.MAX_SAMP_FREQ = 48000;\\nGainAnalysis.RMS_WINDOW_TIME_NUMERATOR = 1;\\nGainAnalysis.RMS_WINDOW_TIME_DENOMINATOR = 20;\\nGainAnalysis.MAX_SAMPLES_PER_WINDOW = GainAnalysis.MAX_SAMP_FREQ * GainAnalysis.RMS_WINDOW_TIME_NUMERATOR / GainAnalysis.RMS_WINDOW_TIME_DENOMINATOR + 1;\\n\\nfunction GainAnalysis() {\\n  /**\\n   * calibration value for 89dB\\n   */\\n  var PINK_REF = 64.82;\\n  var YULE_ORDER = GainAnalysis.YULE_ORDER;\\n  /**\\n   * percentile which is louder than the proposed level\\n   */\\n\\n  var RMS_PERCENTILE = 0.95;\\n  /**\\n   * maximum allowed sample frequency [Hz]\\n   */\\n\\n  var MAX_SAMP_FREQ = GainAnalysis.MAX_SAMP_FREQ;\\n  var RMS_WINDOW_TIME_NUMERATOR = GainAnalysis.RMS_WINDOW_TIME_NUMERATOR;\\n  /**\\n   * numerator / denominator = time slice size [s]\\n   */\\n\\n  var RMS_WINDOW_TIME_DENOMINATOR = GainAnalysis.RMS_WINDOW_TIME_DENOMINATOR;\\n  /**\\n   * max. Samples per Time slice\\n   */\\n\\n  var MAX_SAMPLES_PER_WINDOW = GainAnalysis.MAX_SAMPLES_PER_WINDOW;\\n  var ABYule = [[0.03857599435200, -3.84664617118067, -0.02160367184185, 7.81501653005538, -0.00123395316851, -11.34170355132042, -0.00009291677959, 13.05504219327545, -0.01655260341619, -12.28759895145294, 0.02161526843274, 9.48293806319790, -0.02074045215285, -5.87257861775999, 0.00594298065125, 2.75465861874613, 0.00306428023191, -0.86984376593551, 0.00012025322027, 0.13919314567432, 0.00288463683916], [0.05418656406430, -3.47845948550071, -0.02911007808948, 6.36317777566148, -0.00848709379851, -8.54751527471874, -0.00851165645469, 9.47693607801280, -0.00834990904936, -8.81498681370155, 0.02245293253339, 6.85401540936998, -0.02596338512915, -4.39470996079559, 0.01624864962975, 2.19611684890774, -0.00240879051584, -0.75104302451432, 0.00674613682247, 0.13149317958808, -0.00187763777362], [0.15457299681924, -2.37898834973084, -0.09331049056315, 2.84868151156327, -0.06247880153653, -2.64577170229825, 0.02163541888798, 2.23697657451713, -0.05588393329856, -1.67148153367602, 0.04781476674921, 1.00595954808547, 0.00222312597743, -0.45953458054983, 0.03174092540049, 0.16378164858596, -0.01390589421898, -0.05032077717131, 0.00651420667831, 0.02347897407020, -0.00881362733839], [0.30296907319327, -1.61273165137247, -0.22613988682123, 1.07977492259970, -0.08587323730772, -0.25656257754070, 0.03282930172664, -0.16276719120440, -0.00915702933434, -0.22638893773906, -0.02364141202522, 0.39120800788284, -0.00584456039913, -0.22138138954925, 0.06276101321749, 0.04500235387352, -0.00000828086748, 0.02005851806501, 0.00205861885564, 0.00302439095741, -0.02950134983287], [0.33642304856132, -1.49858979367799, -0.25572241425570, 0.87350271418188, -0.11828570177555, 0.12205022308084, 0.11921148675203, -0.80774944671438, -0.07834489609479, 0.47854794562326, -0.00469977914380, -0.12453458140019, -0.00589500224440, -0.04067510197014, 0.05724228140351, 0.08333755284107, 0.00832043980773, -0.04237348025746, -0.01635381384540, 0.02977207319925, -0.01760176568150], [0.44915256608450, -0.62820619233671, -0.14351757464547, 0.29661783706366, -0.22784394429749, -0.37256372942400, -0.01419140100551, 0.00213767857124, 0.04078262797139, -0.42029820170918, -0.12398163381748, 0.22199650564824, 0.04097565135648, 0.00613424350682, 0.10478503600251, 0.06747620744683, -0.01863887810927, 0.05784820375801, -0.03193428438915, 0.03222754072173, 0.00541907748707], [0.56619470757641, -1.04800335126349, -0.75464456939302, 0.29156311971249, 0.16242137742230, -0.26806001042947, 0.16744243493672, 0.00819999645858, -0.18901604199609, 0.45054734505008, 0.30931782841830, -0.33032403314006, -0.27562961986224, 0.06739368333110, 0.00647310677246, -0.04784254229033, 0.08647503780351, 0.01639907836189, -0.03788984554840, 0.01807364323573, -0.00588215443421], [0.58100494960553, -0.51035327095184, -0.53174909058578, -0.31863563325245, -0.14289799034253, -0.20256413484477, 0.17520704835522, 0.14728154134330, 0.02377945217615, 0.38952639978999, 0.15558449135573, -0.23313271880868, -0.25344790059353, -0.05246019024463, 0.01628462406333, -0.02505961724053, 0.06920467763959, 0.02442357316099, -0.03721611395801, 0.01818801111503, -0.00749618797172], [0.53648789255105, -0.25049871956020, -0.42163034350696, -0.43193942311114, -0.00275953611929, -0.03424681017675, 0.04267842219415, -0.04678328784242, -0.10214864179676, 0.26408300200955, 0.14590772289388, 0.15113130533216, -0.02459864859345, -0.17556493366449, -0.11202315195388, -0.18823009262115, -0.04060034127000, 0.05477720428674, 0.04788665548180, 0.04704409688120, -0.02217936801134]];\\n  var ABButter = [[0.98621192462708, -1.97223372919527, -1.97242384925416, 0.97261396931306, 0.98621192462708], [0.98500175787242, -1.96977855582618, -1.97000351574484, 0.97022847566350, 0.98500175787242], [0.97938932735214, -1.95835380975398, -1.95877865470428, 0.95920349965459, 0.97938932735214], [0.97531843204928, -1.95002759149878, -1.95063686409857, 0.95124613669835, 0.97531843204928], [0.97316523498161, -1.94561023566527, -1.94633046996323, 0.94705070426118, 0.97316523498161], [0.96454515552826, -1.92783286977036, -1.92909031105652, 0.93034775234268, 0.96454515552826], [0.96009142950541, -1.91858953033784, -1.92018285901082, 0.92177618768381, 0.96009142950541], [0.95856916599601, -1.91542108074780, -1.91713833199203, 0.91885558323625, 0.95856916599601], [0.94597685600279, -1.88903307939452, -1.89195371200558, 0.89487434461664, 0.94597685600279]];\\n  /**\\n   * When calling this procedure, make sure that ip[-order] and op[-order]\\n   * point to real data\\n   */\\n  //private void filterYule(final float[] input, int inputPos, float[] output,\\n  //int outputPos, int nSamples, final float[] kernel) {\\n\\n  function filterYule(input, inputPos, output, outputPos, nSamples, kernel) {\\n    while (nSamples-- != 0) {\\n      /* 1e-10 is a hack to avoid slowdown because of denormals */\\n      output[outputPos] = 1e-10 + input[inputPos + 0] * kernel[0] - output[outputPos - 1] * kernel[1] + input[inputPos - 1] * kernel[2] - output[outputPos - 2] * kernel[3] + input[inputPos - 2] * kernel[4] - output[outputPos - 3] * kernel[5] + input[inputPos - 3] * kernel[6] - output[outputPos - 4] * kernel[7] + input[inputPos - 4] * kernel[8] - output[outputPos - 5] * kernel[9] + input[inputPos - 5] * kernel[10] - output[outputPos - 6] * kernel[11] + input[inputPos - 6] * kernel[12] - output[outputPos - 7] * kernel[13] + input[inputPos - 7] * kernel[14] - output[outputPos - 8] * kernel[15] + input[inputPos - 8] * kernel[16] - output[outputPos - 9] * kernel[17] + input[inputPos - 9] * kernel[18] - output[outputPos - 10] * kernel[19] + input[inputPos - 10] * kernel[20];\\n      ++outputPos;\\n      ++inputPos;\\n    }\\n  } //private void filterButter(final float[] input, int inputPos,\\n  //    float[] output, int outputPos, int nSamples, final float[] kernel) {\\n\\n\\n  function filterButter(input, inputPos, output, outputPos, nSamples, kernel) {\\n    while (nSamples-- != 0) {\\n      output[outputPos] = input[inputPos + 0] * kernel[0] - output[outputPos - 1] * kernel[1] + input[inputPos - 1] * kernel[2] - output[outputPos - 2] * kernel[3] + input[inputPos - 2] * kernel[4];\\n      ++outputPos;\\n      ++inputPos;\\n    }\\n  }\\n  /**\\n   * @return INIT_GAIN_ANALYSIS_OK if successful, INIT_GAIN_ANALYSIS_ERROR if\\n   *         not\\n   */\\n\\n\\n  function ResetSampleFrequency(rgData, samplefreq) {\\n    /* zero out initial values */\\n    for (var i = 0; i < MAX_ORDER; i++) {\\n      rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\\n    }\\n\\n    switch (0 | samplefreq) {\\n      case 48000:\\n        rgData.reqindex = 0;\\n        break;\\n\\n      case 44100:\\n        rgData.reqindex = 1;\\n        break;\\n\\n      case 32000:\\n        rgData.reqindex = 2;\\n        break;\\n\\n      case 24000:\\n        rgData.reqindex = 3;\\n        break;\\n\\n      case 22050:\\n        rgData.reqindex = 4;\\n        break;\\n\\n      case 16000:\\n        rgData.reqindex = 5;\\n        break;\\n\\n      case 12000:\\n        rgData.reqindex = 6;\\n        break;\\n\\n      case 11025:\\n        rgData.reqindex = 7;\\n        break;\\n\\n      case 8000:\\n        rgData.reqindex = 8;\\n        break;\\n\\n      default:\\n        return INIT_GAIN_ANALYSIS_ERROR;\\n    }\\n\\n    rgData.sampleWindow = 0 | (samplefreq * RMS_WINDOW_TIME_NUMERATOR + RMS_WINDOW_TIME_DENOMINATOR - 1) / RMS_WINDOW_TIME_DENOMINATOR;\\n    rgData.lsum = 0.;\\n    rgData.rsum = 0.;\\n    rgData.totsamp = 0;\\n    Arrays.ill(rgData.A, 0);\\n    return INIT_GAIN_ANALYSIS_OK;\\n  }\\n\\n  this.InitGainAnalysis = function (rgData, samplefreq) {\\n    if (ResetSampleFrequency(rgData, samplefreq) != INIT_GAIN_ANALYSIS_OK) {\\n      return INIT_GAIN_ANALYSIS_ERROR;\\n    }\\n\\n    rgData.linpre = MAX_ORDER;\\n    rgData.rinpre = MAX_ORDER;\\n    rgData.lstep = MAX_ORDER;\\n    rgData.rstep = MAX_ORDER;\\n    rgData.lout = MAX_ORDER;\\n    rgData.rout = MAX_ORDER;\\n    Arrays.fill(rgData.B, 0);\\n    return INIT_GAIN_ANALYSIS_OK;\\n  };\\n  /**\\n   * square\\n   */\\n\\n\\n  function fsqr(d) {\\n    return d * d;\\n  }\\n\\n  this.AnalyzeSamples = function (rgData, left_samples, left_samplesPos, right_samples, right_samplesPos, num_samples, num_channels) {\\n    var curleft;\\n    var curleftBase;\\n    var curright;\\n    var currightBase;\\n    var batchsamples;\\n    var cursamples;\\n    var cursamplepos;\\n    if (num_samples == 0) return GAIN_ANALYSIS_OK;\\n    cursamplepos = 0;\\n    batchsamples = num_samples;\\n\\n    switch (num_channels) {\\n      case 1:\\n        right_samples = left_samples;\\n        right_samplesPos = left_samplesPos;\\n        break;\\n\\n      case 2:\\n        break;\\n\\n      default:\\n        return GAIN_ANALYSIS_ERROR;\\n    }\\n\\n    if (num_samples < MAX_ORDER) {\\n      System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf, MAX_ORDER, num_samples);\\n      System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf, MAX_ORDER, num_samples);\\n    } else {\\n      System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf, MAX_ORDER, MAX_ORDER);\\n      System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf, MAX_ORDER, MAX_ORDER);\\n    }\\n\\n    while (batchsamples > 0) {\\n      cursamples = batchsamples > rgData.sampleWindow - rgData.totsamp ? rgData.sampleWindow - rgData.totsamp : batchsamples;\\n\\n      if (cursamplepos < MAX_ORDER) {\\n        curleft = rgData.linpre + cursamplepos;\\n        curleftBase = rgData.linprebuf;\\n        curright = rgData.rinpre + cursamplepos;\\n        currightBase = rgData.rinprebuf;\\n        if (cursamples > MAX_ORDER - cursamplepos) cursamples = MAX_ORDER - cursamplepos;\\n      } else {\\n        curleft = left_samplesPos + cursamplepos;\\n        curleftBase = left_samples;\\n        curright = right_samplesPos + cursamplepos;\\n        currightBase = right_samples;\\n      }\\n\\n      filterYule(curleftBase, curleft, rgData.lstepbuf, rgData.lstep + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\\n      filterYule(currightBase, curright, rgData.rstepbuf, rgData.rstep + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\\n      filterButter(rgData.lstepbuf, rgData.lstep + rgData.totsamp, rgData.loutbuf, rgData.lout + rgData.totsamp, cursamples, ABButter[rgData.reqindex]);\\n      filterButter(rgData.rstepbuf, rgData.rstep + rgData.totsamp, rgData.routbuf, rgData.rout + rgData.totsamp, cursamples, ABButter[rgData.reqindex]);\\n      curleft = rgData.lout + rgData.totsamp;\\n      /* Get the squared values */\\n\\n      curleftBase = rgData.loutbuf;\\n      curright = rgData.rout + rgData.totsamp;\\n      currightBase = rgData.routbuf;\\n      var i = cursamples % 8;\\n\\n      while (i-- != 0) {\\n        rgData.lsum += fsqr(curleftBase[curleft++]);\\n        rgData.rsum += fsqr(currightBase[curright++]);\\n      }\\n\\n      i = cursamples / 8;\\n\\n      while (i-- != 0) {\\n        rgData.lsum += fsqr(curleftBase[curleft + 0]) + fsqr(curleftBase[curleft + 1]) + fsqr(curleftBase[curleft + 2]) + fsqr(curleftBase[curleft + 3]) + fsqr(curleftBase[curleft + 4]) + fsqr(curleftBase[curleft + 5]) + fsqr(curleftBase[curleft + 6]) + fsqr(curleftBase[curleft + 7]);\\n        curleft += 8;\\n        rgData.rsum += fsqr(currightBase[curright + 0]) + fsqr(currightBase[curright + 1]) + fsqr(currightBase[curright + 2]) + fsqr(currightBase[curright + 3]) + fsqr(currightBase[curright + 4]) + fsqr(currightBase[curright + 5]) + fsqr(currightBase[curright + 6]) + fsqr(currightBase[curright + 7]);\\n        curright += 8;\\n      }\\n\\n      batchsamples -= cursamples;\\n      cursamplepos += cursamples;\\n      rgData.totsamp += cursamples;\\n\\n      if (rgData.totsamp == rgData.sampleWindow) {\\n        /* Get the Root Mean Square (RMS) for this set of samples */\\n        var val = GainAnalysis.STEPS_per_dB * 10. * Math.log10((rgData.lsum + rgData.rsum) / rgData.totsamp * 0.5 + 1.e-37);\\n        var ival = val <= 0 ? 0 : 0 | val;\\n        if (ival >= rgData.A.length) ival = rgData.A.length - 1;\\n        rgData.A[ival]++;\\n        rgData.lsum = rgData.rsum = 0.;\\n        System.arraycopy(rgData.loutbuf, rgData.totsamp, rgData.loutbuf, 0, MAX_ORDER);\\n        System.arraycopy(rgData.routbuf, rgData.totsamp, rgData.routbuf, 0, MAX_ORDER);\\n        System.arraycopy(rgData.lstepbuf, rgData.totsamp, rgData.lstepbuf, 0, MAX_ORDER);\\n        System.arraycopy(rgData.rstepbuf, rgData.totsamp, rgData.rstepbuf, 0, MAX_ORDER);\\n        rgData.totsamp = 0;\\n      }\\n\\n      if (rgData.totsamp > rgData.sampleWindow) {\\n        /*\\n         * somehow I really screwed up: Error in programming! Contact\\n         * author about totsamp > sampleWindow\\n         */\\n        return GAIN_ANALYSIS_ERROR;\\n      }\\n    }\\n\\n    if (num_samples < MAX_ORDER) {\\n      System.arraycopy(rgData.linprebuf, num_samples, rgData.linprebuf, 0, MAX_ORDER - num_samples);\\n      System.arraycopy(rgData.rinprebuf, num_samples, rgData.rinprebuf, 0, MAX_ORDER - num_samples);\\n      System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf, MAX_ORDER - num_samples, num_samples);\\n      System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf, MAX_ORDER - num_samples, num_samples);\\n    } else {\\n      System.arraycopy(left_samples, left_samplesPos + num_samples - MAX_ORDER, rgData.linprebuf, 0, MAX_ORDER);\\n      System.arraycopy(right_samples, right_samplesPos + num_samples - MAX_ORDER, rgData.rinprebuf, 0, MAX_ORDER);\\n    }\\n\\n    return GAIN_ANALYSIS_OK;\\n  };\\n\\n  function analyzeResult(Array, len) {\\n    var i;\\n    var elems = 0;\\n\\n    for (i = 0; i < len; i++) {\\n      elems += Array[i];\\n    }\\n\\n    if (elems == 0) return GAIN_NOT_ENOUGH_SAMPLES;\\n    var upper = 0 | Math.ceil(elems * (1. - RMS_PERCENTILE));\\n\\n    for (i = len; i-- > 0;) {\\n      if ((upper -= Array[i]) <= 0) break;\\n    } //return (float) ((float) PINK_REF - (float) i / (float) STEPS_per_dB);\\n\\n\\n    return PINK_REF - i / GainAnalysis.STEPS_per_dB;\\n  }\\n\\n  this.GetTitleGain = function (rgData) {\\n    var retval = analyzeResult(rgData.A, rgData.A.length);\\n\\n    for (var i = 0; i < rgData.A.length; i++) {\\n      rgData.B[i] += rgData.A[i];\\n      rgData.A[i] = 0;\\n    }\\n\\n    for (var i = 0; i < MAX_ORDER; i++) {\\n      rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\\n    }\\n\\n    rgData.totsamp = 0;\\n    rgData.lsum = rgData.rsum = 0.;\\n    return retval;\\n  };\\n}\\n\\nmodule.exports = GainAnalysis;\",\"function MeanBits(meanBits) {\\n  this.bits = meanBits;\\n}\\n\\nmodule.exports = MeanBits;\",\"var common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nvar Takehiro = require('./Takehiro.js');\\n\\nvar Tables = require('./Tables.js');\\n\\nvar Encoder = require('./Encoder.js');\\n\\nvar LameInternalFlags = require('./LameInternalFlags.js');\\n\\nBitStream.EQ = function (a, b) {\\n  return Math.abs(a) > Math.abs(b) ? Math.abs(a - b) <= Math.abs(a) * 1e-6 : Math.abs(a - b) <= Math.abs(b) * 1e-6;\\n};\\n\\nBitStream.NEQ = function (a, b) {\\n  return !BitStream.EQ(a, b);\\n};\\n\\nfunction BitStream() {\\n  var self = this;\\n  var CRC16_POLYNOMIAL = 0x8005;\\n  /*\\n   * we work with ints, so when doing bit manipulation, we limit ourselves to\\n   * MAX_LENGTH-2 just to be on the safe side\\n   */\\n\\n  var MAX_LENGTH = 32; //GainAnalysis ga;\\n  //MPGLib mpg;\\n  //Version ver;\\n  //VBRTag vbr;\\n\\n  var ga = null;\\n  var mpg = null;\\n  var ver = null;\\n  var vbr = null; //public final void setModules(GainAnalysis ga, MPGLib mpg, Version ver,\\n  //\\tVBRTag vbr) {\\n\\n  this.setModules = function (_ga, _mpg, _ver, _vbr) {\\n    ga = _ga;\\n    mpg = _mpg;\\n    ver = _ver;\\n    vbr = _vbr;\\n  };\\n  /**\\n   * Bit stream buffer.\\n   */\\n  //private byte[] buf;\\n\\n\\n  var buf = null;\\n  /**\\n   * Bit counter of bit stream.\\n   */\\n\\n  var totbit = 0;\\n  /**\\n   * Pointer to top byte in buffer.\\n   */\\n\\n  var bufByteIdx = 0;\\n  /**\\n   * Pointer to top bit of top byte in buffer.\\n   */\\n\\n  var bufBitIdx = 0;\\n  /**\\n   * compute bitsperframe and mean_bits for a layer III frame\\n   */\\n\\n  this.getframebits = function (gfp) {\\n    var gfc = gfp.internal_flags;\\n    var bit_rate;\\n    /* get bitrate in kbps [?] */\\n\\n    if (gfc.bitrate_index != 0) bit_rate = Tables.bitrate_table[gfp.version][gfc.bitrate_index];else bit_rate = gfp.brate;\\n    assert(8 <= bit_rate && bit_rate <= 640);\\n    /* main encoding routine toggles padding on and off */\\n\\n    /* one Layer3 Slot consists of 8 bits */\\n\\n    var bytes = 0 | (gfp.version + 1) * 72000 * bit_rate / gfp.out_samplerate + gfc.padding;\\n    return 8 * bytes;\\n  };\\n\\n  function putheader_bits(gfc) {\\n    System.arraycopy(gfc.header[gfc.w_ptr].buf, 0, buf, bufByteIdx, gfc.sideinfo_len);\\n    bufByteIdx += gfc.sideinfo_len;\\n    totbit += gfc.sideinfo_len * 8;\\n    gfc.w_ptr = gfc.w_ptr + 1 & LameInternalFlags.MAX_HEADER_BUF - 1;\\n  }\\n  /**\\n   * write j bits into the bit stream\\n   */\\n\\n\\n  function putbits2(gfc, val, j) {\\n    assert(j < MAX_LENGTH - 2);\\n\\n    while (j > 0) {\\n      var k;\\n\\n      if (bufBitIdx == 0) {\\n        bufBitIdx = 8;\\n        bufByteIdx++;\\n        assert(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\\n        assert(gfc.header[gfc.w_ptr].write_timing >= totbit);\\n\\n        if (gfc.header[gfc.w_ptr].write_timing == totbit) {\\n          putheader_bits(gfc);\\n        }\\n\\n        buf[bufByteIdx] = 0;\\n      }\\n\\n      k = Math.min(j, bufBitIdx);\\n      j -= k;\\n      bufBitIdx -= k;\\n      assert(j < MAX_LENGTH);\\n      /* 32 too large on 32 bit machines */\\n\\n      assert(bufBitIdx < MAX_LENGTH);\\n      buf[bufByteIdx] |= val >> j << bufBitIdx;\\n      totbit += k;\\n    }\\n  }\\n  /**\\n   * write j bits into the bit stream, ignoring frame headers\\n   */\\n\\n\\n  function putbits_noheaders(gfc, val, j) {\\n    assert(j < MAX_LENGTH - 2);\\n\\n    while (j > 0) {\\n      var k;\\n\\n      if (bufBitIdx == 0) {\\n        bufBitIdx = 8;\\n        bufByteIdx++;\\n        assert(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\\n        buf[bufByteIdx] = 0;\\n      }\\n\\n      k = Math.min(j, bufBitIdx);\\n      j -= k;\\n      bufBitIdx -= k;\\n      assert(j < MAX_LENGTH);\\n      /* 32 too large on 32 bit machines */\\n\\n      assert(bufBitIdx < MAX_LENGTH);\\n      buf[bufByteIdx] |= val >> j << bufBitIdx;\\n      totbit += k;\\n    }\\n  }\\n  /**\\n   * Some combinations of bitrate, Fs, and stereo make it impossible to stuff\\n   * out a frame using just main_data, due to the limited number of bits to\\n   * indicate main_data_length. In these situations, we put stuffing bits into\\n   * the ancillary data...\\n   */\\n\\n\\n  function drain_into_ancillary(gfp, remainingBits) {\\n    var gfc = gfp.internal_flags;\\n    var i;\\n    assert(remainingBits >= 0);\\n\\n    if (remainingBits >= 8) {\\n      putbits2(gfc, 0x4c, 8);\\n      remainingBits -= 8;\\n    }\\n\\n    if (remainingBits >= 8) {\\n      putbits2(gfc, 0x41, 8);\\n      remainingBits -= 8;\\n    }\\n\\n    if (remainingBits >= 8) {\\n      putbits2(gfc, 0x4d, 8);\\n      remainingBits -= 8;\\n    }\\n\\n    if (remainingBits >= 8) {\\n      putbits2(gfc, 0x45, 8);\\n      remainingBits -= 8;\\n    }\\n\\n    if (remainingBits >= 32) {\\n      var version = ver.getLameShortVersion();\\n      if (remainingBits >= 32) for (i = 0; i < version.length && remainingBits >= 8; ++i) {\\n        remainingBits -= 8;\\n        putbits2(gfc, version.charAt(i), 8);\\n      }\\n    }\\n\\n    for (; remainingBits >= 1; remainingBits -= 1) {\\n      putbits2(gfc, gfc.ancillary_flag, 1);\\n      gfc.ancillary_flag ^= !gfp.disable_reservoir ? 1 : 0;\\n    }\\n\\n    assert(remainingBits == 0);\\n  }\\n  /**\\n   * write N bits into the header\\n   */\\n\\n\\n  function writeheader(gfc, val, j) {\\n    var ptr = gfc.header[gfc.h_ptr].ptr;\\n\\n    while (j > 0) {\\n      var k = Math.min(j, 8 - (ptr & 7));\\n      j -= k;\\n      assert(j < MAX_LENGTH);\\n      /* >> 32 too large for 32 bit machines */\\n\\n      gfc.header[gfc.h_ptr].buf[ptr >> 3] |= val >> j << 8 - (ptr & 7) - k;\\n      ptr += k;\\n    }\\n\\n    gfc.header[gfc.h_ptr].ptr = ptr;\\n  }\\n\\n  function CRC_update(value, crc) {\\n    value <<= 8;\\n\\n    for (var i = 0; i < 8; i++) {\\n      value <<= 1;\\n      crc <<= 1;\\n      if (((crc ^ value) & 0x10000) != 0) crc ^= CRC16_POLYNOMIAL;\\n    }\\n\\n    return crc;\\n  }\\n\\n  this.CRC_writeheader = function (gfc, header) {\\n    var crc = 0xffff;\\n    /* (jo) init crc16 for error_protection */\\n\\n    crc = CRC_update(header[2] & 0xff, crc);\\n    crc = CRC_update(header[3] & 0xff, crc);\\n\\n    for (var i = 6; i < gfc.sideinfo_len; i++) {\\n      crc = CRC_update(header[i] & 0xff, crc);\\n    }\\n\\n    header[4] = byte(crc >> 8);\\n    header[5] = byte(crc & 255);\\n  };\\n\\n  function encodeSideInfo2(gfp, bitsPerFrame) {\\n    var gfc = gfp.internal_flags;\\n    var l3_side;\\n    var gr, ch;\\n    l3_side = gfc.l3_side;\\n    gfc.header[gfc.h_ptr].ptr = 0;\\n    Arrays.fill(gfc.header[gfc.h_ptr].buf, 0, gfc.sideinfo_len, 0);\\n    if (gfp.out_samplerate < 16000) writeheader(gfc, 0xffe, 12);else writeheader(gfc, 0xfff, 12);\\n    writeheader(gfc, gfp.version, 1);\\n    writeheader(gfc, 4 - 3, 2);\\n    writeheader(gfc, !gfp.error_protection ? 1 : 0, 1);\\n    writeheader(gfc, gfc.bitrate_index, 4);\\n    writeheader(gfc, gfc.samplerate_index, 2);\\n    writeheader(gfc, gfc.padding, 1);\\n    writeheader(gfc, gfp.extension, 1);\\n    writeheader(gfc, gfp.mode.ordinal(), 2);\\n    writeheader(gfc, gfc.mode_ext, 2);\\n    writeheader(gfc, gfp.copyright, 1);\\n    writeheader(gfc, gfp.original, 1);\\n    writeheader(gfc, gfp.emphasis, 2);\\n\\n    if (gfp.error_protection) {\\n      writeheader(gfc, 0, 16);\\n      /* dummy */\\n    }\\n\\n    if (gfp.version == 1) {\\n      /* MPEG1 */\\n      assert(l3_side.main_data_begin >= 0);\\n      writeheader(gfc, l3_side.main_data_begin, 9);\\n      if (gfc.channels_out == 2) writeheader(gfc, l3_side.private_bits, 3);else writeheader(gfc, l3_side.private_bits, 5);\\n\\n      for (ch = 0; ch < gfc.channels_out; ch++) {\\n        var band;\\n\\n        for (band = 0; band < 4; band++) {\\n          writeheader(gfc, l3_side.scfsi[ch][band], 1);\\n        }\\n      }\\n\\n      for (gr = 0; gr < 2; gr++) {\\n        for (ch = 0; ch < gfc.channels_out; ch++) {\\n          var gi = l3_side.tt[gr][ch];\\n          writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\\n          writeheader(gfc, gi.big_values / 2, 9);\\n          writeheader(gfc, gi.global_gain, 8);\\n          writeheader(gfc, gi.scalefac_compress, 4);\\n\\n          if (gi.block_type != Encoder.NORM_TYPE) {\\n            writeheader(gfc, 1, 1);\\n            /* window_switching_flag */\\n\\n            writeheader(gfc, gi.block_type, 2);\\n            writeheader(gfc, gi.mixed_block_flag, 1);\\n            if (gi.table_select[0] == 14) gi.table_select[0] = 16;\\n            writeheader(gfc, gi.table_select[0], 5);\\n            if (gi.table_select[1] == 14) gi.table_select[1] = 16;\\n            writeheader(gfc, gi.table_select[1], 5);\\n            writeheader(gfc, gi.subblock_gain[0], 3);\\n            writeheader(gfc, gi.subblock_gain[1], 3);\\n            writeheader(gfc, gi.subblock_gain[2], 3);\\n          } else {\\n            writeheader(gfc, 0, 1);\\n            /* window_switching_flag */\\n\\n            if (gi.table_select[0] == 14) gi.table_select[0] = 16;\\n            writeheader(gfc, gi.table_select[0], 5);\\n            if (gi.table_select[1] == 14) gi.table_select[1] = 16;\\n            writeheader(gfc, gi.table_select[1], 5);\\n            if (gi.table_select[2] == 14) gi.table_select[2] = 16;\\n            writeheader(gfc, gi.table_select[2], 5);\\n            assert(0 <= gi.region0_count && gi.region0_count < 16);\\n            assert(0 <= gi.region1_count && gi.region1_count < 8);\\n            writeheader(gfc, gi.region0_count, 4);\\n            writeheader(gfc, gi.region1_count, 3);\\n          }\\n\\n          writeheader(gfc, gi.preflag, 1);\\n          writeheader(gfc, gi.scalefac_scale, 1);\\n          writeheader(gfc, gi.count1table_select, 1);\\n        }\\n      }\\n    } else {\\n      /* MPEG2 */\\n      assert(l3_side.main_data_begin >= 0);\\n      writeheader(gfc, l3_side.main_data_begin, 8);\\n      writeheader(gfc, l3_side.private_bits, gfc.channels_out);\\n      gr = 0;\\n\\n      for (ch = 0; ch < gfc.channels_out; ch++) {\\n        var gi = l3_side.tt[gr][ch];\\n        writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\\n        writeheader(gfc, gi.big_values / 2, 9);\\n        writeheader(gfc, gi.global_gain, 8);\\n        writeheader(gfc, gi.scalefac_compress, 9);\\n\\n        if (gi.block_type != Encoder.NORM_TYPE) {\\n          writeheader(gfc, 1, 1);\\n          /* window_switching_flag */\\n\\n          writeheader(gfc, gi.block_type, 2);\\n          writeheader(gfc, gi.mixed_block_flag, 1);\\n          if (gi.table_select[0] == 14) gi.table_select[0] = 16;\\n          writeheader(gfc, gi.table_select[0], 5);\\n          if (gi.table_select[1] == 14) gi.table_select[1] = 16;\\n          writeheader(gfc, gi.table_select[1], 5);\\n          writeheader(gfc, gi.subblock_gain[0], 3);\\n          writeheader(gfc, gi.subblock_gain[1], 3);\\n          writeheader(gfc, gi.subblock_gain[2], 3);\\n        } else {\\n          writeheader(gfc, 0, 1);\\n          /* window_switching_flag */\\n\\n          if (gi.table_select[0] == 14) gi.table_select[0] = 16;\\n          writeheader(gfc, gi.table_select[0], 5);\\n          if (gi.table_select[1] == 14) gi.table_select[1] = 16;\\n          writeheader(gfc, gi.table_select[1], 5);\\n          if (gi.table_select[2] == 14) gi.table_select[2] = 16;\\n          writeheader(gfc, gi.table_select[2], 5);\\n          assert(0 <= gi.region0_count && gi.region0_count < 16);\\n          assert(0 <= gi.region1_count && gi.region1_count < 8);\\n          writeheader(gfc, gi.region0_count, 4);\\n          writeheader(gfc, gi.region1_count, 3);\\n        }\\n\\n        writeheader(gfc, gi.scalefac_scale, 1);\\n        writeheader(gfc, gi.count1table_select, 1);\\n      }\\n    }\\n\\n    if (gfp.error_protection) {\\n      /* (jo) error_protection: add crc16 information to header */\\n      CRC_writeheader(gfc, gfc.header[gfc.h_ptr].buf);\\n    }\\n\\n    {\\n      var old = gfc.h_ptr;\\n      assert(gfc.header[old].ptr == gfc.sideinfo_len * 8);\\n      gfc.h_ptr = old + 1 & LameInternalFlags.MAX_HEADER_BUF - 1;\\n      gfc.header[gfc.h_ptr].write_timing = gfc.header[old].write_timing + bitsPerFrame;\\n\\n      if (gfc.h_ptr == gfc.w_ptr) {\\n        /* yikes! we are out of header buffer space */\\n        System.err.println(\\\"Error: MAX_HEADER_BUF too small in bitstream.c \\\\n\\\");\\n      }\\n    }\\n  }\\n\\n  function huffman_coder_count1(gfc, gi) {\\n    /* Write count1 area */\\n    var h = Tables.ht[gi.count1table_select + 32];\\n    var i,\\n        bits = 0;\\n    var ix = gi.big_values;\\n    var xr = gi.big_values;\\n    assert(gi.count1table_select < 2);\\n\\n    for (i = (gi.count1 - gi.big_values) / 4; i > 0; --i) {\\n      var huffbits = 0;\\n      var p = 0,\\n          v;\\n      v = gi.l3_enc[ix + 0];\\n\\n      if (v != 0) {\\n        p += 8;\\n        if (gi.xr[xr + 0] < 0) huffbits++;\\n        assert(v <= 1);\\n      }\\n\\n      v = gi.l3_enc[ix + 1];\\n\\n      if (v != 0) {\\n        p += 4;\\n        huffbits *= 2;\\n        if (gi.xr[xr + 1] < 0) huffbits++;\\n        assert(v <= 1);\\n      }\\n\\n      v = gi.l3_enc[ix + 2];\\n\\n      if (v != 0) {\\n        p += 2;\\n        huffbits *= 2;\\n        if (gi.xr[xr + 2] < 0) huffbits++;\\n        assert(v <= 1);\\n      }\\n\\n      v = gi.l3_enc[ix + 3];\\n\\n      if (v != 0) {\\n        p++;\\n        huffbits *= 2;\\n        if (gi.xr[xr + 3] < 0) huffbits++;\\n        assert(v <= 1);\\n      }\\n\\n      ix += 4;\\n      xr += 4;\\n      putbits2(gfc, huffbits + h.table[p], h.hlen[p]);\\n      bits += h.hlen[p];\\n    }\\n\\n    return bits;\\n  }\\n  /**\\n   * Implements the pseudocode of page 98 of the IS\\n   */\\n\\n\\n  function Huffmancode(gfc, tableindex, start, end, gi) {\\n    var h = Tables.ht[tableindex];\\n    var bits = 0;\\n    assert(tableindex < 32);\\n    if (0 == tableindex) return bits;\\n\\n    for (var i = start; i < end; i += 2) {\\n      var cbits = 0;\\n      var xbits = 0;\\n      var linbits = h.xlen;\\n      var xlen = h.xlen;\\n      var ext = 0;\\n      var x1 = gi.l3_enc[i];\\n      var x2 = gi.l3_enc[i + 1];\\n\\n      if (x1 != 0) {\\n        if (gi.xr[i] < 0) ext++;\\n        cbits--;\\n      }\\n\\n      if (tableindex > 15) {\\n        /* use ESC-words */\\n        if (x1 > 14) {\\n          var linbits_x1 = x1 - 15;\\n          assert(linbits_x1 <= h.linmax);\\n          ext |= linbits_x1 << 1;\\n          xbits = linbits;\\n          x1 = 15;\\n        }\\n\\n        if (x2 > 14) {\\n          var linbits_x2 = x2 - 15;\\n          assert(linbits_x2 <= h.linmax);\\n          ext <<= linbits;\\n          ext |= linbits_x2;\\n          xbits += linbits;\\n          x2 = 15;\\n        }\\n\\n        xlen = 16;\\n      }\\n\\n      if (x2 != 0) {\\n        ext <<= 1;\\n        if (gi.xr[i + 1] < 0) ext++;\\n        cbits--;\\n      }\\n\\n      assert((x1 | x2) < 16);\\n      x1 = x1 * xlen + x2;\\n      xbits -= cbits;\\n      cbits += h.hlen[x1];\\n      assert(cbits <= MAX_LENGTH);\\n      assert(xbits <= MAX_LENGTH);\\n      putbits2(gfc, h.table[x1], cbits);\\n      putbits2(gfc, ext, xbits);\\n      bits += cbits + xbits;\\n    }\\n\\n    return bits;\\n  }\\n  /**\\n   * Note the discussion of huffmancodebits() on pages 28 and 29 of the IS, as\\n   * well as the definitions of the side information on pages 26 and 27.\\n   */\\n\\n\\n  function ShortHuffmancodebits(gfc, gi) {\\n    var region1Start = 3 * gfc.scalefac_band.s[3];\\n    if (region1Start > gi.big_values) region1Start = gi.big_values;\\n    /* short blocks do not have a region2 */\\n\\n    var bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\\n    bits += Huffmancode(gfc, gi.table_select[1], region1Start, gi.big_values, gi);\\n    return bits;\\n  }\\n\\n  function LongHuffmancodebits(gfc, gi) {\\n    var bigvalues, bits;\\n    var region1Start, region2Start;\\n    bigvalues = gi.big_values;\\n    assert(0 <= bigvalues && bigvalues <= 576);\\n    var i = gi.region0_count + 1;\\n    assert(0 <= i);\\n    assert(i < gfc.scalefac_band.l.length);\\n    region1Start = gfc.scalefac_band.l[i];\\n    i += gi.region1_count + 1;\\n    assert(0 <= i);\\n    assert(i < gfc.scalefac_band.l.length);\\n    region2Start = gfc.scalefac_band.l[i];\\n    if (region1Start > bigvalues) region1Start = bigvalues;\\n    if (region2Start > bigvalues) region2Start = bigvalues;\\n    bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\\n    bits += Huffmancode(gfc, gi.table_select[1], region1Start, region2Start, gi);\\n    bits += Huffmancode(gfc, gi.table_select[2], region2Start, bigvalues, gi);\\n    return bits;\\n  }\\n\\n  function writeMainData(gfp) {\\n    var gr,\\n        ch,\\n        sfb,\\n        data_bits,\\n        tot_bits = 0;\\n    var gfc = gfp.internal_flags;\\n    var l3_side = gfc.l3_side;\\n\\n    if (gfp.version == 1) {\\n      /* MPEG 1 */\\n      for (gr = 0; gr < 2; gr++) {\\n        for (ch = 0; ch < gfc.channels_out; ch++) {\\n          var gi = l3_side.tt[gr][ch];\\n          var slen1 = Takehiro.slen1_tab[gi.scalefac_compress];\\n          var slen2 = Takehiro.slen2_tab[gi.scalefac_compress];\\n          data_bits = 0;\\n\\n          for (sfb = 0; sfb < gi.sfbdivide; sfb++) {\\n            if (gi.scalefac[sfb] == -1) continue;\\n            /* scfsi is used */\\n\\n            putbits2(gfc, gi.scalefac[sfb], slen1);\\n            data_bits += slen1;\\n          }\\n\\n          for (; sfb < gi.sfbmax; sfb++) {\\n            if (gi.scalefac[sfb] == -1) continue;\\n            /* scfsi is used */\\n\\n            putbits2(gfc, gi.scalefac[sfb], slen2);\\n            data_bits += slen2;\\n          }\\n\\n          assert(data_bits == gi.part2_length);\\n\\n          if (gi.block_type == Encoder.SHORT_TYPE) {\\n            data_bits += ShortHuffmancodebits(gfc, gi);\\n          } else {\\n            data_bits += LongHuffmancodebits(gfc, gi);\\n          }\\n\\n          data_bits += huffman_coder_count1(gfc, gi);\\n          /* does bitcount in quantize.c agree with actual bit count? */\\n\\n          assert(data_bits == gi.part2_3_length + gi.part2_length);\\n          tot_bits += data_bits;\\n        }\\n        /* for ch */\\n\\n      }\\n      /* for gr */\\n\\n    } else {\\n      /* MPEG 2 */\\n      gr = 0;\\n\\n      for (ch = 0; ch < gfc.channels_out; ch++) {\\n        var gi = l3_side.tt[gr][ch];\\n        var i,\\n            sfb_partition,\\n            scale_bits = 0;\\n        assert(gi.sfb_partition_table != null);\\n        data_bits = 0;\\n        sfb = 0;\\n        sfb_partition = 0;\\n\\n        if (gi.block_type == Encoder.SHORT_TYPE) {\\n          for (; sfb_partition < 4; sfb_partition++) {\\n            var sfbs = gi.sfb_partition_table[sfb_partition] / 3;\\n            var slen = gi.slen[sfb_partition];\\n\\n            for (i = 0; i < sfbs; i++, sfb++) {\\n              putbits2(gfc, Math.max(gi.scalefac[sfb * 3 + 0], 0), slen);\\n              putbits2(gfc, Math.max(gi.scalefac[sfb * 3 + 1], 0), slen);\\n              putbits2(gfc, Math.max(gi.scalefac[sfb * 3 + 2], 0), slen);\\n              scale_bits += 3 * slen;\\n            }\\n          }\\n\\n          data_bits += ShortHuffmancodebits(gfc, gi);\\n        } else {\\n          for (; sfb_partition < 4; sfb_partition++) {\\n            var sfbs = gi.sfb_partition_table[sfb_partition];\\n            var slen = gi.slen[sfb_partition];\\n\\n            for (i = 0; i < sfbs; i++, sfb++) {\\n              putbits2(gfc, Math.max(gi.scalefac[sfb], 0), slen);\\n              scale_bits += slen;\\n            }\\n          }\\n\\n          data_bits += LongHuffmancodebits(gfc, gi);\\n        }\\n\\n        data_bits += huffman_coder_count1(gfc, gi);\\n        /* does bitcount in quantize.c agree with actual bit count? */\\n\\n        assert(data_bits == gi.part2_3_length);\\n        assert(scale_bits == gi.part2_length);\\n        tot_bits += scale_bits + data_bits;\\n      }\\n      /* for ch */\\n\\n    }\\n    /* for gf */\\n\\n\\n    return tot_bits;\\n  }\\n  /* main_data */\\n\\n\\n  function TotalBytes() {\\n    this.total = 0;\\n  }\\n  /*\\n   * compute the number of bits required to flush all mp3 frames currently in\\n   * the buffer. This should be the same as the reservoir size. Only call this\\n   * routine between frames - i.e. only after all headers and data have been\\n   * added to the buffer by format_bitstream().\\n   *\\n   * Also compute total_bits_output = size of mp3 buffer (including frame\\n   * headers which may not have yet been send to the mp3 buffer) + number of\\n   * bits needed to flush all mp3 frames.\\n   *\\n   * total_bytes_output is the size of the mp3 output buffer if\\n   * lame_encode_flush_nogap() was called right now.\\n   */\\n\\n\\n  function compute_flushbits(gfp, total_bytes_output) {\\n    var gfc = gfp.internal_flags;\\n    var flushbits, remaining_headers;\\n    var bitsPerFrame;\\n    var last_ptr, first_ptr;\\n    first_ptr = gfc.w_ptr;\\n    /* first header to add to bitstream */\\n\\n    last_ptr = gfc.h_ptr - 1;\\n    /* last header to add to bitstream */\\n\\n    if (last_ptr == -1) last_ptr = LameInternalFlags.MAX_HEADER_BUF - 1;\\n    /* add this many bits to bitstream so we can flush all headers */\\n\\n    flushbits = gfc.header[last_ptr].write_timing - totbit;\\n    total_bytes_output.total = flushbits;\\n\\n    if (flushbits >= 0) {\\n      /* if flushbits >= 0, some headers have not yet been written */\\n\\n      /* reduce flushbits by the size of the headers */\\n      remaining_headers = 1 + last_ptr - first_ptr;\\n      if (last_ptr < first_ptr) remaining_headers = 1 + last_ptr - first_ptr + LameInternalFlags.MAX_HEADER_BUF;\\n      flushbits -= remaining_headers * 8 * gfc.sideinfo_len;\\n    }\\n    /*\\n     * finally, add some bits so that the last frame is complete these bits\\n     * are not necessary to decode the last frame, but some decoders will\\n     * ignore last frame if these bits are missing\\n     */\\n\\n\\n    bitsPerFrame = self.getframebits(gfp);\\n    flushbits += bitsPerFrame;\\n    total_bytes_output.total += bitsPerFrame;\\n    /* round up: */\\n\\n    if (total_bytes_output.total % 8 != 0) total_bytes_output.total = 1 + total_bytes_output.total / 8;else total_bytes_output.total = total_bytes_output.total / 8;\\n    total_bytes_output.total += bufByteIdx + 1;\\n\\n    if (flushbits < 0) {\\n      System.err.println(\\\"strange error flushing buffer ... \\\\n\\\");\\n    }\\n\\n    return flushbits;\\n  }\\n\\n  this.flush_bitstream = function (gfp) {\\n    var gfc = gfp.internal_flags;\\n    var l3_side;\\n    var flushbits;\\n    var last_ptr = gfc.h_ptr - 1;\\n    /* last header to add to bitstream */\\n\\n    if (last_ptr == -1) last_ptr = LameInternalFlags.MAX_HEADER_BUF - 1;\\n    l3_side = gfc.l3_side;\\n    if ((flushbits = compute_flushbits(gfp, new TotalBytes())) < 0) return;\\n    drain_into_ancillary(gfp, flushbits);\\n    /* check that the 100% of the last frame has been written to bitstream */\\n\\n    assert(gfc.header[last_ptr].write_timing + this.getframebits(gfp) == totbit);\\n    /*\\n     * we have padded out all frames with ancillary data, which is the same\\n     * as filling the bitreservoir with ancillary data, so :\\n     */\\n\\n    gfc.ResvSize = 0;\\n    l3_side.main_data_begin = 0;\\n    /* save the ReplayGain value */\\n\\n    if (gfc.findReplayGain) {\\n      var RadioGain = ga.GetTitleGain(gfc.rgdata);\\n      assert(NEQ(RadioGain, GainAnalysis.GAIN_NOT_ENOUGH_SAMPLES));\\n      gfc.RadioGain = Math.floor(RadioGain * 10.0 + 0.5) | 0;\\n      /* round to nearest */\\n    }\\n    /* find the gain and scale change required for no clipping */\\n\\n\\n    if (gfc.findPeakSample) {\\n      gfc.noclipGainChange = Math.ceil(Math.log10(gfc.PeakSample / 32767.0) * 20.0 * 10.0) | 0;\\n      /* round up */\\n\\n      if (gfc.noclipGainChange > 0) {\\n        /* clipping occurs */\\n        if (EQ(gfp.scale, 1.0) || EQ(gfp.scale, 0.0)) gfc.noclipScale = Math.floor(32767.0 / gfc.PeakSample * 100.0) / 100.0;\\n        /* round down */\\n        else {\\n            /*\\n             * the user specified his own scaling factor. We could\\n             * suggest the scaling factor of\\n             * (32767.0/gfp.PeakSample)*(gfp.scale) but it's usually\\n             * very inaccurate. So we'd rather not advice him on the\\n             * scaling factor.\\n             */\\n            gfc.noclipScale = -1;\\n          }\\n      } else\\n        /* no clipping */\\n        gfc.noclipScale = -1;\\n    }\\n  };\\n\\n  this.add_dummy_byte = function (gfp, val, n) {\\n    var gfc = gfp.internal_flags;\\n    var i;\\n\\n    while (n-- > 0) {\\n      putbits_noheaders(gfc, val, 8);\\n\\n      for (i = 0; i < LameInternalFlags.MAX_HEADER_BUF; ++i) {\\n        gfc.header[i].write_timing += 8;\\n      }\\n    }\\n  };\\n  /**\\n   * This is called after a frame of audio has been quantized and coded. It\\n   * will write the encoded audio to the bitstream. Note that from a layer3\\n   * encoder's perspective the bit stream is primarily a series of main_data()\\n   * blocks, with header and side information inserted at the proper locations\\n   * to maintain framing. (See Figure A.7 in the IS).\\n   */\\n\\n\\n  this.format_bitstream = function (gfp) {\\n    var gfc = gfp.internal_flags;\\n    var l3_side;\\n    l3_side = gfc.l3_side;\\n    var bitsPerFrame = this.getframebits(gfp);\\n    drain_into_ancillary(gfp, l3_side.resvDrain_pre);\\n    encodeSideInfo2(gfp, bitsPerFrame);\\n    var bits = 8 * gfc.sideinfo_len;\\n    bits += writeMainData(gfp);\\n    drain_into_ancillary(gfp, l3_side.resvDrain_post);\\n    bits += l3_side.resvDrain_post;\\n    l3_side.main_data_begin += (bitsPerFrame - bits) / 8;\\n    /*\\n     * compare number of bits needed to clear all buffered mp3 frames with\\n     * what we think the resvsize is:\\n     */\\n\\n    if (compute_flushbits(gfp, new TotalBytes()) != gfc.ResvSize) {\\n      System.err.println(\\\"Internal buffer inconsistency. flushbits <> ResvSize\\\");\\n    }\\n    /*\\n     * compare main_data_begin for the next frame with what we think the\\n     * resvsize is:\\n     */\\n\\n\\n    if (l3_side.main_data_begin * 8 != gfc.ResvSize) {\\n      System.err.printf(\\\"bit reservoir error: \\\\n\\\" + \\\"l3_side.main_data_begin: %d \\\\n\\\" + \\\"Resvoir size:             %d \\\\n\\\" + \\\"resv drain (post)         %d \\\\n\\\" + \\\"resv drain (pre)          %d \\\\n\\\" + \\\"header and sideinfo:      %d \\\\n\\\" + \\\"data bits:                %d \\\\n\\\" + \\\"total bits:               %d (remainder: %d) \\\\n\\\" + \\\"bitsperframe:             %d \\\\n\\\", 8 * l3_side.main_data_begin, gfc.ResvSize, l3_side.resvDrain_post, l3_side.resvDrain_pre, 8 * gfc.sideinfo_len, bits - l3_side.resvDrain_post - 8 * gfc.sideinfo_len, bits, bits % 8, bitsPerFrame);\\n      System.err.println(\\\"This is a fatal error.  It has several possible causes:\\\");\\n      System.err.println(\\\"90%%  LAME compiled with buggy version of gcc using advanced optimizations\\\");\\n      System.err.println(\\\" 9%%  Your system is overclocked\\\");\\n      System.err.println(\\\" 1%%  bug in LAME encoding library\\\");\\n      gfc.ResvSize = l3_side.main_data_begin * 8;\\n    } //;\\n\\n\\n    assert(totbit % 8 == 0);\\n\\n    if (totbit > 1000000000) {\\n      /*\\n       * to avoid totbit overflow, (at 8h encoding at 128kbs) lets reset\\n       * bit counter\\n       */\\n      var i;\\n\\n      for (i = 0; i < LameInternalFlags.MAX_HEADER_BUF; ++i) {\\n        gfc.header[i].write_timing -= totbit;\\n      }\\n\\n      totbit = 0;\\n    }\\n\\n    return 0;\\n  };\\n  /**\\n   * <PRE>\\n   * copy data out of the internal MP3 bit buffer into a user supplied\\n   *       unsigned char buffer.\\n   *\\n   *       mp3data=0      indicates data in buffer is an id3tags and VBR tags\\n   *       mp3data=1      data is real mp3 frame data.\\n   * </PRE>\\n   */\\n\\n\\n  this.copy_buffer = function (gfc, buffer, bufferPos, size, mp3data) {\\n    var minimum = bufByteIdx + 1;\\n    if (minimum <= 0) return 0;\\n\\n    if (size != 0 && minimum > size) {\\n      /* buffer is too small */\\n      return -1;\\n    }\\n\\n    System.arraycopy(buf, 0, buffer, bufferPos, minimum);\\n    bufByteIdx = -1;\\n    bufBitIdx = 0;\\n\\n    if (mp3data != 0) {\\n      var crc = new_int(1);\\n      crc[0] = gfc.nMusicCRC;\\n      vbr.updateMusicCRC(crc, buffer, bufferPos, minimum);\\n      gfc.nMusicCRC = crc[0];\\n      /**\\n       * sum number of bytes belonging to the mp3 stream this info will be\\n       * written into the Xing/LAME header for seeking\\n       */\\n\\n      if (minimum > 0) {\\n        gfc.VBR_seek_table.nBytesWritten += minimum;\\n      }\\n\\n      if (gfc.decode_on_the_fly) {\\n        /* decode the frame */\\n        var pcm_buf = new_float_n([2, 1152]);\\n        var mp3_in = minimum;\\n        var samples_out = -1;\\n        var i;\\n        /* re-synthesis to pcm. Repeat until we get a samples_out=0 */\\n\\n        while (samples_out != 0) {\\n          samples_out = mpg.hip_decode1_unclipped(gfc.hip, buffer, bufferPos, mp3_in, pcm_buf[0], pcm_buf[1]);\\n          /*\\n           * samples_out = 0: need more data to decode samples_out =\\n           * -1: error. Lets assume 0 pcm output samples_out = number\\n           * of samples output\\n           */\\n\\n          /*\\n           * set the lenght of the mp3 input buffer to zero, so that\\n           * in the next iteration of the loop we will be querying\\n           * mpglib about buffered data\\n           */\\n\\n          mp3_in = 0;\\n\\n          if (samples_out == -1) {\\n            /*\\n             * error decoding. Not fatal, but might screw up the\\n             * ReplayGain tag. What should we do? Ignore for now\\n             */\\n            samples_out = 0;\\n          }\\n\\n          if (samples_out > 0) {\\n            /* process the PCM data */\\n\\n            /*\\n             * this should not be possible, and indicates we have\\n             * overflown the pcm_buf buffer\\n             */\\n            assert(samples_out <= 1152);\\n\\n            if (gfc.findPeakSample) {\\n              for (i = 0; i < samples_out; i++) {\\n                if (pcm_buf[0][i] > gfc.PeakSample) gfc.PeakSample = pcm_buf[0][i];else if (-pcm_buf[0][i] > gfc.PeakSample) gfc.PeakSample = -pcm_buf[0][i];\\n              }\\n\\n              if (gfc.channels_out > 1) for (i = 0; i < samples_out; i++) {\\n                if (pcm_buf[1][i] > gfc.PeakSample) gfc.PeakSample = pcm_buf[1][i];else if (-pcm_buf[1][i] > gfc.PeakSample) gfc.PeakSample = -pcm_buf[1][i];\\n              }\\n            }\\n\\n            if (gfc.findReplayGain) if (ga.AnalyzeSamples(gfc.rgdata, pcm_buf[0], 0, pcm_buf[1], 0, samples_out, gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR) return -6;\\n          }\\n          /* if (samples_out>0) */\\n\\n        }\\n        /* while (samples_out!=0) */\\n\\n      }\\n      /* if (gfc.decode_on_the_fly) */\\n\\n    }\\n    /* if (mp3data) */\\n\\n\\n    return minimum;\\n  };\\n\\n  this.init_bit_stream_w = function (gfc) {\\n    buf = new_byte(Lame.LAME_MAXMP3BUFFER);\\n    gfc.h_ptr = gfc.w_ptr = 0;\\n    gfc.header[gfc.h_ptr].write_timing = 0;\\n    bufByteIdx = -1;\\n    bufBitIdx = 0;\\n    totbit = 0;\\n  }; // From machine.h\\n\\n}\\n\\nmodule.exports = BitStream;\",\"/*\\n *\\tMP3 huffman table selecting and bit counting\\n *\\n *\\tCopyright (c) 1999-2005 Takehiro TOMINAGA\\n *\\tCopyright (c) 2002-2005 Gabriel Bouvigne\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\t See the GNU\\n * Library General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the\\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\\n * Boston, MA 02111-1307, USA.\\n */\\n\\n/* $Id: Takehiro.java,v 1.26 2011/05/24 20:48:06 kenchis Exp $ */\\n//package mp3;\\n//import java.util.Arrays;\\nvar common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nvar Encoder = require('./Encoder.js');\\n\\nvar Tables = require('./Tables.js');\\n\\nvar GrInfo = require('./GrInfo.js');\\n\\nvar QuantizePVT = require('./QuantizePVT.js');\\n\\nfunction Takehiro() {\\n  var qupvt = null;\\n  this.qupvt = null;\\n\\n  this.setModules = function (_qupvt) {\\n    this.qupvt = _qupvt;\\n    qupvt = _qupvt;\\n  };\\n\\n  function Bits(b) {\\n    this.bits = 0 | b;\\n  }\\n\\n  var subdv_table = [[0, 0],\\n  /* 0 bands */\\n  [0, 0],\\n  /* 1 bands */\\n  [0, 0],\\n  /* 2 bands */\\n  [0, 0],\\n  /* 3 bands */\\n  [0, 0],\\n  /* 4 bands */\\n  [0, 1],\\n  /* 5 bands */\\n  [1, 1],\\n  /* 6 bands */\\n  [1, 1],\\n  /* 7 bands */\\n  [1, 2],\\n  /* 8 bands */\\n  [2, 2],\\n  /* 9 bands */\\n  [2, 3],\\n  /* 10 bands */\\n  [2, 3],\\n  /* 11 bands */\\n  [3, 4],\\n  /* 12 bands */\\n  [3, 4],\\n  /* 13 bands */\\n  [3, 4],\\n  /* 14 bands */\\n  [4, 5],\\n  /* 15 bands */\\n  [4, 5],\\n  /* 16 bands */\\n  [4, 6],\\n  /* 17 bands */\\n  [5, 6],\\n  /* 18 bands */\\n  [5, 6],\\n  /* 19 bands */\\n  [5, 7],\\n  /* 20 bands */\\n  [6, 7],\\n  /* 21 bands */\\n  [6, 7]];\\n  /**\\n   * nonlinear quantization of xr More accurate formula than the ISO formula.\\n   * Takes into account the fact that we are quantizing xr . ix, but we want\\n   * ix^4/3 to be as close as possible to x^4/3. (taking the nearest int would\\n   * mean ix is as close as possible to xr, which is different.)\\n   *\\n   * From Segher Boessenkool <segher@eastsite.nl> 11/1999\\n   *\\n   * 09/2000: ASM code removed in favor of IEEE754 hack by Takehiro Tominaga.\\n   * If you need the ASM code, check CVS circa Aug 2000.\\n   *\\n   * 01/2004: Optimizations by Gabriel Bouvigne\\n   */\\n\\n  function quantize_lines_xrpow_01(l, istep, xr, xrPos, ix, ixPos) {\\n    var compareval0 = (1.0 - 0.4054) / istep;\\n    assert(l > 0);\\n    l = l >> 1;\\n\\n    while (l-- != 0) {\\n      ix[ixPos++] = compareval0 > xr[xrPos++] ? 0 : 1;\\n      ix[ixPos++] = compareval0 > xr[xrPos++] ? 0 : 1;\\n    }\\n  }\\n  /**\\n   * XRPOW_FTOI is a macro to convert floats to ints.<BR>\\n   * if XRPOW_FTOI(x) = nearest_int(x), then QUANTFAC(x)=adj43asm[x]<BR>\\n   * ROUNDFAC= -0.0946<BR>\\n   *\\n   * if XRPOW_FTOI(x) = floor(x), then QUANTFAC(x)=asj43[x]<BR>\\n   * ROUNDFAC=0.4054<BR>\\n   *\\n   * Note: using floor() or 0| is extremely slow. On machines where the\\n   * TAKEHIRO_IEEE754_HACK code above does not work, it is worthwile to write\\n   * some ASM for XRPOW_FTOI().\\n   */\\n\\n\\n  function quantize_lines_xrpow(l, istep, xr, xrPos, ix, ixPos) {\\n    assert(l > 0);\\n    l = l >> 1;\\n    var remaining = l % 2;\\n    l = l >> 1;\\n\\n    while (l-- != 0) {\\n      var x0, x1, x2, x3;\\n      var rx0, rx1, rx2, rx3;\\n      x0 = xr[xrPos++] * istep;\\n      x1 = xr[xrPos++] * istep;\\n      rx0 = 0 | x0;\\n      x2 = xr[xrPos++] * istep;\\n      rx1 = 0 | x1;\\n      x3 = xr[xrPos++] * istep;\\n      rx2 = 0 | x2;\\n      x0 += qupvt.adj43[rx0];\\n      rx3 = 0 | x3;\\n      x1 += qupvt.adj43[rx1];\\n      ix[ixPos++] = 0 | x0;\\n      x2 += qupvt.adj43[rx2];\\n      ix[ixPos++] = 0 | x1;\\n      x3 += qupvt.adj43[rx3];\\n      ix[ixPos++] = 0 | x2;\\n      ix[ixPos++] = 0 | x3;\\n    }\\n\\n    if (remaining != 0) {\\n      var x0, x1;\\n      var rx0, rx1;\\n      x0 = xr[xrPos++] * istep;\\n      x1 = xr[xrPos++] * istep;\\n      rx0 = 0 | x0;\\n      rx1 = 0 | x1;\\n      x0 += qupvt.adj43[rx0];\\n      x1 += qupvt.adj43[rx1];\\n      ix[ixPos++] = 0 | x0;\\n      ix[ixPos++] = 0 | x1;\\n    }\\n  }\\n  /**\\n   * Quantization function This function will select which lines to quantize\\n   * and call the proper quantization function\\n   */\\n\\n\\n  function quantize_xrpow(xp, pi, istep, codInfo, prevNoise) {\\n    /* quantize on xr^(3/4) instead of xr */\\n    var sfb;\\n    var sfbmax;\\n    var j = 0;\\n    var prev_data_use;\\n    var accumulate = 0;\\n    var accumulate01 = 0;\\n    var xpPos = 0;\\n    var iData = pi;\\n    var iDataPos = 0;\\n    var acc_iData = iData;\\n    var acc_iDataPos = 0;\\n    var acc_xp = xp;\\n    var acc_xpPos = 0;\\n    /*\\n     * Reusing previously computed data does not seems to work if global\\n     * gain is changed. Finding why it behaves this way would allow to use a\\n     * cache of previously computed values (let's 10 cached values per sfb)\\n     * that would probably provide a noticeable speedup\\n     */\\n\\n    prev_data_use = prevNoise != null && codInfo.global_gain == prevNoise.global_gain;\\n    if (codInfo.block_type == Encoder.SHORT_TYPE) sfbmax = 38;else sfbmax = 21;\\n\\n    for (sfb = 0; sfb <= sfbmax; sfb++) {\\n      var step = -1;\\n\\n      if (prev_data_use || codInfo.block_type == Encoder.NORM_TYPE) {\\n        step = codInfo.global_gain - (codInfo.scalefac[sfb] + (codInfo.preflag != 0 ? qupvt.pretab[sfb] : 0) << codInfo.scalefac_scale + 1) - codInfo.subblock_gain[codInfo.window[sfb]] * 8;\\n      }\\n\\n      assert(codInfo.width[sfb] >= 0);\\n\\n      if (prev_data_use && prevNoise.step[sfb] == step) {\\n        /*\\n         * do not recompute this part, but compute accumulated lines\\n         */\\n        if (accumulate != 0) {\\n          quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos, acc_iData, acc_iDataPos);\\n          accumulate = 0;\\n        }\\n\\n        if (accumulate01 != 0) {\\n          quantize_lines_xrpow_01(accumulate01, istep, acc_xp, acc_xpPos, acc_iData, acc_iDataPos);\\n          accumulate01 = 0;\\n        }\\n      } else {\\n        /* should compute this part */\\n        var l = codInfo.width[sfb];\\n\\n        if (j + codInfo.width[sfb] > codInfo.max_nonzero_coeff) {\\n          /* do not compute upper zero part */\\n          var usefullsize;\\n          usefullsize = codInfo.max_nonzero_coeff - j + 1;\\n          Arrays.fill(pi, codInfo.max_nonzero_coeff, 576, 0);\\n          l = usefullsize;\\n\\n          if (l < 0) {\\n            l = 0;\\n          }\\n          /* no need to compute higher sfb values */\\n\\n\\n          sfb = sfbmax + 1;\\n        }\\n        /* accumulate lines to quantize */\\n\\n\\n        if (0 == accumulate && 0 == accumulate01) {\\n          acc_iData = iData;\\n          acc_iDataPos = iDataPos;\\n          acc_xp = xp;\\n          acc_xpPos = xpPos;\\n        }\\n\\n        if (prevNoise != null && prevNoise.sfb_count1 > 0 && sfb >= prevNoise.sfb_count1 && prevNoise.step[sfb] > 0 && step >= prevNoise.step[sfb]) {\\n          if (accumulate != 0) {\\n            quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos, acc_iData, acc_iDataPos);\\n            accumulate = 0;\\n            acc_iData = iData;\\n            acc_iDataPos = iDataPos;\\n            acc_xp = xp;\\n            acc_xpPos = xpPos;\\n          }\\n\\n          accumulate01 += l;\\n        } else {\\n          if (accumulate01 != 0) {\\n            quantize_lines_xrpow_01(accumulate01, istep, acc_xp, acc_xpPos, acc_iData, acc_iDataPos);\\n            accumulate01 = 0;\\n            acc_iData = iData;\\n            acc_iDataPos = iDataPos;\\n            acc_xp = xp;\\n            acc_xpPos = xpPos;\\n          }\\n\\n          accumulate += l;\\n        }\\n\\n        if (l <= 0) {\\n          /*\\n           * rh: 20040215 may happen due to \\\"prev_data_use\\\"\\n           * optimization\\n           */\\n          if (accumulate01 != 0) {\\n            quantize_lines_xrpow_01(accumulate01, istep, acc_xp, acc_xpPos, acc_iData, acc_iDataPos);\\n            accumulate01 = 0;\\n          }\\n\\n          if (accumulate != 0) {\\n            quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos, acc_iData, acc_iDataPos);\\n            accumulate = 0;\\n          }\\n\\n          break;\\n          /* ends for-loop */\\n        }\\n      }\\n\\n      if (sfb <= sfbmax) {\\n        iDataPos += codInfo.width[sfb];\\n        xpPos += codInfo.width[sfb];\\n        j += codInfo.width[sfb];\\n      }\\n    }\\n\\n    if (accumulate != 0) {\\n      /* last data part */\\n      quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos, acc_iData, acc_iDataPos);\\n      accumulate = 0;\\n    }\\n\\n    if (accumulate01 != 0) {\\n      /* last data part */\\n      quantize_lines_xrpow_01(accumulate01, istep, acc_xp, acc_xpPos, acc_iData, acc_iDataPos);\\n      accumulate01 = 0;\\n    }\\n  }\\n  /**\\n   * ix_max\\n   */\\n\\n\\n  function ix_max(ix, ixPos, endPos) {\\n    var max1 = 0,\\n        max2 = 0;\\n\\n    do {\\n      var x1 = ix[ixPos++];\\n      var x2 = ix[ixPos++];\\n      if (max1 < x1) max1 = x1;\\n      if (max2 < x2) max2 = x2;\\n    } while (ixPos < endPos);\\n\\n    if (max1 < max2) max1 = max2;\\n    return max1;\\n  }\\n\\n  function count_bit_ESC(ix, ixPos, end, t1, t2, s) {\\n    /* ESC-table is used */\\n    var linbits = Tables.ht[t1].xlen * 65536 + Tables.ht[t2].xlen;\\n    var sum = 0,\\n        sum2;\\n\\n    do {\\n      var x = ix[ixPos++];\\n      var y = ix[ixPos++];\\n\\n      if (x != 0) {\\n        if (x > 14) {\\n          x = 15;\\n          sum += linbits;\\n        }\\n\\n        x *= 16;\\n      }\\n\\n      if (y != 0) {\\n        if (y > 14) {\\n          y = 15;\\n          sum += linbits;\\n        }\\n\\n        x += y;\\n      }\\n\\n      sum += Tables.largetbl[x];\\n    } while (ixPos < end);\\n\\n    sum2 = sum & 0xffff;\\n    sum >>= 16;\\n\\n    if (sum > sum2) {\\n      sum = sum2;\\n      t1 = t2;\\n    }\\n\\n    s.bits += sum;\\n    return t1;\\n  }\\n\\n  function count_bit_noESC(ix, ixPos, end, s) {\\n    /* No ESC-words */\\n    var sum1 = 0;\\n    var hlen1 = Tables.ht[1].hlen;\\n\\n    do {\\n      var x = ix[ixPos + 0] * 2 + ix[ixPos + 1];\\n      ixPos += 2;\\n      sum1 += hlen1[x];\\n    } while (ixPos < end);\\n\\n    s.bits += sum1;\\n    return 1;\\n  }\\n\\n  function count_bit_noESC_from2(ix, ixPos, end, t1, s) {\\n    /* No ESC-words */\\n    var sum = 0,\\n        sum2;\\n    var xlen = Tables.ht[t1].xlen;\\n    var hlen;\\n    if (t1 == 2) hlen = Tables.table23;else hlen = Tables.table56;\\n\\n    do {\\n      var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\\n      ixPos += 2;\\n      sum += hlen[x];\\n    } while (ixPos < end);\\n\\n    sum2 = sum & 0xffff;\\n    sum >>= 16;\\n\\n    if (sum > sum2) {\\n      sum = sum2;\\n      t1++;\\n    }\\n\\n    s.bits += sum;\\n    return t1;\\n  }\\n\\n  function count_bit_noESC_from3(ix, ixPos, end, t1, s) {\\n    /* No ESC-words */\\n    var sum1 = 0;\\n    var sum2 = 0;\\n    var sum3 = 0;\\n    var xlen = Tables.ht[t1].xlen;\\n    var hlen1 = Tables.ht[t1].hlen;\\n    var hlen2 = Tables.ht[t1 + 1].hlen;\\n    var hlen3 = Tables.ht[t1 + 2].hlen;\\n\\n    do {\\n      var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\\n      ixPos += 2;\\n      sum1 += hlen1[x];\\n      sum2 += hlen2[x];\\n      sum3 += hlen3[x];\\n    } while (ixPos < end);\\n\\n    var t = t1;\\n\\n    if (sum1 > sum2) {\\n      sum1 = sum2;\\n      t++;\\n    }\\n\\n    if (sum1 > sum3) {\\n      sum1 = sum3;\\n      t = t1 + 2;\\n    }\\n\\n    s.bits += sum1;\\n    return t;\\n  }\\n  /*************************************************************************/\\n\\n  /* choose table */\\n\\n  /*************************************************************************/\\n\\n\\n  var huf_tbl_noESC = [1, 2, 5, 7, 7, 10, 10, 13, 13, 13, 13, 13, 13, 13, 13];\\n  /**\\n   * Choose the Huffman table that will encode ix[begin..end] with the fewest\\n   * bits.\\n   *\\n   * Note: This code contains knowledge about the sizes and characteristics of\\n   * the Huffman tables as defined in the IS (Table B.7), and will not work\\n   * with any arbitrary tables.\\n   */\\n\\n  function choose_table(ix, ixPos, endPos, s) {\\n    var max = ix_max(ix, ixPos, endPos);\\n\\n    switch (max) {\\n      case 0:\\n        return max;\\n\\n      case 1:\\n        return count_bit_noESC(ix, ixPos, endPos, s);\\n\\n      case 2:\\n      case 3:\\n        return count_bit_noESC_from2(ix, ixPos, endPos, huf_tbl_noESC[max - 1], s);\\n\\n      case 4:\\n      case 5:\\n      case 6:\\n      case 7:\\n      case 8:\\n      case 9:\\n      case 10:\\n      case 11:\\n      case 12:\\n      case 13:\\n      case 14:\\n      case 15:\\n        return count_bit_noESC_from3(ix, ixPos, endPos, huf_tbl_noESC[max - 1], s);\\n\\n      default:\\n        /* try tables with linbits */\\n        if (max > QuantizePVT.IXMAX_VAL) {\\n          s.bits = QuantizePVT.LARGE_BITS;\\n          return -1;\\n        }\\n\\n        max -= 15;\\n        var choice2;\\n\\n        for (choice2 = 24; choice2 < 32; choice2++) {\\n          if (Tables.ht[choice2].linmax >= max) {\\n            break;\\n          }\\n        }\\n\\n        var choice;\\n\\n        for (choice = choice2 - 8; choice < 24; choice++) {\\n          if (Tables.ht[choice].linmax >= max) {\\n            break;\\n          }\\n        }\\n\\n        return count_bit_ESC(ix, ixPos, endPos, choice, choice2, s);\\n    }\\n  }\\n  /**\\n   * count_bit\\n   */\\n\\n\\n  this.noquant_count_bits = function (gfc, gi, prev_noise) {\\n    var ix = gi.l3_enc;\\n    var i = Math.min(576, gi.max_nonzero_coeff + 2 >> 1 << 1);\\n    if (prev_noise != null) prev_noise.sfb_count1 = 0;\\n    /* Determine count1 region */\\n\\n    for (; i > 1; i -= 2) {\\n      if ((ix[i - 1] | ix[i - 2]) != 0) break;\\n    }\\n\\n    gi.count1 = i;\\n    /* Determines the number of bits to encode the quadruples. */\\n\\n    var a1 = 0;\\n    var a2 = 0;\\n\\n    for (; i > 3; i -= 4) {\\n      var p;\\n      /* hack to check if all values <= 1 */\\n      //throw \\\"TODO: HACK         if ((((long) ix[i - 1] | (long) ix[i - 2] | (long) ix[i - 3] | (long) ix[i - 4]) & 0xffffffffL) > 1L        \\\"\\n      //if (true) {\\n\\n      if (((ix[i - 1] | ix[i - 2] | ix[i - 3] | ix[i - 4]) & 0x7fffffff) > 1) {\\n        break;\\n      }\\n\\n      p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2 + ix[i - 1];\\n      a1 += Tables.t32l[p];\\n      a2 += Tables.t33l[p];\\n    }\\n\\n    var bits = a1;\\n    gi.count1table_select = 0;\\n\\n    if (a1 > a2) {\\n      bits = a2;\\n      gi.count1table_select = 1;\\n    }\\n\\n    gi.count1bits = bits;\\n    gi.big_values = i;\\n    if (i == 0) return bits;\\n\\n    if (gi.block_type == Encoder.SHORT_TYPE) {\\n      a1 = 3 * gfc.scalefac_band.s[3];\\n      if (a1 > gi.big_values) a1 = gi.big_values;\\n      a2 = gi.big_values;\\n    } else if (gi.block_type == Encoder.NORM_TYPE) {\\n      assert(i <= 576);\\n      /* bv_scf has 576 entries (0..575) */\\n\\n      a1 = gi.region0_count = gfc.bv_scf[i - 2];\\n      a2 = gi.region1_count = gfc.bv_scf[i - 1];\\n      assert(a1 + a2 + 2 < Encoder.SBPSY_l);\\n      a2 = gfc.scalefac_band.l[a1 + a2 + 2];\\n      a1 = gfc.scalefac_band.l[a1 + 1];\\n\\n      if (a2 < i) {\\n        var bi = new Bits(bits);\\n        gi.table_select[2] = choose_table(ix, a2, i, bi);\\n        bits = bi.bits;\\n      }\\n    } else {\\n      gi.region0_count = 7;\\n      /* gi.region1_count = SBPSY_l - 7 - 1; */\\n\\n      gi.region1_count = Encoder.SBMAX_l - 1 - 7 - 1;\\n      a1 = gfc.scalefac_band.l[7 + 1];\\n      a2 = i;\\n\\n      if (a1 > a2) {\\n        a1 = a2;\\n      }\\n    }\\n    /* have to allow for the case when bigvalues < region0 < region1 */\\n\\n    /* (and region0, region1 are ignored) */\\n\\n\\n    a1 = Math.min(a1, i);\\n    a2 = Math.min(a2, i);\\n    assert(a1 >= 0);\\n    assert(a2 >= 0);\\n    /* Count the number of bits necessary to code the bigvalues region. */\\n\\n    if (0 < a1) {\\n      var bi = new Bits(bits);\\n      gi.table_select[0] = choose_table(ix, 0, a1, bi);\\n      bits = bi.bits;\\n    }\\n\\n    if (a1 < a2) {\\n      var bi = new Bits(bits);\\n      gi.table_select[1] = choose_table(ix, a1, a2, bi);\\n      bits = bi.bits;\\n    }\\n\\n    if (gfc.use_best_huffman == 2) {\\n      gi.part2_3_length = bits;\\n      best_huffman_divide(gfc, gi);\\n      bits = gi.part2_3_length;\\n    }\\n\\n    if (prev_noise != null) {\\n      if (gi.block_type == Encoder.NORM_TYPE) {\\n        var sfb = 0;\\n\\n        while (gfc.scalefac_band.l[sfb] < gi.big_values) {\\n          sfb++;\\n        }\\n\\n        prev_noise.sfb_count1 = sfb;\\n      }\\n    }\\n\\n    return bits;\\n  };\\n\\n  this.count_bits = function (gfc, xr, gi, prev_noise) {\\n    var ix = gi.l3_enc;\\n    /* since quantize_xrpow uses table lookup, we need to check this first: */\\n\\n    var w = QuantizePVT.IXMAX_VAL / qupvt.IPOW20(gi.global_gain);\\n    if (gi.xrpow_max > w) return QuantizePVT.LARGE_BITS;\\n    quantize_xrpow(xr, ix, qupvt.IPOW20(gi.global_gain), gi, prev_noise);\\n\\n    if ((gfc.substep_shaping & 2) != 0) {\\n      var j = 0;\\n      /* 0.634521682242439 = 0.5946*2**(.5*0.1875) */\\n\\n      var gain = gi.global_gain + gi.scalefac_scale;\\n      var roundfac = 0.634521682242439 / qupvt.IPOW20(gain);\\n\\n      for (var sfb = 0; sfb < gi.sfbmax; sfb++) {\\n        var width = gi.width[sfb];\\n        assert(width >= 0);\\n\\n        if (0 == gfc.pseudohalf[sfb]) {\\n          j += width;\\n        } else {\\n          var k;\\n\\n          for (k = j, j += width; k < j; ++k) {\\n            ix[k] = xr[k] >= roundfac ? ix[k] : 0;\\n          }\\n        }\\n      }\\n    }\\n\\n    return this.noquant_count_bits(gfc, gi, prev_noise);\\n  };\\n  /**\\n   * re-calculate the best scalefac_compress using scfsi the saved bits are\\n   * kept in the bit reservoir.\\n   */\\n\\n\\n  function recalc_divide_init(gfc, cod_info, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\\n    var bigv = cod_info.big_values;\\n\\n    for (var r0 = 0; r0 <= 7 + 15; r0++) {\\n      r01_bits[r0] = QuantizePVT.LARGE_BITS;\\n    }\\n\\n    for (var r0 = 0; r0 < 16; r0++) {\\n      var a1 = gfc.scalefac_band.l[r0 + 1];\\n      if (a1 >= bigv) break;\\n      var r0bits = 0;\\n      var bi = new Bits(r0bits);\\n      var r0t = choose_table(ix, 0, a1, bi);\\n      r0bits = bi.bits;\\n\\n      for (var r1 = 0; r1 < 8; r1++) {\\n        var a2 = gfc.scalefac_band.l[r0 + r1 + 2];\\n        if (a2 >= bigv) break;\\n        var bits = r0bits;\\n        bi = new Bits(bits);\\n        var r1t = choose_table(ix, a1, a2, bi);\\n        bits = bi.bits;\\n\\n        if (r01_bits[r0 + r1] > bits) {\\n          r01_bits[r0 + r1] = bits;\\n          r01_div[r0 + r1] = r0;\\n          r0_tbl[r0 + r1] = r0t;\\n          r1_tbl[r0 + r1] = r1t;\\n        }\\n      }\\n    }\\n  }\\n\\n  function recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\\n    var bigv = cod_info2.big_values;\\n\\n    for (var r2 = 2; r2 < Encoder.SBMAX_l + 1; r2++) {\\n      var a2 = gfc.scalefac_band.l[r2];\\n      if (a2 >= bigv) break;\\n      var bits = r01_bits[r2 - 2] + cod_info2.count1bits;\\n      if (gi.part2_3_length <= bits) break;\\n      var bi = new Bits(bits);\\n      var r2t = choose_table(ix, a2, bigv, bi);\\n      bits = bi.bits;\\n      if (gi.part2_3_length <= bits) continue;\\n      gi.assign(cod_info2);\\n      gi.part2_3_length = bits;\\n      gi.region0_count = r01_div[r2 - 2];\\n      gi.region1_count = r2 - 2 - r01_div[r2 - 2];\\n      gi.table_select[0] = r0_tbl[r2 - 2];\\n      gi.table_select[1] = r1_tbl[r2 - 2];\\n      gi.table_select[2] = r2t;\\n    }\\n  }\\n\\n  this.best_huffman_divide = function (gfc, gi) {\\n    var cod_info2 = new GrInfo();\\n    var ix = gi.l3_enc;\\n    var r01_bits = new_int(7 + 15 + 1);\\n    var r01_div = new_int(7 + 15 + 1);\\n    var r0_tbl = new_int(7 + 15 + 1);\\n    var r1_tbl = new_int(7 + 15 + 1);\\n    /* SHORT BLOCK stuff fails for MPEG2 */\\n\\n    if (gi.block_type == Encoder.SHORT_TYPE && gfc.mode_gr == 1) return;\\n    cod_info2.assign(gi);\\n\\n    if (gi.block_type == Encoder.NORM_TYPE) {\\n      recalc_divide_init(gfc, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl);\\n      recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl);\\n    }\\n\\n    var i = cod_info2.big_values;\\n    if (i == 0 || (ix[i - 2] | ix[i - 1]) > 1) return;\\n    i = gi.count1 + 2;\\n    if (i > 576) return;\\n    /* Determines the number of bits to encode the quadruples. */\\n\\n    cod_info2.assign(gi);\\n    cod_info2.count1 = i;\\n    var a1 = 0;\\n    var a2 = 0;\\n    assert(i <= 576);\\n\\n    for (; i > cod_info2.big_values; i -= 4) {\\n      var p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2 + ix[i - 1];\\n      a1 += Tables.t32l[p];\\n      a2 += Tables.t33l[p];\\n    }\\n\\n    cod_info2.big_values = i;\\n    cod_info2.count1table_select = 0;\\n\\n    if (a1 > a2) {\\n      a1 = a2;\\n      cod_info2.count1table_select = 1;\\n    }\\n\\n    cod_info2.count1bits = a1;\\n    if (cod_info2.block_type == Encoder.NORM_TYPE) recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl);else {\\n      /* Count the number of bits necessary to code the bigvalues region. */\\n      cod_info2.part2_3_length = a1;\\n      a1 = gfc.scalefac_band.l[7 + 1];\\n\\n      if (a1 > i) {\\n        a1 = i;\\n      }\\n\\n      if (a1 > 0) {\\n        var bi = new Bits(cod_info2.part2_3_length);\\n        cod_info2.table_select[0] = choose_table(ix, 0, a1, bi);\\n        cod_info2.part2_3_length = bi.bits;\\n      }\\n\\n      if (i > a1) {\\n        var bi = new Bits(cod_info2.part2_3_length);\\n        cod_info2.table_select[1] = choose_table(ix, a1, i, bi);\\n        cod_info2.part2_3_length = bi.bits;\\n      }\\n\\n      if (gi.part2_3_length > cod_info2.part2_3_length) gi.assign(cod_info2);\\n    }\\n  };\\n\\n  var slen1_n = [1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16];\\n  var slen2_n = [1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8];\\n  var slen1_tab = [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4];\\n  var slen2_tab = [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3];\\n  Takehiro.slen1_tab = slen1_tab;\\n  Takehiro.slen2_tab = slen2_tab;\\n\\n  function scfsi_calc(ch, l3_side) {\\n    var sfb;\\n    var gi = l3_side.tt[1][ch];\\n    var g0 = l3_side.tt[0][ch];\\n\\n    for (var i = 0; i < Tables.scfsi_band.length - 1; i++) {\\n      for (sfb = Tables.scfsi_band[i]; sfb < Tables.scfsi_band[i + 1]; sfb++) {\\n        if (g0.scalefac[sfb] != gi.scalefac[sfb] && gi.scalefac[sfb] >= 0) break;\\n      }\\n\\n      if (sfb == Tables.scfsi_band[i + 1]) {\\n        for (sfb = Tables.scfsi_band[i]; sfb < Tables.scfsi_band[i + 1]; sfb++) {\\n          gi.scalefac[sfb] = -1;\\n        }\\n\\n        l3_side.scfsi[ch][i] = 1;\\n      }\\n    }\\n\\n    var s1 = 0;\\n    var c1 = 0;\\n\\n    for (sfb = 0; sfb < 11; sfb++) {\\n      if (gi.scalefac[sfb] == -1) continue;\\n      c1++;\\n      if (s1 < gi.scalefac[sfb]) s1 = gi.scalefac[sfb];\\n    }\\n\\n    var s2 = 0;\\n    var c2 = 0;\\n\\n    for (; sfb < Encoder.SBPSY_l; sfb++) {\\n      if (gi.scalefac[sfb] == -1) continue;\\n      c2++;\\n      if (s2 < gi.scalefac[sfb]) s2 = gi.scalefac[sfb];\\n    }\\n\\n    for (var i = 0; i < 16; i++) {\\n      if (s1 < slen1_n[i] && s2 < slen2_n[i]) {\\n        var c = slen1_tab[i] * c1 + slen2_tab[i] * c2;\\n\\n        if (gi.part2_length > c) {\\n          gi.part2_length = c;\\n          gi.scalefac_compress = i;\\n        }\\n      }\\n    }\\n  }\\n  /**\\n   * Find the optimal way to store the scalefactors. Only call this routine\\n   * after final scalefactors have been chosen and the channel/granule will\\n   * not be re-encoded.\\n   */\\n\\n\\n  this.best_scalefac_store = function (gfc, gr, ch, l3_side) {\\n    /* use scalefac_scale if we can */\\n    var gi = l3_side.tt[gr][ch];\\n    var sfb, i, j, l;\\n    var recalc = 0;\\n    /*\\n     * remove scalefacs from bands with ix=0. This idea comes from the AAC\\n     * ISO docs. added mt 3/00\\n     */\\n\\n    /* check if l3_enc=0 */\\n\\n    j = 0;\\n\\n    for (sfb = 0; sfb < gi.sfbmax; sfb++) {\\n      var width = gi.width[sfb];\\n      assert(width >= 0);\\n      j += width;\\n\\n      for (l = -width; l < 0; l++) {\\n        if (gi.l3_enc[l + j] != 0) break;\\n      }\\n\\n      if (l == 0) gi.scalefac[sfb] = recalc = -2;\\n      /* anything goes. */\\n\\n      /*\\n       * only best_scalefac_store and calc_scfsi know--and only they\\n       * should know--about the magic number -2.\\n       */\\n    }\\n\\n    if (0 == gi.scalefac_scale && 0 == gi.preflag) {\\n      var s = 0;\\n\\n      for (sfb = 0; sfb < gi.sfbmax; sfb++) {\\n        if (gi.scalefac[sfb] > 0) s |= gi.scalefac[sfb];\\n      }\\n\\n      if (0 == (s & 1) && s != 0) {\\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\\n          if (gi.scalefac[sfb] > 0) gi.scalefac[sfb] >>= 1;\\n        }\\n\\n        gi.scalefac_scale = recalc = 1;\\n      }\\n    }\\n\\n    if (0 == gi.preflag && gi.block_type != Encoder.SHORT_TYPE && gfc.mode_gr == 2) {\\n      for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++) {\\n        if (gi.scalefac[sfb] < qupvt.pretab[sfb] && gi.scalefac[sfb] != -2) break;\\n      }\\n\\n      if (sfb == Encoder.SBPSY_l) {\\n        for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++) {\\n          if (gi.scalefac[sfb] > 0) gi.scalefac[sfb] -= qupvt.pretab[sfb];\\n        }\\n\\n        gi.preflag = recalc = 1;\\n      }\\n    }\\n\\n    for (i = 0; i < 4; i++) {\\n      l3_side.scfsi[ch][i] = 0;\\n    }\\n\\n    if (gfc.mode_gr == 2 && gr == 1 && l3_side.tt[0][ch].block_type != Encoder.SHORT_TYPE && l3_side.tt[1][ch].block_type != Encoder.SHORT_TYPE) {\\n      scfsi_calc(ch, l3_side);\\n      recalc = 0;\\n    }\\n\\n    for (sfb = 0; sfb < gi.sfbmax; sfb++) {\\n      if (gi.scalefac[sfb] == -2) {\\n        gi.scalefac[sfb] = 0;\\n        /* if anything goes, then 0 is a good choice */\\n      }\\n    }\\n\\n    if (recalc != 0) {\\n      if (gfc.mode_gr == 2) {\\n        this.scale_bitcount(gi);\\n      } else {\\n        this.scale_bitcount_lsf(gfc, gi);\\n      }\\n    }\\n  };\\n\\n  function all_scalefactors_not_negative(scalefac, n) {\\n    for (var i = 0; i < n; ++i) {\\n      if (scalefac[i] < 0) return false;\\n    }\\n\\n    return true;\\n  }\\n  /**\\n   * number of bits used to encode scalefacs.\\n   *\\n   * 18*slen1_tab[i] + 18*slen2_tab[i]\\n   */\\n\\n\\n  var scale_short = [0, 18, 36, 54, 54, 36, 54, 72, 54, 72, 90, 72, 90, 108, 108, 126];\\n  /**\\n   * number of bits used to encode scalefacs.\\n   *\\n   * 17*slen1_tab[i] + 18*slen2_tab[i]\\n   */\\n\\n  var scale_mixed = [0, 18, 36, 54, 51, 35, 53, 71, 52, 70, 88, 69, 87, 105, 104, 122];\\n  /**\\n   * number of bits used to encode scalefacs.\\n   *\\n   * 11*slen1_tab[i] + 10*slen2_tab[i]\\n   */\\n\\n  var scale_long = [0, 10, 20, 30, 33, 21, 31, 41, 32, 42, 52, 43, 53, 63, 64, 74];\\n  /**\\n   * Also calculates the number of bits necessary to code the scalefactors.\\n   */\\n\\n  this.scale_bitcount = function (cod_info) {\\n    var k,\\n        sfb,\\n        max_slen1 = 0,\\n        max_slen2 = 0;\\n    /* maximum values */\\n\\n    var tab;\\n    var scalefac = cod_info.scalefac;\\n    assert(all_scalefactors_not_negative(scalefac, cod_info.sfbmax));\\n\\n    if (cod_info.block_type == Encoder.SHORT_TYPE) {\\n      tab = scale_short;\\n      if (cod_info.mixed_block_flag != 0) tab = scale_mixed;\\n    } else {\\n      /* block_type == 1,2,or 3 */\\n      tab = scale_long;\\n\\n      if (0 == cod_info.preflag) {\\n        for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++) {\\n          if (scalefac[sfb] < qupvt.pretab[sfb]) break;\\n        }\\n\\n        if (sfb == Encoder.SBPSY_l) {\\n          cod_info.preflag = 1;\\n\\n          for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++) {\\n            scalefac[sfb] -= qupvt.pretab[sfb];\\n          }\\n        }\\n      }\\n    }\\n\\n    for (sfb = 0; sfb < cod_info.sfbdivide; sfb++) {\\n      if (max_slen1 < scalefac[sfb]) max_slen1 = scalefac[sfb];\\n    }\\n\\n    for (; sfb < cod_info.sfbmax; sfb++) {\\n      if (max_slen2 < scalefac[sfb]) max_slen2 = scalefac[sfb];\\n    }\\n    /*\\n     * from Takehiro TOMINAGA <tominaga@isoternet.org> 10/99 loop over *all*\\n     * posible values of scalefac_compress to find the one which uses the\\n     * smallest number of bits. ISO would stop at first valid index\\n     */\\n\\n\\n    cod_info.part2_length = QuantizePVT.LARGE_BITS;\\n\\n    for (k = 0; k < 16; k++) {\\n      if (max_slen1 < slen1_n[k] && max_slen2 < slen2_n[k] && cod_info.part2_length > tab[k]) {\\n        cod_info.part2_length = tab[k];\\n        cod_info.scalefac_compress = k;\\n      }\\n    }\\n\\n    return cod_info.part2_length == QuantizePVT.LARGE_BITS;\\n  };\\n  /**\\n   * table of largest scalefactor values for MPEG2\\n   */\\n\\n\\n  var max_range_sfac_tab = [[15, 15, 7, 7], [15, 15, 7, 0], [7, 3, 0, 0], [15, 31, 31, 0], [7, 7, 7, 0], [3, 3, 0, 0]];\\n  /**\\n   * Also counts the number of bits to encode the scalefacs but for MPEG 2\\n   * Lower sampling frequencies (24, 22.05 and 16 kHz.)\\n   *\\n   * This is reverse-engineered from section 2.4.3.2 of the MPEG2 IS,\\n   * \\\"Audio Decoding Layer III\\\"\\n   */\\n\\n  this.scale_bitcount_lsf = function (gfc, cod_info) {\\n    var table_number, row_in_table, partition, nr_sfb, window;\\n    var over;\\n    var i, sfb;\\n    var max_sfac = new_int(4); //var partition_table;\\n\\n    var scalefac = cod_info.scalefac;\\n    /*\\n     * Set partition table. Note that should try to use table one, but do\\n     * not yet...\\n     */\\n\\n    if (cod_info.preflag != 0) table_number = 2;else table_number = 0;\\n\\n    for (i = 0; i < 4; i++) {\\n      max_sfac[i] = 0;\\n    }\\n\\n    if (cod_info.block_type == Encoder.SHORT_TYPE) {\\n      row_in_table = 1;\\n      var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\\n\\n      for (sfb = 0, partition = 0; partition < 4; partition++) {\\n        nr_sfb = partition_table[partition] / 3;\\n\\n        for (i = 0; i < nr_sfb; i++, sfb++) {\\n          for (window = 0; window < 3; window++) {\\n            if (scalefac[sfb * 3 + window] > max_sfac[partition]) max_sfac[partition] = scalefac[sfb * 3 + window];\\n          }\\n        }\\n      }\\n    } else {\\n      row_in_table = 0;\\n      var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\\n\\n      for (sfb = 0, partition = 0; partition < 4; partition++) {\\n        nr_sfb = partition_table[partition];\\n\\n        for (i = 0; i < nr_sfb; i++, sfb++) {\\n          if (scalefac[sfb] > max_sfac[partition]) max_sfac[partition] = scalefac[sfb];\\n        }\\n      }\\n    }\\n\\n    for (over = false, partition = 0; partition < 4; partition++) {\\n      if (max_sfac[partition] > max_range_sfac_tab[table_number][partition]) over = true;\\n    }\\n\\n    if (!over) {\\n      var slen1, slen2, slen3, slen4;\\n      cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\\n\\n      for (partition = 0; partition < 4; partition++) {\\n        cod_info.slen[partition] = log2tab[max_sfac[partition]];\\n      }\\n      /* set scalefac_compress */\\n\\n\\n      slen1 = cod_info.slen[0];\\n      slen2 = cod_info.slen[1];\\n      slen3 = cod_info.slen[2];\\n      slen4 = cod_info.slen[3];\\n\\n      switch (table_number) {\\n        case 0:\\n          cod_info.scalefac_compress = (slen1 * 5 + slen2 << 4) + (slen3 << 2) + slen4;\\n          break;\\n\\n        case 1:\\n          cod_info.scalefac_compress = 400 + (slen1 * 5 + slen2 << 2) + slen3;\\n          break;\\n\\n        case 2:\\n          cod_info.scalefac_compress = 500 + slen1 * 3 + slen2;\\n          break;\\n\\n        default:\\n          System.err.printf(\\\"intensity stereo not implemented yet\\\\n\\\");\\n          break;\\n      }\\n    }\\n\\n    if (!over) {\\n      assert(cod_info.sfb_partition_table != null);\\n      cod_info.part2_length = 0;\\n\\n      for (partition = 0; partition < 4; partition++) {\\n        cod_info.part2_length += cod_info.slen[partition] * cod_info.sfb_partition_table[partition];\\n      }\\n    }\\n\\n    return over;\\n  };\\n  /*\\n   * Since no bands have been over-amplified, we can set scalefac_compress and\\n   * slen[] for the formatter\\n   */\\n\\n\\n  var log2tab = [0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4];\\n\\n  this.huffman_init = function (gfc) {\\n    for (var i = 2; i <= 576; i += 2) {\\n      var scfb_anz = 0,\\n          bv_index;\\n\\n      while (gfc.scalefac_band.l[++scfb_anz] < i) {\\n        ;\\n      }\\n\\n      bv_index = subdv_table[scfb_anz][0]; // .region0_count\\n\\n      while (gfc.scalefac_band.l[bv_index + 1] > i) {\\n        bv_index--;\\n      }\\n\\n      if (bv_index < 0) {\\n        /*\\n         * this is an indication that everything is going to be encoded\\n         * as region0: bigvalues < region0 < region1 so lets set\\n         * region0, region1 to some value larger than bigvalues\\n         */\\n        bv_index = subdv_table[scfb_anz][0]; // .region0_count\\n      }\\n\\n      gfc.bv_scf[i - 2] = bv_index;\\n      bv_index = subdv_table[scfb_anz][1]; // .region1_count\\n\\n      while (gfc.scalefac_band.l[bv_index + gfc.bv_scf[i - 2] + 2] > i) {\\n        bv_index--;\\n      }\\n\\n      if (bv_index < 0) {\\n        bv_index = subdv_table[scfb_anz][1]; // .region1_count\\n      }\\n\\n      gfc.bv_scf[i - 1] = bv_index;\\n    }\\n  };\\n}\\n\\nmodule.exports = Takehiro;\",\"/*\\n *      quantize_pvt source file\\n *\\n *      Copyright (c) 1999-2002 Takehiro Tominaga\\n *      Copyright (c) 2000-2002 Robert Hegemann\\n *      Copyright (c) 2001 Naoki Shibata\\n *      Copyright (c) 2002-2005 Gabriel Bouvigne\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Library General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the\\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\\n * Boston, MA 02111-1307, USA.\\n */\\n\\n/* $Id: QuantizePVT.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\\nvar ScaleFac = require('./ScaleFac.js');\\n\\nvar common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nvar Encoder = require('./Encoder.js');\\n\\nvar MeanBits = require('./MeanBits.js');\\n\\nvar LameInternalFlags = require('./LameInternalFlags.js');\\n\\nQuantizePVT.Q_MAX = 256 + 1;\\nQuantizePVT.Q_MAX2 = 116;\\nQuantizePVT.LARGE_BITS = 100000;\\nQuantizePVT.IXMAX_VAL = 8206;\\n\\nfunction QuantizePVT() {\\n  var tak = null;\\n  var rv = null;\\n  var psy = null;\\n\\n  this.setModules = function (_tk, _rv, _psy) {\\n    tak = _tk;\\n    rv = _rv;\\n    psy = _psy;\\n  };\\n\\n  function POW20(x) {\\n    assert(0 <= x + QuantizePVT.Q_MAX2 && x < QuantizePVT.Q_MAX);\\n    return pow20[x + QuantizePVT.Q_MAX2];\\n  }\\n\\n  this.IPOW20 = function (x) {\\n    assert(0 <= x && x < QuantizePVT.Q_MAX);\\n    return ipow20[x];\\n  };\\n  /**\\n   * smallest such that 1.0+DBL_EPSILON != 1.0\\n   */\\n\\n\\n  var DBL_EPSILON = 2.2204460492503131e-016;\\n  /**\\n   * ix always <= 8191+15. see count_bits()\\n   */\\n\\n  var IXMAX_VAL = QuantizePVT.IXMAX_VAL;\\n  var PRECALC_SIZE = IXMAX_VAL + 2;\\n  var Q_MAX = QuantizePVT.Q_MAX;\\n  /**\\n   * <CODE>\\n   * minimum possible number of\\n   * -cod_info.global_gain + ((scalefac[] + (cod_info.preflag ? pretab[sfb] : 0))\\n   * << (cod_info.scalefac_scale + 1)) + cod_info.subblock_gain[cod_info.window[sfb]] * 8;\\n   *\\n   * for long block, 0+((15+3)<<2) = 18*4 = 72\\n   * for short block, 0+(15<<2)+7*8 = 15*4+56 = 116\\n   * </CODE>\\n   */\\n\\n  var Q_MAX2 = QuantizePVT.Q_MAX2;\\n  var LARGE_BITS = QuantizePVT.LARGE_BITS;\\n  /**\\n   * Assuming dynamic range=96dB, this value should be 92\\n   */\\n\\n  var NSATHSCALE = 100;\\n  /**\\n   * The following table is used to implement the scalefactor partitioning for\\n   * MPEG2 as described in section 2.4.3.2 of the IS. The indexing corresponds\\n   * to the way the tables are presented in the IS:\\n   *\\n   * [table_number][row_in_table][column of nr_of_sfb]\\n   */\\n\\n  this.nr_of_sfb_block = [[[6, 5, 5, 5], [9, 9, 9, 9], [6, 9, 9, 9]], [[6, 5, 7, 3], [9, 9, 12, 6], [6, 9, 12, 6]], [[11, 10, 0, 0], [18, 18, 0, 0], [15, 18, 0, 0]], [[7, 7, 7, 0], [12, 12, 12, 0], [6, 15, 12, 0]], [[6, 6, 6, 3], [12, 9, 9, 6], [6, 12, 9, 6]], [[8, 8, 5, 0], [15, 12, 9, 0], [6, 18, 9, 0]]];\\n  /**\\n   * Table B.6: layer3 preemphasis\\n   */\\n\\n  var pretab = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 2, 0];\\n  this.pretab = pretab;\\n  /**\\n   * Here are MPEG1 Table B.8 and MPEG2 Table B.1 -- Layer III scalefactor\\n   * bands. <BR>\\n   * Index into this using a method such as:<BR>\\n   * idx = fr_ps.header.sampling_frequency + (fr_ps.header.version * 3)\\n   */\\n\\n  this.sfBandIndex = [// Table B.2.b: 22.05 kHz\\n  new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576], [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192], [0, 0, 0, 0, 0, 0, 0] //  sfb21 pseudo sub bands\\n  , [0, 0, 0, 0, 0, 0, 0] //  sfb12 pseudo sub bands\\n  ),\\n  /* Table B.2.c: 24 kHz */\\n\\n  /* docs: 332. mpg123(broken): 330 */\\n  new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 332, 394, 464, 540, 576], [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192], [0, 0, 0, 0, 0, 0, 0]\\n  /*  sfb21 pseudo sub bands */\\n  , [0, 0, 0, 0, 0, 0, 0]\\n  /*  sfb12 pseudo sub bands */\\n  ),\\n  /* Table B.2.a: 16 kHz */\\n  new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576], [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192], [0, 0, 0, 0, 0, 0, 0]\\n  /*  sfb21 pseudo sub bands */\\n  , [0, 0, 0, 0, 0, 0, 0]\\n  /*  sfb12 pseudo sub bands */\\n  ),\\n  /* Table B.8.b: 44.1 kHz */\\n  new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418, 576], [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192], [0, 0, 0, 0, 0, 0, 0]\\n  /*  sfb21 pseudo sub bands */\\n  , [0, 0, 0, 0, 0, 0, 0]\\n  /*  sfb12 pseudo sub bands */\\n  ),\\n  /* Table B.8.c: 48 kHz */\\n  new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384, 576], [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192], [0, 0, 0, 0, 0, 0, 0]\\n  /*  sfb21 pseudo sub bands */\\n  , [0, 0, 0, 0, 0, 0, 0]\\n  /*  sfb12 pseudo sub bands */\\n  ),\\n  /* Table B.8.a: 32 kHz */\\n  new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550, 576], [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192], [0, 0, 0, 0, 0, 0, 0]\\n  /*  sfb21 pseudo sub bands */\\n  , [0, 0, 0, 0, 0, 0, 0]\\n  /*  sfb12 pseudo sub bands */\\n  ),\\n  /* MPEG-2.5 11.025 kHz */\\n  new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576], [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3, 402 / 3, 522 / 3, 576 / 3], [0, 0, 0, 0, 0, 0, 0]\\n  /*  sfb21 pseudo sub bands */\\n  , [0, 0, 0, 0, 0, 0, 0]\\n  /*  sfb12 pseudo sub bands */\\n  ),\\n  /* MPEG-2.5 12 kHz */\\n  new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576], [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3, 402 / 3, 522 / 3, 576 / 3], [0, 0, 0, 0, 0, 0, 0]\\n  /*  sfb21 pseudo sub bands */\\n  , [0, 0, 0, 0, 0, 0, 0]\\n  /*  sfb12 pseudo sub bands */\\n  ),\\n  /* MPEG-2.5 8 kHz */\\n  new ScaleFac([0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570, 572, 574, 576], [0 / 3, 24 / 3, 48 / 3, 72 / 3, 108 / 3, 156 / 3, 216 / 3, 288 / 3, 372 / 3, 480 / 3, 486 / 3, 492 / 3, 498 / 3, 576 / 3], [0, 0, 0, 0, 0, 0, 0]\\n  /*  sfb21 pseudo sub bands */\\n  , [0, 0, 0, 0, 0, 0, 0]\\n  /*  sfb12 pseudo sub bands */\\n  )];\\n  var pow20 = new_float(Q_MAX + Q_MAX2 + 1);\\n  var ipow20 = new_float(Q_MAX);\\n  var pow43 = new_float(PRECALC_SIZE);\\n  var adj43 = new_float(PRECALC_SIZE);\\n  this.adj43 = adj43;\\n  /**\\n   * <PRE>\\n   * compute the ATH for each scalefactor band cd range: 0..96db\\n   *\\n   * Input: 3.3kHz signal 32767 amplitude (3.3kHz is where ATH is smallest =\\n   * -5db) longblocks: sfb=12 en0/bw=-11db max_en0 = 1.3db shortblocks: sfb=5\\n   * -9db 0db\\n   *\\n   * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) longblocks: amp=1\\n   * sfb=12 en0/bw=-103 db max_en0 = -92db amp=32767 sfb=12 -12 db -1.4db\\n   *\\n   * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) shortblocks: amp=1\\n   * sfb=5 en0/bw= -99 -86 amp=32767 sfb=5 -9 db 4db\\n   *\\n   *\\n   * MAX energy of largest wave at 3.3kHz = 1db AVE energy of largest wave at\\n   * 3.3kHz = -11db Let's take AVE: -11db = maximum signal in sfb=12. Dynamic\\n   * range of CD: 96db. Therefor energy of smallest audible wave in sfb=12 =\\n   * -11 - 96 = -107db = ATH at 3.3kHz.\\n   *\\n   * ATH formula for this wave: -5db. To adjust to LAME scaling, we need ATH =\\n   * ATH_formula - 103 (db) ATH = ATH * 2.5e-10 (ener)\\n   * </PRE>\\n   */\\n\\n  function ATHmdct(gfp, f) {\\n    var ath = psy.ATHformula(f, gfp);\\n    ath -= NSATHSCALE;\\n    /* modify the MDCT scaling for the ATH and convert to energy */\\n\\n    ath = Math.pow(10.0, ath / 10.0 + gfp.ATHlower);\\n    return ath;\\n  }\\n\\n  function compute_ath(gfp) {\\n    var ATH_l = gfp.internal_flags.ATH.l;\\n    var ATH_psfb21 = gfp.internal_flags.ATH.psfb21;\\n    var ATH_s = gfp.internal_flags.ATH.s;\\n    var ATH_psfb12 = gfp.internal_flags.ATH.psfb12;\\n    var gfc = gfp.internal_flags;\\n    var samp_freq = gfp.out_samplerate;\\n\\n    for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\\n      var start = gfc.scalefac_band.l[sfb];\\n      var end = gfc.scalefac_band.l[sfb + 1];\\n      ATH_l[sfb] = Float.MAX_VALUE;\\n\\n      for (var i = start; i < end; i++) {\\n        var freq = i * samp_freq / (2 * 576);\\n        var ATH_f = ATHmdct(gfp, freq);\\n        /* freq in kHz */\\n\\n        ATH_l[sfb] = Math.min(ATH_l[sfb], ATH_f);\\n      }\\n    }\\n\\n    for (var sfb = 0; sfb < Encoder.PSFB21; sfb++) {\\n      var start = gfc.scalefac_band.psfb21[sfb];\\n      var end = gfc.scalefac_band.psfb21[sfb + 1];\\n      ATH_psfb21[sfb] = Float.MAX_VALUE;\\n\\n      for (var i = start; i < end; i++) {\\n        var freq = i * samp_freq / (2 * 576);\\n        var ATH_f = ATHmdct(gfp, freq);\\n        /* freq in kHz */\\n\\n        ATH_psfb21[sfb] = Math.min(ATH_psfb21[sfb], ATH_f);\\n      }\\n    }\\n\\n    for (var sfb = 0; sfb < Encoder.SBMAX_s; sfb++) {\\n      var start = gfc.scalefac_band.s[sfb];\\n      var end = gfc.scalefac_band.s[sfb + 1];\\n      ATH_s[sfb] = Float.MAX_VALUE;\\n\\n      for (var i = start; i < end; i++) {\\n        var freq = i * samp_freq / (2 * 192);\\n        var ATH_f = ATHmdct(gfp, freq);\\n        /* freq in kHz */\\n\\n        ATH_s[sfb] = Math.min(ATH_s[sfb], ATH_f);\\n      }\\n\\n      ATH_s[sfb] *= gfc.scalefac_band.s[sfb + 1] - gfc.scalefac_band.s[sfb];\\n    }\\n\\n    for (var sfb = 0; sfb < Encoder.PSFB12; sfb++) {\\n      var start = gfc.scalefac_band.psfb12[sfb];\\n      var end = gfc.scalefac_band.psfb12[sfb + 1];\\n      ATH_psfb12[sfb] = Float.MAX_VALUE;\\n\\n      for (var i = start; i < end; i++) {\\n        var freq = i * samp_freq / (2 * 192);\\n        var ATH_f = ATHmdct(gfp, freq);\\n        /* freq in kHz */\\n\\n        ATH_psfb12[sfb] = Math.min(ATH_psfb12[sfb], ATH_f);\\n      }\\n      /* not sure about the following */\\n\\n\\n      ATH_psfb12[sfb] *= gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12];\\n    }\\n    /*\\n     * no-ATH mode: reduce ATH to -200 dB\\n     */\\n\\n\\n    if (gfp.noATH) {\\n      for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\\n        ATH_l[sfb] = 1E-20;\\n      }\\n\\n      for (var sfb = 0; sfb < Encoder.PSFB21; sfb++) {\\n        ATH_psfb21[sfb] = 1E-20;\\n      }\\n\\n      for (var sfb = 0; sfb < Encoder.SBMAX_s; sfb++) {\\n        ATH_s[sfb] = 1E-20;\\n      }\\n\\n      for (var sfb = 0; sfb < Encoder.PSFB12; sfb++) {\\n        ATH_psfb12[sfb] = 1E-20;\\n      }\\n    }\\n    /*\\n     * work in progress, don't rely on it too much\\n     */\\n\\n\\n    gfc.ATH.floor = 10. * Math.log10(ATHmdct(gfp, -1.));\\n  }\\n  /**\\n   * initialization for iteration_loop\\n   */\\n\\n\\n  this.iteration_init = function (gfp) {\\n    var gfc = gfp.internal_flags;\\n    var l3_side = gfc.l3_side;\\n    var i;\\n\\n    if (gfc.iteration_init_init == 0) {\\n      gfc.iteration_init_init = 1;\\n      l3_side.main_data_begin = 0;\\n      compute_ath(gfp);\\n      pow43[0] = 0.0;\\n\\n      for (i = 1; i < PRECALC_SIZE; i++) {\\n        pow43[i] = Math.pow(i, 4.0 / 3.0);\\n      }\\n\\n      for (i = 0; i < PRECALC_SIZE - 1; i++) {\\n        adj43[i] = i + 1 - Math.pow(0.5 * (pow43[i] + pow43[i + 1]), 0.75);\\n      }\\n\\n      adj43[i] = 0.5;\\n\\n      for (i = 0; i < Q_MAX; i++) {\\n        ipow20[i] = Math.pow(2.0, (i - 210) * -0.1875);\\n      }\\n\\n      for (i = 0; i <= Q_MAX + Q_MAX2; i++) {\\n        pow20[i] = Math.pow(2.0, (i - 210 - Q_MAX2) * 0.25);\\n      }\\n\\n      tak.huffman_init(gfc);\\n      {\\n        var bass, alto, treble, sfb21;\\n        i = gfp.exp_nspsytune >> 2 & 63;\\n        if (i >= 32) i -= 64;\\n        bass = Math.pow(10, i / 4.0 / 10.0);\\n        i = gfp.exp_nspsytune >> 8 & 63;\\n        if (i >= 32) i -= 64;\\n        alto = Math.pow(10, i / 4.0 / 10.0);\\n        i = gfp.exp_nspsytune >> 14 & 63;\\n        if (i >= 32) i -= 64;\\n        treble = Math.pow(10, i / 4.0 / 10.0);\\n        /*\\n         * to be compatible with Naoki's original code, the next 6 bits\\n         * define only the amount of changing treble for sfb21\\n         */\\n\\n        i = gfp.exp_nspsytune >> 20 & 63;\\n        if (i >= 32) i -= 64;\\n        sfb21 = treble * Math.pow(10, i / 4.0 / 10.0);\\n\\n        for (i = 0; i < Encoder.SBMAX_l; i++) {\\n          var f;\\n          if (i <= 6) f = bass;else if (i <= 13) f = alto;else if (i <= 20) f = treble;else f = sfb21;\\n          gfc.nsPsy.longfact[i] = f;\\n        }\\n\\n        for (i = 0; i < Encoder.SBMAX_s; i++) {\\n          var f;\\n          if (i <= 5) f = bass;else if (i <= 10) f = alto;else if (i <= 11) f = treble;else f = sfb21;\\n          gfc.nsPsy.shortfact[i] = f;\\n        }\\n      }\\n    }\\n  };\\n  /**\\n   * allocate bits among 2 channels based on PE<BR>\\n   * mt 6/99<BR>\\n   * bugfixes rh 8/01: often allocated more than the allowed 4095 bits\\n   */\\n\\n\\n  this.on_pe = function (gfp, pe, targ_bits, mean_bits, gr, cbr) {\\n    var gfc = gfp.internal_flags;\\n    var tbits = 0,\\n        bits;\\n    var add_bits = new_int(2);\\n    var ch;\\n    /* allocate targ_bits for granule */\\n\\n    var mb = new MeanBits(tbits);\\n    var extra_bits = rv.ResvMaxBits(gfp, mean_bits, mb, cbr);\\n    tbits = mb.bits;\\n    /* maximum allowed bits for this granule */\\n\\n    var max_bits = tbits + extra_bits;\\n\\n    if (max_bits > LameInternalFlags.MAX_BITS_PER_GRANULE) {\\n      // hard limit per granule\\n      max_bits = LameInternalFlags.MAX_BITS_PER_GRANULE;\\n    }\\n\\n    for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\\n      /******************************************************************\\n       * allocate bits for each channel\\n       ******************************************************************/\\n      targ_bits[ch] = Math.min(LameInternalFlags.MAX_BITS_PER_CHANNEL, tbits / gfc.channels_out);\\n      add_bits[ch] = 0 | targ_bits[ch] * pe[gr][ch] / 700.0 - targ_bits[ch];\\n      /* at most increase bits by 1.5*average */\\n\\n      if (add_bits[ch] > mean_bits * 3 / 4) add_bits[ch] = mean_bits * 3 / 4;\\n      if (add_bits[ch] < 0) add_bits[ch] = 0;\\n      if (add_bits[ch] + targ_bits[ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL) add_bits[ch] = Math.max(0, LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[ch]);\\n      bits += add_bits[ch];\\n    }\\n\\n    if (bits > extra_bits) {\\n      for (ch = 0; ch < gfc.channels_out; ++ch) {\\n        add_bits[ch] = extra_bits * add_bits[ch] / bits;\\n      }\\n    }\\n\\n    for (ch = 0; ch < gfc.channels_out; ++ch) {\\n      targ_bits[ch] += add_bits[ch];\\n      extra_bits -= add_bits[ch];\\n    }\\n\\n    for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\\n      bits += targ_bits[ch];\\n    }\\n\\n    if (bits > LameInternalFlags.MAX_BITS_PER_GRANULE) {\\n      var sum = 0;\\n\\n      for (ch = 0; ch < gfc.channels_out; ++ch) {\\n        targ_bits[ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\\n        targ_bits[ch] /= bits;\\n        sum += targ_bits[ch];\\n      }\\n\\n      assert(sum <= LameInternalFlags.MAX_BITS_PER_GRANULE);\\n    }\\n\\n    return max_bits;\\n  };\\n\\n  this.reduce_side = function (targ_bits, ms_ener_ratio, mean_bits, max_bits) {\\n    assert(max_bits <= LameInternalFlags.MAX_BITS_PER_GRANULE);\\n    assert(targ_bits[0] + targ_bits[1] <= LameInternalFlags.MAX_BITS_PER_GRANULE);\\n    /*\\n     * ms_ener_ratio = 0: allocate 66/33 mid/side fac=.33 ms_ener_ratio =.5:\\n     * allocate 50/50 mid/side fac= 0\\n     */\\n\\n    /* 75/25 split is fac=.5 */\\n\\n    var fac = .33 * (.5 - ms_ener_ratio) / .5;\\n    if (fac < 0) fac = 0;\\n    if (fac > .5) fac = .5;\\n    /* number of bits to move from side channel to mid channel */\\n\\n    /* move_bits = fac*targ_bits[1]; */\\n\\n    var move_bits = 0 | fac * .5 * (targ_bits[0] + targ_bits[1]);\\n\\n    if (move_bits > LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[0]) {\\n      move_bits = LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[0];\\n    }\\n\\n    if (move_bits < 0) move_bits = 0;\\n\\n    if (targ_bits[1] >= 125) {\\n      /* dont reduce side channel below 125 bits */\\n      if (targ_bits[1] - move_bits > 125) {\\n        /* if mid channel already has 2x more than average, dont bother */\\n\\n        /* mean_bits = bits per granule (for both channels) */\\n        if (targ_bits[0] < mean_bits) targ_bits[0] += move_bits;\\n        targ_bits[1] -= move_bits;\\n      } else {\\n        targ_bits[0] += targ_bits[1] - 125;\\n        targ_bits[1] = 125;\\n      }\\n    }\\n\\n    move_bits = targ_bits[0] + targ_bits[1];\\n\\n    if (move_bits > max_bits) {\\n      targ_bits[0] = max_bits * targ_bits[0] / move_bits;\\n      targ_bits[1] = max_bits * targ_bits[1] / move_bits;\\n    }\\n\\n    assert(targ_bits[0] <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\\n    assert(targ_bits[1] <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\\n    assert(targ_bits[0] + targ_bits[1] <= LameInternalFlags.MAX_BITS_PER_GRANULE);\\n  };\\n  /**\\n   *  Robert Hegemann 2001-04-27:\\n   *  this adjusts the ATH, keeping the original noise floor\\n   *  affects the higher frequencies more than the lower ones\\n   */\\n\\n\\n  this.athAdjust = function (a, x, athFloor) {\\n    /*\\n     * work in progress\\n     */\\n    var o = 90.30873362;\\n    var p = 94.82444863;\\n    var u = Util.FAST_LOG10_X(x, 10.0);\\n    var v = a * a;\\n    var w = 0.0;\\n    u -= athFloor;\\n    /* undo scaling */\\n\\n    if (v > 1E-20) w = 1. + Util.FAST_LOG10_X(v, 10.0 / o);\\n    if (w < 0) w = 0.;\\n    u *= w;\\n    u += athFloor + o - p;\\n    /* redo scaling */\\n\\n    return Math.pow(10., 0.1 * u);\\n  };\\n  /**\\n   * Calculate the allowed distortion for each scalefactor band, as determined\\n   * by the psychoacoustic model. xmin(sb) = ratio(sb) * en(sb) / bw(sb)\\n   *\\n   * returns number of sfb's with energy > ATH\\n   */\\n\\n\\n  this.calc_xmin = function (gfp, ratio, cod_info, pxmin) {\\n    var pxminPos = 0;\\n    var gfc = gfp.internal_flags;\\n    var gsfb,\\n        j = 0,\\n        ath_over = 0;\\n    var ATH = gfc.ATH;\\n    var xr = cod_info.xr;\\n    var enable_athaa_fix = gfp.VBR == VbrMode.vbr_mtrh ? 1 : 0;\\n    var masking_lower = gfc.masking_lower;\\n\\n    if (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\\n      /* was already done in PSY-Model */\\n      masking_lower = 1.0;\\n    }\\n\\n    for (gsfb = 0; gsfb < cod_info.psy_lmax; gsfb++) {\\n      var en0, xmin;\\n      var rh1, rh2;\\n      var width, l;\\n      if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh) xmin = athAdjust(ATH.adjust, ATH.l[gsfb], ATH.floor);else xmin = ATH.adjust * ATH.l[gsfb];\\n      width = cod_info.width[gsfb];\\n      rh1 = xmin / width;\\n      rh2 = DBL_EPSILON;\\n      l = width >> 1;\\n      en0 = 0.0;\\n\\n      do {\\n        var xa, xb;\\n        xa = xr[j] * xr[j];\\n        en0 += xa;\\n        rh2 += xa < rh1 ? xa : rh1;\\n        j++;\\n        xb = xr[j] * xr[j];\\n        en0 += xb;\\n        rh2 += xb < rh1 ? xb : rh1;\\n        j++;\\n      } while (--l > 0);\\n\\n      if (en0 > xmin) ath_over++;\\n\\n      if (gsfb == Encoder.SBPSY_l) {\\n        var x = xmin * gfc.nsPsy.longfact[gsfb];\\n\\n        if (rh2 < x) {\\n          rh2 = x;\\n        }\\n      }\\n\\n      if (enable_athaa_fix != 0) {\\n        xmin = rh2;\\n      }\\n\\n      if (!gfp.ATHonly) {\\n        var e = ratio.en.l[gsfb];\\n\\n        if (e > 0.0) {\\n          var x;\\n          x = en0 * ratio.thm.l[gsfb] * masking_lower / e;\\n          if (enable_athaa_fix != 0) x *= gfc.nsPsy.longfact[gsfb];\\n          if (xmin < x) xmin = x;\\n        }\\n      }\\n\\n      if (enable_athaa_fix != 0) pxmin[pxminPos++] = xmin;else pxmin[pxminPos++] = xmin * gfc.nsPsy.longfact[gsfb];\\n    }\\n    /* end of long block loop */\\n\\n    /* use this function to determine the highest non-zero coeff */\\n\\n\\n    var max_nonzero = 575;\\n\\n    if (cod_info.block_type != Encoder.SHORT_TYPE) {\\n      // NORM, START or STOP type, but not SHORT\\n      var k = 576;\\n\\n      while (k-- != 0 && BitStream.EQ(xr[k], 0)) {\\n        max_nonzero = k;\\n      }\\n    }\\n\\n    cod_info.max_nonzero_coeff = max_nonzero;\\n\\n    for (var sfb = cod_info.sfb_smin; gsfb < cod_info.psymax; sfb++, gsfb += 3) {\\n      var width, b;\\n      var tmpATH;\\n      if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh) tmpATH = athAdjust(ATH.adjust, ATH.s[sfb], ATH.floor);else tmpATH = ATH.adjust * ATH.s[sfb];\\n      width = cod_info.width[gsfb];\\n\\n      for (b = 0; b < 3; b++) {\\n        var en0 = 0.0,\\n            xmin;\\n        var rh1, rh2;\\n        var l = width >> 1;\\n        rh1 = tmpATH / width;\\n        rh2 = DBL_EPSILON;\\n\\n        do {\\n          var xa, xb;\\n          xa = xr[j] * xr[j];\\n          en0 += xa;\\n          rh2 += xa < rh1 ? xa : rh1;\\n          j++;\\n          xb = xr[j] * xr[j];\\n          en0 += xb;\\n          rh2 += xb < rh1 ? xb : rh1;\\n          j++;\\n        } while (--l > 0);\\n\\n        if (en0 > tmpATH) ath_over++;\\n\\n        if (sfb == Encoder.SBPSY_s) {\\n          var x = tmpATH * gfc.nsPsy.shortfact[sfb];\\n\\n          if (rh2 < x) {\\n            rh2 = x;\\n          }\\n        }\\n\\n        if (enable_athaa_fix != 0) xmin = rh2;else xmin = tmpATH;\\n\\n        if (!gfp.ATHonly && !gfp.ATHshort) {\\n          var e = ratio.en.s[sfb][b];\\n\\n          if (e > 0.0) {\\n            var x;\\n            x = en0 * ratio.thm.s[sfb][b] * masking_lower / e;\\n            if (enable_athaa_fix != 0) x *= gfc.nsPsy.shortfact[sfb];\\n            if (xmin < x) xmin = x;\\n          }\\n        }\\n\\n        if (enable_athaa_fix != 0) pxmin[pxminPos++] = xmin;else pxmin[pxminPos++] = xmin * gfc.nsPsy.shortfact[sfb];\\n      }\\n      /* b */\\n\\n\\n      if (gfp.useTemporal) {\\n        if (pxmin[pxminPos - 3] > pxmin[pxminPos - 3 + 1]) pxmin[pxminPos - 3 + 1] += (pxmin[pxminPos - 3] - pxmin[pxminPos - 3 + 1]) * gfc.decay;\\n        if (pxmin[pxminPos - 3 + 1] > pxmin[pxminPos - 3 + 2]) pxmin[pxminPos - 3 + 2] += (pxmin[pxminPos - 3 + 1] - pxmin[pxminPos - 3 + 2]) * gfc.decay;\\n      }\\n    }\\n    /* end of short block sfb loop */\\n\\n\\n    return ath_over;\\n  };\\n\\n  function StartLine(j) {\\n    this.s = j;\\n  }\\n\\n  this.calc_noise_core = function (cod_info, startline, l, step) {\\n    var noise = 0;\\n    var j = startline.s;\\n    var ix = cod_info.l3_enc;\\n\\n    if (j > cod_info.count1) {\\n      while (l-- != 0) {\\n        var temp;\\n        temp = cod_info.xr[j];\\n        j++;\\n        noise += temp * temp;\\n        temp = cod_info.xr[j];\\n        j++;\\n        noise += temp * temp;\\n      }\\n    } else if (j > cod_info.big_values) {\\n      var ix01 = new_float(2);\\n      ix01[0] = 0;\\n      ix01[1] = step;\\n\\n      while (l-- != 0) {\\n        var temp;\\n        temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\\n        j++;\\n        noise += temp * temp;\\n        temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\\n        j++;\\n        noise += temp * temp;\\n      }\\n    } else {\\n      while (l-- != 0) {\\n        var temp;\\n        temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\\n        j++;\\n        noise += temp * temp;\\n        temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\\n        j++;\\n        noise += temp * temp;\\n      }\\n    }\\n\\n    startline.s = j;\\n    return noise;\\n  };\\n  /**\\n   * <PRE>\\n   * -oo dB  =>  -1.00\\n   * - 6 dB  =>  -0.97\\n   * - 3 dB  =>  -0.80\\n   * - 2 dB  =>  -0.64\\n   * - 1 dB  =>  -0.38\\n   *   0 dB  =>   0.00\\n   * + 1 dB  =>  +0.49\\n   * + 2 dB  =>  +1.06\\n   * + 3 dB  =>  +1.68\\n   * + 6 dB  =>  +3.69\\n   * +10 dB  =>  +6.45\\n   * </PRE>\\n   */\\n\\n\\n  this.calc_noise = function (cod_info, l3_xmin, distort, res, prev_noise) {\\n    var distortPos = 0;\\n    var l3_xminPos = 0;\\n    var sfb,\\n        l,\\n        over = 0;\\n    var over_noise_db = 0;\\n    /* 0 dB relative to masking */\\n\\n    var tot_noise_db = 0;\\n    /* -200 dB relative to masking */\\n\\n    var max_noise = -20.0;\\n    var j = 0;\\n    var scalefac = cod_info.scalefac;\\n    var scalefacPos = 0;\\n    res.over_SSD = 0;\\n\\n    for (sfb = 0; sfb < cod_info.psymax; sfb++) {\\n      var s = cod_info.global_gain - (scalefac[scalefacPos++] + (cod_info.preflag != 0 ? pretab[sfb] : 0) << cod_info.scalefac_scale + 1) - cod_info.subblock_gain[cod_info.window[sfb]] * 8;\\n      var noise = 0.0;\\n\\n      if (prev_noise != null && prev_noise.step[sfb] == s) {\\n        /* use previously computed values */\\n        noise = prev_noise.noise[sfb];\\n        j += cod_info.width[sfb];\\n        distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\\n        noise = prev_noise.noise_log[sfb];\\n      } else {\\n        var step = POW20(s);\\n        l = cod_info.width[sfb] >> 1;\\n\\n        if (j + cod_info.width[sfb] > cod_info.max_nonzero_coeff) {\\n          var usefullsize;\\n          usefullsize = cod_info.max_nonzero_coeff - j + 1;\\n          if (usefullsize > 0) l = usefullsize >> 1;else l = 0;\\n        }\\n\\n        var sl = new StartLine(j);\\n        noise = this.calc_noise_core(cod_info, sl, l, step);\\n        j = sl.s;\\n\\n        if (prev_noise != null) {\\n          /* save noise values */\\n          prev_noise.step[sfb] = s;\\n          prev_noise.noise[sfb] = noise;\\n        }\\n\\n        noise = distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\\n        /* multiplying here is adding in dB, but can overflow */\\n\\n        noise = Util.FAST_LOG10(Math.max(noise, 1E-20));\\n\\n        if (prev_noise != null) {\\n          /* save noise values */\\n          prev_noise.noise_log[sfb] = noise;\\n        }\\n      }\\n\\n      if (prev_noise != null) {\\n        /* save noise values */\\n        prev_noise.global_gain = cod_info.global_gain;\\n      }\\n\\n      tot_noise_db += noise;\\n\\n      if (noise > 0.0) {\\n        var tmp;\\n        tmp = Math.max(0 | noise * 10 + .5, 1);\\n        res.over_SSD += tmp * tmp;\\n        over++;\\n        /* multiplying here is adding in dB -but can overflow */\\n\\n        /* over_noise *= noise; */\\n\\n        over_noise_db += noise;\\n      }\\n\\n      max_noise = Math.max(max_noise, noise);\\n    }\\n\\n    res.over_count = over;\\n    res.tot_noise = tot_noise_db;\\n    res.over_noise = over_noise_db;\\n    res.max_noise = max_noise;\\n    return over;\\n  };\\n  /**\\n   * updates plotting data\\n   *\\n   * Mark Taylor 2000-??-??\\n   *\\n   * Robert Hegemann: moved noise/distortion calc into it\\n   */\\n\\n\\n  this.set_pinfo = function (gfp, cod_info, ratio, gr, ch) {\\n    var gfc = gfp.internal_flags;\\n    var sfb, sfb2;\\n    var l;\\n    var en0, en1;\\n    var ifqstep = cod_info.scalefac_scale == 0 ? .5 : 1.0;\\n    var scalefac = cod_info.scalefac;\\n    var l3_xmin = new_float(L3Side.SFBMAX);\\n    var xfsf = new_float(L3Side.SFBMAX);\\n    var noise = new CalcNoiseResult();\\n    calc_xmin(gfp, ratio, cod_info, l3_xmin);\\n    calc_noise(cod_info, l3_xmin, xfsf, noise, null);\\n    var j = 0;\\n    sfb2 = cod_info.sfb_lmax;\\n    if (cod_info.block_type != Encoder.SHORT_TYPE && 0 == cod_info.mixed_block_flag) sfb2 = 22;\\n\\n    for (sfb = 0; sfb < sfb2; sfb++) {\\n      var start = gfc.scalefac_band.l[sfb];\\n      var end = gfc.scalefac_band.l[sfb + 1];\\n      var bw = end - start;\\n\\n      for (en0 = 0.0; j < end; j++) {\\n        en0 += cod_info.xr[j] * cod_info.xr[j];\\n      }\\n\\n      en0 /= bw;\\n      /* convert to MDCT units */\\n\\n      /* scaling so it shows up on FFT plot */\\n\\n      en1 = 1e15;\\n      gfc.pinfo.en[gr][ch][sfb] = en1 * en0;\\n      gfc.pinfo.xfsf[gr][ch][sfb] = en1 * l3_xmin[sfb] * xfsf[sfb] / bw;\\n      if (ratio.en.l[sfb] > 0 && !gfp.ATHonly) en0 = en0 / ratio.en.l[sfb];else en0 = 0.0;\\n      gfc.pinfo.thr[gr][ch][sfb] = en1 * Math.max(en0 * ratio.thm.l[sfb], gfc.ATH.l[sfb]);\\n      /* there is no scalefactor bands >= SBPSY_l */\\n\\n      gfc.pinfo.LAMEsfb[gr][ch][sfb] = 0;\\n      if (cod_info.preflag != 0 && sfb >= 11) gfc.pinfo.LAMEsfb[gr][ch][sfb] = -ifqstep * pretab[sfb];\\n\\n      if (sfb < Encoder.SBPSY_l) {\\n        /* scfsi should be decoded by caller side */\\n        assert(scalefac[sfb] >= 0);\\n        gfc.pinfo.LAMEsfb[gr][ch][sfb] -= ifqstep * scalefac[sfb];\\n      }\\n    }\\n    /* for sfb */\\n\\n\\n    if (cod_info.block_type == Encoder.SHORT_TYPE) {\\n      sfb2 = sfb;\\n\\n      for (sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\\n        var start = gfc.scalefac_band.s[sfb];\\n        var end = gfc.scalefac_band.s[sfb + 1];\\n        var bw = end - start;\\n\\n        for (var i = 0; i < 3; i++) {\\n          for (en0 = 0.0, l = start; l < end; l++) {\\n            en0 += cod_info.xr[j] * cod_info.xr[j];\\n            j++;\\n          }\\n\\n          en0 = Math.max(en0 / bw, 1e-20);\\n          /* convert to MDCT units */\\n\\n          /* scaling so it shows up on FFT plot */\\n\\n          en1 = 1e15;\\n          gfc.pinfo.en_s[gr][ch][3 * sfb + i] = en1 * en0;\\n          gfc.pinfo.xfsf_s[gr][ch][3 * sfb + i] = en1 * l3_xmin[sfb2] * xfsf[sfb2] / bw;\\n          if (ratio.en.s[sfb][i] > 0) en0 = en0 / ratio.en.s[sfb][i];else en0 = 0.0;\\n          if (gfp.ATHonly || gfp.ATHshort) en0 = 0;\\n          gfc.pinfo.thr_s[gr][ch][3 * sfb + i] = en1 * Math.max(en0 * ratio.thm.s[sfb][i], gfc.ATH.s[sfb]);\\n          /* there is no scalefactor bands >= SBPSY_s */\\n\\n          gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] = -2.0 * cod_info.subblock_gain[i];\\n\\n          if (sfb < Encoder.SBPSY_s) {\\n            gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] -= ifqstep * scalefac[sfb2];\\n          }\\n\\n          sfb2++;\\n        }\\n      }\\n    }\\n    /* block type short */\\n\\n\\n    gfc.pinfo.LAMEqss[gr][ch] = cod_info.global_gain;\\n    gfc.pinfo.LAMEmainbits[gr][ch] = cod_info.part2_3_length + cod_info.part2_length;\\n    gfc.pinfo.LAMEsfbits[gr][ch] = cod_info.part2_length;\\n    gfc.pinfo.over[gr][ch] = noise.over_count;\\n    gfc.pinfo.max_noise[gr][ch] = noise.max_noise * 10.0;\\n    gfc.pinfo.over_noise[gr][ch] = noise.over_noise * 10.0;\\n    gfc.pinfo.tot_noise[gr][ch] = noise.tot_noise * 10.0;\\n    gfc.pinfo.over_SSD[gr][ch] = noise.over_SSD;\\n  };\\n  /**\\n   * updates plotting data for a whole frame\\n   *\\n   * Robert Hegemann 2000-10-21\\n   */\\n\\n\\n  function set_frame_pinfo(gfp, ratio) {\\n    var gfc = gfp.internal_flags;\\n    gfc.masking_lower = 1.0;\\n    /*\\n     * for every granule and channel patch l3_enc and set info\\n     */\\n\\n    for (var gr = 0; gr < gfc.mode_gr; gr++) {\\n      for (var ch = 0; ch < gfc.channels_out; ch++) {\\n        var cod_info = gfc.l3_side.tt[gr][ch];\\n        var scalefac_sav = new_int(L3Side.SFBMAX);\\n        System.arraycopy(cod_info.scalefac, 0, scalefac_sav, 0, scalefac_sav.length);\\n        /*\\n         * reconstruct the scalefactors in case SCFSI was used\\n         */\\n\\n        if (gr == 1) {\\n          var sfb;\\n\\n          for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\\n            if (cod_info.scalefac[sfb] < 0)\\n              /* scfsi */\\n              cod_info.scalefac[sfb] = gfc.l3_side.tt[0][ch].scalefac[sfb];\\n          }\\n        }\\n\\n        set_pinfo(gfp, cod_info, ratio[gr][ch], gr, ch);\\n        System.arraycopy(scalefac_sav, 0, cod_info.scalefac, 0, scalefac_sav.length);\\n      }\\n      /* for ch */\\n\\n    }\\n    /* for gr */\\n\\n  }\\n}\\n\\nmodule.exports = QuantizePVT;\",\"function _typeof2(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof2(obj); }\\n\\nexport default function _typeof(obj) {\\n  if (typeof Symbol === \\\"function\\\" && _typeof2(Symbol.iterator) === \\\"symbol\\\") {\\n    _typeof = function _typeof(obj) {\\n      return _typeof2(obj);\\n    };\\n  } else {\\n    _typeof = function _typeof(obj) {\\n      return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : _typeof2(obj);\\n    };\\n  }\\n\\n  return _typeof(obj);\\n}\",\"import _typeof from \\\"../../helpers/esm/typeof\\\";\\nimport assertThisInitialized from \\\"./assertThisInitialized\\\";\\nexport default function _possibleConstructorReturn(self, call) {\\n  if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) {\\n    return call;\\n  }\\n\\n  return assertThisInitialized(self);\\n}\",\"export default function _assertThisInitialized(self) {\\n  if (self === void 0) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }\\n\\n  return self;\\n}\",\"export default function _setPrototypeOf(o, p) {\\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\\n    o.__proto__ = p;\\n    return o;\\n  };\\n\\n  return _setPrototypeOf(o, p);\\n}\",\"import setPrototypeOf from \\\"./setPrototypeOf\\\";\\nexport default function _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function\\\");\\n  }\\n\\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\\n    constructor: {\\n      value: subClass,\\n      writable: true,\\n      configurable: true\\n    }\\n  });\\n  if (superClass) setPrototypeOf(subClass, superClass);\\n}\",\"//! moment-timezone.js\\n//! version : 0.5.26\\n//! Copyright (c) JS Foundation and other contributors\\n//! license : MIT\\n//! github.com/moment/moment-timezone\\n(function (root, factory) {\\n  \\\"use strict\\\";\\n  /*global define*/\\n\\n  if (typeof module === 'object' && module.exports) {\\n    module.exports = factory(require('moment')); // Node\\n  } else if (typeof define === 'function' && define.amd) {\\n    define(['moment'], factory); // AMD\\n  } else {\\n    factory(root.moment); // Browser\\n  }\\n})(this, function (moment) {\\n  \\\"use strict\\\"; // Do not load moment-timezone a second time.\\n  // if (moment.tz !== undefined) {\\n  // \\tlogError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\\n  // \\treturn moment;\\n  // }\\n\\n  var VERSION = \\\"0.5.26\\\",\\n      zones = {},\\n      links = {},\\n      names = {},\\n      guesses = {},\\n      cachedGuess;\\n\\n  if (!moment || typeof moment.version !== 'string') {\\n    logError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');\\n  }\\n\\n  var momentVersion = moment.version.split('.'),\\n      major = +momentVersion[0],\\n      minor = +momentVersion[1]; // Moment.js version check\\n\\n  if (major < 2 || major === 2 && minor < 6) {\\n    logError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');\\n  }\\n  /************************************\\n  \\tUnpacking\\n  ************************************/\\n\\n\\n  function charCodeToInt(charCode) {\\n    if (charCode > 96) {\\n      return charCode - 87;\\n    } else if (charCode > 64) {\\n      return charCode - 29;\\n    }\\n\\n    return charCode - 48;\\n  }\\n\\n  function unpackBase60(string) {\\n    var i = 0,\\n        parts = string.split('.'),\\n        whole = parts[0],\\n        fractional = parts[1] || '',\\n        multiplier = 1,\\n        num,\\n        out = 0,\\n        sign = 1; // handle negative numbers\\n\\n    if (string.charCodeAt(0) === 45) {\\n      i = 1;\\n      sign = -1;\\n    } // handle digits before the decimal\\n\\n\\n    for (i; i < whole.length; i++) {\\n      num = charCodeToInt(whole.charCodeAt(i));\\n      out = 60 * out + num;\\n    } // handle digits after the decimal\\n\\n\\n    for (i = 0; i < fractional.length; i++) {\\n      multiplier = multiplier / 60;\\n      num = charCodeToInt(fractional.charCodeAt(i));\\n      out += num * multiplier;\\n    }\\n\\n    return out * sign;\\n  }\\n\\n  function arrayToInt(array) {\\n    for (var i = 0; i < array.length; i++) {\\n      array[i] = unpackBase60(array[i]);\\n    }\\n  }\\n\\n  function intToUntil(array, length) {\\n    for (var i = 0; i < length; i++) {\\n      array[i] = Math.round((array[i - 1] || 0) + array[i] * 60000); // minutes to milliseconds\\n    }\\n\\n    array[length - 1] = Infinity;\\n  }\\n\\n  function mapIndices(source, indices) {\\n    var out = [],\\n        i;\\n\\n    for (i = 0; i < indices.length; i++) {\\n      out[i] = source[indices[i]];\\n    }\\n\\n    return out;\\n  }\\n\\n  function unpack(string) {\\n    var data = string.split('|'),\\n        offsets = data[2].split(' '),\\n        indices = data[3].split(''),\\n        untils = data[4].split(' ');\\n    arrayToInt(offsets);\\n    arrayToInt(indices);\\n    arrayToInt(untils);\\n    intToUntil(untils, indices.length);\\n    return {\\n      name: data[0],\\n      abbrs: mapIndices(data[1].split(' '), indices),\\n      offsets: mapIndices(offsets, indices),\\n      untils: untils,\\n      population: data[5] | 0\\n    };\\n  }\\n  /************************************\\n  \\tZone object\\n  ************************************/\\n\\n\\n  function Zone(packedString) {\\n    if (packedString) {\\n      this._set(unpack(packedString));\\n    }\\n  }\\n\\n  Zone.prototype = {\\n    _set: function _set(unpacked) {\\n      this.name = unpacked.name;\\n      this.abbrs = unpacked.abbrs;\\n      this.untils = unpacked.untils;\\n      this.offsets = unpacked.offsets;\\n      this.population = unpacked.population;\\n    },\\n    _index: function _index(timestamp) {\\n      var target = +timestamp,\\n          untils = this.untils,\\n          i;\\n\\n      for (i = 0; i < untils.length; i++) {\\n        if (target < untils[i]) {\\n          return i;\\n        }\\n      }\\n    },\\n    parse: function parse(timestamp) {\\n      var target = +timestamp,\\n          offsets = this.offsets,\\n          untils = this.untils,\\n          max = untils.length - 1,\\n          offset,\\n          offsetNext,\\n          offsetPrev,\\n          i;\\n\\n      for (i = 0; i < max; i++) {\\n        offset = offsets[i];\\n        offsetNext = offsets[i + 1];\\n        offsetPrev = offsets[i ? i - 1 : i];\\n\\n        if (offset < offsetNext && tz.moveAmbiguousForward) {\\n          offset = offsetNext;\\n        } else if (offset > offsetPrev && tz.moveInvalidForward) {\\n          offset = offsetPrev;\\n        }\\n\\n        if (target < untils[i] - offset * 60000) {\\n          return offsets[i];\\n        }\\n      }\\n\\n      return offsets[max];\\n    },\\n    abbr: function abbr(mom) {\\n      return this.abbrs[this._index(mom)];\\n    },\\n    offset: function offset(mom) {\\n      logError(\\\"zone.offset has been deprecated in favor of zone.utcOffset\\\");\\n      return this.offsets[this._index(mom)];\\n    },\\n    utcOffset: function utcOffset(mom) {\\n      return this.offsets[this._index(mom)];\\n    }\\n  };\\n  /************************************\\n  \\tCurrent Timezone\\n  ************************************/\\n\\n  function OffsetAt(at) {\\n    var timeString = at.toTimeString();\\n    var abbr = timeString.match(/\\\\([a-z ]+\\\\)/i);\\n\\n    if (abbr && abbr[0]) {\\n      // 17:56:31 GMT-0600 (CST)\\n      // 17:56:31 GMT-0600 (Central Standard Time)\\n      abbr = abbr[0].match(/[A-Z]/g);\\n      abbr = abbr ? abbr.join('') : undefined;\\n    } else {\\n      // 17:56:31 CST\\n      // 17:56:31 GMT+0800 (台北標準時間)\\n      abbr = timeString.match(/[A-Z]{3,5}/g);\\n      abbr = abbr ? abbr[0] : undefined;\\n    }\\n\\n    if (abbr === 'GMT') {\\n      abbr = undefined;\\n    }\\n\\n    this.at = +at;\\n    this.abbr = abbr;\\n    this.offset = at.getTimezoneOffset();\\n  }\\n\\n  function ZoneScore(zone) {\\n    this.zone = zone;\\n    this.offsetScore = 0;\\n    this.abbrScore = 0;\\n  }\\n\\n  ZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\\n    this.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);\\n\\n    if (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {\\n      this.abbrScore++;\\n    }\\n  };\\n\\n  function findChange(low, high) {\\n    var mid, diff;\\n\\n    while (diff = ((high.at - low.at) / 12e4 | 0) * 6e4) {\\n      mid = new OffsetAt(new Date(low.at + diff));\\n\\n      if (mid.offset === low.offset) {\\n        low = mid;\\n      } else {\\n        high = mid;\\n      }\\n    }\\n\\n    return low;\\n  }\\n\\n  function userOffsets() {\\n    var startYear = new Date().getFullYear() - 2,\\n        last = new OffsetAt(new Date(startYear, 0, 1)),\\n        offsets = [last],\\n        change,\\n        next,\\n        i;\\n\\n    for (i = 1; i < 48; i++) {\\n      next = new OffsetAt(new Date(startYear, i, 1));\\n\\n      if (next.offset !== last.offset) {\\n        change = findChange(last, next);\\n        offsets.push(change);\\n        offsets.push(new OffsetAt(new Date(change.at + 6e4)));\\n      }\\n\\n      last = next;\\n    }\\n\\n    for (i = 0; i < 4; i++) {\\n      offsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));\\n      offsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));\\n    }\\n\\n    return offsets;\\n  }\\n\\n  function sortZoneScores(a, b) {\\n    if (a.offsetScore !== b.offsetScore) {\\n      return a.offsetScore - b.offsetScore;\\n    }\\n\\n    if (a.abbrScore !== b.abbrScore) {\\n      return a.abbrScore - b.abbrScore;\\n    }\\n\\n    if (a.zone.population !== b.zone.population) {\\n      return b.zone.population - a.zone.population;\\n    }\\n\\n    return b.zone.name.localeCompare(a.zone.name);\\n  }\\n\\n  function addToGuesses(name, offsets) {\\n    var i, offset;\\n    arrayToInt(offsets);\\n\\n    for (i = 0; i < offsets.length; i++) {\\n      offset = offsets[i];\\n      guesses[offset] = guesses[offset] || {};\\n      guesses[offset][name] = true;\\n    }\\n  }\\n\\n  function guessesForUserOffsets(offsets) {\\n    var offsetsLength = offsets.length,\\n        filteredGuesses = {},\\n        out = [],\\n        i,\\n        j,\\n        guessesOffset;\\n\\n    for (i = 0; i < offsetsLength; i++) {\\n      guessesOffset = guesses[offsets[i].offset] || {};\\n\\n      for (j in guessesOffset) {\\n        if (guessesOffset.hasOwnProperty(j)) {\\n          filteredGuesses[j] = true;\\n        }\\n      }\\n    }\\n\\n    for (i in filteredGuesses) {\\n      if (filteredGuesses.hasOwnProperty(i)) {\\n        out.push(names[i]);\\n      }\\n    }\\n\\n    return out;\\n  }\\n\\n  function rebuildGuess() {\\n    // use Intl API when available and returning valid time zone\\n    try {\\n      var intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;\\n\\n      if (intlName && intlName.length > 3) {\\n        var name = names[normalizeName(intlName)];\\n\\n        if (name) {\\n          return name;\\n        }\\n\\n        logError(\\\"Moment Timezone found \\\" + intlName + \\\" from the Intl api, but did not have that data loaded.\\\");\\n      }\\n    } catch (e) {// Intl unavailable, fall back to manual guessing.\\n    }\\n\\n    var offsets = userOffsets(),\\n        offsetsLength = offsets.length,\\n        guesses = guessesForUserOffsets(offsets),\\n        zoneScores = [],\\n        zoneScore,\\n        i,\\n        j;\\n\\n    for (i = 0; i < guesses.length; i++) {\\n      zoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);\\n\\n      for (j = 0; j < offsetsLength; j++) {\\n        zoneScore.scoreOffsetAt(offsets[j]);\\n      }\\n\\n      zoneScores.push(zoneScore);\\n    }\\n\\n    zoneScores.sort(sortZoneScores);\\n    return zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;\\n  }\\n\\n  function guess(ignoreCache) {\\n    if (!cachedGuess || ignoreCache) {\\n      cachedGuess = rebuildGuess();\\n    }\\n\\n    return cachedGuess;\\n  }\\n  /************************************\\n  \\tGlobal Methods\\n  ************************************/\\n\\n\\n  function normalizeName(name) {\\n    return (name || '').toLowerCase().replace(/\\\\//g, '_');\\n  }\\n\\n  function addZone(packed) {\\n    var i, name, split, normalized;\\n\\n    if (typeof packed === \\\"string\\\") {\\n      packed = [packed];\\n    }\\n\\n    for (i = 0; i < packed.length; i++) {\\n      split = packed[i].split('|');\\n      name = split[0];\\n      normalized = normalizeName(name);\\n      zones[normalized] = packed[i];\\n      names[normalized] = name;\\n      addToGuesses(normalized, split[2].split(' '));\\n    }\\n  }\\n\\n  function getZone(name, caller) {\\n    name = normalizeName(name);\\n    var zone = zones[name];\\n    var link;\\n\\n    if (zone instanceof Zone) {\\n      return zone;\\n    }\\n\\n    if (typeof zone === 'string') {\\n      zone = new Zone(zone);\\n      zones[name] = zone;\\n      return zone;\\n    } // Pass getZone to prevent recursion more than 1 level deep\\n\\n\\n    if (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\\n      zone = zones[name] = new Zone();\\n\\n      zone._set(link);\\n\\n      zone.name = names[name];\\n      return zone;\\n    }\\n\\n    return null;\\n  }\\n\\n  function getNames() {\\n    var i,\\n        out = [];\\n\\n    for (i in names) {\\n      if (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\\n        out.push(names[i]);\\n      }\\n    }\\n\\n    return out.sort();\\n  }\\n\\n  function addLink(aliases) {\\n    var i, alias, normal0, normal1;\\n\\n    if (typeof aliases === \\\"string\\\") {\\n      aliases = [aliases];\\n    }\\n\\n    for (i = 0; i < aliases.length; i++) {\\n      alias = aliases[i].split('|');\\n      normal0 = normalizeName(alias[0]);\\n      normal1 = normalizeName(alias[1]);\\n      links[normal0] = normal1;\\n      names[normal0] = alias[0];\\n      links[normal1] = normal0;\\n      names[normal1] = alias[1];\\n    }\\n  }\\n\\n  function loadData(data) {\\n    addZone(data.zones);\\n    addLink(data.links);\\n    tz.dataVersion = data.version;\\n  }\\n\\n  function zoneExists(name) {\\n    if (!zoneExists.didShowError) {\\n      zoneExists.didShowError = true;\\n      logError(\\\"moment.tz.zoneExists('\\\" + name + \\\"') has been deprecated in favor of !moment.tz.zone('\\\" + name + \\\"')\\\");\\n    }\\n\\n    return !!getZone(name);\\n  }\\n\\n  function needsOffset(m) {\\n    var isUnixTimestamp = m._f === 'X' || m._f === 'x';\\n    return !!(m._a && m._tzm === undefined && !isUnixTimestamp);\\n  }\\n\\n  function logError(message) {\\n    if (typeof console !== 'undefined' && typeof console.error === 'function') {\\n      console.error(message);\\n    }\\n  }\\n  /************************************\\n  \\tmoment.tz namespace\\n  ************************************/\\n\\n\\n  function tz(input) {\\n    var args = Array.prototype.slice.call(arguments, 0, -1),\\n        name = arguments[arguments.length - 1],\\n        zone = getZone(name),\\n        out = moment.utc.apply(null, args);\\n\\n    if (zone && !moment.isMoment(input) && needsOffset(out)) {\\n      out.add(zone.parse(out), 'minutes');\\n    }\\n\\n    out.tz(name);\\n    return out;\\n  }\\n\\n  tz.version = VERSION;\\n  tz.dataVersion = '';\\n  tz._zones = zones;\\n  tz._links = links;\\n  tz._names = names;\\n  tz.add = addZone;\\n  tz.link = addLink;\\n  tz.load = loadData;\\n  tz.zone = getZone;\\n  tz.zoneExists = zoneExists; // deprecated in 0.1.0\\n\\n  tz.guess = guess;\\n  tz.names = getNames;\\n  tz.Zone = Zone;\\n  tz.unpack = unpack;\\n  tz.unpackBase60 = unpackBase60;\\n  tz.needsOffset = needsOffset;\\n  tz.moveInvalidForward = true;\\n  tz.moveAmbiguousForward = false;\\n  /************************************\\n  \\tInterface with Moment.js\\n  ************************************/\\n\\n  var fn = moment.fn;\\n  moment.tz = tz;\\n  moment.defaultZone = null;\\n\\n  moment.updateOffset = function (mom, keepTime) {\\n    var zone = moment.defaultZone,\\n        offset;\\n\\n    if (mom._z === undefined) {\\n      if (zone && needsOffset(mom) && !mom._isUTC) {\\n        mom._d = moment.utc(mom._a)._d;\\n        mom.utc().add(zone.parse(mom), 'minutes');\\n      }\\n\\n      mom._z = zone;\\n    }\\n\\n    if (mom._z) {\\n      offset = mom._z.utcOffset(mom);\\n\\n      if (Math.abs(offset) < 16) {\\n        offset = offset / 60;\\n      }\\n\\n      if (mom.utcOffset !== undefined) {\\n        var z = mom._z;\\n        mom.utcOffset(-offset, keepTime);\\n        mom._z = z;\\n      } else {\\n        mom.zone(offset, keepTime);\\n      }\\n    }\\n  };\\n\\n  fn.tz = function (name, keepTime) {\\n    if (name) {\\n      if (typeof name !== 'string') {\\n        throw new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');\\n      }\\n\\n      this._z = getZone(name);\\n\\n      if (this._z) {\\n        moment.updateOffset(this, keepTime);\\n      } else {\\n        logError(\\\"Moment Timezone has no data for \\\" + name + \\\". See http://momentjs.com/timezone/docs/#/data-loading/.\\\");\\n      }\\n\\n      return this;\\n    }\\n\\n    if (this._z) {\\n      return this._z.name;\\n    }\\n  };\\n\\n  function abbrWrap(old) {\\n    return function () {\\n      if (this._z) {\\n        return this._z.abbr(this);\\n      }\\n\\n      return old.call(this);\\n    };\\n  }\\n\\n  function resetZoneWrap(old) {\\n    return function () {\\n      this._z = null;\\n      return old.apply(this, arguments);\\n    };\\n  }\\n\\n  function resetZoneWrap2(old) {\\n    return function () {\\n      if (arguments.length > 0) this._z = null;\\n      return old.apply(this, arguments);\\n    };\\n  }\\n\\n  fn.zoneName = abbrWrap(fn.zoneName);\\n  fn.zoneAbbr = abbrWrap(fn.zoneAbbr);\\n  fn.utc = resetZoneWrap(fn.utc);\\n  fn.local = resetZoneWrap(fn.local);\\n  fn.utcOffset = resetZoneWrap2(fn.utcOffset);\\n\\n  moment.tz.setDefault = function (name) {\\n    if (major < 2 || major === 2 && minor < 9) {\\n      logError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');\\n    }\\n\\n    moment.defaultZone = name ? getZone(name) : null;\\n    return moment;\\n  }; // Cloning a moment should include the _z property.\\n\\n\\n  var momentProperties = moment.momentProperties;\\n\\n  if (Object.prototype.toString.call(momentProperties) === '[object Array]') {\\n    // moment 2.8.1+\\n    momentProperties.push('_z');\\n    momentProperties.push('_a');\\n  } else if (momentProperties) {\\n    // moment 2.7.0\\n    momentProperties._z = null;\\n  } // INJECT DATA\\n\\n\\n  return moment;\\n});\",\"/**\\n * Module dependencies.\\n */\\nvar parseuri = require('parseuri');\\n\\nvar debug = require('debug')('socket.io-client:url');\\n/**\\n * Module exports.\\n */\\n\\n\\nmodule.exports = url;\\n/**\\n * URL parser.\\n *\\n * @param {String} url\\n * @param {Object} An object meant to mimic window.location.\\n *                 Defaults to window.location.\\n * @api public\\n */\\n\\nfunction url(uri, loc) {\\n  var obj = uri; // default to window.location\\n\\n  loc = loc || typeof location !== 'undefined' && location;\\n  if (null == uri) uri = loc.protocol + '//' + loc.host; // relative path support\\n\\n  if ('string' === typeof uri) {\\n    if ('/' === uri.charAt(0)) {\\n      if ('/' === uri.charAt(1)) {\\n        uri = loc.protocol + uri;\\n      } else {\\n        uri = loc.host + uri;\\n      }\\n    }\\n\\n    if (!/^(https?|wss?):\\\\/\\\\//.test(uri)) {\\n      debug('protocol-less url %s', uri);\\n\\n      if ('undefined' !== typeof loc) {\\n        uri = loc.protocol + '//' + uri;\\n      } else {\\n        uri = 'https://' + uri;\\n      }\\n    } // parse\\n\\n\\n    debug('parse %s', uri);\\n    obj = parseuri(uri);\\n  } // make sure we treat `localhost:80` and `localhost` equally\\n\\n\\n  if (!obj.port) {\\n    if (/^(http|ws)$/.test(obj.protocol)) {\\n      obj.port = '80';\\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\\n      obj.port = '443';\\n    }\\n  }\\n\\n  obj.path = obj.path || '/';\\n  var ipv6 = obj.host.indexOf(':') !== -1;\\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host; // define unique id\\n\\n  obj.id = obj.protocol + '://' + host + ':' + obj.port; // define href\\n\\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);\\n  return obj;\\n}\",\"/**\\n * This is the common logic for both the Node.js and web browser\\n * implementations of `debug()`.\\n *\\n * Expose `debug()` as the module.\\n */\\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\\nexports.coerce = coerce;\\nexports.disable = disable;\\nexports.enable = enable;\\nexports.enabled = enabled;\\nexports.humanize = require('ms');\\n/**\\n * Active `debug` instances.\\n */\\n\\nexports.instances = [];\\n/**\\n * The currently active debug mode names, and names to skip.\\n */\\n\\nexports.names = [];\\nexports.skips = [];\\n/**\\n * Map of special \\\"%n\\\" handling functions, for the debug \\\"format\\\" argument.\\n *\\n * Valid key names are a single, lower or upper-case letter, i.e. \\\"n\\\" and \\\"N\\\".\\n */\\n\\nexports.formatters = {};\\n/**\\n * Select a color.\\n * @param {String} namespace\\n * @return {Number}\\n * @api private\\n */\\n\\nfunction selectColor(namespace) {\\n  var hash = 0,\\n      i;\\n\\n  for (i in namespace) {\\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\\n    hash |= 0; // Convert to 32bit integer\\n  }\\n\\n  return exports.colors[Math.abs(hash) % exports.colors.length];\\n}\\n/**\\n * Create a debugger with the given `namespace`.\\n *\\n * @param {String} namespace\\n * @return {Function}\\n * @api public\\n */\\n\\n\\nfunction createDebug(namespace) {\\n  var prevTime;\\n\\n  function debug() {\\n    // disabled?\\n    if (!debug.enabled) return;\\n    var self = debug; // set `diff` timestamp\\n\\n    var curr = +new Date();\\n    var ms = curr - (prevTime || curr);\\n    self.diff = ms;\\n    self.prev = prevTime;\\n    self.curr = curr;\\n    prevTime = curr; // turn the `arguments` into a proper Array\\n\\n    var args = new Array(arguments.length);\\n\\n    for (var i = 0; i < args.length; i++) {\\n      args[i] = arguments[i];\\n    }\\n\\n    args[0] = exports.coerce(args[0]);\\n\\n    if ('string' !== typeof args[0]) {\\n      // anything else let's inspect with %O\\n      args.unshift('%O');\\n    } // apply any `formatters` transformations\\n\\n\\n    var index = 0;\\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\\n      // if we encounter an escaped % then don't increase the array index\\n      if (match === '%%') return match;\\n      index++;\\n      var formatter = exports.formatters[format];\\n\\n      if ('function' === typeof formatter) {\\n        var val = args[index];\\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\\n\\n        args.splice(index, 1);\\n        index--;\\n      }\\n\\n      return match;\\n    }); // apply env-specific formatting (colors, etc.)\\n\\n    exports.formatArgs.call(self, args);\\n    var logFn = debug.log || exports.log || console.log.bind(console);\\n    logFn.apply(self, args);\\n  }\\n\\n  debug.namespace = namespace;\\n  debug.enabled = exports.enabled(namespace);\\n  debug.useColors = exports.useColors();\\n  debug.color = selectColor(namespace);\\n  debug.destroy = destroy; // env-specific initialization logic for debug instances\\n\\n  if ('function' === typeof exports.init) {\\n    exports.init(debug);\\n  }\\n\\n  exports.instances.push(debug);\\n  return debug;\\n}\\n\\nfunction destroy() {\\n  var index = exports.instances.indexOf(this);\\n\\n  if (index !== -1) {\\n    exports.instances.splice(index, 1);\\n    return true;\\n  } else {\\n    return false;\\n  }\\n}\\n/**\\n * Enables a debug mode by namespaces. This can include modes\\n * separated by a colon and wildcards.\\n *\\n * @param {String} namespaces\\n * @api public\\n */\\n\\n\\nfunction enable(namespaces) {\\n  exports.save(namespaces);\\n  exports.names = [];\\n  exports.skips = [];\\n  var i;\\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\\\s,]+/);\\n  var len = split.length;\\n\\n  for (i = 0; i < len; i++) {\\n    if (!split[i]) continue; // ignore empty strings\\n\\n    namespaces = split[i].replace(/\\\\*/g, '.*?');\\n\\n    if (namespaces[0] === '-') {\\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\\n    } else {\\n      exports.names.push(new RegExp('^' + namespaces + '$'));\\n    }\\n  }\\n\\n  for (i = 0; i < exports.instances.length; i++) {\\n    var instance = exports.instances[i];\\n    instance.enabled = exports.enabled(instance.namespace);\\n  }\\n}\\n/**\\n * Disable debug output.\\n *\\n * @api public\\n */\\n\\n\\nfunction disable() {\\n  exports.enable('');\\n}\\n/**\\n * Returns true if the given mode name is enabled, false otherwise.\\n *\\n * @param {String} name\\n * @return {Boolean}\\n * @api public\\n */\\n\\n\\nfunction enabled(name) {\\n  if (name[name.length - 1] === '*') {\\n    return true;\\n  }\\n\\n  var i, len;\\n\\n  for (i = 0, len = exports.skips.length; i < len; i++) {\\n    if (exports.skips[i].test(name)) {\\n      return false;\\n    }\\n  }\\n\\n  for (i = 0, len = exports.names.length; i < len; i++) {\\n    if (exports.names[i].test(name)) {\\n      return true;\\n    }\\n  }\\n\\n  return false;\\n}\\n/**\\n * Coerce `val`.\\n *\\n * @param {Mixed} val\\n * @return {Mixed}\\n * @api private\\n */\\n\\n\\nfunction coerce(val) {\\n  if (val instanceof Error) return val.stack || val.message;\\n  return val;\\n}\",\"/**\\n * Helpers.\\n */\\nvar s = 1000;\\nvar m = s * 60;\\nvar h = m * 60;\\nvar d = h * 24;\\nvar y = d * 365.25;\\n/**\\n * Parse or format the given `val`.\\n *\\n * Options:\\n *\\n *  - `long` verbose formatting [false]\\n *\\n * @param {String|Number} val\\n * @param {Object} [options]\\n * @throws {Error} throw an error if val is not a non-empty string or a number\\n * @return {String|Number}\\n * @api public\\n */\\n\\nmodule.exports = function (val, options) {\\n  options = options || {};\\n  var type = typeof val;\\n\\n  if (type === 'string' && val.length > 0) {\\n    return parse(val);\\n  } else if (type === 'number' && isNaN(val) === false) {\\n    return options.long ? fmtLong(val) : fmtShort(val);\\n  }\\n\\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\\n};\\n/**\\n * Parse the given `str` and return milliseconds.\\n *\\n * @param {String} str\\n * @return {Number}\\n * @api private\\n */\\n\\n\\nfunction parse(str) {\\n  str = String(str);\\n\\n  if (str.length > 100) {\\n    return;\\n  }\\n\\n  var match = /^((?:\\\\d+)?\\\\.?\\\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\\n\\n  if (!match) {\\n    return;\\n  }\\n\\n  var n = parseFloat(match[1]);\\n  var type = (match[2] || 'ms').toLowerCase();\\n\\n  switch (type) {\\n    case 'years':\\n    case 'year':\\n    case 'yrs':\\n    case 'yr':\\n    case 'y':\\n      return n * y;\\n\\n    case 'days':\\n    case 'day':\\n    case 'd':\\n      return n * d;\\n\\n    case 'hours':\\n    case 'hour':\\n    case 'hrs':\\n    case 'hr':\\n    case 'h':\\n      return n * h;\\n\\n    case 'minutes':\\n    case 'minute':\\n    case 'mins':\\n    case 'min':\\n    case 'm':\\n      return n * m;\\n\\n    case 'seconds':\\n    case 'second':\\n    case 'secs':\\n    case 'sec':\\n    case 's':\\n      return n * s;\\n\\n    case 'milliseconds':\\n    case 'millisecond':\\n    case 'msecs':\\n    case 'msec':\\n    case 'ms':\\n      return n;\\n\\n    default:\\n      return undefined;\\n  }\\n}\\n/**\\n * Short format for `ms`.\\n *\\n * @param {Number} ms\\n * @return {String}\\n * @api private\\n */\\n\\n\\nfunction fmtShort(ms) {\\n  if (ms >= d) {\\n    return Math.round(ms / d) + 'd';\\n  }\\n\\n  if (ms >= h) {\\n    return Math.round(ms / h) + 'h';\\n  }\\n\\n  if (ms >= m) {\\n    return Math.round(ms / m) + 'm';\\n  }\\n\\n  if (ms >= s) {\\n    return Math.round(ms / s) + 's';\\n  }\\n\\n  return ms + 'ms';\\n}\\n/**\\n * Long format for `ms`.\\n *\\n * @param {Number} ms\\n * @return {String}\\n * @api private\\n */\\n\\n\\nfunction fmtLong(ms) {\\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\\n}\\n/**\\n * Pluralization helper.\\n */\\n\\n\\nfunction plural(ms, n, name) {\\n  if (ms < n) {\\n    return;\\n  }\\n\\n  if (ms < n * 1.5) {\\n    return Math.floor(ms / n) + ' ' + name;\\n  }\\n\\n  return Math.ceil(ms / n) + ' ' + name + 's';\\n}\",\"/**\\n * This is the web browser implementation of `debug()`.\\n *\\n * Expose `debug()` as the module.\\n */\\nexports = module.exports = require('./debug');\\nexports.log = log;\\nexports.formatArgs = formatArgs;\\nexports.save = save;\\nexports.load = load;\\nexports.useColors = useColors;\\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\\n/**\\n * Colors.\\n */\\n\\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\\n/**\\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\\n * and the Firebug extension (any Firefox version) are known\\n * to support \\\"%c\\\" CSS customizations.\\n *\\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\\n */\\n\\nfunction useColors() {\\n  // NB: In an Electron preload script, document will be defined but not fully\\n  // initialized. Since we know we're in Chrome, we'll just detect this case\\n  // explicitly\\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\\n    return true;\\n  } // Internet Explorer and Edge do not support colors.\\n\\n\\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\\\/(\\\\d+)/)) {\\n    return false;\\n  } // is webkit? http://stackoverflow.com/a/16459606/376773\\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\\n\\n\\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?\\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\\\/(\\\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\\\/(\\\\d+)/);\\n}\\n/**\\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\\n */\\n\\n\\nexports.formatters.j = function (v) {\\n  try {\\n    return JSON.stringify(v);\\n  } catch (err) {\\n    return '[UnexpectedJSONParseError]: ' + err.message;\\n  }\\n};\\n/**\\n * Colorize log arguments if enabled.\\n *\\n * @api public\\n */\\n\\n\\nfunction formatArgs(args) {\\n  var useColors = this.useColors;\\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\\n  if (!useColors) return;\\n  var c = 'color: ' + this.color;\\n  args.splice(1, 0, c, 'color: inherit'); // the final \\\"%c\\\" is somewhat tricky, because there could be other\\n  // arguments passed either before or after the %c, so we need to\\n  // figure out the correct index to insert the CSS into\\n\\n  var index = 0;\\n  var lastC = 0;\\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\\n    if ('%%' === match) return;\\n    index++;\\n\\n    if ('%c' === match) {\\n      // we only are interested in the *last* %c\\n      // (the user may have provided their own)\\n      lastC = index;\\n    }\\n  });\\n  args.splice(lastC, 0, c);\\n}\\n/**\\n * Invokes `console.log()` when available.\\n * No-op when `console.log` is not a \\\"function\\\".\\n *\\n * @api public\\n */\\n\\n\\nfunction log() {\\n  // this hackery is required for IE8/9, where\\n  // the `console.log` function doesn't have 'apply'\\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\\n}\\n/**\\n * Save `namespaces`.\\n *\\n * @param {String} namespaces\\n * @api private\\n */\\n\\n\\nfunction save(namespaces) {\\n  try {\\n    if (null == namespaces) {\\n      exports.storage.removeItem('debug');\\n    } else {\\n      exports.storage.debug = namespaces;\\n    }\\n  } catch (e) {}\\n}\\n/**\\n * Load `namespaces`.\\n *\\n * @return {String} returns the previously persisted debug modes\\n * @api private\\n */\\n\\n\\nfunction load() {\\n  var r;\\n\\n  try {\\n    r = exports.storage.debug;\\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\\n\\n\\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\\n    r = process.env.DEBUG;\\n  }\\n\\n  return r;\\n}\\n/**\\n * Enable namespaces listed in `localStorage.debug` initially.\\n */\\n\\n\\nexports.enable(load());\\n/**\\n * Localstorage attempts to return the localstorage.\\n *\\n * This is necessary because safari throws\\n * when a user disables cookies/localstorage\\n * and you attempt to access it.\\n *\\n * @return {LocalStorage}\\n * @api private\\n */\\n\\nfunction localstorage() {\\n  try {\\n    return window.localStorage;\\n  } catch (e) {}\\n}\",\"/**\\n * This is the common logic for both the Node.js and web browser\\n * implementations of `debug()`.\\n *\\n * Expose `debug()` as the module.\\n */\\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\\nexports.coerce = coerce;\\nexports.disable = disable;\\nexports.enable = enable;\\nexports.enabled = enabled;\\nexports.humanize = require('ms');\\n/**\\n * Active `debug` instances.\\n */\\n\\nexports.instances = [];\\n/**\\n * The currently active debug mode names, and names to skip.\\n */\\n\\nexports.names = [];\\nexports.skips = [];\\n/**\\n * Map of special \\\"%n\\\" handling functions, for the debug \\\"format\\\" argument.\\n *\\n * Valid key names are a single, lower or upper-case letter, i.e. \\\"n\\\" and \\\"N\\\".\\n */\\n\\nexports.formatters = {};\\n/**\\n * Select a color.\\n * @param {String} namespace\\n * @return {Number}\\n * @api private\\n */\\n\\nfunction selectColor(namespace) {\\n  var hash = 0,\\n      i;\\n\\n  for (i in namespace) {\\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\\n    hash |= 0; // Convert to 32bit integer\\n  }\\n\\n  return exports.colors[Math.abs(hash) % exports.colors.length];\\n}\\n/**\\n * Create a debugger with the given `namespace`.\\n *\\n * @param {String} namespace\\n * @return {Function}\\n * @api public\\n */\\n\\n\\nfunction createDebug(namespace) {\\n  var prevTime;\\n\\n  function debug() {\\n    // disabled?\\n    if (!debug.enabled) return;\\n    var self = debug; // set `diff` timestamp\\n\\n    var curr = +new Date();\\n    var ms = curr - (prevTime || curr);\\n    self.diff = ms;\\n    self.prev = prevTime;\\n    self.curr = curr;\\n    prevTime = curr; // turn the `arguments` into a proper Array\\n\\n    var args = new Array(arguments.length);\\n\\n    for (var i = 0; i < args.length; i++) {\\n      args[i] = arguments[i];\\n    }\\n\\n    args[0] = exports.coerce(args[0]);\\n\\n    if ('string' !== typeof args[0]) {\\n      // anything else let's inspect with %O\\n      args.unshift('%O');\\n    } // apply any `formatters` transformations\\n\\n\\n    var index = 0;\\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\\n      // if we encounter an escaped % then don't increase the array index\\n      if (match === '%%') return match;\\n      index++;\\n      var formatter = exports.formatters[format];\\n\\n      if ('function' === typeof formatter) {\\n        var val = args[index];\\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\\n\\n        args.splice(index, 1);\\n        index--;\\n      }\\n\\n      return match;\\n    }); // apply env-specific formatting (colors, etc.)\\n\\n    exports.formatArgs.call(self, args);\\n    var logFn = debug.log || exports.log || console.log.bind(console);\\n    logFn.apply(self, args);\\n  }\\n\\n  debug.namespace = namespace;\\n  debug.enabled = exports.enabled(namespace);\\n  debug.useColors = exports.useColors();\\n  debug.color = selectColor(namespace);\\n  debug.destroy = destroy; // env-specific initialization logic for debug instances\\n\\n  if ('function' === typeof exports.init) {\\n    exports.init(debug);\\n  }\\n\\n  exports.instances.push(debug);\\n  return debug;\\n}\\n\\nfunction destroy() {\\n  var index = exports.instances.indexOf(this);\\n\\n  if (index !== -1) {\\n    exports.instances.splice(index, 1);\\n    return true;\\n  } else {\\n    return false;\\n  }\\n}\\n/**\\n * Enables a debug mode by namespaces. This can include modes\\n * separated by a colon and wildcards.\\n *\\n * @param {String} namespaces\\n * @api public\\n */\\n\\n\\nfunction enable(namespaces) {\\n  exports.save(namespaces);\\n  exports.names = [];\\n  exports.skips = [];\\n  var i;\\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\\\s,]+/);\\n  var len = split.length;\\n\\n  for (i = 0; i < len; i++) {\\n    if (!split[i]) continue; // ignore empty strings\\n\\n    namespaces = split[i].replace(/\\\\*/g, '.*?');\\n\\n    if (namespaces[0] === '-') {\\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\\n    } else {\\n      exports.names.push(new RegExp('^' + namespaces + '$'));\\n    }\\n  }\\n\\n  for (i = 0; i < exports.instances.length; i++) {\\n    var instance = exports.instances[i];\\n    instance.enabled = exports.enabled(instance.namespace);\\n  }\\n}\\n/**\\n * Disable debug output.\\n *\\n * @api public\\n */\\n\\n\\nfunction disable() {\\n  exports.enable('');\\n}\\n/**\\n * Returns true if the given mode name is enabled, false otherwise.\\n *\\n * @param {String} name\\n * @return {Boolean}\\n * @api public\\n */\\n\\n\\nfunction enabled(name) {\\n  if (name[name.length - 1] === '*') {\\n    return true;\\n  }\\n\\n  var i, len;\\n\\n  for (i = 0, len = exports.skips.length; i < len; i++) {\\n    if (exports.skips[i].test(name)) {\\n      return false;\\n    }\\n  }\\n\\n  for (i = 0, len = exports.names.length; i < len; i++) {\\n    if (exports.names[i].test(name)) {\\n      return true;\\n    }\\n  }\\n\\n  return false;\\n}\\n/**\\n * Coerce `val`.\\n *\\n * @param {Mixed} val\\n * @return {Mixed}\\n * @api private\\n */\\n\\n\\nfunction coerce(val) {\\n  if (val instanceof Error) return val.stack || val.message;\\n  return val;\\n}\",\"/**\\n * Helpers.\\n */\\nvar s = 1000;\\nvar m = s * 60;\\nvar h = m * 60;\\nvar d = h * 24;\\nvar y = d * 365.25;\\n/**\\n * Parse or format the given `val`.\\n *\\n * Options:\\n *\\n *  - `long` verbose formatting [false]\\n *\\n * @param {String|Number} val\\n * @param {Object} [options]\\n * @throws {Error} throw an error if val is not a non-empty string or a number\\n * @return {String|Number}\\n * @api public\\n */\\n\\nmodule.exports = function (val, options) {\\n  options = options || {};\\n  var type = typeof val;\\n\\n  if (type === 'string' && val.length > 0) {\\n    return parse(val);\\n  } else if (type === 'number' && isNaN(val) === false) {\\n    return options.long ? fmtLong(val) : fmtShort(val);\\n  }\\n\\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\\n};\\n/**\\n * Parse the given `str` and return milliseconds.\\n *\\n * @param {String} str\\n * @return {Number}\\n * @api private\\n */\\n\\n\\nfunction parse(str) {\\n  str = String(str);\\n\\n  if (str.length > 100) {\\n    return;\\n  }\\n\\n  var match = /^((?:\\\\d+)?\\\\.?\\\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\\n\\n  if (!match) {\\n    return;\\n  }\\n\\n  var n = parseFloat(match[1]);\\n  var type = (match[2] || 'ms').toLowerCase();\\n\\n  switch (type) {\\n    case 'years':\\n    case 'year':\\n    case 'yrs':\\n    case 'yr':\\n    case 'y':\\n      return n * y;\\n\\n    case 'days':\\n    case 'day':\\n    case 'd':\\n      return n * d;\\n\\n    case 'hours':\\n    case 'hour':\\n    case 'hrs':\\n    case 'hr':\\n    case 'h':\\n      return n * h;\\n\\n    case 'minutes':\\n    case 'minute':\\n    case 'mins':\\n    case 'min':\\n    case 'm':\\n      return n * m;\\n\\n    case 'seconds':\\n    case 'second':\\n    case 'secs':\\n    case 'sec':\\n    case 's':\\n      return n * s;\\n\\n    case 'milliseconds':\\n    case 'millisecond':\\n    case 'msecs':\\n    case 'msec':\\n    case 'ms':\\n      return n;\\n\\n    default:\\n      return undefined;\\n  }\\n}\\n/**\\n * Short format for `ms`.\\n *\\n * @param {Number} ms\\n * @return {String}\\n * @api private\\n */\\n\\n\\nfunction fmtShort(ms) {\\n  if (ms >= d) {\\n    return Math.round(ms / d) + 'd';\\n  }\\n\\n  if (ms >= h) {\\n    return Math.round(ms / h) + 'h';\\n  }\\n\\n  if (ms >= m) {\\n    return Math.round(ms / m) + 'm';\\n  }\\n\\n  if (ms >= s) {\\n    return Math.round(ms / s) + 's';\\n  }\\n\\n  return ms + 'ms';\\n}\\n/**\\n * Long format for `ms`.\\n *\\n * @param {Number} ms\\n * @return {String}\\n * @api private\\n */\\n\\n\\nfunction fmtLong(ms) {\\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\\n}\\n/**\\n * Pluralization helper.\\n */\\n\\n\\nfunction plural(ms, n, name) {\\n  if (ms < n) {\\n    return;\\n  }\\n\\n  if (ms < n * 1.5) {\\n    return Math.floor(ms / n) + ' ' + name;\\n  }\\n\\n  return Math.ceil(ms / n) + ' ' + name + 's';\\n}\",\"/**\\r\\n * Expose `Emitter`.\\r\\n */\\nif (typeof module !== 'undefined') {\\n  module.exports = Emitter;\\n}\\n/**\\r\\n * Initialize a new `Emitter`.\\r\\n *\\r\\n * @api public\\r\\n */\\n\\n\\nfunction Emitter(obj) {\\n  if (obj) return mixin(obj);\\n}\\n\\n;\\n/**\\r\\n * Mixin the emitter properties.\\r\\n *\\r\\n * @param {Object} obj\\r\\n * @return {Object}\\r\\n * @api private\\r\\n */\\n\\nfunction mixin(obj) {\\n  for (var key in Emitter.prototype) {\\n    obj[key] = Emitter.prototype[key];\\n  }\\n\\n  return obj;\\n}\\n/**\\r\\n * Listen on the given `event` with `fn`.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Function} fn\\r\\n * @return {Emitter}\\r\\n * @api public\\r\\n */\\n\\n\\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\\n  this._callbacks = this._callbacks || {};\\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\\n  return this;\\n};\\n/**\\r\\n * Adds an `event` listener that will be invoked a single\\r\\n * time then automatically removed.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Function} fn\\r\\n * @return {Emitter}\\r\\n * @api public\\r\\n */\\n\\n\\nEmitter.prototype.once = function (event, fn) {\\n  function on() {\\n    this.off(event, on);\\n    fn.apply(this, arguments);\\n  }\\n\\n  on.fn = fn;\\n  this.on(event, on);\\n  return this;\\n};\\n/**\\r\\n * Remove the given callback for `event` or all\\r\\n * registered callbacks.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Function} fn\\r\\n * @return {Emitter}\\r\\n * @api public\\r\\n */\\n\\n\\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\\n  this._callbacks = this._callbacks || {}; // all\\n\\n  if (0 == arguments.length) {\\n    this._callbacks = {};\\n    return this;\\n  } // specific event\\n\\n\\n  var callbacks = this._callbacks['$' + event];\\n  if (!callbacks) return this; // remove all handlers\\n\\n  if (1 == arguments.length) {\\n    delete this._callbacks['$' + event];\\n    return this;\\n  } // remove specific handler\\n\\n\\n  var cb;\\n\\n  for (var i = 0; i < callbacks.length; i++) {\\n    cb = callbacks[i];\\n\\n    if (cb === fn || cb.fn === fn) {\\n      callbacks.splice(i, 1);\\n      break;\\n    }\\n  }\\n\\n  return this;\\n};\\n/**\\r\\n * Emit `event` with the given args.\\r\\n *\\r\\n * @param {String} event\\r\\n * @param {Mixed} ...\\r\\n * @return {Emitter}\\r\\n */\\n\\n\\nEmitter.prototype.emit = function (event) {\\n  this._callbacks = this._callbacks || {};\\n  var args = [].slice.call(arguments, 1),\\n      callbacks = this._callbacks['$' + event];\\n\\n  if (callbacks) {\\n    callbacks = callbacks.slice(0);\\n\\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\\n      callbacks[i].apply(this, args);\\n    }\\n  }\\n\\n  return this;\\n};\\n/**\\r\\n * Return array of callbacks for `event`.\\r\\n *\\r\\n * @param {String} event\\r\\n * @return {Array}\\r\\n * @api public\\r\\n */\\n\\n\\nEmitter.prototype.listeners = function (event) {\\n  this._callbacks = this._callbacks || {};\\n  return this._callbacks['$' + event] || [];\\n};\\n/**\\r\\n * Check if this emitter has `event` handlers.\\r\\n *\\r\\n * @param {String} event\\r\\n * @return {Boolean}\\r\\n * @api public\\r\\n */\\n\\n\\nEmitter.prototype.hasListeners = function (event) {\\n  return !!this.listeners(event).length;\\n};\",\"/*global Blob,File*/\\n\\n/**\\n * Module requirements\\n */\\nvar isArray = require('isarray');\\n\\nvar isBuf = require('./is-buffer');\\n\\nvar toString = Object.prototype.toString;\\nvar withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\\nvar withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\\n/**\\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\\n * Anything with blobs or files should be fed through removeBlobs before coming\\n * here.\\n *\\n * @param {Object} packet - socket.io event packet\\n * @return {Object} with deconstructed packet and list of buffers\\n * @api public\\n */\\n\\nexports.deconstructPacket = function (packet) {\\n  var buffers = [];\\n  var packetData = packet.data;\\n  var pack = packet;\\n  pack.data = _deconstructPacket(packetData, buffers);\\n  pack.attachments = buffers.length; // number of binary 'attachments'\\n\\n  return {\\n    packet: pack,\\n    buffers: buffers\\n  };\\n};\\n\\nfunction _deconstructPacket(data, buffers) {\\n  if (!data) return data;\\n\\n  if (isBuf(data)) {\\n    var placeholder = {\\n      _placeholder: true,\\n      num: buffers.length\\n    };\\n    buffers.push(data);\\n    return placeholder;\\n  } else if (isArray(data)) {\\n    var newData = new Array(data.length);\\n\\n    for (var i = 0; i < data.length; i++) {\\n      newData[i] = _deconstructPacket(data[i], buffers);\\n    }\\n\\n    return newData;\\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\\n    var newData = {};\\n\\n    for (var key in data) {\\n      newData[key] = _deconstructPacket(data[key], buffers);\\n    }\\n\\n    return newData;\\n  }\\n\\n  return data;\\n}\\n/**\\n * Reconstructs a binary packet from its placeholder packet and buffers\\n *\\n * @param {Object} packet - event packet with placeholders\\n * @param {Array} buffers - binary buffers to put in placeholder positions\\n * @return {Object} reconstructed packet\\n * @api public\\n */\\n\\n\\nexports.reconstructPacket = function (packet, buffers) {\\n  packet.data = _reconstructPacket(packet.data, buffers);\\n  packet.attachments = undefined; // no longer useful\\n\\n  return packet;\\n};\\n\\nfunction _reconstructPacket(data, buffers) {\\n  if (!data) return data;\\n\\n  if (data && data._placeholder) {\\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\\n  } else if (isArray(data)) {\\n    for (var i = 0; i < data.length; i++) {\\n      data[i] = _reconstructPacket(data[i], buffers);\\n    }\\n  } else if (typeof data === 'object') {\\n    for (var key in data) {\\n      data[key] = _reconstructPacket(data[key], buffers);\\n    }\\n  }\\n\\n  return data;\\n}\\n/**\\n * Asynchronously removes Blobs or Files from data via\\n * FileReader's readAsArrayBuffer method. Used before encoding\\n * data as msgpack. Calls callback with the blobless data.\\n *\\n * @param {Object} data\\n * @param {Function} callback\\n * @api private\\n */\\n\\n\\nexports.removeBlobs = function (data, callback) {\\n  function _removeBlobs(obj, curKey, containingObject) {\\n    if (!obj) return obj; // convert any blob\\n\\n    if (withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {\\n      pendingBlobs++; // async filereader\\n\\n      var fileReader = new FileReader();\\n\\n      fileReader.onload = function () {\\n        // this.result == arraybuffer\\n        if (containingObject) {\\n          containingObject[curKey] = this.result;\\n        } else {\\n          bloblessData = this.result;\\n        } // if nothing pending its callback time\\n\\n\\n        if (! --pendingBlobs) {\\n          callback(bloblessData);\\n        }\\n      };\\n\\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\\n    } else if (isArray(obj)) {\\n      // handle array\\n      for (var i = 0; i < obj.length; i++) {\\n        _removeBlobs(obj[i], i, obj);\\n      }\\n    } else if (typeof obj === 'object' && !isBuf(obj)) {\\n      // and object\\n      for (var key in obj) {\\n        _removeBlobs(obj[key], key, obj);\\n      }\\n    }\\n  }\\n\\n  var pendingBlobs = 0;\\n  var bloblessData = data;\\n\\n  _removeBlobs(bloblessData);\\n\\n  if (!pendingBlobs) {\\n    callback(bloblessData);\\n  }\\n};\",\"module.exports = require('./socket');\\n/**\\n * Exports parser\\n *\\n * @api public\\n *\\n */\\n\\nmodule.exports.parser = require('engine.io-parser');\",\"/**\\n * Module dependencies.\\n */\\nvar transports = require('./transports/index');\\n\\nvar Emitter = require('component-emitter');\\n\\nvar debug = require('debug')('engine.io-client:socket');\\n\\nvar index = require('indexof');\\n\\nvar parser = require('engine.io-parser');\\n\\nvar parseuri = require('parseuri');\\n\\nvar parseqs = require('parseqs');\\n/**\\n * Module exports.\\n */\\n\\n\\nmodule.exports = Socket;\\n/**\\n * Socket constructor.\\n *\\n * @param {String|Object} uri or options\\n * @param {Object} options\\n * @api public\\n */\\n\\nfunction Socket(uri, opts) {\\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\\n  opts = opts || {};\\n\\n  if (uri && 'object' === typeof uri) {\\n    opts = uri;\\n    uri = null;\\n  }\\n\\n  if (uri) {\\n    uri = parseuri(uri);\\n    opts.hostname = uri.host;\\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\\n    opts.port = uri.port;\\n    if (uri.query) opts.query = uri.query;\\n  } else if (opts.host) {\\n    opts.hostname = parseuri(opts.host).host;\\n  }\\n\\n  this.secure = null != opts.secure ? opts.secure : typeof location !== 'undefined' && 'https:' === location.protocol;\\n\\n  if (opts.hostname && !opts.port) {\\n    // if no port is specified manually, use the protocol default\\n    opts.port = this.secure ? '443' : '80';\\n  }\\n\\n  this.agent = opts.agent || false;\\n  this.hostname = opts.hostname || (typeof location !== 'undefined' ? location.hostname : 'localhost');\\n  this.port = opts.port || (typeof location !== 'undefined' && location.port ? location.port : this.secure ? 443 : 80);\\n  this.query = opts.query || {};\\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\\n  this.upgrade = false !== opts.upgrade;\\n  this.path = (opts.path || '/engine.io').replace(/\\\\/$/, '') + '/';\\n  this.forceJSONP = !!opts.forceJSONP;\\n  this.jsonp = false !== opts.jsonp;\\n  this.forceBase64 = !!opts.forceBase64;\\n  this.enablesXDR = !!opts.enablesXDR;\\n  this.timestampParam = opts.timestampParam || 't';\\n  this.timestampRequests = opts.timestampRequests;\\n  this.transports = opts.transports || ['polling', 'websocket'];\\n  this.transportOptions = opts.transportOptions || {};\\n  this.readyState = '';\\n  this.writeBuffer = [];\\n  this.prevBufferLen = 0;\\n  this.policyPort = opts.policyPort || 843;\\n  this.rememberUpgrade = opts.rememberUpgrade || false;\\n  this.binaryType = null;\\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;\\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\\n\\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\\n    this.perMessageDeflate.threshold = 1024;\\n  } // SSL options for Node.js client\\n\\n\\n  this.pfx = opts.pfx || null;\\n  this.key = opts.key || null;\\n  this.passphrase = opts.passphrase || null;\\n  this.cert = opts.cert || null;\\n  this.ca = opts.ca || null;\\n  this.ciphers = opts.ciphers || null;\\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\\n  this.forceNode = !!opts.forceNode; // detect ReactNative environment\\n\\n  this.isReactNative = typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative'; // other options for Node.js or ReactNative client\\n\\n  if (typeof self === 'undefined' || this.isReactNative) {\\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\\n      this.extraHeaders = opts.extraHeaders;\\n    }\\n\\n    if (opts.localAddress) {\\n      this.localAddress = opts.localAddress;\\n    }\\n  } // set on handshake\\n\\n\\n  this.id = null;\\n  this.upgrades = null;\\n  this.pingInterval = null;\\n  this.pingTimeout = null; // set on heartbeat\\n\\n  this.pingIntervalTimer = null;\\n  this.pingTimeoutTimer = null;\\n  this.open();\\n}\\n\\nSocket.priorWebsocketSuccess = false;\\n/**\\n * Mix in `Emitter`.\\n */\\n\\nEmitter(Socket.prototype);\\n/**\\n * Protocol version.\\n *\\n * @api public\\n */\\n\\nSocket.protocol = parser.protocol; // this is an int\\n\\n/**\\n * Expose deps for legacy compatibility\\n * and standalone browser access.\\n */\\n\\nSocket.Socket = Socket;\\nSocket.Transport = require('./transport');\\nSocket.transports = require('./transports/index');\\nSocket.parser = require('engine.io-parser');\\n/**\\n * Creates transport of the given type.\\n *\\n * @param {String} transport name\\n * @return {Transport}\\n * @api private\\n */\\n\\nSocket.prototype.createTransport = function (name) {\\n  debug('creating transport \\\"%s\\\"', name);\\n  var query = clone(this.query); // append engine.io protocol identifier\\n\\n  query.EIO = parser.protocol; // transport name\\n\\n  query.transport = name; // per-transport options\\n\\n  var options = this.transportOptions[name] || {}; // session id if we already have one\\n\\n  if (this.id) query.sid = this.id;\\n  var transport = new transports[name]({\\n    query: query,\\n    socket: this,\\n    agent: options.agent || this.agent,\\n    hostname: options.hostname || this.hostname,\\n    port: options.port || this.port,\\n    secure: options.secure || this.secure,\\n    path: options.path || this.path,\\n    forceJSONP: options.forceJSONP || this.forceJSONP,\\n    jsonp: options.jsonp || this.jsonp,\\n    forceBase64: options.forceBase64 || this.forceBase64,\\n    enablesXDR: options.enablesXDR || this.enablesXDR,\\n    timestampRequests: options.timestampRequests || this.timestampRequests,\\n    timestampParam: options.timestampParam || this.timestampParam,\\n    policyPort: options.policyPort || this.policyPort,\\n    pfx: options.pfx || this.pfx,\\n    key: options.key || this.key,\\n    passphrase: options.passphrase || this.passphrase,\\n    cert: options.cert || this.cert,\\n    ca: options.ca || this.ca,\\n    ciphers: options.ciphers || this.ciphers,\\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\\n    extraHeaders: options.extraHeaders || this.extraHeaders,\\n    forceNode: options.forceNode || this.forceNode,\\n    localAddress: options.localAddress || this.localAddress,\\n    requestTimeout: options.requestTimeout || this.requestTimeout,\\n    protocols: options.protocols || void 0,\\n    isReactNative: this.isReactNative\\n  });\\n  return transport;\\n};\\n\\nfunction clone(obj) {\\n  var o = {};\\n\\n  for (var i in obj) {\\n    if (obj.hasOwnProperty(i)) {\\n      o[i] = obj[i];\\n    }\\n  }\\n\\n  return o;\\n}\\n/**\\n * Initializes transport to use and starts probe.\\n *\\n * @api private\\n */\\n\\n\\nSocket.prototype.open = function () {\\n  var transport;\\n\\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\\n    transport = 'websocket';\\n  } else if (0 === this.transports.length) {\\n    // Emit error on next tick so it can be listened to\\n    var self = this;\\n    setTimeout(function () {\\n      self.emit('error', 'No transports available');\\n    }, 0);\\n    return;\\n  } else {\\n    transport = this.transports[0];\\n  }\\n\\n  this.readyState = 'opening'; // Retry with the next transport if the transport is disabled (jsonp: false)\\n\\n  try {\\n    transport = this.createTransport(transport);\\n  } catch (e) {\\n    this.transports.shift();\\n    this.open();\\n    return;\\n  }\\n\\n  transport.open();\\n  this.setTransport(transport);\\n};\\n/**\\n * Sets the current transport. Disables the existing one (if any).\\n *\\n * @api private\\n */\\n\\n\\nSocket.prototype.setTransport = function (transport) {\\n  debug('setting transport %s', transport.name);\\n  var self = this;\\n\\n  if (this.transport) {\\n    debug('clearing existing transport %s', this.transport.name);\\n    this.transport.removeAllListeners();\\n  } // set up transport\\n\\n\\n  this.transport = transport; // set up transport listeners\\n\\n  transport.on('drain', function () {\\n    self.onDrain();\\n  }).on('packet', function (packet) {\\n    self.onPacket(packet);\\n  }).on('error', function (e) {\\n    self.onError(e);\\n  }).on('close', function () {\\n    self.onClose('transport close');\\n  });\\n};\\n/**\\n * Probes a transport.\\n *\\n * @param {String} transport name\\n * @api private\\n */\\n\\n\\nSocket.prototype.probe = function (name) {\\n  debug('probing transport \\\"%s\\\"', name);\\n  var transport = this.createTransport(name, {\\n    probe: 1\\n  });\\n  var failed = false;\\n  var self = this;\\n  Socket.priorWebsocketSuccess = false;\\n\\n  function onTransportOpen() {\\n    if (self.onlyBinaryUpgrades) {\\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\\n      failed = failed || upgradeLosesBinary;\\n    }\\n\\n    if (failed) return;\\n    debug('probe transport \\\"%s\\\" opened', name);\\n    transport.send([{\\n      type: 'ping',\\n      data: 'probe'\\n    }]);\\n    transport.once('packet', function (msg) {\\n      if (failed) return;\\n\\n      if ('pong' === msg.type && 'probe' === msg.data) {\\n        debug('probe transport \\\"%s\\\" pong', name);\\n        self.upgrading = true;\\n        self.emit('upgrading', transport);\\n        if (!transport) return;\\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\\n        debug('pausing current transport \\\"%s\\\"', self.transport.name);\\n        self.transport.pause(function () {\\n          if (failed) return;\\n          if ('closed' === self.readyState) return;\\n          debug('changing transport and sending upgrade packet');\\n          cleanup();\\n          self.setTransport(transport);\\n          transport.send([{\\n            type: 'upgrade'\\n          }]);\\n          self.emit('upgrade', transport);\\n          transport = null;\\n          self.upgrading = false;\\n          self.flush();\\n        });\\n      } else {\\n        debug('probe transport \\\"%s\\\" failed', name);\\n        var err = new Error('probe error');\\n        err.transport = transport.name;\\n        self.emit('upgradeError', err);\\n      }\\n    });\\n  }\\n\\n  function freezeTransport() {\\n    if (failed) return; // Any callback called by transport should be ignored since now\\n\\n    failed = true;\\n    cleanup();\\n    transport.close();\\n    transport = null;\\n  } // Handle any error that happens while probing\\n\\n\\n  function onerror(err) {\\n    var error = new Error('probe error: ' + err);\\n    error.transport = transport.name;\\n    freezeTransport();\\n    debug('probe transport \\\"%s\\\" failed because of error: %s', name, err);\\n    self.emit('upgradeError', error);\\n  }\\n\\n  function onTransportClose() {\\n    onerror('transport closed');\\n  } // When the socket is closed while we're probing\\n\\n\\n  function onclose() {\\n    onerror('socket closed');\\n  } // When the socket is upgraded while we're probing\\n\\n\\n  function onupgrade(to) {\\n    if (transport && to.name !== transport.name) {\\n      debug('\\\"%s\\\" works - aborting \\\"%s\\\"', to.name, transport.name);\\n      freezeTransport();\\n    }\\n  } // Remove all listeners on the transport and on self\\n\\n\\n  function cleanup() {\\n    transport.removeListener('open', onTransportOpen);\\n    transport.removeListener('error', onerror);\\n    transport.removeListener('close', onTransportClose);\\n    self.removeListener('close', onclose);\\n    self.removeListener('upgrading', onupgrade);\\n  }\\n\\n  transport.once('open', onTransportOpen);\\n  transport.once('error', onerror);\\n  transport.once('close', onTransportClose);\\n  this.once('close', onclose);\\n  this.once('upgrading', onupgrade);\\n  transport.open();\\n};\\n/**\\n * Called when connection is deemed open.\\n *\\n * @api public\\n */\\n\\n\\nSocket.prototype.onOpen = function () {\\n  debug('socket open');\\n  this.readyState = 'open';\\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\\n  this.emit('open');\\n  this.flush(); // we check for `readyState` in case an `open`\\n  // listener already closed the socket\\n\\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\\n    debug('starting upgrade probes');\\n\\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\\n      this.probe(this.upgrades[i]);\\n    }\\n  }\\n};\\n/**\\n * Handles a packet.\\n *\\n * @api private\\n */\\n\\n\\nSocket.prototype.onPacket = function (packet) {\\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\\n    debug('socket receive: type \\\"%s\\\", data \\\"%s\\\"', packet.type, packet.data);\\n    this.emit('packet', packet); // Socket is live - any packet counts\\n\\n    this.emit('heartbeat');\\n\\n    switch (packet.type) {\\n      case 'open':\\n        this.onHandshake(JSON.parse(packet.data));\\n        break;\\n\\n      case 'pong':\\n        this.setPing();\\n        this.emit('pong');\\n        break;\\n\\n      case 'error':\\n        var err = new Error('server error');\\n        err.code = packet.data;\\n        this.onError(err);\\n        break;\\n\\n      case 'message':\\n        this.emit('data', packet.data);\\n        this.emit('message', packet.data);\\n        break;\\n    }\\n  } else {\\n    debug('packet received with socket readyState \\\"%s\\\"', this.readyState);\\n  }\\n};\\n/**\\n * Called upon handshake completion.\\n *\\n * @param {Object} handshake obj\\n * @api private\\n */\\n\\n\\nSocket.prototype.onHandshake = function (data) {\\n  this.emit('handshake', data);\\n  this.id = data.sid;\\n  this.transport.query.sid = data.sid;\\n  this.upgrades = this.filterUpgrades(data.upgrades);\\n  this.pingInterval = data.pingInterval;\\n  this.pingTimeout = data.pingTimeout;\\n  this.onOpen(); // In case open handler closes socket\\n\\n  if ('closed' === this.readyState) return;\\n  this.setPing(); // Prolong liveness of socket on heartbeat\\n\\n  this.removeListener('heartbeat', this.onHeartbeat);\\n  this.on('heartbeat', this.onHeartbeat);\\n};\\n/**\\n * Resets ping timeout.\\n *\\n * @api private\\n */\\n\\n\\nSocket.prototype.onHeartbeat = function (timeout) {\\n  clearTimeout(this.pingTimeoutTimer);\\n  var self = this;\\n  self.pingTimeoutTimer = setTimeout(function () {\\n    if ('closed' === self.readyState) return;\\n    self.onClose('ping timeout');\\n  }, timeout || self.pingInterval + self.pingTimeout);\\n};\\n/**\\n * Pings server every `this.pingInterval` and expects response\\n * within `this.pingTimeout` or closes connection.\\n *\\n * @api private\\n */\\n\\n\\nSocket.prototype.setPing = function () {\\n  var self = this;\\n  clearTimeout(self.pingIntervalTimer);\\n  self.pingIntervalTimer = setTimeout(function () {\\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\\n    self.ping();\\n    self.onHeartbeat(self.pingTimeout);\\n  }, self.pingInterval);\\n};\\n/**\\n* Sends a ping packet.\\n*\\n* @api private\\n*/\\n\\n\\nSocket.prototype.ping = function () {\\n  var self = this;\\n  this.sendPacket('ping', function () {\\n    self.emit('ping');\\n  });\\n};\\n/**\\n * Called on `drain` event\\n *\\n * @api private\\n */\\n\\n\\nSocket.prototype.onDrain = function () {\\n  this.writeBuffer.splice(0, this.prevBufferLen); // setting prevBufferLen = 0 is very important\\n  // for example, when upgrading, upgrade packet is sent over,\\n  // and a nonzero prevBufferLen could cause problems on `drain`\\n\\n  this.prevBufferLen = 0;\\n\\n  if (0 === this.writeBuffer.length) {\\n    this.emit('drain');\\n  } else {\\n    this.flush();\\n  }\\n};\\n/**\\n * Flush write buffers.\\n *\\n * @api private\\n */\\n\\n\\nSocket.prototype.flush = function () {\\n  if ('closed' !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\\n    debug('flushing %d packets in socket', this.writeBuffer.length);\\n    this.transport.send(this.writeBuffer); // keep track of current length of writeBuffer\\n    // splice writeBuffer and callbackBuffer on `drain`\\n\\n    this.prevBufferLen = this.writeBuffer.length;\\n    this.emit('flush');\\n  }\\n};\\n/**\\n * Sends a message.\\n *\\n * @param {String} message.\\n * @param {Function} callback function.\\n * @param {Object} options.\\n * @return {Socket} for chaining.\\n * @api public\\n */\\n\\n\\nSocket.prototype.write = Socket.prototype.send = function (msg, options, fn) {\\n  this.sendPacket('message', msg, options, fn);\\n  return this;\\n};\\n/**\\n * Sends a packet.\\n *\\n * @param {String} packet type.\\n * @param {String} data.\\n * @param {Object} options.\\n * @param {Function} callback function.\\n * @api private\\n */\\n\\n\\nSocket.prototype.sendPacket = function (type, data, options, fn) {\\n  if ('function' === typeof data) {\\n    fn = data;\\n    data = undefined;\\n  }\\n\\n  if ('function' === typeof options) {\\n    fn = options;\\n    options = null;\\n  }\\n\\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\\n    return;\\n  }\\n\\n  options = options || {};\\n  options.compress = false !== options.compress;\\n  var packet = {\\n    type: type,\\n    data: data,\\n    options: options\\n  };\\n  this.emit('packetCreate', packet);\\n  this.writeBuffer.push(packet);\\n  if (fn) this.once('flush', fn);\\n  this.flush();\\n};\\n/**\\n * Closes the connection.\\n *\\n * @api private\\n */\\n\\n\\nSocket.prototype.close = function () {\\n  if ('opening' === this.readyState || 'open' === this.readyState) {\\n    this.readyState = 'closing';\\n    var self = this;\\n\\n    if (this.writeBuffer.length) {\\n      this.once('drain', function () {\\n        if (this.upgrading) {\\n          waitForUpgrade();\\n        } else {\\n          close();\\n        }\\n      });\\n    } else if (this.upgrading) {\\n      waitForUpgrade();\\n    } else {\\n      close();\\n    }\\n  }\\n\\n  function close() {\\n    self.onClose('forced close');\\n    debug('socket closing - telling transport to close');\\n    self.transport.close();\\n  }\\n\\n  function cleanupAndClose() {\\n    self.removeListener('upgrade', cleanupAndClose);\\n    self.removeListener('upgradeError', cleanupAndClose);\\n    close();\\n  }\\n\\n  function waitForUpgrade() {\\n    // wait for upgrade to finish since we can't send packets while pausing a transport\\n    self.once('upgrade', cleanupAndClose);\\n    self.once('upgradeError', cleanupAndClose);\\n  }\\n\\n  return this;\\n};\\n/**\\n * Called upon transport error\\n *\\n * @api private\\n */\\n\\n\\nSocket.prototype.onError = function (err) {\\n  debug('socket error %j', err);\\n  Socket.priorWebsocketSuccess = false;\\n  this.emit('error', err);\\n  this.onClose('transport error', err);\\n};\\n/**\\n * Called upon transport close.\\n *\\n * @api private\\n */\\n\\n\\nSocket.prototype.onClose = function (reason, desc) {\\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\\n    debug('socket close with reason: \\\"%s\\\"', reason);\\n    var self = this; // clear timers\\n\\n    clearTimeout(this.pingIntervalTimer);\\n    clearTimeout(this.pingTimeoutTimer); // stop event from firing again for transport\\n\\n    this.transport.removeAllListeners('close'); // ensure transport won't stay open\\n\\n    this.transport.close(); // ignore further transport communication\\n\\n    this.transport.removeAllListeners(); // set ready state\\n\\n    this.readyState = 'closed'; // clear session id\\n\\n    this.id = null; // emit close event\\n\\n    this.emit('close', reason, desc); // clean buffers after, so users can still\\n    // grab the buffers on `close` event\\n\\n    self.writeBuffer = [];\\n    self.prevBufferLen = 0;\\n  }\\n};\\n/**\\n * Filters upgrades, returning only those matching client transports.\\n *\\n * @param {Array} server upgrades\\n * @api private\\n *\\n */\\n\\n\\nSocket.prototype.filterUpgrades = function (upgrades) {\\n  var filteredUpgrades = [];\\n\\n  for (var i = 0, j = upgrades.length; i < j; i++) {\\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\\n  }\\n\\n  return filteredUpgrades;\\n};\",\"/**\\n * Module exports.\\n *\\n * Logic borrowed from Modernizr:\\n *\\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\\n */\\ntry {\\n  module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();\\n} catch (err) {\\n  // if XMLHttp support is disabled in IE then it will throw\\n  // when trying to create\\n  module.exports = false;\\n}\",\"/* global attachEvent */\\n\\n/**\\n * Module requirements.\\n */\\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\\n\\nvar Polling = require('./polling');\\n\\nvar Emitter = require('component-emitter');\\n\\nvar inherit = require('component-inherit');\\n\\nvar debug = require('debug')('engine.io-client:polling-xhr');\\n/**\\n * Module exports.\\n */\\n\\n\\nmodule.exports = XHR;\\nmodule.exports.Request = Request;\\n/**\\n * Empty function\\n */\\n\\nfunction empty() {}\\n/**\\n * XHR Polling constructor.\\n *\\n * @param {Object} opts\\n * @api public\\n */\\n\\n\\nfunction XHR(opts) {\\n  Polling.call(this, opts);\\n  this.requestTimeout = opts.requestTimeout;\\n  this.extraHeaders = opts.extraHeaders;\\n\\n  if (typeof location !== 'undefined') {\\n    var isSSL = 'https:' === location.protocol;\\n    var port = location.port; // some user agents have empty `location.port`\\n\\n    if (!port) {\\n      port = isSSL ? 443 : 80;\\n    }\\n\\n    this.xd = typeof location !== 'undefined' && opts.hostname !== location.hostname || port !== opts.port;\\n    this.xs = opts.secure !== isSSL;\\n  }\\n}\\n/**\\n * Inherits from Polling.\\n */\\n\\n\\ninherit(XHR, Polling);\\n/**\\n * XHR supports binary\\n */\\n\\nXHR.prototype.supportsBinary = true;\\n/**\\n * Creates a request.\\n *\\n * @param {String} method\\n * @api private\\n */\\n\\nXHR.prototype.request = function (opts) {\\n  opts = opts || {};\\n  opts.uri = this.uri();\\n  opts.xd = this.xd;\\n  opts.xs = this.xs;\\n  opts.agent = this.agent || false;\\n  opts.supportsBinary = this.supportsBinary;\\n  opts.enablesXDR = this.enablesXDR; // SSL options for Node.js client\\n\\n  opts.pfx = this.pfx;\\n  opts.key = this.key;\\n  opts.passphrase = this.passphrase;\\n  opts.cert = this.cert;\\n  opts.ca = this.ca;\\n  opts.ciphers = this.ciphers;\\n  opts.rejectUnauthorized = this.rejectUnauthorized;\\n  opts.requestTimeout = this.requestTimeout; // other options for Node.js client\\n\\n  opts.extraHeaders = this.extraHeaders;\\n  return new Request(opts);\\n};\\n/**\\n * Sends data.\\n *\\n * @param {String} data to send.\\n * @param {Function} called upon flush.\\n * @api private\\n */\\n\\n\\nXHR.prototype.doWrite = function (data, fn) {\\n  var isBinary = typeof data !== 'string' && data !== undefined;\\n  var req = this.request({\\n    method: 'POST',\\n    data: data,\\n    isBinary: isBinary\\n  });\\n  var self = this;\\n  req.on('success', fn);\\n  req.on('error', function (err) {\\n    self.onError('xhr post error', err);\\n  });\\n  this.sendXhr = req;\\n};\\n/**\\n * Starts a poll cycle.\\n *\\n * @api private\\n */\\n\\n\\nXHR.prototype.doPoll = function () {\\n  debug('xhr poll');\\n  var req = this.request();\\n  var self = this;\\n  req.on('data', function (data) {\\n    self.onData(data);\\n  });\\n  req.on('error', function (err) {\\n    self.onError('xhr poll error', err);\\n  });\\n  this.pollXhr = req;\\n};\\n/**\\n * Request constructor\\n *\\n * @param {Object} options\\n * @api public\\n */\\n\\n\\nfunction Request(opts) {\\n  this.method = opts.method || 'GET';\\n  this.uri = opts.uri;\\n  this.xd = !!opts.xd;\\n  this.xs = !!opts.xs;\\n  this.async = false !== opts.async;\\n  this.data = undefined !== opts.data ? opts.data : null;\\n  this.agent = opts.agent;\\n  this.isBinary = opts.isBinary;\\n  this.supportsBinary = opts.supportsBinary;\\n  this.enablesXDR = opts.enablesXDR;\\n  this.requestTimeout = opts.requestTimeout; // SSL options for Node.js client\\n\\n  this.pfx = opts.pfx;\\n  this.key = opts.key;\\n  this.passphrase = opts.passphrase;\\n  this.cert = opts.cert;\\n  this.ca = opts.ca;\\n  this.ciphers = opts.ciphers;\\n  this.rejectUnauthorized = opts.rejectUnauthorized; // other options for Node.js client\\n\\n  this.extraHeaders = opts.extraHeaders;\\n  this.create();\\n}\\n/**\\n * Mix in `Emitter`.\\n */\\n\\n\\nEmitter(Request.prototype);\\n/**\\n * Creates the XHR object and sends the request.\\n *\\n * @api private\\n */\\n\\nRequest.prototype.create = function () {\\n  var opts = {\\n    agent: this.agent,\\n    xdomain: this.xd,\\n    xscheme: this.xs,\\n    enablesXDR: this.enablesXDR\\n  }; // SSL options for Node.js client\\n\\n  opts.pfx = this.pfx;\\n  opts.key = this.key;\\n  opts.passphrase = this.passphrase;\\n  opts.cert = this.cert;\\n  opts.ca = this.ca;\\n  opts.ciphers = this.ciphers;\\n  opts.rejectUnauthorized = this.rejectUnauthorized;\\n  var xhr = this.xhr = new XMLHttpRequest(opts);\\n  var self = this;\\n\\n  try {\\n    debug('xhr open %s: %s', this.method, this.uri);\\n    xhr.open(this.method, this.uri, this.async);\\n\\n    try {\\n      if (this.extraHeaders) {\\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\\n\\n        for (var i in this.extraHeaders) {\\n          if (this.extraHeaders.hasOwnProperty(i)) {\\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\\n          }\\n        }\\n      }\\n    } catch (e) {}\\n\\n    if ('POST' === this.method) {\\n      try {\\n        if (this.isBinary) {\\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\\n        } else {\\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\\n        }\\n      } catch (e) {}\\n    }\\n\\n    try {\\n      xhr.setRequestHeader('Accept', '*/*');\\n    } catch (e) {} // ie6 check\\n\\n\\n    if ('withCredentials' in xhr) {\\n      xhr.withCredentials = true;\\n    }\\n\\n    if (this.requestTimeout) {\\n      xhr.timeout = this.requestTimeout;\\n    }\\n\\n    if (this.hasXDR()) {\\n      xhr.onload = function () {\\n        self.onLoad();\\n      };\\n\\n      xhr.onerror = function () {\\n        self.onError(xhr.responseText);\\n      };\\n    } else {\\n      xhr.onreadystatechange = function () {\\n        if (xhr.readyState === 2) {\\n          try {\\n            var contentType = xhr.getResponseHeader('Content-Type');\\n\\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\\n              xhr.responseType = 'arraybuffer';\\n            }\\n          } catch (e) {}\\n        }\\n\\n        if (4 !== xhr.readyState) return;\\n\\n        if (200 === xhr.status || 1223 === xhr.status) {\\n          self.onLoad();\\n        } else {\\n          // make sure the `error` event handler that's user-set\\n          // does not throw in the same tick and gets caught here\\n          setTimeout(function () {\\n            self.onError(xhr.status);\\n          }, 0);\\n        }\\n      };\\n    }\\n\\n    debug('xhr data %s', this.data);\\n    xhr.send(this.data);\\n  } catch (e) {\\n    // Need to defer since .create() is called directly fhrom the constructor\\n    // and thus the 'error' event can only be only bound *after* this exception\\n    // occurs.  Therefore, also, we cannot throw here at all.\\n    setTimeout(function () {\\n      self.onError(e);\\n    }, 0);\\n    return;\\n  }\\n\\n  if (typeof document !== 'undefined') {\\n    this.index = Request.requestsCount++;\\n    Request.requests[this.index] = this;\\n  }\\n};\\n/**\\n * Called upon successful response.\\n *\\n * @api private\\n */\\n\\n\\nRequest.prototype.onSuccess = function () {\\n  this.emit('success');\\n  this.cleanup();\\n};\\n/**\\n * Called if we have data.\\n *\\n * @api private\\n */\\n\\n\\nRequest.prototype.onData = function (data) {\\n  this.emit('data', data);\\n  this.onSuccess();\\n};\\n/**\\n * Called upon error.\\n *\\n * @api private\\n */\\n\\n\\nRequest.prototype.onError = function (err) {\\n  this.emit('error', err);\\n  this.cleanup(true);\\n};\\n/**\\n * Cleans up house.\\n *\\n * @api private\\n */\\n\\n\\nRequest.prototype.cleanup = function (fromError) {\\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\\n    return;\\n  } // xmlhttprequest\\n\\n\\n  if (this.hasXDR()) {\\n    this.xhr.onload = this.xhr.onerror = empty;\\n  } else {\\n    this.xhr.onreadystatechange = empty;\\n  }\\n\\n  if (fromError) {\\n    try {\\n      this.xhr.abort();\\n    } catch (e) {}\\n  }\\n\\n  if (typeof document !== 'undefined') {\\n    delete Request.requests[this.index];\\n  }\\n\\n  this.xhr = null;\\n};\\n/**\\n * Called upon load.\\n *\\n * @api private\\n */\\n\\n\\nRequest.prototype.onLoad = function () {\\n  var data;\\n\\n  try {\\n    var contentType;\\n\\n    try {\\n      contentType = this.xhr.getResponseHeader('Content-Type');\\n    } catch (e) {}\\n\\n    if (contentType === 'application/octet-stream') {\\n      data = this.xhr.response || this.xhr.responseText;\\n    } else {\\n      data = this.xhr.responseText;\\n    }\\n  } catch (e) {\\n    this.onError(e);\\n  }\\n\\n  if (null != data) {\\n    this.onData(data);\\n  }\\n};\\n/**\\n * Check if it has XDomainRequest.\\n *\\n * @api private\\n */\\n\\n\\nRequest.prototype.hasXDR = function () {\\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\\n};\\n/**\\n * Aborts the request.\\n *\\n * @api public\\n */\\n\\n\\nRequest.prototype.abort = function () {\\n  this.cleanup();\\n};\\n/**\\n * Aborts pending requests when unloading the window. This is needed to prevent\\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\\n * emitted.\\n */\\n\\n\\nRequest.requestsCount = 0;\\nRequest.requests = {};\\n\\nif (typeof document !== 'undefined') {\\n  if (typeof attachEvent === 'function') {\\n    attachEvent('onunload', unloadHandler);\\n  } else if (typeof addEventListener === 'function') {\\n    var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';\\n    addEventListener(terminationEvent, unloadHandler, false);\\n  }\\n}\\n\\nfunction unloadHandler() {\\n  for (var i in Request.requests) {\\n    if (Request.requests.hasOwnProperty(i)) {\\n      Request.requests[i].abort();\\n    }\\n  }\\n}\",\"/**\\n * Gets the keys for an object.\\n *\\n * @return {Array} keys\\n * @api private\\n */\\nmodule.exports = Object.keys || function keys(obj) {\\n  var arr = [];\\n  var has = Object.prototype.hasOwnProperty;\\n\\n  for (var i in obj) {\\n    if (has.call(obj, i)) {\\n      arr.push(i);\\n    }\\n  }\\n\\n  return arr;\\n};\",\"var toString = {}.toString;\\n\\nmodule.exports = Array.isArray || function (arr) {\\n  return toString.call(arr) == '[object Array]';\\n};\",\"/**\\n * An abstraction for slicing an arraybuffer even when\\n * ArrayBuffer.prototype.slice is not supported\\n *\\n * @api public\\n */\\nmodule.exports = function (arraybuffer, start, end) {\\n  var bytes = arraybuffer.byteLength;\\n  start = start || 0;\\n  end = end || bytes;\\n\\n  if (arraybuffer.slice) {\\n    return arraybuffer.slice(start, end);\\n  }\\n\\n  if (start < 0) {\\n    start += bytes;\\n  }\\n\\n  if (end < 0) {\\n    end += bytes;\\n  }\\n\\n  if (end > bytes) {\\n    end = bytes;\\n  }\\n\\n  if (start >= bytes || start >= end || bytes === 0) {\\n    return new ArrayBuffer(0);\\n  }\\n\\n  var abv = new Uint8Array(arraybuffer);\\n  var result = new Uint8Array(end - start);\\n\\n  for (var i = start, ii = 0; i < end; i++, ii++) {\\n    result[ii] = abv[i];\\n  }\\n\\n  return result.buffer;\\n};\",\"module.exports = after;\\n\\nfunction after(count, callback, err_cb) {\\n  var bail = false;\\n  err_cb = err_cb || noop;\\n  proxy.count = count;\\n  return count === 0 ? callback() : proxy;\\n\\n  function proxy(err, result) {\\n    if (proxy.count <= 0) {\\n      throw new Error('after called too many times');\\n    }\\n\\n    --proxy.count; // after first error, rest are passed to err_cb\\n\\n    if (err) {\\n      bail = true;\\n      callback(err); // future error callbacks will go to error handler\\n\\n      callback = err_cb;\\n    } else if (proxy.count === 0 && !bail) {\\n      callback(null, result);\\n    }\\n  }\\n}\\n\\nfunction noop() {}\",\"/*! https://mths.be/utf8js v2.1.2 by @mathias */\\nvar stringFromCharCode = String.fromCharCode; // Taken from https://mths.be/punycode\\n\\nfunction ucs2decode(string) {\\n  var output = [];\\n  var counter = 0;\\n  var length = string.length;\\n  var value;\\n  var extra;\\n\\n  while (counter < length) {\\n    value = string.charCodeAt(counter++);\\n\\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\\n      // high surrogate, and there is a next character\\n      extra = string.charCodeAt(counter++);\\n\\n      if ((extra & 0xFC00) == 0xDC00) {\\n        // low surrogate\\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\\n      } else {\\n        // unmatched surrogate; only append this code unit, in case the next\\n        // code unit is the high surrogate of a surrogate pair\\n        output.push(value);\\n        counter--;\\n      }\\n    } else {\\n      output.push(value);\\n    }\\n  }\\n\\n  return output;\\n} // Taken from https://mths.be/punycode\\n\\n\\nfunction ucs2encode(array) {\\n  var length = array.length;\\n  var index = -1;\\n  var value;\\n  var output = '';\\n\\n  while (++index < length) {\\n    value = array[index];\\n\\n    if (value > 0xFFFF) {\\n      value -= 0x10000;\\n      output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\\n      value = 0xDC00 | value & 0x3FF;\\n    }\\n\\n    output += stringFromCharCode(value);\\n  }\\n\\n  return output;\\n}\\n\\nfunction checkScalarValue(codePoint, strict) {\\n  if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\\n    if (strict) {\\n      throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');\\n    }\\n\\n    return false;\\n  }\\n\\n  return true;\\n}\\n/*--------------------------------------------------------------------------*/\\n\\n\\nfunction createByte(codePoint, shift) {\\n  return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\\n}\\n\\nfunction encodeCodePoint(codePoint, strict) {\\n  if ((codePoint & 0xFFFFFF80) == 0) {\\n    // 1-byte sequence\\n    return stringFromCharCode(codePoint);\\n  }\\n\\n  var symbol = '';\\n\\n  if ((codePoint & 0xFFFFF800) == 0) {\\n    // 2-byte sequence\\n    symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\\n  } else if ((codePoint & 0xFFFF0000) == 0) {\\n    // 3-byte sequence\\n    if (!checkScalarValue(codePoint, strict)) {\\n      codePoint = 0xFFFD;\\n    }\\n\\n    symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\\n    symbol += createByte(codePoint, 6);\\n  } else if ((codePoint & 0xFFE00000) == 0) {\\n    // 4-byte sequence\\n    symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\\n    symbol += createByte(codePoint, 12);\\n    symbol += createByte(codePoint, 6);\\n  }\\n\\n  symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\\n  return symbol;\\n}\\n\\nfunction utf8encode(string, opts) {\\n  opts = opts || {};\\n  var strict = false !== opts.strict;\\n  var codePoints = ucs2decode(string);\\n  var length = codePoints.length;\\n  var index = -1;\\n  var codePoint;\\n  var byteString = '';\\n\\n  while (++index < length) {\\n    codePoint = codePoints[index];\\n    byteString += encodeCodePoint(codePoint, strict);\\n  }\\n\\n  return byteString;\\n}\\n/*--------------------------------------------------------------------------*/\\n\\n\\nfunction readContinuationByte() {\\n  if (byteIndex >= byteCount) {\\n    throw Error('Invalid byte index');\\n  }\\n\\n  var continuationByte = byteArray[byteIndex] & 0xFF;\\n  byteIndex++;\\n\\n  if ((continuationByte & 0xC0) == 0x80) {\\n    return continuationByte & 0x3F;\\n  } // If we end up here, it’s not a continuation byte\\n\\n\\n  throw Error('Invalid continuation byte');\\n}\\n\\nfunction decodeSymbol(strict) {\\n  var byte1;\\n  var byte2;\\n  var byte3;\\n  var byte4;\\n  var codePoint;\\n\\n  if (byteIndex > byteCount) {\\n    throw Error('Invalid byte index');\\n  }\\n\\n  if (byteIndex == byteCount) {\\n    return false;\\n  } // Read first byte\\n\\n\\n  byte1 = byteArray[byteIndex] & 0xFF;\\n  byteIndex++; // 1-byte sequence (no continuation bytes)\\n\\n  if ((byte1 & 0x80) == 0) {\\n    return byte1;\\n  } // 2-byte sequence\\n\\n\\n  if ((byte1 & 0xE0) == 0xC0) {\\n    byte2 = readContinuationByte();\\n    codePoint = (byte1 & 0x1F) << 6 | byte2;\\n\\n    if (codePoint >= 0x80) {\\n      return codePoint;\\n    } else {\\n      throw Error('Invalid continuation byte');\\n    }\\n  } // 3-byte sequence (may include unpaired surrogates)\\n\\n\\n  if ((byte1 & 0xF0) == 0xE0) {\\n    byte2 = readContinuationByte();\\n    byte3 = readContinuationByte();\\n    codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\\n\\n    if (codePoint >= 0x0800) {\\n      return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\\n    } else {\\n      throw Error('Invalid continuation byte');\\n    }\\n  } // 4-byte sequence\\n\\n\\n  if ((byte1 & 0xF8) == 0xF0) {\\n    byte2 = readContinuationByte();\\n    byte3 = readContinuationByte();\\n    byte4 = readContinuationByte();\\n    codePoint = (byte1 & 0x07) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\\n\\n    if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\\n      return codePoint;\\n    }\\n  }\\n\\n  throw Error('Invalid UTF-8 detected');\\n}\\n\\nvar byteArray;\\nvar byteCount;\\nvar byteIndex;\\n\\nfunction utf8decode(byteString, opts) {\\n  opts = opts || {};\\n  var strict = false !== opts.strict;\\n  byteArray = ucs2decode(byteString);\\n  byteCount = byteArray.length;\\n  byteIndex = 0;\\n  var codePoints = [];\\n  var tmp;\\n\\n  while ((tmp = decodeSymbol(strict)) !== false) {\\n    codePoints.push(tmp);\\n  }\\n\\n  return ucs2encode(codePoints);\\n}\\n\\nmodule.exports = {\\n  version: '2.1.2',\\n  encode: utf8encode,\\n  decode: utf8decode\\n};\",\"/*\\n * base64-arraybuffer\\n * https://github.com/niklasvh/base64-arraybuffer\\n *\\n * Copyright (c) 2012 Niklas von Hertzen\\n * Licensed under the MIT license.\\n */\\n(function () {\\n  \\\"use strict\\\";\\n\\n  var chars = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"; // Use a lookup table to find the index.\\n\\n  var lookup = new Uint8Array(256);\\n\\n  for (var i = 0; i < chars.length; i++) {\\n    lookup[chars.charCodeAt(i)] = i;\\n  }\\n\\n  exports.encode = function (arraybuffer) {\\n    var bytes = new Uint8Array(arraybuffer),\\n        i,\\n        len = bytes.length,\\n        base64 = \\\"\\\";\\n\\n    for (i = 0; i < len; i += 3) {\\n      base64 += chars[bytes[i] >> 2];\\n      base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\\n      base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\\n      base64 += chars[bytes[i + 2] & 63];\\n    }\\n\\n    if (len % 3 === 2) {\\n      base64 = base64.substring(0, base64.length - 1) + \\\"=\\\";\\n    } else if (len % 3 === 1) {\\n      base64 = base64.substring(0, base64.length - 2) + \\\"==\\\";\\n    }\\n\\n    return base64;\\n  };\\n\\n  exports.decode = function (base64) {\\n    var bufferLength = base64.length * 0.75,\\n        len = base64.length,\\n        i,\\n        p = 0,\\n        encoded1,\\n        encoded2,\\n        encoded3,\\n        encoded4;\\n\\n    if (base64[base64.length - 1] === \\\"=\\\") {\\n      bufferLength--;\\n\\n      if (base64[base64.length - 2] === \\\"=\\\") {\\n        bufferLength--;\\n      }\\n    }\\n\\n    var arraybuffer = new ArrayBuffer(bufferLength),\\n        bytes = new Uint8Array(arraybuffer);\\n\\n    for (i = 0; i < len; i += 4) {\\n      encoded1 = lookup[base64.charCodeAt(i)];\\n      encoded2 = lookup[base64.charCodeAt(i + 1)];\\n      encoded3 = lookup[base64.charCodeAt(i + 2)];\\n      encoded4 = lookup[base64.charCodeAt(i + 3)];\\n      bytes[p++] = encoded1 << 2 | encoded2 >> 4;\\n      bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\\n      bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\\n    }\\n\\n    return arraybuffer;\\n  };\\n})();\",\"/**\\r\\n * Create a blob builder even when vendor prefixes exist\\r\\n */\\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : false;\\n/**\\r\\n * Check if Blob constructor is supported\\r\\n */\\n\\nvar blobSupported = function () {\\n  try {\\n    var a = new Blob(['hi']);\\n    return a.size === 2;\\n  } catch (e) {\\n    return false;\\n  }\\n}();\\n/**\\r\\n * Check if Blob constructor supports ArrayBufferViews\\r\\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\\r\\n */\\n\\n\\nvar blobSupportsArrayBufferView = blobSupported && function () {\\n  try {\\n    var b = new Blob([new Uint8Array([1, 2])]);\\n    return b.size === 2;\\n  } catch (e) {\\n    return false;\\n  }\\n}();\\n/**\\r\\n * Check if BlobBuilder is supported\\r\\n */\\n\\n\\nvar blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\\n/**\\r\\n * Helper function that maps ArrayBufferViews to ArrayBuffers\\r\\n * Used by BlobBuilder constructor and old browsers that didn't\\r\\n * support it in the Blob constructor.\\r\\n */\\n\\nfunction mapArrayBufferViews(ary) {\\n  return ary.map(function (chunk) {\\n    if (chunk.buffer instanceof ArrayBuffer) {\\n      var buf = chunk.buffer; // if this is a subarray, make a copy so we only\\n      // include the subarray region from the underlying buffer\\n\\n      if (chunk.byteLength !== buf.byteLength) {\\n        var copy = new Uint8Array(chunk.byteLength);\\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\\n        buf = copy.buffer;\\n      }\\n\\n      return buf;\\n    }\\n\\n    return chunk;\\n  });\\n}\\n\\nfunction BlobBuilderConstructor(ary, options) {\\n  options = options || {};\\n  var bb = new BlobBuilder();\\n  mapArrayBufferViews(ary).forEach(function (part) {\\n    bb.append(part);\\n  });\\n  return options.type ? bb.getBlob(options.type) : bb.getBlob();\\n}\\n\\n;\\n\\nfunction BlobConstructor(ary, options) {\\n  return new Blob(mapArrayBufferViews(ary), options || {});\\n}\\n\\n;\\n\\nif (typeof Blob !== 'undefined') {\\n  BlobBuilderConstructor.prototype = Blob.prototype;\\n  BlobConstructor.prototype = Blob.prototype;\\n}\\n\\nmodule.exports = function () {\\n  if (blobSupported) {\\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\\n  } else if (blobBuilderSupported) {\\n    return BlobBuilderConstructor;\\n  } else {\\n    return undefined;\\n  }\\n}();\",\"/**\\n * This is the common logic for both the Node.js and web browser\\n * implementations of `debug()`.\\n *\\n * Expose `debug()` as the module.\\n */\\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\\nexports.coerce = coerce;\\nexports.disable = disable;\\nexports.enable = enable;\\nexports.enabled = enabled;\\nexports.humanize = require('ms');\\n/**\\n * Active `debug` instances.\\n */\\n\\nexports.instances = [];\\n/**\\n * The currently active debug mode names, and names to skip.\\n */\\n\\nexports.names = [];\\nexports.skips = [];\\n/**\\n * Map of special \\\"%n\\\" handling functions, for the debug \\\"format\\\" argument.\\n *\\n * Valid key names are a single, lower or upper-case letter, i.e. \\\"n\\\" and \\\"N\\\".\\n */\\n\\nexports.formatters = {};\\n/**\\n * Select a color.\\n * @param {String} namespace\\n * @return {Number}\\n * @api private\\n */\\n\\nfunction selectColor(namespace) {\\n  var hash = 0,\\n      i;\\n\\n  for (i in namespace) {\\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\\n    hash |= 0; // Convert to 32bit integer\\n  }\\n\\n  return exports.colors[Math.abs(hash) % exports.colors.length];\\n}\\n/**\\n * Create a debugger with the given `namespace`.\\n *\\n * @param {String} namespace\\n * @return {Function}\\n * @api public\\n */\\n\\n\\nfunction createDebug(namespace) {\\n  var prevTime;\\n\\n  function debug() {\\n    // disabled?\\n    if (!debug.enabled) return;\\n    var self = debug; // set `diff` timestamp\\n\\n    var curr = +new Date();\\n    var ms = curr - (prevTime || curr);\\n    self.diff = ms;\\n    self.prev = prevTime;\\n    self.curr = curr;\\n    prevTime = curr; // turn the `arguments` into a proper Array\\n\\n    var args = new Array(arguments.length);\\n\\n    for (var i = 0; i < args.length; i++) {\\n      args[i] = arguments[i];\\n    }\\n\\n    args[0] = exports.coerce(args[0]);\\n\\n    if ('string' !== typeof args[0]) {\\n      // anything else let's inspect with %O\\n      args.unshift('%O');\\n    } // apply any `formatters` transformations\\n\\n\\n    var index = 0;\\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\\n      // if we encounter an escaped % then don't increase the array index\\n      if (match === '%%') return match;\\n      index++;\\n      var formatter = exports.formatters[format];\\n\\n      if ('function' === typeof formatter) {\\n        var val = args[index];\\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\\n\\n        args.splice(index, 1);\\n        index--;\\n      }\\n\\n      return match;\\n    }); // apply env-specific formatting (colors, etc.)\\n\\n    exports.formatArgs.call(self, args);\\n    var logFn = debug.log || exports.log || console.log.bind(console);\\n    logFn.apply(self, args);\\n  }\\n\\n  debug.namespace = namespace;\\n  debug.enabled = exports.enabled(namespace);\\n  debug.useColors = exports.useColors();\\n  debug.color = selectColor(namespace);\\n  debug.destroy = destroy; // env-specific initialization logic for debug instances\\n\\n  if ('function' === typeof exports.init) {\\n    exports.init(debug);\\n  }\\n\\n  exports.instances.push(debug);\\n  return debug;\\n}\\n\\nfunction destroy() {\\n  var index = exports.instances.indexOf(this);\\n\\n  if (index !== -1) {\\n    exports.instances.splice(index, 1);\\n    return true;\\n  } else {\\n    return false;\\n  }\\n}\\n/**\\n * Enables a debug mode by namespaces. This can include modes\\n * separated by a colon and wildcards.\\n *\\n * @param {String} namespaces\\n * @api public\\n */\\n\\n\\nfunction enable(namespaces) {\\n  exports.save(namespaces);\\n  exports.names = [];\\n  exports.skips = [];\\n  var i;\\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\\\s,]+/);\\n  var len = split.length;\\n\\n  for (i = 0; i < len; i++) {\\n    if (!split[i]) continue; // ignore empty strings\\n\\n    namespaces = split[i].replace(/\\\\*/g, '.*?');\\n\\n    if (namespaces[0] === '-') {\\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\\n    } else {\\n      exports.names.push(new RegExp('^' + namespaces + '$'));\\n    }\\n  }\\n\\n  for (i = 0; i < exports.instances.length; i++) {\\n    var instance = exports.instances[i];\\n    instance.enabled = exports.enabled(instance.namespace);\\n  }\\n}\\n/**\\n * Disable debug output.\\n *\\n * @api public\\n */\\n\\n\\nfunction disable() {\\n  exports.enable('');\\n}\\n/**\\n * Returns true if the given mode name is enabled, false otherwise.\\n *\\n * @param {String} name\\n * @return {Boolean}\\n * @api public\\n */\\n\\n\\nfunction enabled(name) {\\n  if (name[name.length - 1] === '*') {\\n    return true;\\n  }\\n\\n  var i, len;\\n\\n  for (i = 0, len = exports.skips.length; i < len; i++) {\\n    if (exports.skips[i].test(name)) {\\n      return false;\\n    }\\n  }\\n\\n  for (i = 0, len = exports.names.length; i < len; i++) {\\n    if (exports.names[i].test(name)) {\\n      return true;\\n    }\\n  }\\n\\n  return false;\\n}\\n/**\\n * Coerce `val`.\\n *\\n * @param {Mixed} val\\n * @return {Mixed}\\n * @api private\\n */\\n\\n\\nfunction coerce(val) {\\n  if (val instanceof Error) return val.stack || val.message;\\n  return val;\\n}\",\"/**\\n * Helpers.\\n */\\nvar s = 1000;\\nvar m = s * 60;\\nvar h = m * 60;\\nvar d = h * 24;\\nvar y = d * 365.25;\\n/**\\n * Parse or format the given `val`.\\n *\\n * Options:\\n *\\n *  - `long` verbose formatting [false]\\n *\\n * @param {String|Number} val\\n * @param {Object} [options]\\n * @throws {Error} throw an error if val is not a non-empty string or a number\\n * @return {String|Number}\\n * @api public\\n */\\n\\nmodule.exports = function (val, options) {\\n  options = options || {};\\n  var type = typeof val;\\n\\n  if (type === 'string' && val.length > 0) {\\n    return parse(val);\\n  } else if (type === 'number' && isNaN(val) === false) {\\n    return options.long ? fmtLong(val) : fmtShort(val);\\n  }\\n\\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\\n};\\n/**\\n * Parse the given `str` and return milliseconds.\\n *\\n * @param {String} str\\n * @return {Number}\\n * @api private\\n */\\n\\n\\nfunction parse(str) {\\n  str = String(str);\\n\\n  if (str.length > 100) {\\n    return;\\n  }\\n\\n  var match = /^((?:\\\\d+)?\\\\.?\\\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\\n\\n  if (!match) {\\n    return;\\n  }\\n\\n  var n = parseFloat(match[1]);\\n  var type = (match[2] || 'ms').toLowerCase();\\n\\n  switch (type) {\\n    case 'years':\\n    case 'year':\\n    case 'yrs':\\n    case 'yr':\\n    case 'y':\\n      return n * y;\\n\\n    case 'days':\\n    case 'day':\\n    case 'd':\\n      return n * d;\\n\\n    case 'hours':\\n    case 'hour':\\n    case 'hrs':\\n    case 'hr':\\n    case 'h':\\n      return n * h;\\n\\n    case 'minutes':\\n    case 'minute':\\n    case 'mins':\\n    case 'min':\\n    case 'm':\\n      return n * m;\\n\\n    case 'seconds':\\n    case 'second':\\n    case 'secs':\\n    case 'sec':\\n    case 's':\\n      return n * s;\\n\\n    case 'milliseconds':\\n    case 'millisecond':\\n    case 'msecs':\\n    case 'msec':\\n    case 'ms':\\n      return n;\\n\\n    default:\\n      return undefined;\\n  }\\n}\\n/**\\n * Short format for `ms`.\\n *\\n * @param {Number} ms\\n * @return {String}\\n * @api private\\n */\\n\\n\\nfunction fmtShort(ms) {\\n  if (ms >= d) {\\n    return Math.round(ms / d) + 'd';\\n  }\\n\\n  if (ms >= h) {\\n    return Math.round(ms / h) + 'h';\\n  }\\n\\n  if (ms >= m) {\\n    return Math.round(ms / m) + 'm';\\n  }\\n\\n  if (ms >= s) {\\n    return Math.round(ms / s) + 's';\\n  }\\n\\n  return ms + 'ms';\\n}\\n/**\\n * Long format for `ms`.\\n *\\n * @param {Number} ms\\n * @return {String}\\n * @api private\\n */\\n\\n\\nfunction fmtLong(ms) {\\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\\n}\\n/**\\n * Pluralization helper.\\n */\\n\\n\\nfunction plural(ms, n, name) {\\n  if (ms < n) {\\n    return;\\n  }\\n\\n  if (ms < n * 1.5) {\\n    return Math.floor(ms / n) + ' ' + name;\\n  }\\n\\n  return Math.ceil(ms / n) + ' ' + name + 's';\\n}\",\"/**\\n * Module requirements.\\n */\\nvar Polling = require('./polling');\\n\\nvar inherit = require('component-inherit');\\n/**\\n * Module exports.\\n */\\n\\n\\nmodule.exports = JSONPPolling;\\n/**\\n * Cached regular expressions.\\n */\\n\\nvar rNewline = /\\\\n/g;\\nvar rEscapedNewline = /\\\\\\\\n/g;\\n/**\\n * Global JSONP callbacks.\\n */\\n\\nvar callbacks;\\n/**\\n * Noop.\\n */\\n\\nfunction empty() {}\\n/**\\n * Until https://github.com/tc39/proposal-global is shipped.\\n */\\n\\n\\nfunction glob() {\\n  return typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\\n}\\n/**\\n * JSONP Polling constructor.\\n *\\n * @param {Object} opts.\\n * @api public\\n */\\n\\n\\nfunction JSONPPolling(opts) {\\n  Polling.call(this, opts);\\n  this.query = this.query || {}; // define global callbacks array if not present\\n  // we do this here (lazily) to avoid unneeded global pollution\\n\\n  if (!callbacks) {\\n    // we need to consider multiple engines in the same page\\n    var global = glob();\\n    callbacks = global.___eio = global.___eio || [];\\n  } // callback identifier\\n\\n\\n  this.index = callbacks.length; // add callback to jsonp global\\n\\n  var self = this;\\n  callbacks.push(function (msg) {\\n    self.onData(msg);\\n  }); // append to query string\\n\\n  this.query.j = this.index; // prevent spurious errors from being emitted when the window is unloaded\\n\\n  if (typeof addEventListener === 'function') {\\n    addEventListener('beforeunload', function () {\\n      if (self.script) self.script.onerror = empty;\\n    }, false);\\n  }\\n}\\n/**\\n * Inherits from Polling.\\n */\\n\\n\\ninherit(JSONPPolling, Polling);\\n/*\\n * JSONP only supports binary as base64 encoded strings\\n */\\n\\nJSONPPolling.prototype.supportsBinary = false;\\n/**\\n * Closes the socket.\\n *\\n * @api private\\n */\\n\\nJSONPPolling.prototype.doClose = function () {\\n  if (this.script) {\\n    this.script.parentNode.removeChild(this.script);\\n    this.script = null;\\n  }\\n\\n  if (this.form) {\\n    this.form.parentNode.removeChild(this.form);\\n    this.form = null;\\n    this.iframe = null;\\n  }\\n\\n  Polling.prototype.doClose.call(this);\\n};\\n/**\\n * Starts a poll cycle.\\n *\\n * @api private\\n */\\n\\n\\nJSONPPolling.prototype.doPoll = function () {\\n  var self = this;\\n  var script = document.createElement('script');\\n\\n  if (this.script) {\\n    this.script.parentNode.removeChild(this.script);\\n    this.script = null;\\n  }\\n\\n  script.async = true;\\n  script.src = this.uri();\\n\\n  script.onerror = function (e) {\\n    self.onError('jsonp poll error', e);\\n  };\\n\\n  var insertAt = document.getElementsByTagName('script')[0];\\n\\n  if (insertAt) {\\n    insertAt.parentNode.insertBefore(script, insertAt);\\n  } else {\\n    (document.head || document.body).appendChild(script);\\n  }\\n\\n  this.script = script;\\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\\n\\n  if (isUAgecko) {\\n    setTimeout(function () {\\n      var iframe = document.createElement('iframe');\\n      document.body.appendChild(iframe);\\n      document.body.removeChild(iframe);\\n    }, 100);\\n  }\\n};\\n/**\\n * Writes with a hidden iframe.\\n *\\n * @param {String} data to send\\n * @param {Function} called upon flush.\\n * @api private\\n */\\n\\n\\nJSONPPolling.prototype.doWrite = function (data, fn) {\\n  var self = this;\\n\\n  if (!this.form) {\\n    var form = document.createElement('form');\\n    var area = document.createElement('textarea');\\n    var id = this.iframeId = 'eio_iframe_' + this.index;\\n    var iframe;\\n    form.className = 'socketio';\\n    form.style.position = 'absolute';\\n    form.style.top = '-1000px';\\n    form.style.left = '-1000px';\\n    form.target = id;\\n    form.method = 'POST';\\n    form.setAttribute('accept-charset', 'utf-8');\\n    area.name = 'd';\\n    form.appendChild(area);\\n    document.body.appendChild(form);\\n    this.form = form;\\n    this.area = area;\\n  }\\n\\n  this.form.action = this.uri();\\n\\n  function complete() {\\n    initIframe();\\n    fn();\\n  }\\n\\n  function initIframe() {\\n    if (self.iframe) {\\n      try {\\n        self.form.removeChild(self.iframe);\\n      } catch (e) {\\n        self.onError('jsonp polling iframe removal error', e);\\n      }\\n    }\\n\\n    try {\\n      // ie6 dynamic iframes with target=\\\"\\\" support (thanks Chris Lambacher)\\n      var html = '<iframe src=\\\"javascript:0\\\" name=\\\"' + self.iframeId + '\\\">';\\n      iframe = document.createElement(html);\\n    } catch (e) {\\n      iframe = document.createElement('iframe');\\n      iframe.name = self.iframeId;\\n      iframe.src = 'javascript:0';\\n    }\\n\\n    iframe.id = self.iframeId;\\n    self.form.appendChild(iframe);\\n    self.iframe = iframe;\\n  }\\n\\n  initIframe(); // escape \\\\n to prevent it from being converted into \\\\r\\\\n by some UAs\\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\\n\\n  data = data.replace(rEscapedNewline, '\\\\\\\\\\\\n');\\n  this.area.value = data.replace(rNewline, '\\\\\\\\n');\\n\\n  try {\\n    this.form.submit();\\n  } catch (e) {}\\n\\n  if (this.iframe.attachEvent) {\\n    this.iframe.onreadystatechange = function () {\\n      if (self.iframe.readyState === 'complete') {\\n        complete();\\n      }\\n    };\\n  } else {\\n    this.iframe.onload = complete;\\n  }\\n};\",\"/**\\n * Module dependencies.\\n */\\nvar Transport = require('../transport');\\n\\nvar parser = require('engine.io-parser');\\n\\nvar parseqs = require('parseqs');\\n\\nvar inherit = require('component-inherit');\\n\\nvar yeast = require('yeast');\\n\\nvar debug = require('debug')('engine.io-client:websocket');\\n\\nvar BrowserWebSocket, NodeWebSocket;\\n\\nif (typeof WebSocket !== 'undefined') {\\n  BrowserWebSocket = WebSocket;\\n} else if (typeof self !== 'undefined') {\\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\\n} else {\\n  try {\\n    NodeWebSocket = require('ws');\\n  } catch (e) {}\\n}\\n/**\\n * Get either the `WebSocket` or `MozWebSocket` globals\\n * in the browser or try to resolve WebSocket-compatible\\n * interface exposed by `ws` for Node-like environment.\\n */\\n\\n\\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\\n/**\\n * Module exports.\\n */\\n\\nmodule.exports = WS;\\n/**\\n * WebSocket transport constructor.\\n *\\n * @api {Object} connection options\\n * @api public\\n */\\n\\nfunction WS(opts) {\\n  var forceBase64 = opts && opts.forceBase64;\\n\\n  if (forceBase64) {\\n    this.supportsBinary = false;\\n  }\\n\\n  this.perMessageDeflate = opts.perMessageDeflate;\\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\\n  this.protocols = opts.protocols;\\n\\n  if (!this.usingBrowserWebSocket) {\\n    WebSocketImpl = NodeWebSocket;\\n  }\\n\\n  Transport.call(this, opts);\\n}\\n/**\\n * Inherits from Transport.\\n */\\n\\n\\ninherit(WS, Transport);\\n/**\\n * Transport name.\\n *\\n * @api public\\n */\\n\\nWS.prototype.name = 'websocket';\\n/*\\n * WebSockets support binary\\n */\\n\\nWS.prototype.supportsBinary = true;\\n/**\\n * Opens socket.\\n *\\n * @api private\\n */\\n\\nWS.prototype.doOpen = function () {\\n  if (!this.check()) {\\n    // let probe timeout\\n    return;\\n  }\\n\\n  var uri = this.uri();\\n  var protocols = this.protocols;\\n  var opts = {\\n    agent: this.agent,\\n    perMessageDeflate: this.perMessageDeflate\\n  }; // SSL options for Node.js client\\n\\n  opts.pfx = this.pfx;\\n  opts.key = this.key;\\n  opts.passphrase = this.passphrase;\\n  opts.cert = this.cert;\\n  opts.ca = this.ca;\\n  opts.ciphers = this.ciphers;\\n  opts.rejectUnauthorized = this.rejectUnauthorized;\\n\\n  if (this.extraHeaders) {\\n    opts.headers = this.extraHeaders;\\n  }\\n\\n  if (this.localAddress) {\\n    opts.localAddress = this.localAddress;\\n  }\\n\\n  try {\\n    this.ws = this.usingBrowserWebSocket && !this.isReactNative ? protocols ? new WebSocketImpl(uri, protocols) : new WebSocketImpl(uri) : new WebSocketImpl(uri, protocols, opts);\\n  } catch (err) {\\n    return this.emit('error', err);\\n  }\\n\\n  if (this.ws.binaryType === undefined) {\\n    this.supportsBinary = false;\\n  }\\n\\n  if (this.ws.supports && this.ws.supports.binary) {\\n    this.supportsBinary = true;\\n    this.ws.binaryType = 'nodebuffer';\\n  } else {\\n    this.ws.binaryType = 'arraybuffer';\\n  }\\n\\n  this.addEventListeners();\\n};\\n/**\\n * Adds event listeners to the socket\\n *\\n * @api private\\n */\\n\\n\\nWS.prototype.addEventListeners = function () {\\n  var self = this;\\n\\n  this.ws.onopen = function () {\\n    self.onOpen();\\n  };\\n\\n  this.ws.onclose = function () {\\n    self.onClose();\\n  };\\n\\n  this.ws.onmessage = function (ev) {\\n    self.onData(ev.data);\\n  };\\n\\n  this.ws.onerror = function (e) {\\n    self.onError('websocket error', e);\\n  };\\n};\\n/**\\n * Writes data to socket.\\n *\\n * @param {Array} array of packets.\\n * @api private\\n */\\n\\n\\nWS.prototype.write = function (packets) {\\n  var self = this;\\n  this.writable = false; // encodePacket efficient as it uses WS framing\\n  // no need for encodePayload\\n\\n  var total = packets.length;\\n\\n  for (var i = 0, l = total; i < l; i++) {\\n    (function (packet) {\\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\\n        if (!self.usingBrowserWebSocket) {\\n          // always create a new object (GH-437)\\n          var opts = {};\\n\\n          if (packet.options) {\\n            opts.compress = packet.options.compress;\\n          }\\n\\n          if (self.perMessageDeflate) {\\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\\n\\n            if (len < self.perMessageDeflate.threshold) {\\n              opts.compress = false;\\n            }\\n          }\\n        } // Sometimes the websocket has already been closed but the browser didn't\\n        // have a chance of informing us about it yet, in that case send will\\n        // throw an error\\n\\n\\n        try {\\n          if (self.usingBrowserWebSocket) {\\n            // TypeError is thrown when passing the second argument on Safari\\n            self.ws.send(data);\\n          } else {\\n            self.ws.send(data, opts);\\n          }\\n        } catch (e) {\\n          debug('websocket closed before onclose event');\\n        }\\n\\n        --total || done();\\n      });\\n    })(packets[i]);\\n  }\\n\\n  function done() {\\n    self.emit('flush'); // fake drain\\n    // defer to next tick to allow Socket to clear writeBuffer\\n\\n    setTimeout(function () {\\n      self.writable = true;\\n      self.emit('drain');\\n    }, 0);\\n  }\\n};\\n/**\\n * Called upon close\\n *\\n * @api private\\n */\\n\\n\\nWS.prototype.onClose = function () {\\n  Transport.prototype.onClose.call(this);\\n};\\n/**\\n * Closes socket.\\n *\\n * @api private\\n */\\n\\n\\nWS.prototype.doClose = function () {\\n  if (typeof this.ws !== 'undefined') {\\n    this.ws.close();\\n  }\\n};\\n/**\\n * Generates uri for connection.\\n *\\n * @api private\\n */\\n\\n\\nWS.prototype.uri = function () {\\n  var query = this.query || {};\\n  var schema = this.secure ? 'wss' : 'ws';\\n  var port = ''; // avoid port if default for schema\\n\\n  if (this.port && ('wss' === schema && Number(this.port) !== 443 || 'ws' === schema && Number(this.port) !== 80)) {\\n    port = ':' + this.port;\\n  } // append timestamp to URI\\n\\n\\n  if (this.timestampRequests) {\\n    query[this.timestampParam] = yeast();\\n  } // communicate binary support capabilities\\n\\n\\n  if (!this.supportsBinary) {\\n    query.b64 = 1;\\n  }\\n\\n  query = parseqs.encode(query); // prepend ? to query\\n\\n  if (query.length) {\\n    query = '?' + query;\\n  }\\n\\n  var ipv6 = this.hostname.indexOf(':') !== -1;\\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\\n};\\n/**\\n * Feature detection for WebSocket.\\n *\\n * @return {Boolean} whether this transport is available.\\n * @api public\\n */\\n\\n\\nWS.prototype.check = function () {\\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\\n};\",\"module.exports = toArray;\\n\\nfunction toArray(list, index) {\\n  var array = [];\\n  index = index || 0;\\n\\n  for (var i = index || 0; i < list.length; i++) {\\n    array[i - index] = list[i];\\n  }\\n\\n  return array;\\n}\",\"/**\\n * Expose `Backoff`.\\n */\\nmodule.exports = Backoff;\\n/**\\n * Initialize backoff timer with `opts`.\\n *\\n * - `min` initial timeout in milliseconds [100]\\n * - `max` max timeout [10000]\\n * - `jitter` [0]\\n * - `factor` [2]\\n *\\n * @param {Object} opts\\n * @api public\\n */\\n\\nfunction Backoff(opts) {\\n  opts = opts || {};\\n  this.ms = opts.min || 100;\\n  this.max = opts.max || 10000;\\n  this.factor = opts.factor || 2;\\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\\n  this.attempts = 0;\\n}\\n/**\\n * Return the backoff duration.\\n *\\n * @return {Number}\\n * @api public\\n */\\n\\n\\nBackoff.prototype.duration = function () {\\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\\n\\n  if (this.jitter) {\\n    var rand = Math.random();\\n    var deviation = Math.floor(rand * this.jitter * ms);\\n    ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\\n  }\\n\\n  return Math.min(ms, this.max) | 0;\\n};\\n/**\\n * Reset the number of attempts.\\n *\\n * @api public\\n */\\n\\n\\nBackoff.prototype.reset = function () {\\n  this.attempts = 0;\\n};\\n/**\\n * Set the minimum duration\\n *\\n * @api public\\n */\\n\\n\\nBackoff.prototype.setMin = function (min) {\\n  this.ms = min;\\n};\\n/**\\n * Set the maximum duration\\n *\\n * @api public\\n */\\n\\n\\nBackoff.prototype.setMax = function (max) {\\n  this.max = max;\\n};\\n/**\\n * Set the jitter\\n *\\n * @api public\\n */\\n\\n\\nBackoff.prototype.setJitter = function (jitter) {\\n  this.jitter = jitter;\\n};\",\"'use strict';\\n\\nvar Readable = require('readable-stream');\\n\\nvar util = require('util'); // some versions of the buffer browser lib don't support Buffer.from (such as the one included by the current version of express-browserify)\\n\\n\\nvar bufferFrom = require('buffer-from');\\n/**\\n * Turns a MediaStream object (from getUserMedia) into a Node.js Readable stream and optionally converts the audio to Buffers\\n *\\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Navigator/getUserMedia\\n *\\n * @param {Object} [opts] options\\n * @param {MediaStream} [opts.stream] https://developer.mozilla.org/en-US/docs/Web/API/MediaStream - for iOS compatibility, it is recommended that you create the MicrophoneStream instance in response to the tap - before you have a MediaStream, and then later call setStream() with the MediaStream.\\n * @param {Boolean} [opts.objectMode=false] Puts the stream into ObjectMode where it emits AudioBuffers instead of Buffers - see https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer\\n * @param {Number|null} [opts.bufferSize=null] https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createScriptProcessor\\n * @param {AudioContext} [opts.context] - AudioContext - will be automatically created if not passed in\\n * @constructor\\n */\\n\\n\\nfunction MicrophoneStream(opts) {\\n  // backwards compatibility - passing in the Stream here will generally not work on iOS 11 Safari\\n  if (typeof MediaStream !== 'undefined' && opts instanceof MediaStream) {\\n    var stream = opts;\\n    opts = arguments[1] || {};\\n    opts.stream = stream;\\n  }\\n\\n  opts = opts || {}; // \\\"It is recommended for authors to not specify this buffer size and allow the implementation to pick a good\\n  // buffer size to balance between latency and audio quality.\\\"\\n  // https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createScriptProcessor\\n  // however, webkitAudioContext (safari) requires it to be set'\\n  // Possible values: null, 256, 512, 1024, 2048, 4096, 8192, 16384\\n\\n  var bufferSize = typeof window.AudioContext === 'undefined' ? 4096 : null;\\n  bufferSize = opts.bufferSize || bufferSize; // We can only emit one channel's worth of audio, so only one input. (Who has multiple microphones anyways?)\\n\\n  var inputChannels = 1; // we shouldn't need any output channels (going back to the browser), but chrome is buggy and won't give us any audio without one\\n\\n  var outputChannels = 1;\\n  Readable.call(this, opts);\\n  var self = this;\\n  var recording = true;\\n  /**\\n   * Convert and emit the raw audio data\\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/ScriptProcessorNode/onaudioprocess\\n   * @param {AudioProcessingEvent} e https://developer.mozilla.org/en-US/docs/Web/API/AudioProcessingEvent\\n   */\\n\\n  function recorderProcess(e) {\\n    // onaudioprocess can be called at least once after we've stopped\\n    if (recording) {\\n      self.push(opts.objectMode ? e.inputBuffer : bufferFrom(e.inputBuffer.getChannelData(0).buffer));\\n    }\\n  }\\n\\n  var AudioContext = window.AudioContext || window.webkitAudioContext;\\n  var context = this.context = opts.context || new AudioContext();\\n  var recorder = context.createScriptProcessor(bufferSize, inputChannels, outputChannels); // other half of workaround for chrome bugs\\n\\n  recorder.connect(context.destination);\\n  var audioInput;\\n  /**\\n   * Set the MediaStream\\n   *\\n   * This was separated from the constructor to enable better compatibility with Safari on iOS 11.\\n   *\\n   * Typically the stream is only available asynchronously, but the context must be created or resumed directly in\\n   * response to a user's tap on iOS.\\n   *\\n   * @param {MediaStream} stream https://developer.mozilla.org/en-US/docs/Web/API/MediaStream\\n   */\\n\\n  this.setStream = function (stream) {\\n    this.stream = stream;\\n    audioInput = context.createMediaStreamSource(stream);\\n    audioInput.connect(recorder);\\n    recorder.onaudioprocess = recorderProcess;\\n  };\\n\\n  if (opts.stream) {\\n    this.setStream(stream);\\n  }\\n\\n  this.stop = function () {\\n    if (context.state === 'closed') {\\n      return;\\n    }\\n\\n    try {\\n      this.stream.getTracks()[0].stop();\\n    } catch (ex) {// This fails in some older versions of chrome. Nothing we can do about it.\\n    }\\n\\n    recorder.disconnect();\\n\\n    if (audioInput) {\\n      audioInput.disconnect();\\n    }\\n\\n    try {\\n      context.close(); // returns a promise;\\n    } catch (ex) {// this can also fail in older versions of chrome\\n    }\\n\\n    recording = false;\\n    self.push(null);\\n    self.emit('close');\\n  };\\n\\n  process.nextTick(function () {\\n    self.emit('format', {\\n      channels: 1,\\n      bitDepth: 32,\\n      sampleRate: context.sampleRate,\\n      signed: true,\\n      float: true\\n    });\\n  });\\n}\\n\\nutil.inherits(MicrophoneStream, Readable);\\n\\nMicrophoneStream.prototype._read = function ()\\n/* bytes */\\n{// no-op, (flow-control doesn't really work on live audio)\\n};\\n/**\\n * Converts a Buffer back into the raw Float32Array format that browsers use.\\n * Note: this is just a new DataView for the same underlying buffer -\\n * the actual audio data is not copied or changed here.\\n *\\n * @param {Buffer} chunk node-style buffer of audio data from a 'data' event or read() call\\n * @return {Float32Array} raw 32-bit float data view of audio data\\n */\\n\\n\\nMicrophoneStream.toRaw = function toFloat32(chunk) {\\n  return new Float32Array(chunk.buffer);\\n};\\n\\nmodule.exports = MicrophoneStream;\",\"exports = module.exports = require('./lib/_stream_readable.js');\\nexports.Stream = exports;\\nexports.Readable = exports;\\nexports.Writable = require('./lib/_stream_writable.js');\\nexports.Duplex = require('./lib/_stream_duplex.js');\\nexports.Transform = require('./lib/_stream_transform.js');\\nexports.PassThrough = require('./lib/_stream_passthrough.js');\\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\",\"'use strict';\\n\\nfunction _objectSpread(target) {\\n  for (var i = 1; i < arguments.length; i++) {\\n    var source = arguments[i] != null ? arguments[i] : {};\\n    var ownKeys = Object.keys(source);\\n\\n    if (typeof Object.getOwnPropertySymbols === 'function') {\\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\\n      }));\\n    }\\n\\n    ownKeys.forEach(function (key) {\\n      _defineProperty(target, key, source[key]);\\n    });\\n  }\\n\\n  return target;\\n}\\n\\nfunction _defineProperty(obj, key, value) {\\n  if (key in obj) {\\n    Object.defineProperty(obj, key, {\\n      value: value,\\n      enumerable: true,\\n      configurable: true,\\n      writable: true\\n    });\\n  } else {\\n    obj[key] = value;\\n  }\\n\\n  return obj;\\n}\\n\\nvar _require = require('buffer'),\\n    Buffer = _require.Buffer;\\n\\nvar _require2 = require('util'),\\n    inspect = _require2.inspect;\\n\\nvar custom = inspect && inspect.custom || 'inspect';\\n\\nfunction copyBuffer(src, target, offset) {\\n  Buffer.prototype.copy.call(src, target, offset);\\n}\\n\\nmodule.exports =\\n/*#__PURE__*/\\nfunction () {\\n  function BufferList() {\\n    this.head = null;\\n    this.tail = null;\\n    this.length = 0;\\n  }\\n\\n  var _proto = BufferList.prototype;\\n\\n  _proto.push = function push(v) {\\n    var entry = {\\n      data: v,\\n      next: null\\n    };\\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\\n    this.tail = entry;\\n    ++this.length;\\n  };\\n\\n  _proto.unshift = function unshift(v) {\\n    var entry = {\\n      data: v,\\n      next: this.head\\n    };\\n    if (this.length === 0) this.tail = entry;\\n    this.head = entry;\\n    ++this.length;\\n  };\\n\\n  _proto.shift = function shift() {\\n    if (this.length === 0) return;\\n    var ret = this.head.data;\\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\\n    --this.length;\\n    return ret;\\n  };\\n\\n  _proto.clear = function clear() {\\n    this.head = this.tail = null;\\n    this.length = 0;\\n  };\\n\\n  _proto.join = function join(s) {\\n    if (this.length === 0) return '';\\n    var p = this.head;\\n    var ret = '' + p.data;\\n\\n    while (p = p.next) {\\n      ret += s + p.data;\\n    }\\n\\n    return ret;\\n  };\\n\\n  _proto.concat = function concat(n) {\\n    if (this.length === 0) return Buffer.alloc(0);\\n    var ret = Buffer.allocUnsafe(n >>> 0);\\n    var p = this.head;\\n    var i = 0;\\n\\n    while (p) {\\n      copyBuffer(p.data, ret, i);\\n      i += p.data.length;\\n      p = p.next;\\n    }\\n\\n    return ret;\\n  } // Consumes a specified amount of bytes or characters from the buffered data.\\n  ;\\n\\n  _proto.consume = function consume(n, hasStrings) {\\n    var ret;\\n\\n    if (n < this.head.data.length) {\\n      // `slice` is the same for buffers and strings.\\n      ret = this.head.data.slice(0, n);\\n      this.head.data = this.head.data.slice(n);\\n    } else if (n === this.head.data.length) {\\n      // First chunk is a perfect match.\\n      ret = this.shift();\\n    } else {\\n      // Result spans more than one buffer.\\n      ret = hasStrings ? this._getString(n) : this._getBuffer(n);\\n    }\\n\\n    return ret;\\n  };\\n\\n  _proto.first = function first() {\\n    return this.head.data;\\n  } // Consumes a specified amount of characters from the buffered data.\\n  ;\\n\\n  _proto._getString = function _getString(n) {\\n    var p = this.head;\\n    var c = 1;\\n    var ret = p.data;\\n    n -= ret.length;\\n\\n    while (p = p.next) {\\n      var str = p.data;\\n      var nb = n > str.length ? str.length : n;\\n      if (nb === str.length) ret += str;else ret += str.slice(0, n);\\n      n -= nb;\\n\\n      if (n === 0) {\\n        if (nb === str.length) {\\n          ++c;\\n          if (p.next) this.head = p.next;else this.head = this.tail = null;\\n        } else {\\n          this.head = p;\\n          p.data = str.slice(nb);\\n        }\\n\\n        break;\\n      }\\n\\n      ++c;\\n    }\\n\\n    this.length -= c;\\n    return ret;\\n  } // Consumes a specified amount of bytes from the buffered data.\\n  ;\\n\\n  _proto._getBuffer = function _getBuffer(n) {\\n    var ret = Buffer.allocUnsafe(n);\\n    var p = this.head;\\n    var c = 1;\\n    p.data.copy(ret);\\n    n -= p.data.length;\\n\\n    while (p = p.next) {\\n      var buf = p.data;\\n      var nb = n > buf.length ? buf.length : n;\\n      buf.copy(ret, ret.length - n, 0, nb);\\n      n -= nb;\\n\\n      if (n === 0) {\\n        if (nb === buf.length) {\\n          ++c;\\n          if (p.next) this.head = p.next;else this.head = this.tail = null;\\n        } else {\\n          this.head = p;\\n          p.data = buf.slice(nb);\\n        }\\n\\n        break;\\n      }\\n\\n      ++c;\\n    }\\n\\n    this.length -= c;\\n    return ret;\\n  } // Make sure the linked list only shows the minimal necessary information.\\n  ;\\n\\n  _proto[custom] = function (_, options) {\\n    return inspect(this, _objectSpread({}, options, {\\n      // Only inspect one level.\\n      depth: 0,\\n      // It should not recurse.\\n      customInspect: false\\n    }));\\n  };\\n\\n  return BufferList;\\n}();\",\"'use strict';\\n\\nvar experimentalWarnings = new Set();\\n\\nfunction emitExperimentalWarning(feature) {\\n  if (experimentalWarnings.has(feature)) return;\\n  var msg = feature + ' is an experimental feature. This feature could ' + 'change at any time';\\n  experimentalWarnings.add(feature);\\n  process.emitWarning(msg, 'ExperimentalWarning');\\n}\\n\\nfunction noop() {}\\n\\nmodule.exports.emitExperimentalWarning = process.emitWarning ? emitExperimentalWarning : noop;\",\"'use strict';\\n\\nvar _Object$setPrototypeO;\\n\\nfunction _defineProperty(obj, key, value) {\\n  if (key in obj) {\\n    Object.defineProperty(obj, key, {\\n      value: value,\\n      enumerable: true,\\n      configurable: true,\\n      writable: true\\n    });\\n  } else {\\n    obj[key] = value;\\n  }\\n\\n  return obj;\\n}\\n\\nvar finished = require('./end-of-stream');\\n\\nvar kLastResolve = Symbol('lastResolve');\\nvar kLastReject = Symbol('lastReject');\\nvar kError = Symbol('error');\\nvar kEnded = Symbol('ended');\\nvar kLastPromise = Symbol('lastPromise');\\nvar kHandlePromise = Symbol('handlePromise');\\nvar kStream = Symbol('stream');\\n\\nfunction createIterResult(value, done) {\\n  return {\\n    value: value,\\n    done: done\\n  };\\n}\\n\\nfunction readAndResolve(iter) {\\n  var resolve = iter[kLastResolve];\\n\\n  if (resolve !== null) {\\n    var data = iter[kStream].read(); // we defer if data is null\\n    // we can be expecting either 'end' or\\n    // 'error'\\n\\n    if (data !== null) {\\n      iter[kLastPromise] = null;\\n      iter[kLastResolve] = null;\\n      iter[kLastReject] = null;\\n      resolve(createIterResult(data, false));\\n    }\\n  }\\n}\\n\\nfunction onReadable(iter) {\\n  // we wait for the next tick, because it might\\n  // emit an error with process.nextTick\\n  process.nextTick(readAndResolve, iter);\\n}\\n\\nfunction wrapForNext(lastPromise, iter) {\\n  return function (resolve, reject) {\\n    lastPromise.then(function () {\\n      if (iter[kEnded]) {\\n        resolve(createIterResult(undefined, true));\\n        return;\\n      }\\n\\n      iter[kHandlePromise](resolve, reject);\\n    }, reject);\\n  };\\n}\\n\\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\\n  get stream() {\\n    return this[kStream];\\n  },\\n\\n  next: function next() {\\n    var _this = this; // if we have detected an error in the meanwhile\\n    // reject straight away\\n\\n\\n    var error = this[kError];\\n\\n    if (error !== null) {\\n      return Promise.reject(error);\\n    }\\n\\n    if (this[kEnded]) {\\n      return Promise.resolve(createIterResult(undefined, true));\\n    }\\n\\n    if (this[kStream].destroyed) {\\n      // We need to defer via nextTick because if .destroy(err) is\\n      // called, the error will be emitted via nextTick, and\\n      // we cannot guarantee that there is no error lingering around\\n      // waiting to be emitted.\\n      return new Promise(function (resolve, reject) {\\n        process.nextTick(function () {\\n          if (_this[kError]) {\\n            reject(_this[kError]);\\n          } else {\\n            resolve(createIterResult(undefined, true));\\n          }\\n        });\\n      });\\n    } // if we have multiple next() calls\\n    // we will wait for the previous Promise to finish\\n    // this logic is optimized to support for await loops,\\n    // where next() is only called once at a time\\n\\n\\n    var lastPromise = this[kLastPromise];\\n    var promise;\\n\\n    if (lastPromise) {\\n      promise = new Promise(wrapForNext(lastPromise, this));\\n    } else {\\n      // fast path needed to support multiple this.push()\\n      // without triggering the next() queue\\n      var data = this[kStream].read();\\n\\n      if (data !== null) {\\n        return Promise.resolve(createIterResult(data, false));\\n      }\\n\\n      promise = new Promise(this[kHandlePromise]);\\n    }\\n\\n    this[kLastPromise] = promise;\\n    return promise;\\n  }\\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\\n  return this;\\n}), _defineProperty(_Object$setPrototypeO, \\\"return\\\", function _return() {\\n  var _this2 = this; // destroy(err, cb) is a private API\\n  // we can guarantee we have that here, because we control the\\n  // Readable class this is attached to\\n\\n\\n  return new Promise(function (resolve, reject) {\\n    _this2[kStream].destroy(null, function (err) {\\n      if (err) {\\n        reject(err);\\n        return;\\n      }\\n\\n      resolve(createIterResult(undefined, true));\\n    });\\n  });\\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\\n\\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\\n  var _Object$create;\\n\\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\\n    value: stream,\\n    writable: true\\n  }), _defineProperty(_Object$create, kLastResolve, {\\n    value: null,\\n    writable: true\\n  }), _defineProperty(_Object$create, kLastReject, {\\n    value: null,\\n    writable: true\\n  }), _defineProperty(_Object$create, kError, {\\n    value: null,\\n    writable: true\\n  }), _defineProperty(_Object$create, kEnded, {\\n    value: stream._readableState.endEmitted,\\n    writable: true\\n  }), _defineProperty(_Object$create, kHandlePromise, {\\n    value: function value(resolve, reject) {\\n      var data = iterator[kStream].read();\\n\\n      if (data) {\\n        iterator[kLastPromise] = null;\\n        iterator[kLastResolve] = null;\\n        iterator[kLastReject] = null;\\n        resolve(createIterResult(data, false));\\n      } else {\\n        iterator[kLastResolve] = resolve;\\n        iterator[kLastReject] = reject;\\n      }\\n    },\\n    writable: true\\n  }), _Object$create));\\n  iterator[kLastPromise] = null;\\n  finished(stream, function (err) {\\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\\n      // returned by next() and store the error\\n\\n      if (reject !== null) {\\n        iterator[kLastPromise] = null;\\n        iterator[kLastResolve] = null;\\n        iterator[kLastReject] = null;\\n        reject(err);\\n      }\\n\\n      iterator[kError] = err;\\n      return;\\n    }\\n\\n    var resolve = iterator[kLastResolve];\\n\\n    if (resolve !== null) {\\n      iterator[kLastPromise] = null;\\n      iterator[kLastResolve] = null;\\n      iterator[kLastReject] = null;\\n      resolve(createIterResult(undefined, true));\\n    }\\n\\n    iterator[kEnded] = true;\\n  });\\n  stream.on('readable', onReadable.bind(null, iterator));\\n  return iterator;\\n};\\n\\nmodule.exports = createReadableStreamAsyncIterator;\",\"// Copyright Joyent, Inc. and other Node contributors.\\n//\\n// Permission is hereby granted, free of charge, to any person obtaining a\\n// copy of this software and associated documentation files (the\\n// \\\"Software\\\"), to deal in the Software without restriction, including\\n// without limitation the rights to use, copy, modify, merge, publish,\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\n// persons to whom the Software is furnished to do so, subject to the\\n// following conditions:\\n//\\n// The above copyright notice and this permission notice shall be included\\n// in all copies or substantial portions of the Software.\\n//\\n// THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\n// a passthrough stream.\\n// basically just the most minimal sort of Transform stream.\\n// Every written chunk gets output as-is.\\n'use strict';\\n\\nmodule.exports = PassThrough;\\n\\nvar Transform = require('./_stream_transform');\\n\\nrequire('inherits')(PassThrough, Transform);\\n\\nfunction PassThrough(options) {\\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\\n  Transform.call(this, options);\\n}\\n\\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\\n  cb(null, chunk);\\n};\",\"// Ported from https://github.com/mafintosh/pump with\\n// permission from the author, Mathias Buus (@mafintosh).\\n'use strict';\\n\\nvar eos;\\n\\nfunction once(callback) {\\n  var called = false;\\n  return function () {\\n    if (called) return;\\n    called = true;\\n    callback.apply(void 0, arguments);\\n  };\\n}\\n\\nvar _require$codes = require('../../../errors').codes,\\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\\n\\nfunction noop(err) {\\n  // Rethrow the error if it exists to avoid swallowing it\\n  if (err) throw err;\\n}\\n\\nfunction isRequest(stream) {\\n  return stream.setHeader && typeof stream.abort === 'function';\\n}\\n\\nfunction destroyer(stream, reading, writing, callback) {\\n  callback = once(callback);\\n  var closed = false;\\n  stream.on('close', function () {\\n    closed = true;\\n  });\\n  if (eos === undefined) eos = require('./end-of-stream');\\n  eos(stream, {\\n    readable: reading,\\n    writable: writing\\n  }, function (err) {\\n    if (err) return callback(err);\\n    closed = true;\\n    callback();\\n  });\\n  var destroyed = false;\\n  return function (err) {\\n    if (closed) return;\\n    if (destroyed) return;\\n    destroyed = true; // request.destroy just do .end - .abort is what we want\\n\\n    if (isRequest(stream)) return stream.abort();\\n    if (typeof stream.destroy === 'function') return stream.destroy();\\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\\n  };\\n}\\n\\nfunction call(fn) {\\n  fn();\\n}\\n\\nfunction pipe(from, to) {\\n  return from.pipe(to);\\n}\\n\\nfunction popCallback(streams) {\\n  if (!streams.length) return noop;\\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\\n  return streams.pop();\\n}\\n\\nfunction pipeline() {\\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\\n    streams[_key] = arguments[_key];\\n  }\\n\\n  var callback = popCallback(streams);\\n  if (Array.isArray(streams[0])) streams = streams[0];\\n\\n  if (streams.length < 2) {\\n    throw new ERR_MISSING_ARGS('streams');\\n  }\\n\\n  var error;\\n  var destroys = streams.map(function (stream, i) {\\n    var reading = i < streams.length - 1;\\n    var writing = i > 0;\\n    return destroyer(stream, reading, writing, function (err) {\\n      if (!error) error = err;\\n      if (err) destroys.forEach(call);\\n      if (reading) return;\\n      destroys.forEach(call);\\n      callback(error);\\n    });\\n  });\\n  return streams.reduce(pipe);\\n}\\n\\nmodule.exports = pipeline;\",\"var toString = Object.prototype.toString;\\nvar isModern = typeof Buffer.alloc === 'function' && typeof Buffer.allocUnsafe === 'function' && typeof Buffer.from === 'function';\\n\\nfunction isArrayBuffer(input) {\\n  return toString.call(input).slice(8, -1) === 'ArrayBuffer';\\n}\\n\\nfunction fromArrayBuffer(obj, byteOffset, length) {\\n  byteOffset >>>= 0;\\n  var maxLength = obj.byteLength - byteOffset;\\n\\n  if (maxLength < 0) {\\n    throw new RangeError(\\\"'offset' is out of bounds\\\");\\n  }\\n\\n  if (length === undefined) {\\n    length = maxLength;\\n  } else {\\n    length >>>= 0;\\n\\n    if (length > maxLength) {\\n      throw new RangeError(\\\"'length' is out of bounds\\\");\\n    }\\n  }\\n\\n  return isModern ? Buffer.from(obj.slice(byteOffset, byteOffset + length)) : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)));\\n}\\n\\nfunction fromString(string, encoding) {\\n  if (typeof encoding !== 'string' || encoding === '') {\\n    encoding = 'utf8';\\n  }\\n\\n  if (!Buffer.isEncoding(encoding)) {\\n    throw new TypeError('\\\"encoding\\\" must be a valid string encoding');\\n  }\\n\\n  return isModern ? Buffer.from(string, encoding) : new Buffer(string, encoding);\\n}\\n\\nfunction bufferFrom(value, encodingOrOffset, length) {\\n  if (typeof value === 'number') {\\n    throw new TypeError('\\\"value\\\" argument must not be a number');\\n  }\\n\\n  if (isArrayBuffer(value)) {\\n    return fromArrayBuffer(value, encodingOrOffset, length);\\n  }\\n\\n  if (typeof value === 'string') {\\n    return fromString(value, encodingOrOffset);\\n  }\\n\\n  return isModern ? Buffer.from(value) : new Buffer(value);\\n}\\n\\nmodule.exports = bufferFrom;\",\"var common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\nLame = require('./Lame.js');\\nPresets = require('./Presets.js');\\nGainAnalysis = require('./GainAnalysis.js');\\nQuantizePVT = require('./QuantizePVT.js');\\nQuantize = require('./Quantize.js');\\nTakehiro = require('./Takehiro.js');\\nReservoir = require('./Reservoir.js');\\nMPEGMode = require('./MPEGMode.js');\\nBitStream = require('./BitStream.js');\\n\\nvar Encoder = require('./Encoder.js');\\n\\nvar Version = require('./Version.js');\\n\\nvar VBRTag = require('./VBRTag.js');\\n\\nfunction GetAudio() {\\n  var parse;\\n  var mpg;\\n\\n  this.setModules = function (parse2, mpg2) {\\n    parse = parse2;\\n    mpg = mpg2;\\n  };\\n}\\n\\nfunction Parse() {\\n  var ver;\\n  var id3;\\n  var pre;\\n\\n  this.setModules = function (ver2, id32, pre2) {\\n    ver = ver2;\\n    id3 = id32;\\n    pre = pre2;\\n  };\\n}\\n\\nfunction MPGLib() {}\\n\\nfunction ID3Tag() {\\n  var bits;\\n  var ver;\\n\\n  this.setModules = function (_bits, _ver) {\\n    bits = _bits;\\n    ver = _ver;\\n  };\\n}\\n\\nfunction Mp3Encoder(channels, samplerate, kbps) {\\n  if (arguments.length != 3) {\\n    console.error('WARN: Mp3Encoder(channels, samplerate, kbps) not specified');\\n    channels = 1;\\n    samplerate = 44100;\\n    kbps = 128;\\n  }\\n\\n  var lame = new Lame();\\n  var gaud = new GetAudio();\\n  var ga = new GainAnalysis();\\n  var bs = new BitStream();\\n  var p = new Presets();\\n  var qupvt = new QuantizePVT();\\n  var qu = new Quantize();\\n  var vbr = new VBRTag();\\n  var ver = new Version();\\n  var id3 = new ID3Tag();\\n  var rv = new Reservoir();\\n  var tak = new Takehiro();\\n  var parse = new Parse();\\n  var mpg = new MPGLib();\\n  lame.setModules(ga, bs, p, qupvt, qu, vbr, ver, id3, mpg);\\n  bs.setModules(ga, mpg, ver, vbr);\\n  id3.setModules(bs, ver);\\n  p.setModules(lame);\\n  qu.setModules(bs, rv, qupvt, tak);\\n  qupvt.setModules(tak, rv, lame.enc.psy);\\n  rv.setModules(bs);\\n  tak.setModules(qupvt);\\n  vbr.setModules(lame, bs, ver);\\n  gaud.setModules(parse, mpg);\\n  parse.setModules(ver, id3, p);\\n  var gfp = lame.lame_init();\\n  gfp.num_channels = channels;\\n  gfp.in_samplerate = samplerate;\\n  gfp.brate = kbps;\\n  gfp.mode = MPEGMode.STEREO;\\n  gfp.quality = 3;\\n  gfp.bWriteVbrTag = false;\\n  gfp.disable_reservoir = true;\\n  gfp.write_id3tag_automatic = false;\\n  var retcode = lame.lame_init_params(gfp);\\n  assert(0 == retcode);\\n  var maxSamples = 1152;\\n  var mp3buf_size = 0 | 1.25 * maxSamples + 7200;\\n  var mp3buf = new_byte(mp3buf_size);\\n\\n  this.encodeBuffer = function (left, right) {\\n    if (channels == 1) {\\n      right = left;\\n    }\\n\\n    assert(left.length == right.length);\\n\\n    if (left.length > maxSamples) {\\n      maxSamples = left.length;\\n      mp3buf_size = 0 | 1.25 * maxSamples + 7200;\\n      mp3buf = new_byte(mp3buf_size);\\n    }\\n\\n    var _sz = lame.lame_encode_buffer(gfp, left, right, left.length, mp3buf, 0, mp3buf_size);\\n\\n    return new Int8Array(mp3buf.subarray(0, _sz));\\n  };\\n\\n  this.flush = function () {\\n    var _sz = lame.lame_encode_flush(gfp, mp3buf, 0, mp3buf_size);\\n\\n    return new Int8Array(mp3buf.subarray(0, _sz));\\n  };\\n}\\n\\nfunction WavHeader() {\\n  this.dataOffset = 0;\\n  this.dataLen = 0;\\n  this.channels = 0;\\n  this.sampleRate = 0;\\n}\\n\\nfunction fourccToInt(fourcc) {\\n  return fourcc.charCodeAt(0) << 24 | fourcc.charCodeAt(1) << 16 | fourcc.charCodeAt(2) << 8 | fourcc.charCodeAt(3);\\n}\\n\\nWavHeader.RIFF = fourccToInt(\\\"RIFF\\\");\\nWavHeader.WAVE = fourccToInt(\\\"WAVE\\\");\\nWavHeader.fmt_ = fourccToInt(\\\"fmt \\\");\\nWavHeader.data = fourccToInt(\\\"data\\\");\\n\\nWavHeader.readHeader = function (dataView) {\\n  var w = new WavHeader();\\n  var header = dataView.getUint32(0, false);\\n\\n  if (WavHeader.RIFF != header) {\\n    return;\\n  }\\n\\n  var fileLen = dataView.getUint32(4, true);\\n\\n  if (WavHeader.WAVE != dataView.getUint32(8, false)) {\\n    return;\\n  }\\n\\n  if (WavHeader.fmt_ != dataView.getUint32(12, false)) {\\n    return;\\n  }\\n\\n  var fmtLen = dataView.getUint32(16, true);\\n  var pos = 16 + 4;\\n\\n  switch (fmtLen) {\\n    case 16:\\n    case 18:\\n      w.channels = dataView.getUint16(pos + 2, true);\\n      w.sampleRate = dataView.getUint32(pos + 4, true);\\n      break;\\n\\n    default:\\n      throw 'extended fmt chunk not implemented';\\n  }\\n\\n  pos += fmtLen;\\n  var data = WavHeader.data;\\n  var len = 0;\\n\\n  while (data != header) {\\n    header = dataView.getUint32(pos, false);\\n    len = dataView.getUint32(pos + 4, true);\\n\\n    if (data == header) {\\n      break;\\n    }\\n\\n    pos += len + 8;\\n  }\\n\\n  w.dataLen = len;\\n  w.dataOffset = pos + 8;\\n  return w;\\n};\\n\\nmodule.exports.Mp3Encoder = Mp3Encoder;\\nmodule.exports.WavHeader = WavHeader;\",\"var common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar new_short_n = common.new_short_n;\\nvar assert = common.assert;\\n\\nvar PsyModel = require('./PsyModel.js');\\n\\nvar LameGlobalFlags = require('./LameGlobalFlags.js');\\n\\nvar LameInternalFlags = require('./LameInternalFlags.js');\\n\\nvar ATH = require('./ATH.js');\\n\\nvar ReplayGain = require('./ReplayGain.js');\\n\\nvar CBRNewIterationLoop = require('./CBRNewIterationLoop.js');\\n\\nvar BitStream = require('./BitStream.js');\\n\\nvar Tables = require('./Tables.js');\\n\\nvar Encoder = require('./Encoder.js');\\n\\nfunction Lame() {\\n  var self = this;\\n  var LAME_MAXALBUMART = 128 * 1024;\\n  Lame.V9 = 410;\\n  Lame.V8 = 420;\\n  Lame.V7 = 430;\\n  Lame.V6 = 440;\\n  Lame.V5 = 450;\\n  Lame.V4 = 460;\\n  Lame.V3 = 470;\\n  Lame.V2 = 480;\\n  Lame.V1 = 490;\\n  Lame.V0 = 500;\\n  /* still there for compatibility */\\n\\n  Lame.R3MIX = 1000;\\n  Lame.STANDARD = 1001;\\n  Lame.EXTREME = 1002;\\n  Lame.INSANE = 1003;\\n  Lame.STANDARD_FAST = 1004;\\n  Lame.EXTREME_FAST = 1005;\\n  Lame.MEDIUM = 1006;\\n  Lame.MEDIUM_FAST = 1007;\\n  /**\\n   * maximum size of mp3buffer needed if you encode at most 1152 samples for\\n   * each call to lame_encode_buffer. see lame_encode_buffer() below\\n   * (LAME_MAXMP3BUFFER is now obsolete)\\n   */\\n\\n  var LAME_MAXMP3BUFFER = 16384 + LAME_MAXALBUMART;\\n  Lame.LAME_MAXMP3BUFFER = LAME_MAXMP3BUFFER;\\n  var ga;\\n  var bs;\\n  var p;\\n  var qupvt;\\n  var qu;\\n  var psy = new PsyModel();\\n  var vbr;\\n  var ver;\\n  var id3;\\n  var mpglib;\\n  this.enc = new Encoder();\\n\\n  this.setModules = function (_ga, _bs, _p, _qupvt, _qu, _vbr, _ver, _id3, _mpglib) {\\n    ga = _ga;\\n    bs = _bs;\\n    p = _p;\\n    qupvt = _qupvt;\\n    qu = _qu;\\n    vbr = _vbr;\\n    ver = _ver;\\n    id3 = _id3;\\n    mpglib = _mpglib;\\n    this.enc.setModules(bs, psy, qupvt, vbr);\\n  };\\n  /**\\n   * PSY Model related stuff\\n   */\\n\\n\\n  function PSY() {\\n    /**\\n     * The dbQ stuff.\\n     */\\n    this.mask_adjust = 0.;\\n    /**\\n     * The dbQ stuff.\\n     */\\n\\n    this.mask_adjust_short = 0.;\\n    /* at transition from one scalefactor band to next */\\n\\n    /**\\n     * Band weight long scalefactor bands.\\n     */\\n\\n    this.bo_l_weight = new_float(Encoder.SBMAX_l);\\n    /**\\n     * Band weight short scalefactor bands.\\n     */\\n\\n    this.bo_s_weight = new_float(Encoder.SBMAX_s);\\n  }\\n\\n  function LowPassHighPass() {\\n    this.lowerlimit = 0.;\\n  }\\n\\n  function BandPass(bitrate, lPass) {\\n    this.lowpass = lPass;\\n  }\\n\\n  var LAME_ID = 0xFFF88E3B;\\n\\n  function lame_init_old(gfp) {\\n    var gfc;\\n    gfp.class_id = LAME_ID;\\n    gfc = gfp.internal_flags = new LameInternalFlags();\\n    /* Global flags. set defaults here for non-zero values */\\n\\n    /* see lame.h for description */\\n\\n    /*\\n     * set integer values to -1 to mean that LAME will compute the best\\n     * value, UNLESS the calling program as set it (and the value is no\\n     * longer -1)\\n     */\\n\\n    gfp.mode = MPEGMode.NOT_SET;\\n    gfp.original = 1;\\n    gfp.in_samplerate = 44100;\\n    gfp.num_channels = 2;\\n    gfp.num_samples = -1;\\n    gfp.bWriteVbrTag = true;\\n    gfp.quality = -1;\\n    gfp.short_blocks = null;\\n    gfc.subblock_gain = -1;\\n    gfp.lowpassfreq = 0;\\n    gfp.highpassfreq = 0;\\n    gfp.lowpasswidth = -1;\\n    gfp.highpasswidth = -1;\\n    gfp.VBR = VbrMode.vbr_off;\\n    gfp.VBR_q = 4;\\n    gfp.ATHcurve = -1;\\n    gfp.VBR_mean_bitrate_kbps = 128;\\n    gfp.VBR_min_bitrate_kbps = 0;\\n    gfp.VBR_max_bitrate_kbps = 0;\\n    gfp.VBR_hard_min = 0;\\n    gfc.VBR_min_bitrate = 1;\\n    /* not 0 ????? */\\n\\n    gfc.VBR_max_bitrate = 13;\\n    /* not 14 ????? */\\n\\n    gfp.quant_comp = -1;\\n    gfp.quant_comp_short = -1;\\n    gfp.msfix = -1;\\n    gfc.resample_ratio = 1;\\n    gfc.OldValue[0] = 180;\\n    gfc.OldValue[1] = 180;\\n    gfc.CurrentStep[0] = 4;\\n    gfc.CurrentStep[1] = 4;\\n    gfc.masking_lower = 1;\\n    gfc.nsPsy.attackthre = -1;\\n    gfc.nsPsy.attackthre_s = -1;\\n    gfp.scale = -1;\\n    gfp.athaa_type = -1;\\n    gfp.ATHtype = -1;\\n    /* default = -1 = set in lame_init_params */\\n\\n    gfp.athaa_loudapprox = -1;\\n    /* 1 = flat loudness approx. (total energy) */\\n\\n    /* 2 = equal loudness curve */\\n\\n    gfp.athaa_sensitivity = 0.0;\\n    /* no offset */\\n\\n    gfp.useTemporal = null;\\n    gfp.interChRatio = -1;\\n    /*\\n     * The reason for int mf_samples_to_encode = ENCDELAY + POSTDELAY;\\n     * ENCDELAY = internal encoder delay. And then we have to add\\n     * POSTDELAY=288 because of the 50% MDCT overlap. A 576 MDCT granule\\n     * decodes to 1152 samples. To synthesize the 576 samples centered under\\n     * this granule we need the previous granule for the first 288 samples\\n     * (no problem), and the next granule for the next 288 samples (not\\n     * possible if this is last granule). So we need to pad with 288 samples\\n     * to make sure we can encode the 576 samples we are interested in.\\n     */\\n\\n    gfc.mf_samples_to_encode = Encoder.ENCDELAY + Encoder.POSTDELAY;\\n    gfp.encoder_padding = 0;\\n    gfc.mf_size = Encoder.ENCDELAY - Encoder.MDCTDELAY;\\n    /*\\n     * we pad input with this many 0's\\n     */\\n\\n    gfp.findReplayGain = false;\\n    gfp.decode_on_the_fly = false;\\n    gfc.decode_on_the_fly = false;\\n    gfc.findReplayGain = false;\\n    gfc.findPeakSample = false;\\n    gfc.RadioGain = 0;\\n    gfc.AudiophileGain = 0;\\n    gfc.noclipGainChange = 0;\\n    gfc.noclipScale = -1.0;\\n    gfp.preset = 0;\\n    gfp.write_id3tag_automatic = true;\\n    return 0;\\n  }\\n\\n  this.lame_init = function () {\\n    var gfp = new LameGlobalFlags();\\n    var ret = lame_init_old(gfp);\\n\\n    if (ret != 0) {\\n      return null;\\n    }\\n\\n    gfp.lame_allocated_gfp = 1;\\n    return gfp;\\n  };\\n\\n  function filter_coef(x) {\\n    if (x > 1.0) return 0.0;\\n    if (x <= 0.0) return 1.0;\\n    return Math.cos(Math.PI / 2 * x);\\n  }\\n\\n  this.nearestBitrateFullIndex = function (bitrate) {\\n    /* borrowed from DM abr presets */\\n    var full_bitrate_table = [8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320];\\n    var lower_range = 0,\\n        lower_range_kbps = 0,\\n        upper_range = 0,\\n        upper_range_kbps = 0;\\n    /* We assume specified bitrate will be 320kbps */\\n\\n    upper_range_kbps = full_bitrate_table[16];\\n    upper_range = 16;\\n    lower_range_kbps = full_bitrate_table[16];\\n    lower_range = 16;\\n    /*\\n     * Determine which significant bitrates the value specified falls\\n     * between, if loop ends without breaking then we were correct above\\n     * that the value was 320\\n     */\\n\\n    for (var b = 0; b < 16; b++) {\\n      if (Math.max(bitrate, full_bitrate_table[b + 1]) != bitrate) {\\n        upper_range_kbps = full_bitrate_table[b + 1];\\n        upper_range = b + 1;\\n        lower_range_kbps = full_bitrate_table[b];\\n        lower_range = b;\\n        break;\\n        /* We found upper range */\\n      }\\n    }\\n    /* Determine which range the value specified is closer to */\\n\\n\\n    if (upper_range_kbps - bitrate > bitrate - lower_range_kbps) {\\n      return lower_range;\\n    }\\n\\n    return upper_range;\\n  };\\n\\n  function optimum_samplefreq(lowpassfreq, input_samplefreq) {\\n    /*\\n     * Rules:\\n     *\\n     * - if possible, sfb21 should NOT be used\\n     */\\n    var suggested_samplefreq = 44100;\\n    if (input_samplefreq >= 48000) suggested_samplefreq = 48000;else if (input_samplefreq >= 44100) suggested_samplefreq = 44100;else if (input_samplefreq >= 32000) suggested_samplefreq = 32000;else if (input_samplefreq >= 24000) suggested_samplefreq = 24000;else if (input_samplefreq >= 22050) suggested_samplefreq = 22050;else if (input_samplefreq >= 16000) suggested_samplefreq = 16000;else if (input_samplefreq >= 12000) suggested_samplefreq = 12000;else if (input_samplefreq >= 11025) suggested_samplefreq = 11025;else if (input_samplefreq >= 8000) suggested_samplefreq = 8000;\\n    if (lowpassfreq == -1) return suggested_samplefreq;\\n    if (lowpassfreq <= 15960) suggested_samplefreq = 44100;\\n    if (lowpassfreq <= 15250) suggested_samplefreq = 32000;\\n    if (lowpassfreq <= 11220) suggested_samplefreq = 24000;\\n    if (lowpassfreq <= 9970) suggested_samplefreq = 22050;\\n    if (lowpassfreq <= 7230) suggested_samplefreq = 16000;\\n    if (lowpassfreq <= 5420) suggested_samplefreq = 12000;\\n    if (lowpassfreq <= 4510) suggested_samplefreq = 11025;\\n    if (lowpassfreq <= 3970) suggested_samplefreq = 8000;\\n\\n    if (input_samplefreq < suggested_samplefreq) {\\n      /*\\n       * choose a valid MPEG sample frequency above the input sample\\n       * frequency to avoid SFB21/12 bitrate bloat rh 061115\\n       */\\n      if (input_samplefreq > 44100) {\\n        return 48000;\\n      }\\n\\n      if (input_samplefreq > 32000) {\\n        return 44100;\\n      }\\n\\n      if (input_samplefreq > 24000) {\\n        return 32000;\\n      }\\n\\n      if (input_samplefreq > 22050) {\\n        return 24000;\\n      }\\n\\n      if (input_samplefreq > 16000) {\\n        return 22050;\\n      }\\n\\n      if (input_samplefreq > 12000) {\\n        return 16000;\\n      }\\n\\n      if (input_samplefreq > 11025) {\\n        return 12000;\\n      }\\n\\n      if (input_samplefreq > 8000) {\\n        return 11025;\\n      }\\n\\n      return 8000;\\n    }\\n\\n    return suggested_samplefreq;\\n  }\\n  /**\\n   * convert samp freq in Hz to index\\n   */\\n\\n\\n  function SmpFrqIndex(sample_freq, gpf) {\\n    switch (sample_freq) {\\n      case 44100:\\n        gpf.version = 1;\\n        return 0;\\n\\n      case 48000:\\n        gpf.version = 1;\\n        return 1;\\n\\n      case 32000:\\n        gpf.version = 1;\\n        return 2;\\n\\n      case 22050:\\n        gpf.version = 0;\\n        return 0;\\n\\n      case 24000:\\n        gpf.version = 0;\\n        return 1;\\n\\n      case 16000:\\n        gpf.version = 0;\\n        return 2;\\n\\n      case 11025:\\n        gpf.version = 0;\\n        return 0;\\n\\n      case 12000:\\n        gpf.version = 0;\\n        return 1;\\n\\n      case 8000:\\n        gpf.version = 0;\\n        return 2;\\n\\n      default:\\n        gpf.version = 0;\\n        return -1;\\n    }\\n  }\\n  /**\\n   * @param bRate\\n   *            legal rates from 8 to 320\\n   */\\n\\n\\n  function FindNearestBitrate(bRate, version, samplerate) {\\n    /* MPEG-1 or MPEG-2 LSF */\\n    if (samplerate < 16000) version = 2;\\n    var bitrate = Tables.bitrate_table[version][1];\\n\\n    for (var i = 2; i <= 14; i++) {\\n      if (Tables.bitrate_table[version][i] > 0) {\\n        if (Math.abs(Tables.bitrate_table[version][i] - bRate) < Math.abs(bitrate - bRate)) bitrate = Tables.bitrate_table[version][i];\\n      }\\n    }\\n\\n    return bitrate;\\n  }\\n  /**\\n   * @param bRate\\n   *            legal rates from 32 to 448 kbps\\n   * @param version\\n   *            MPEG-1 or MPEG-2/2.5 LSF\\n   */\\n\\n\\n  function BitrateIndex(bRate, version, samplerate) {\\n    /* convert bitrate in kbps to index */\\n    if (samplerate < 16000) version = 2;\\n\\n    for (var i = 0; i <= 14; i++) {\\n      if (Tables.bitrate_table[version][i] > 0) {\\n        if (Tables.bitrate_table[version][i] == bRate) {\\n          return i;\\n        }\\n      }\\n    }\\n\\n    return -1;\\n  }\\n\\n  function optimum_bandwidth(lh, bitrate) {\\n    /**\\n     * <PRE>\\n     *  Input:\\n     *      bitrate     total bitrate in kbps\\n     *\\n     *   Output:\\n     *      lowerlimit: best lowpass frequency limit for input filter in Hz\\n     *      upperlimit: best highpass frequency limit for input filter in Hz\\n     * </PRE>\\n     */\\n    var freq_map = [new BandPass(8, 2000), new BandPass(16, 3700), new BandPass(24, 3900), new BandPass(32, 5500), new BandPass(40, 7000), new BandPass(48, 7500), new BandPass(56, 10000), new BandPass(64, 11000), new BandPass(80, 13500), new BandPass(96, 15100), new BandPass(112, 15600), new BandPass(128, 17000), new BandPass(160, 17500), new BandPass(192, 18600), new BandPass(224, 19400), new BandPass(256, 19700), new BandPass(320, 20500)];\\n    var table_index = self.nearestBitrateFullIndex(bitrate);\\n    lh.lowerlimit = freq_map[table_index].lowpass;\\n  }\\n\\n  function lame_init_params_ppflt(gfp) {\\n    var gfc = gfp.internal_flags;\\n    /***************************************************************/\\n\\n    /* compute info needed for polyphase filter (filter type==0, default) */\\n\\n    /***************************************************************/\\n\\n    var lowpass_band = 32;\\n    var highpass_band = -1;\\n\\n    if (gfc.lowpass1 > 0) {\\n      var minband = 999;\\n\\n      for (var band = 0; band <= 31; band++) {\\n        var freq = band / 31.0;\\n        /* this band and above will be zeroed: */\\n\\n        if (freq >= gfc.lowpass2) {\\n          lowpass_band = Math.min(lowpass_band, band);\\n        }\\n\\n        if (gfc.lowpass1 < freq && freq < gfc.lowpass2) {\\n          minband = Math.min(minband, band);\\n        }\\n      }\\n      /*\\n       * compute the *actual* transition band implemented by the polyphase\\n       * filter\\n       */\\n\\n\\n      if (minband == 999) {\\n        gfc.lowpass1 = (lowpass_band - .75) / 31.0;\\n      } else {\\n        gfc.lowpass1 = (minband - .75) / 31.0;\\n      }\\n\\n      gfc.lowpass2 = lowpass_band / 31.0;\\n    }\\n    /*\\n     * make sure highpass filter is within 90% of what the effective\\n     * highpass frequency will be\\n     */\\n\\n\\n    if (gfc.highpass2 > 0) {\\n      if (gfc.highpass2 < .9 * (.75 / 31.0)) {\\n        gfc.highpass1 = 0;\\n        gfc.highpass2 = 0;\\n        System.err.println(\\\"Warning: highpass filter disabled.  \\\" + \\\"highpass frequency too small\\\\n\\\");\\n      }\\n    }\\n\\n    if (gfc.highpass2 > 0) {\\n      var maxband = -1;\\n\\n      for (var band = 0; band <= 31; band++) {\\n        var freq = band / 31.0;\\n        /* this band and below will be zereod */\\n\\n        if (freq <= gfc.highpass1) {\\n          highpass_band = Math.max(highpass_band, band);\\n        }\\n\\n        if (gfc.highpass1 < freq && freq < gfc.highpass2) {\\n          maxband = Math.max(maxband, band);\\n        }\\n      }\\n      /*\\n       * compute the *actual* transition band implemented by the polyphase\\n       * filter\\n       */\\n\\n\\n      gfc.highpass1 = highpass_band / 31.0;\\n\\n      if (maxband == -1) {\\n        gfc.highpass2 = (highpass_band + .75) / 31.0;\\n      } else {\\n        gfc.highpass2 = (maxband + .75) / 31.0;\\n      }\\n    }\\n\\n    for (var band = 0; band < 32; band++) {\\n      var fc1, fc2;\\n      var freq = band / 31.0;\\n\\n      if (gfc.highpass2 > gfc.highpass1) {\\n        fc1 = filter_coef((gfc.highpass2 - freq) / (gfc.highpass2 - gfc.highpass1 + 1e-20));\\n      } else {\\n        fc1 = 1.0;\\n      }\\n\\n      if (gfc.lowpass2 > gfc.lowpass1) {\\n        fc2 = filter_coef((freq - gfc.lowpass1) / (gfc.lowpass2 - gfc.lowpass1 + 1e-20));\\n      } else {\\n        fc2 = 1.0;\\n      }\\n\\n      gfc.amp_filter[band] = fc1 * fc2;\\n    }\\n  }\\n\\n  function lame_init_qval(gfp) {\\n    var gfc = gfp.internal_flags;\\n\\n    switch (gfp.quality) {\\n      default:\\n      case 9:\\n        /* no psymodel, no noise shaping */\\n        gfc.psymodel = 0;\\n        gfc.noise_shaping = 0;\\n        gfc.noise_shaping_amp = 0;\\n        gfc.noise_shaping_stop = 0;\\n        gfc.use_best_huffman = 0;\\n        gfc.full_outer_loop = 0;\\n        break;\\n\\n      case 8:\\n        gfp.quality = 7;\\n      //$FALL-THROUGH$\\n\\n      case 7:\\n        /*\\n         * use psymodel (for short block and m/s switching), but no noise\\n         * shapping\\n         */\\n        gfc.psymodel = 1;\\n        gfc.noise_shaping = 0;\\n        gfc.noise_shaping_amp = 0;\\n        gfc.noise_shaping_stop = 0;\\n        gfc.use_best_huffman = 0;\\n        gfc.full_outer_loop = 0;\\n        break;\\n\\n      case 6:\\n        gfc.psymodel = 1;\\n        if (gfc.noise_shaping == 0) gfc.noise_shaping = 1;\\n        gfc.noise_shaping_amp = 0;\\n        gfc.noise_shaping_stop = 0;\\n        if (gfc.subblock_gain == -1) gfc.subblock_gain = 1;\\n        gfc.use_best_huffman = 0;\\n        gfc.full_outer_loop = 0;\\n        break;\\n\\n      case 5:\\n        gfc.psymodel = 1;\\n        if (gfc.noise_shaping == 0) gfc.noise_shaping = 1;\\n        gfc.noise_shaping_amp = 0;\\n        gfc.noise_shaping_stop = 0;\\n        if (gfc.subblock_gain == -1) gfc.subblock_gain = 1;\\n        gfc.use_best_huffman = 0;\\n        gfc.full_outer_loop = 0;\\n        break;\\n\\n      case 4:\\n        gfc.psymodel = 1;\\n        if (gfc.noise_shaping == 0) gfc.noise_shaping = 1;\\n        gfc.noise_shaping_amp = 0;\\n        gfc.noise_shaping_stop = 0;\\n        if (gfc.subblock_gain == -1) gfc.subblock_gain = 1;\\n        gfc.use_best_huffman = 1;\\n        gfc.full_outer_loop = 0;\\n        break;\\n\\n      case 3:\\n        gfc.psymodel = 1;\\n        if (gfc.noise_shaping == 0) gfc.noise_shaping = 1;\\n        gfc.noise_shaping_amp = 1;\\n        gfc.noise_shaping_stop = 1;\\n        if (gfc.subblock_gain == -1) gfc.subblock_gain = 1;\\n        gfc.use_best_huffman = 1;\\n        gfc.full_outer_loop = 0;\\n        break;\\n\\n      case 2:\\n        gfc.psymodel = 1;\\n        if (gfc.noise_shaping == 0) gfc.noise_shaping = 1;\\n        if (gfc.substep_shaping == 0) gfc.substep_shaping = 2;\\n        gfc.noise_shaping_amp = 1;\\n        gfc.noise_shaping_stop = 1;\\n        if (gfc.subblock_gain == -1) gfc.subblock_gain = 1;\\n        gfc.use_best_huffman = 1;\\n        /* inner loop */\\n\\n        gfc.full_outer_loop = 0;\\n        break;\\n\\n      case 1:\\n        gfc.psymodel = 1;\\n        if (gfc.noise_shaping == 0) gfc.noise_shaping = 1;\\n        if (gfc.substep_shaping == 0) gfc.substep_shaping = 2;\\n        gfc.noise_shaping_amp = 2;\\n        gfc.noise_shaping_stop = 1;\\n        if (gfc.subblock_gain == -1) gfc.subblock_gain = 1;\\n        gfc.use_best_huffman = 1;\\n        gfc.full_outer_loop = 0;\\n        break;\\n\\n      case 0:\\n        gfc.psymodel = 1;\\n        if (gfc.noise_shaping == 0) gfc.noise_shaping = 1;\\n        if (gfc.substep_shaping == 0) gfc.substep_shaping = 2;\\n        gfc.noise_shaping_amp = 2;\\n        gfc.noise_shaping_stop = 1;\\n        if (gfc.subblock_gain == -1) gfc.subblock_gain = 1;\\n        gfc.use_best_huffman = 1;\\n        /*\\n         * type 2 disabled because of it slowness, in favor of full outer\\n         * loop search\\n         */\\n\\n        gfc.full_outer_loop = 0;\\n        /*\\n         * full outer loop search disabled because of audible distortions it\\n         * may generate rh 060629\\n         */\\n\\n        break;\\n    }\\n  }\\n\\n  function lame_init_bitstream(gfp) {\\n    var gfc = gfp.internal_flags;\\n    gfp.frameNum = 0;\\n\\n    if (gfp.write_id3tag_automatic) {\\n      id3.id3tag_write_v2(gfp);\\n    }\\n    /* initialize histogram data optionally used by frontend */\\n\\n\\n    gfc.bitrate_stereoMode_Hist = new_int_n([16, 4 + 1]);\\n    gfc.bitrate_blockType_Hist = new_int_n([16, 4 + 1 + 1]);\\n    gfc.PeakSample = 0.0;\\n    /* Write initial VBR Header to bitstream and init VBR data */\\n\\n    if (gfp.bWriteVbrTag) vbr.InitVbrTag(gfp);\\n  }\\n  /********************************************************************\\n   * initialize internal params based on data in gf (globalflags struct filled\\n   * in by calling program)\\n   *\\n   * OUTLINE:\\n   *\\n   * We first have some complex code to determine bitrate, output samplerate\\n   * and mode. It is complicated by the fact that we allow the user to set\\n   * some or all of these parameters, and need to determine best possible\\n   * values for the rest of them:\\n   *\\n   * 1. set some CPU related flags 2. check if we are mono.mono, stereo.mono\\n   * or stereo.stereo 3. compute bitrate and output samplerate: user may have\\n   * set compression ratio user may have set a bitrate user may have set a\\n   * output samplerate 4. set some options which depend on output samplerate\\n   * 5. compute the actual compression ratio 6. set mode based on compression\\n   * ratio\\n   *\\n   * The remaining code is much simpler - it just sets options based on the\\n   * mode & compression ratio:\\n   *\\n   * set allow_diff_short based on mode select lowpass filter based on\\n   * compression ratio & mode set the bitrate index, and min/max bitrates for\\n   * VBR modes disable VBR tag if it is not appropriate initialize the\\n   * bitstream initialize scalefac_band data set sideinfo_len (based on\\n   * channels, CRC, out_samplerate) write an id3v2 tag into the bitstream\\n   * write VBR tag into the bitstream set mpeg1/2 flag estimate the number of\\n   * frames (based on a lot of data)\\n   *\\n   * now we set more flags: nspsytune: see code VBR modes see code CBR/ABR see\\n   * code\\n   *\\n   * Finally, we set the algorithm flags based on the gfp.quality value\\n   * lame_init_qval(gfp);\\n   *\\n   ********************************************************************/\\n\\n\\n  this.lame_init_params = function (gfp) {\\n    var gfc = gfp.internal_flags;\\n    gfc.Class_ID = 0;\\n    if (gfc.ATH == null) gfc.ATH = new ATH();\\n    if (gfc.PSY == null) gfc.PSY = new PSY();\\n    if (gfc.rgdata == null) gfc.rgdata = new ReplayGain();\\n    gfc.channels_in = gfp.num_channels;\\n    if (gfc.channels_in == 1) gfp.mode = MPEGMode.MONO;\\n    gfc.channels_out = gfp.mode == MPEGMode.MONO ? 1 : 2;\\n    gfc.mode_ext = Encoder.MPG_MD_MS_LR;\\n    if (gfp.mode == MPEGMode.MONO) gfp.force_ms = false;\\n    /*\\n     * don't allow forced mid/side stereo for mono output\\n     */\\n\\n    if (gfp.VBR == VbrMode.vbr_off && gfp.VBR_mean_bitrate_kbps != 128 && gfp.brate == 0) gfp.brate = gfp.VBR_mean_bitrate_kbps;\\n\\n    if (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\\n      /* these modes can handle free format condition */\\n    } else {\\n      gfp.free_format = false;\\n      /* mode can't be mixed with free format */\\n    }\\n\\n    if (gfp.VBR == VbrMode.vbr_off && gfp.brate == 0) {\\n      /* no bitrate or compression ratio specified, use 11.025 */\\n      if (BitStream.EQ(gfp.compression_ratio, 0)) gfp.compression_ratio = 11.025;\\n      /*\\n       * rate to compress a CD down to exactly 128000 bps\\n       */\\n    }\\n    /* find bitrate if user specify a compression ratio */\\n\\n\\n    if (gfp.VBR == VbrMode.vbr_off && gfp.compression_ratio > 0) {\\n      if (gfp.out_samplerate == 0) gfp.out_samplerate = map2MP3Frequency(int(0.97 * gfp.in_samplerate));\\n      /*\\n       * round up with a margin of 3 %\\n       */\\n\\n      /*\\n       * choose a bitrate for the output samplerate which achieves\\n       * specified compression ratio\\n       */\\n\\n      gfp.brate = 0 | gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.compression_ratio);\\n      /* we need the version for the bitrate table look up */\\n\\n      gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\\n      if (!gfp.free_format)\\n        /*\\n        * for non Free Format find the nearest allowed\\n        * bitrate\\n        */\\n        gfp.brate = FindNearestBitrate(gfp.brate, gfp.version, gfp.out_samplerate);\\n    }\\n\\n    if (gfp.out_samplerate != 0) {\\n      if (gfp.out_samplerate < 16000) {\\n        gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps, 8);\\n        gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps, 64);\\n      } else if (gfp.out_samplerate < 32000) {\\n        gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps, 8);\\n        gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps, 160);\\n      } else {\\n        gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps, 32);\\n        gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps, 320);\\n      }\\n    }\\n    /****************************************************************/\\n\\n    /* if a filter has not been enabled, see if we should add one: */\\n\\n    /****************************************************************/\\n\\n\\n    if (gfp.lowpassfreq == 0) {\\n      var lowpass = 16000.;\\n\\n      switch (gfp.VBR) {\\n        case VbrMode.vbr_off:\\n          {\\n            var lh = new LowPassHighPass();\\n            optimum_bandwidth(lh, gfp.brate);\\n            lowpass = lh.lowerlimit;\\n            break;\\n          }\\n\\n        case VbrMode.vbr_abr:\\n          {\\n            var lh = new LowPassHighPass();\\n            optimum_bandwidth(lh, gfp.VBR_mean_bitrate_kbps);\\n            lowpass = lh.lowerlimit;\\n            break;\\n          }\\n\\n        case VbrMode.vbr_rh:\\n          {\\n            var x = [19500, 19000, 18600, 18000, 17500, 16000, 15600, 14900, 12500, 10000, 3950];\\n\\n            if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\\n              var a = x[gfp.VBR_q],\\n                  b = x[gfp.VBR_q + 1],\\n                  m = gfp.VBR_q_frac;\\n              lowpass = linear_int(a, b, m);\\n            } else {\\n              lowpass = 19500;\\n            }\\n\\n            break;\\n          }\\n\\n        default:\\n          {\\n            var x = [19500, 19000, 18500, 18000, 17500, 16500, 15500, 14500, 12500, 9500, 3950];\\n\\n            if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\\n              var a = x[gfp.VBR_q],\\n                  b = x[gfp.VBR_q + 1],\\n                  m = gfp.VBR_q_frac;\\n              lowpass = linear_int(a, b, m);\\n            } else {\\n              lowpass = 19500;\\n            }\\n          }\\n      }\\n\\n      if (gfp.mode == MPEGMode.MONO && (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_abr)) lowpass *= 1.5;\\n      gfp.lowpassfreq = lowpass | 0;\\n    }\\n\\n    if (gfp.out_samplerate == 0) {\\n      if (2 * gfp.lowpassfreq > gfp.in_samplerate) {\\n        gfp.lowpassfreq = gfp.in_samplerate / 2;\\n      }\\n\\n      gfp.out_samplerate = optimum_samplefreq(gfp.lowpassfreq | 0, gfp.in_samplerate);\\n    }\\n\\n    gfp.lowpassfreq = Math.min(20500, gfp.lowpassfreq);\\n    gfp.lowpassfreq = Math.min(gfp.out_samplerate / 2, gfp.lowpassfreq);\\n\\n    if (gfp.VBR == VbrMode.vbr_off) {\\n      gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.brate);\\n    }\\n\\n    if (gfp.VBR == VbrMode.vbr_abr) {\\n      gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.VBR_mean_bitrate_kbps);\\n    }\\n    /*\\n     * do not compute ReplayGain values and do not find the peak sample if\\n     * we can't store them\\n     */\\n\\n\\n    if (!gfp.bWriteVbrTag) {\\n      gfp.findReplayGain = false;\\n      gfp.decode_on_the_fly = false;\\n      gfc.findPeakSample = false;\\n    }\\n\\n    gfc.findReplayGain = gfp.findReplayGain;\\n    gfc.decode_on_the_fly = gfp.decode_on_the_fly;\\n    if (gfc.decode_on_the_fly) gfc.findPeakSample = true;\\n\\n    if (gfc.findReplayGain) {\\n      if (ga.InitGainAnalysis(gfc.rgdata, gfp.out_samplerate) == GainAnalysis.INIT_GAIN_ANALYSIS_ERROR) {\\n        gfp.internal_flags = null;\\n        return -6;\\n      }\\n    }\\n\\n    if (gfc.decode_on_the_fly && !gfp.decode_only) {\\n      if (gfc.hip != null) {\\n        mpglib.hip_decode_exit(gfc.hip);\\n      }\\n\\n      gfc.hip = mpglib.hip_decode_init();\\n    }\\n\\n    gfc.mode_gr = gfp.out_samplerate <= 24000 ? 1 : 2;\\n    /*\\n     * Number of granules per frame\\n     */\\n\\n    gfp.framesize = 576 * gfc.mode_gr;\\n    gfp.encoder_delay = Encoder.ENCDELAY;\\n    gfc.resample_ratio = gfp.in_samplerate / gfp.out_samplerate;\\n    /**\\n     * <PRE>\\n     *  sample freq       bitrate     compression ratio\\n     *     [kHz]      [kbps/channel]   for 16 bit input\\n     *     44.1            56               12.6\\n     *     44.1            64               11.025\\n     *     44.1            80                8.82\\n     *     22.05           24               14.7\\n     *     22.05           32               11.025\\n     *     22.05           40                8.82\\n     *     16              16               16.0\\n     *     16              24               10.667\\n     * </PRE>\\n     */\\n\\n    /**\\n     * <PRE>\\n     *  For VBR, take a guess at the compression_ratio.\\n     *  For example:\\n     *\\n     *    VBR_q    compression     like\\n     *     -        4.4         320 kbps/44 kHz\\n     *   0...1      5.5         256 kbps/44 kHz\\n     *     2        7.3         192 kbps/44 kHz\\n     *     4        8.8         160 kbps/44 kHz\\n     *     6       11           128 kbps/44 kHz\\n     *     9       14.7          96 kbps\\n     *\\n     *  for lower bitrates, downsample with --resample\\n     * </PRE>\\n     */\\n\\n    switch (gfp.VBR) {\\n      case VbrMode.vbr_mt:\\n      case VbrMode.vbr_rh:\\n      case VbrMode.vbr_mtrh:\\n        {\\n          /* numbers are a bit strange, but they determine the lowpass value */\\n          var cmp = [5.7, 6.5, 7.3, 8.2, 10, 11.9, 13, 14, 15, 16.5];\\n          gfp.compression_ratio = cmp[gfp.VBR_q];\\n        }\\n        break;\\n\\n      case VbrMode.vbr_abr:\\n        gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.VBR_mean_bitrate_kbps);\\n        break;\\n\\n      default:\\n        gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.brate);\\n        break;\\n    }\\n    /*\\n     * mode = -1 (not set by user) or mode = MONO (because of only 1 input\\n     * channel). If mode has not been set, then select J-STEREO\\n     */\\n\\n\\n    if (gfp.mode == MPEGMode.NOT_SET) {\\n      gfp.mode = MPEGMode.JOINT_STEREO;\\n    }\\n    /* apply user driven high pass filter */\\n\\n\\n    if (gfp.highpassfreq > 0) {\\n      gfc.highpass1 = 2. * gfp.highpassfreq;\\n      if (gfp.highpasswidth >= 0) gfc.highpass2 = 2. * (gfp.highpassfreq + gfp.highpasswidth);else\\n        /* 0% above on default */\\n        gfc.highpass2 = (1 + 0.00) * 2. * gfp.highpassfreq;\\n      gfc.highpass1 /= gfp.out_samplerate;\\n      gfc.highpass2 /= gfp.out_samplerate;\\n    } else {\\n      gfc.highpass1 = 0;\\n      gfc.highpass2 = 0;\\n    }\\n    /* apply user driven low pass filter */\\n\\n\\n    if (gfp.lowpassfreq > 0) {\\n      gfc.lowpass2 = 2. * gfp.lowpassfreq;\\n\\n      if (gfp.lowpasswidth >= 0) {\\n        gfc.lowpass1 = 2. * (gfp.lowpassfreq - gfp.lowpasswidth);\\n        if (gfc.lowpass1 < 0)\\n          /* has to be >= 0 */\\n          gfc.lowpass1 = 0;\\n      } else {\\n        /* 0% below on default */\\n        gfc.lowpass1 = (1 - 0.00) * 2. * gfp.lowpassfreq;\\n      }\\n\\n      gfc.lowpass1 /= gfp.out_samplerate;\\n      gfc.lowpass2 /= gfp.out_samplerate;\\n    } else {\\n      gfc.lowpass1 = 0;\\n      gfc.lowpass2 = 0;\\n    }\\n    /**********************************************************************/\\n\\n    /* compute info needed for polyphase filter (filter type==0, default) */\\n\\n    /**********************************************************************/\\n\\n\\n    lame_init_params_ppflt(gfp);\\n    /*******************************************************\\n     * samplerate and bitrate index\\n     *******************************************************/\\n\\n    gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\\n\\n    if (gfc.samplerate_index < 0) {\\n      gfp.internal_flags = null;\\n      return -1;\\n    }\\n\\n    if (gfp.VBR == VbrMode.vbr_off) {\\n      if (gfp.free_format) {\\n        gfc.bitrate_index = 0;\\n      } else {\\n        gfp.brate = FindNearestBitrate(gfp.brate, gfp.version, gfp.out_samplerate);\\n        gfc.bitrate_index = BitrateIndex(gfp.brate, gfp.version, gfp.out_samplerate);\\n\\n        if (gfc.bitrate_index <= 0) {\\n          gfp.internal_flags = null;\\n          return -1;\\n        }\\n      }\\n    } else {\\n      gfc.bitrate_index = 1;\\n    }\\n    /* for CBR, we will write an \\\"info\\\" tag. */\\n\\n\\n    if (gfp.analysis) gfp.bWriteVbrTag = false;\\n    /* some file options not allowed if output is: not specified or stdout */\\n\\n    if (gfc.pinfo != null) gfp.bWriteVbrTag = false;\\n    /* disable Xing VBR tag */\\n\\n    bs.init_bit_stream_w(gfc);\\n    var j = gfc.samplerate_index + 3 * gfp.version + 6 * (gfp.out_samplerate < 16000 ? 1 : 0);\\n\\n    for (var i = 0; i < Encoder.SBMAX_l + 1; i++) {\\n      gfc.scalefac_band.l[i] = qupvt.sfBandIndex[j].l[i];\\n    }\\n\\n    for (var i = 0; i < Encoder.PSFB21 + 1; i++) {\\n      var size = (gfc.scalefac_band.l[22] - gfc.scalefac_band.l[21]) / Encoder.PSFB21;\\n      var start = gfc.scalefac_band.l[21] + i * size;\\n      gfc.scalefac_band.psfb21[i] = start;\\n    }\\n\\n    gfc.scalefac_band.psfb21[Encoder.PSFB21] = 576;\\n\\n    for (var i = 0; i < Encoder.SBMAX_s + 1; i++) {\\n      gfc.scalefac_band.s[i] = qupvt.sfBandIndex[j].s[i];\\n    }\\n\\n    for (var i = 0; i < Encoder.PSFB12 + 1; i++) {\\n      var size = (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12]) / Encoder.PSFB12;\\n      var start = gfc.scalefac_band.s[12] + i * size;\\n      gfc.scalefac_band.psfb12[i] = start;\\n    }\\n\\n    gfc.scalefac_band.psfb12[Encoder.PSFB12] = 192;\\n    /* determine the mean bitrate for main data */\\n\\n    if (gfp.version == 1)\\n      /* MPEG 1 */\\n      gfc.sideinfo_len = gfc.channels_out == 1 ? 4 + 17 : 4 + 32;else\\n      /* MPEG 2 */\\n      gfc.sideinfo_len = gfc.channels_out == 1 ? 4 + 9 : 4 + 17;\\n    if (gfp.error_protection) gfc.sideinfo_len += 2;\\n    lame_init_bitstream(gfp);\\n    gfc.Class_ID = LAME_ID;\\n    {\\n      var k;\\n\\n      for (k = 0; k < 19; k++) {\\n        gfc.nsPsy.pefirbuf[k] = 700 * gfc.mode_gr * gfc.channels_out;\\n      }\\n\\n      if (gfp.ATHtype == -1) gfp.ATHtype = 4;\\n    }\\n    assert(gfp.VBR_q <= 9);\\n    assert(gfp.VBR_q >= 0);\\n\\n    switch (gfp.VBR) {\\n      case VbrMode.vbr_mt:\\n        gfp.VBR = VbrMode.vbr_mtrh;\\n      //$FALL-THROUGH$\\n\\n      case VbrMode.vbr_mtrh:\\n        {\\n          if (gfp.useTemporal == null) {\\n            gfp.useTemporal = false;\\n            /* off by default for this VBR mode */\\n          }\\n\\n          p.apply_preset(gfp, 500 - gfp.VBR_q * 10, 0);\\n          /**\\n           * <PRE>\\n           *   The newer VBR code supports only a limited\\n           *     subset of quality levels:\\n           *     9-5=5 are the same, uses x^3/4 quantization\\n           *   4-0=0 are the same  5 plus best huffman divide code\\n           * </PRE>\\n           */\\n\\n          if (gfp.quality < 0) gfp.quality = LAME_DEFAULT_QUALITY;\\n          if (gfp.quality < 5) gfp.quality = 0;\\n          if (gfp.quality > 5) gfp.quality = 5;\\n          gfc.PSY.mask_adjust = gfp.maskingadjust;\\n          gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\\n          /*\\n           * sfb21 extra only with MPEG-1 at higher sampling rates\\n           */\\n\\n          if (gfp.experimentalY) gfc.sfb21_extra = false;else gfc.sfb21_extra = gfp.out_samplerate > 44000;\\n          gfc.iteration_loop = new VBRNewIterationLoop(qu);\\n          break;\\n        }\\n\\n      case VbrMode.vbr_rh:\\n        {\\n          p.apply_preset(gfp, 500 - gfp.VBR_q * 10, 0);\\n          gfc.PSY.mask_adjust = gfp.maskingadjust;\\n          gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\\n          /*\\n           * sfb21 extra only with MPEG-1 at higher sampling rates\\n           */\\n\\n          if (gfp.experimentalY) gfc.sfb21_extra = false;else gfc.sfb21_extra = gfp.out_samplerate > 44000;\\n          /*\\n           * VBR needs at least the output of GPSYCHO, so we have to garantee\\n           * that by setting a minimum quality level, actually level 6 does\\n           * it. down to level 6\\n           */\\n\\n          if (gfp.quality > 6) gfp.quality = 6;\\n          if (gfp.quality < 0) gfp.quality = LAME_DEFAULT_QUALITY;\\n          gfc.iteration_loop = new VBROldIterationLoop(qu);\\n          break;\\n        }\\n\\n      default:\\n        /* cbr/abr */\\n        {\\n          var vbrmode;\\n          /*\\n           * no sfb21 extra with CBR code\\n           */\\n\\n          gfc.sfb21_extra = false;\\n          if (gfp.quality < 0) gfp.quality = LAME_DEFAULT_QUALITY;\\n          vbrmode = gfp.VBR;\\n          if (vbrmode == VbrMode.vbr_off) gfp.VBR_mean_bitrate_kbps = gfp.brate;\\n          /* second, set parameters depending on bitrate */\\n\\n          p.apply_preset(gfp, gfp.VBR_mean_bitrate_kbps, 0);\\n          gfp.VBR = vbrmode;\\n          gfc.PSY.mask_adjust = gfp.maskingadjust;\\n          gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\\n\\n          if (vbrmode == VbrMode.vbr_off) {\\n            gfc.iteration_loop = new CBRNewIterationLoop(qu);\\n          } else {\\n            gfc.iteration_loop = new ABRIterationLoop(qu);\\n          }\\n\\n          break;\\n        }\\n    }\\n\\n    assert(gfp.scale >= 0);\\n    /* initialize default values common for all modes */\\n\\n    if (gfp.VBR != VbrMode.vbr_off) {\\n      /* choose a min/max bitrate for VBR */\\n\\n      /* if the user didn't specify VBR_max_bitrate: */\\n      gfc.VBR_min_bitrate = 1;\\n      /*\\n       * default: allow 8 kbps (MPEG-2) or 32 kbps (MPEG-1)\\n       */\\n\\n      gfc.VBR_max_bitrate = 14;\\n      /*\\n       * default: allow 160 kbps (MPEG-2) or 320 kbps (MPEG-1)\\n       */\\n\\n      if (gfp.out_samplerate < 16000) gfc.VBR_max_bitrate = 8;\\n      /* default: allow 64 kbps (MPEG-2.5) */\\n\\n      if (gfp.VBR_min_bitrate_kbps != 0) {\\n        gfp.VBR_min_bitrate_kbps = FindNearestBitrate(gfp.VBR_min_bitrate_kbps, gfp.version, gfp.out_samplerate);\\n        gfc.VBR_min_bitrate = BitrateIndex(gfp.VBR_min_bitrate_kbps, gfp.version, gfp.out_samplerate);\\n        if (gfc.VBR_min_bitrate < 0) return -1;\\n      }\\n\\n      if (gfp.VBR_max_bitrate_kbps != 0) {\\n        gfp.VBR_max_bitrate_kbps = FindNearestBitrate(gfp.VBR_max_bitrate_kbps, gfp.version, gfp.out_samplerate);\\n        gfc.VBR_max_bitrate = BitrateIndex(gfp.VBR_max_bitrate_kbps, gfp.version, gfp.out_samplerate);\\n        if (gfc.VBR_max_bitrate < 0) return -1;\\n      }\\n\\n      gfp.VBR_min_bitrate_kbps = Tables.bitrate_table[gfp.version][gfc.VBR_min_bitrate];\\n      gfp.VBR_max_bitrate_kbps = Tables.bitrate_table[gfp.version][gfc.VBR_max_bitrate];\\n      gfp.VBR_mean_bitrate_kbps = Math.min(Tables.bitrate_table[gfp.version][gfc.VBR_max_bitrate], gfp.VBR_mean_bitrate_kbps);\\n      gfp.VBR_mean_bitrate_kbps = Math.max(Tables.bitrate_table[gfp.version][gfc.VBR_min_bitrate], gfp.VBR_mean_bitrate_kbps);\\n    }\\n    /* just another daily changing developer switch */\\n\\n\\n    if (gfp.tune) {\\n      gfc.PSY.mask_adjust += gfp.tune_value_a;\\n      gfc.PSY.mask_adjust_short += gfp.tune_value_a;\\n    }\\n    /* initialize internal qval settings */\\n\\n\\n    lame_init_qval(gfp);\\n    assert(gfp.scale >= 0);\\n    /*\\n     * automatic ATH adjustment on\\n     */\\n\\n    if (gfp.athaa_type < 0) gfc.ATH.useAdjust = 3;else gfc.ATH.useAdjust = gfp.athaa_type;\\n    /* initialize internal adaptive ATH settings -jd */\\n\\n    gfc.ATH.aaSensitivityP = Math.pow(10.0, gfp.athaa_sensitivity / -10.0);\\n\\n    if (gfp.short_blocks == null) {\\n      gfp.short_blocks = ShortBlock.short_block_allowed;\\n    }\\n    /*\\n     * Note Jan/2003: Many hardware decoders cannot handle short blocks in\\n     * regular stereo mode unless they are coupled (same type in both\\n     * channels) it is a rare event (1 frame per min. or so) that LAME would\\n     * use uncoupled short blocks, so lets turn them off until we decide how\\n     * to handle this. No other encoders allow uncoupled short blocks, even\\n     * though it is in the standard.\\n     */\\n\\n    /*\\n     * rh 20040217: coupling makes no sense for mono and dual-mono streams\\n     */\\n\\n\\n    if (gfp.short_blocks == ShortBlock.short_block_allowed && (gfp.mode == MPEGMode.JOINT_STEREO || gfp.mode == MPEGMode.STEREO)) {\\n      gfp.short_blocks = ShortBlock.short_block_coupled;\\n    }\\n\\n    if (gfp.quant_comp < 0) gfp.quant_comp = 1;\\n    if (gfp.quant_comp_short < 0) gfp.quant_comp_short = 0;\\n    if (gfp.msfix < 0) gfp.msfix = 0;\\n    /* select psychoacoustic model */\\n\\n    gfp.exp_nspsytune = gfp.exp_nspsytune | 1;\\n    if (gfp.internal_flags.nsPsy.attackthre < 0) gfp.internal_flags.nsPsy.attackthre = PsyModel.NSATTACKTHRE;\\n    if (gfp.internal_flags.nsPsy.attackthre_s < 0) gfp.internal_flags.nsPsy.attackthre_s = PsyModel.NSATTACKTHRE_S;\\n    assert(gfp.scale >= 0);\\n    if (gfp.scale < 0) gfp.scale = 1;\\n    if (gfp.ATHtype < 0) gfp.ATHtype = 4;\\n    if (gfp.ATHcurve < 0) gfp.ATHcurve = 4;\\n    if (gfp.athaa_loudapprox < 0) gfp.athaa_loudapprox = 2;\\n    if (gfp.interChRatio < 0) gfp.interChRatio = 0;\\n    if (gfp.useTemporal == null) gfp.useTemporal = true;\\n    /* on by default */\\n\\n    /*\\n     * padding method as described in\\n     * \\\"MPEG-Layer3 / Bitstream Syntax and Decoding\\\" by Martin Sieler, Ralph\\n     * Sperschneider\\n     *\\n     * note: there is no padding for the very first frame\\n     *\\n     * Robert Hegemann 2000-06-22\\n     */\\n\\n    gfc.slot_lag = gfc.frac_SpF = 0;\\n    if (gfp.VBR == VbrMode.vbr_off) gfc.slot_lag = gfc.frac_SpF = (gfp.version + 1) * 72000 * gfp.brate % gfp.out_samplerate | 0;\\n    qupvt.iteration_init(gfp);\\n    psy.psymodel_init(gfp);\\n    assert(gfp.scale >= 0);\\n    return 0;\\n  };\\n\\n  function update_inbuffer_size(gfc, nsamples) {\\n    if (gfc.in_buffer_0 == null || gfc.in_buffer_nsamples < nsamples) {\\n      gfc.in_buffer_0 = new_float(nsamples);\\n      gfc.in_buffer_1 = new_float(nsamples);\\n      gfc.in_buffer_nsamples = nsamples;\\n    }\\n  }\\n\\n  this.lame_encode_flush = function (gfp, mp3buffer, mp3bufferPos, mp3buffer_size) {\\n    var gfc = gfp.internal_flags;\\n    var buffer = new_short_n([2, 1152]);\\n    var imp3 = 0,\\n        mp3count,\\n        mp3buffer_size_remaining;\\n    /*\\n     * we always add POSTDELAY=288 padding to make sure granule with real\\n     * data can be complety decoded (because of 50% overlap with next\\n     * granule\\n     */\\n\\n    var end_padding;\\n    var frames_left;\\n    var samples_to_encode = gfc.mf_samples_to_encode - Encoder.POSTDELAY;\\n    var mf_needed = calcNeeded(gfp);\\n    /* Was flush already called? */\\n\\n    if (gfc.mf_samples_to_encode < 1) {\\n      return 0;\\n    }\\n\\n    mp3count = 0;\\n\\n    if (gfp.in_samplerate != gfp.out_samplerate) {\\n      /*\\n       * delay due to resampling; needs to be fixed, if resampling code\\n       * gets changed\\n       */\\n      samples_to_encode += 16. * gfp.out_samplerate / gfp.in_samplerate;\\n    }\\n\\n    end_padding = gfp.framesize - samples_to_encode % gfp.framesize;\\n    if (end_padding < 576) end_padding += gfp.framesize;\\n    gfp.encoder_padding = end_padding;\\n    frames_left = (samples_to_encode + end_padding) / gfp.framesize;\\n    /*\\n     * send in a frame of 0 padding until all internal sample buffers are\\n     * flushed\\n     */\\n\\n    while (frames_left > 0 && imp3 >= 0) {\\n      var bunch = mf_needed - gfc.mf_size;\\n      var frame_num = gfp.frameNum;\\n      bunch *= gfp.in_samplerate;\\n      bunch /= gfp.out_samplerate;\\n      if (bunch > 1152) bunch = 1152;\\n      if (bunch < 1) bunch = 1;\\n      mp3buffer_size_remaining = mp3buffer_size - mp3count;\\n      /* if user specifed buffer size = 0, dont check size */\\n\\n      if (mp3buffer_size == 0) mp3buffer_size_remaining = 0;\\n      imp3 = this.lame_encode_buffer(gfp, buffer[0], buffer[1], bunch, mp3buffer, mp3bufferPos, mp3buffer_size_remaining);\\n      mp3bufferPos += imp3;\\n      mp3count += imp3;\\n      frames_left -= frame_num != gfp.frameNum ? 1 : 0;\\n    }\\n    /*\\n     * Set gfc.mf_samples_to_encode to 0, so we may detect and break loops\\n     * calling it more than once in a row.\\n     */\\n\\n\\n    gfc.mf_samples_to_encode = 0;\\n\\n    if (imp3 < 0) {\\n      /* some type of fatal error */\\n      return imp3;\\n    }\\n\\n    mp3buffer_size_remaining = mp3buffer_size - mp3count;\\n    /* if user specifed buffer size = 0, dont check size */\\n\\n    if (mp3buffer_size == 0) mp3buffer_size_remaining = 0;\\n    /* mp3 related stuff. bit buffer might still contain some mp3 data */\\n\\n    bs.flush_bitstream(gfp);\\n    imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos, mp3buffer_size_remaining, 1);\\n\\n    if (imp3 < 0) {\\n      /* some type of fatal error */\\n      return imp3;\\n    }\\n\\n    mp3bufferPos += imp3;\\n    mp3count += imp3;\\n    mp3buffer_size_remaining = mp3buffer_size - mp3count;\\n    /* if user specifed buffer size = 0, dont check size */\\n\\n    if (mp3buffer_size == 0) mp3buffer_size_remaining = 0;\\n\\n    if (gfp.write_id3tag_automatic) {\\n      /* write a id3 tag to the bitstream */\\n      id3.id3tag_write_v1(gfp);\\n      imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos, mp3buffer_size_remaining, 0);\\n\\n      if (imp3 < 0) {\\n        return imp3;\\n      }\\n\\n      mp3count += imp3;\\n    }\\n\\n    return mp3count;\\n  };\\n\\n  this.lame_encode_buffer = function (gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\\n    var gfc = gfp.internal_flags;\\n    var in_buffer = [null, null];\\n    if (gfc.Class_ID != LAME_ID) return -3;\\n    if (nsamples == 0) return 0;\\n    update_inbuffer_size(gfc, nsamples);\\n    in_buffer[0] = gfc.in_buffer_0;\\n    in_buffer[1] = gfc.in_buffer_1;\\n    /* make a copy of input buffer, changing type to sample_t */\\n\\n    for (var i = 0; i < nsamples; i++) {\\n      in_buffer[0][i] = buffer_l[i];\\n      if (gfc.channels_in > 1) in_buffer[1][i] = buffer_r[i];\\n    }\\n\\n    return lame_encode_buffer_sample(gfp, in_buffer[0], in_buffer[1], nsamples, mp3buf, mp3bufPos, mp3buf_size);\\n  };\\n\\n  function calcNeeded(gfp) {\\n    var mf_needed = Encoder.BLKSIZE + gfp.framesize - Encoder.FFTOFFSET;\\n    /*\\n     * amount needed for FFT\\n     */\\n\\n    mf_needed = Math.max(mf_needed, 512 + gfp.framesize - 32);\\n    assert(LameInternalFlags.MFSIZE >= mf_needed);\\n    return mf_needed;\\n  }\\n\\n  function lame_encode_buffer_sample(gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\\n    var gfc = gfp.internal_flags;\\n    var mp3size = 0,\\n        ret,\\n        i,\\n        ch,\\n        mf_needed;\\n    var mp3out;\\n    var mfbuf = [null, null];\\n    var in_buffer = [null, null];\\n    if (gfc.Class_ID != LAME_ID) return -3;\\n    if (nsamples == 0) return 0;\\n    /* copy out any tags that may have been written into bitstream */\\n\\n    mp3out = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 0);\\n    if (mp3out < 0) return mp3out;\\n    /* not enough buffer space */\\n\\n    mp3bufPos += mp3out;\\n    mp3size += mp3out;\\n    in_buffer[0] = buffer_l;\\n    in_buffer[1] = buffer_r;\\n    /* Apply user defined re-scaling */\\n\\n    /* user selected scaling of the samples */\\n\\n    if (BitStream.NEQ(gfp.scale, 0) && BitStream.NEQ(gfp.scale, 1.0)) {\\n      for (i = 0; i < nsamples; ++i) {\\n        in_buffer[0][i] *= gfp.scale;\\n        if (gfc.channels_out == 2) in_buffer[1][i] *= gfp.scale;\\n      }\\n    }\\n    /* user selected scaling of the channel 0 (left) samples */\\n\\n\\n    if (BitStream.NEQ(gfp.scale_left, 0) && BitStream.NEQ(gfp.scale_left, 1.0)) {\\n      for (i = 0; i < nsamples; ++i) {\\n        in_buffer[0][i] *= gfp.scale_left;\\n      }\\n    }\\n    /* user selected scaling of the channel 1 (right) samples */\\n\\n\\n    if (BitStream.NEQ(gfp.scale_right, 0) && BitStream.NEQ(gfp.scale_right, 1.0)) {\\n      for (i = 0; i < nsamples; ++i) {\\n        in_buffer[1][i] *= gfp.scale_right;\\n      }\\n    }\\n    /* Downsample to Mono if 2 channels in and 1 channel out */\\n\\n\\n    if (gfp.num_channels == 2 && gfc.channels_out == 1) {\\n      for (i = 0; i < nsamples; ++i) {\\n        in_buffer[0][i] = 0.5 * (in_buffer[0][i] + in_buffer[1][i]);\\n        in_buffer[1][i] = 0.0;\\n      }\\n    }\\n\\n    mf_needed = calcNeeded(gfp);\\n    mfbuf[0] = gfc.mfbuf[0];\\n    mfbuf[1] = gfc.mfbuf[1];\\n    var in_bufferPos = 0;\\n\\n    while (nsamples > 0) {\\n      var in_buffer_ptr = [null, null];\\n      var n_in = 0;\\n      /* number of input samples processed with fill_buffer */\\n\\n      var n_out = 0;\\n      /* number of samples output with fill_buffer */\\n\\n      /* n_in <> n_out if we are resampling */\\n\\n      in_buffer_ptr[0] = in_buffer[0];\\n      in_buffer_ptr[1] = in_buffer[1];\\n      /* copy in new samples into mfbuf, with resampling */\\n\\n      var inOut = new InOut();\\n      fill_buffer(gfp, mfbuf, in_buffer_ptr, in_bufferPos, nsamples, inOut);\\n      n_in = inOut.n_in;\\n      n_out = inOut.n_out;\\n      /* compute ReplayGain of resampled input if requested */\\n\\n      if (gfc.findReplayGain && !gfc.decode_on_the_fly) if (ga.AnalyzeSamples(gfc.rgdata, mfbuf[0], gfc.mf_size, mfbuf[1], gfc.mf_size, n_out, gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR) return -6;\\n      /* update in_buffer counters */\\n\\n      nsamples -= n_in;\\n      in_bufferPos += n_in;\\n      if (gfc.channels_out == 2) ; // in_bufferPos += n_in;\\n\\n      /* update mfbuf[] counters */\\n\\n      gfc.mf_size += n_out;\\n      assert(gfc.mf_size <= LameInternalFlags.MFSIZE);\\n      /*\\n       * lame_encode_flush may have set gfc.mf_sample_to_encode to 0 so we\\n       * have to reinitialize it here when that happened.\\n       */\\n\\n      if (gfc.mf_samples_to_encode < 1) {\\n        gfc.mf_samples_to_encode = Encoder.ENCDELAY + Encoder.POSTDELAY;\\n      }\\n\\n      gfc.mf_samples_to_encode += n_out;\\n\\n      if (gfc.mf_size >= mf_needed) {\\n        /* encode the frame. */\\n\\n        /* mp3buf = pointer to current location in buffer */\\n\\n        /* mp3buf_size = size of original mp3 output buffer */\\n\\n        /* = 0 if we should not worry about the */\\n\\n        /* buffer size because calling program is */\\n\\n        /* to lazy to compute it */\\n\\n        /* mp3size = size of data written to buffer so far */\\n\\n        /* mp3buf_size-mp3size = amount of space avalable */\\n        var buf_size = mp3buf_size - mp3size;\\n        if (mp3buf_size == 0) buf_size = 0;\\n        ret = lame_encode_frame(gfp, mfbuf[0], mfbuf[1], mp3buf, mp3bufPos, buf_size);\\n        if (ret < 0) return ret;\\n        mp3bufPos += ret;\\n        mp3size += ret;\\n        /* shift out old samples */\\n\\n        gfc.mf_size -= gfp.framesize;\\n        gfc.mf_samples_to_encode -= gfp.framesize;\\n\\n        for (ch = 0; ch < gfc.channels_out; ch++) {\\n          for (i = 0; i < gfc.mf_size; i++) {\\n            mfbuf[ch][i] = mfbuf[ch][i + gfp.framesize];\\n          }\\n        }\\n      }\\n    }\\n\\n    assert(nsamples == 0);\\n    return mp3size;\\n  }\\n\\n  function lame_encode_frame(gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\\n    var ret = self.enc.lame_encode_mp3_frame(gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size);\\n    gfp.frameNum++;\\n    return ret;\\n  }\\n\\n  function InOut() {\\n    this.n_in = 0;\\n    this.n_out = 0;\\n  }\\n\\n  function NumUsed() {\\n    this.num_used = 0;\\n  }\\n  /**\\n   * Greatest common divisor.\\n   * <p>\\n   * Joint work of Euclid and M. Hendry\\n   */\\n\\n\\n  function gcd(i, j) {\\n    return j != 0 ? gcd(j, i % j) : i;\\n  }\\n  /**\\n   * Resampling via FIR filter, blackman window.\\n   */\\n\\n\\n  function blackman(x, fcn, l) {\\n    /*\\n     * This algorithm from: SIGNAL PROCESSING ALGORITHMS IN FORTRAN AND C\\n     * S.D. Stearns and R.A. David, Prentice-Hall, 1992\\n     */\\n    var wcn = Math.PI * fcn;\\n    x /= l;\\n    if (x < 0) x = 0;\\n    if (x > 1) x = 1;\\n    var x2 = x - .5;\\n    var bkwn = 0.42 - 0.5 * Math.cos(2 * x * Math.PI) + 0.08 * Math.cos(4 * x * Math.PI);\\n    if (Math.abs(x2) < 1e-9) return wcn / Math.PI;else return bkwn * Math.sin(l * wcn * x2) / (Math.PI * l * x2);\\n  }\\n\\n  function fill_buffer_resample(gfp, outbuf, outbufPos, desired_len, inbuf, in_bufferPos, len, num_used, ch) {\\n    var gfc = gfp.internal_flags;\\n    var i,\\n        j = 0,\\n        k;\\n    /* number of convolution functions to pre-compute */\\n\\n    var bpc = gfp.out_samplerate / gcd(gfp.out_samplerate, gfp.in_samplerate);\\n    if (bpc > LameInternalFlags.BPC) bpc = LameInternalFlags.BPC;\\n    var intratio = Math.abs(gfc.resample_ratio - Math.floor(.5 + gfc.resample_ratio)) < .0001 ? 1 : 0;\\n    var fcn = 1.00 / gfc.resample_ratio;\\n    if (fcn > 1.00) fcn = 1.00;\\n    var filter_l = 31;\\n    if (0 == filter_l % 2) --filter_l;\\n    /* must be odd */\\n\\n    filter_l += intratio;\\n    /* unless resample_ratio=int, it must be even */\\n\\n    var BLACKSIZE = filter_l + 1;\\n    /* size of data needed for FIR */\\n\\n    if (gfc.fill_buffer_resample_init == 0) {\\n      gfc.inbuf_old[0] = new_float(BLACKSIZE);\\n      gfc.inbuf_old[1] = new_float(BLACKSIZE);\\n\\n      for (i = 0; i <= 2 * bpc; ++i) {\\n        gfc.blackfilt[i] = new_float(BLACKSIZE);\\n      }\\n\\n      gfc.itime[0] = 0;\\n      gfc.itime[1] = 0;\\n      /* precompute blackman filter coefficients */\\n\\n      for (j = 0; j <= 2 * bpc; j++) {\\n        var sum = 0.;\\n        var offset = (j - bpc) / (2. * bpc);\\n\\n        for (i = 0; i <= filter_l; i++) {\\n          sum += gfc.blackfilt[j][i] = blackman(i - offset, fcn, filter_l);\\n        }\\n\\n        for (i = 0; i <= filter_l; i++) {\\n          gfc.blackfilt[j][i] /= sum;\\n        }\\n      }\\n\\n      gfc.fill_buffer_resample_init = 1;\\n    }\\n\\n    var inbuf_old = gfc.inbuf_old[ch];\\n    /* time of j'th element in inbuf = itime + j/ifreq; */\\n\\n    /* time of k'th element in outbuf = j/ofreq */\\n\\n    for (k = 0; k < desired_len; k++) {\\n      var time0;\\n      var joff;\\n      time0 = k * gfc.resample_ratio;\\n      /* time of k'th output sample */\\n\\n      j = 0 | Math.floor(time0 - gfc.itime[ch]);\\n      /* check if we need more input data */\\n\\n      if (filter_l + j - filter_l / 2 >= len) break;\\n      /* blackman filter. by default, window centered at j+.5(filter_l%2) */\\n\\n      /* but we want a window centered at time0. */\\n\\n      var offset = time0 - gfc.itime[ch] - (j + .5 * (filter_l % 2));\\n      assert(Math.abs(offset) <= .501);\\n      /* find the closest precomputed window for this offset: */\\n\\n      joff = 0 | Math.floor(offset * 2 * bpc + bpc + .5);\\n      var xvalue = 0.;\\n\\n      for (i = 0; i <= filter_l; ++i) {\\n        var j2 = i + j - filter_l / 2;\\n        var y;\\n        assert(j2 < len);\\n        assert(j2 + BLACKSIZE >= 0);\\n        y = j2 < 0 ? inbuf_old[BLACKSIZE + j2] : inbuf[in_bufferPos + j2];\\n        xvalue += y * gfc.blackfilt[joff][i];\\n      }\\n\\n      outbuf[outbufPos + k] = xvalue;\\n    }\\n    /* k = number of samples added to outbuf */\\n\\n    /* last k sample used data from [j-filter_l/2,j+filter_l-filter_l/2] */\\n\\n    /* how many samples of input data were used: */\\n\\n\\n    num_used.num_used = Math.min(len, filter_l + j - filter_l / 2);\\n    /*\\n     * adjust our input time counter. Incriment by the number of samples\\n     * used, then normalize so that next output sample is at time 0, next\\n     * input buffer is at time itime[ch]\\n     */\\n\\n    gfc.itime[ch] += num_used.num_used - k * gfc.resample_ratio;\\n    /* save the last BLACKSIZE samples into the inbuf_old buffer */\\n\\n    if (num_used.num_used >= BLACKSIZE) {\\n      for (i = 0; i < BLACKSIZE; i++) {\\n        inbuf_old[i] = inbuf[in_bufferPos + num_used.num_used + i - BLACKSIZE];\\n      }\\n    } else {\\n      /* shift in num_used.num_used samples into inbuf_old */\\n      var n_shift = BLACKSIZE - num_used.num_used;\\n      /*\\n       * number of samples to\\n       * shift\\n       */\\n\\n      /*\\n       * shift n_shift samples by num_used.num_used, to make room for the\\n       * num_used new samples\\n       */\\n\\n      for (i = 0; i < n_shift; ++i) {\\n        inbuf_old[i] = inbuf_old[i + num_used.num_used];\\n      }\\n      /* shift in the num_used.num_used samples */\\n\\n\\n      for (j = 0; i < BLACKSIZE; ++i, ++j) {\\n        inbuf_old[i] = inbuf[in_bufferPos + j];\\n      }\\n\\n      assert(j == num_used.num_used);\\n    }\\n\\n    return k;\\n    /* return the number samples created at the new samplerate */\\n  }\\n\\n  function fill_buffer(gfp, mfbuf, in_buffer, in_bufferPos, nsamples, io) {\\n    var gfc = gfp.internal_flags;\\n    /* copy in new samples into mfbuf, with resampling if necessary */\\n\\n    if (gfc.resample_ratio < .9999 || gfc.resample_ratio > 1.0001) {\\n      for (var ch = 0; ch < gfc.channels_out; ch++) {\\n        var numUsed = new NumUsed();\\n        io.n_out = fill_buffer_resample(gfp, mfbuf[ch], gfc.mf_size, gfp.framesize, in_buffer[ch], in_bufferPos, nsamples, numUsed, ch);\\n        io.n_in = numUsed.num_used;\\n      }\\n    } else {\\n      io.n_out = Math.min(gfp.framesize, nsamples);\\n      io.n_in = io.n_out;\\n\\n      for (var i = 0; i < io.n_out; ++i) {\\n        mfbuf[0][gfc.mf_size + i] = in_buffer[0][in_bufferPos + i];\\n        if (gfc.channels_out == 2) mfbuf[1][gfc.mf_size + i] = in_buffer[1][in_bufferPos + i];\\n      }\\n    }\\n  }\\n}\\n\\nmodule.exports = Lame;\",\"/*\\n *      psymodel.c\\n *\\n *      Copyright (c) 1999-2000 Mark Taylor\\n *      Copyright (c) 2001-2002 Naoki Shibata\\n *      Copyright (c) 2000-2003 Takehiro Tominaga\\n *      Copyright (c) 2000-2008 Robert Hegemann\\n *      Copyright (c) 2000-2005 Gabriel Bouvigne\\n *      Copyright (c) 2000-2005 Alexander Leidinger\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Library General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the\\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\\n * Boston, MA 02111-1307, USA.\\n */\\n\\n/* $Id: PsyModel.java,v 1.27 2011/05/24 20:48:06 kenchis Exp $ */\\n\\n/*\\n PSYCHO ACOUSTICS\\n\\n\\n This routine computes the psycho acoustics, delayed by one granule.\\n\\n Input: buffer of PCM data (1024 samples).\\n\\n This window should be centered over the 576 sample granule window.\\n The routine will compute the psycho acoustics for\\n this granule, but return the psycho acoustics computed\\n for the *previous* granule.  This is because the block\\n type of the previous granule can only be determined\\n after we have computed the psycho acoustics for the following\\n granule.\\n\\n Output:  maskings and energies for each scalefactor band.\\n block type, PE, and some correlation measures.\\n The PE is used by CBR modes to determine if extra bits\\n from the bit reservoir should be used.  The correlation\\n measures are used to determine mid/side or regular stereo.\\n */\\n\\n/*\\n Notation:\\n\\n barks:  a non-linear frequency scale.  Mapping from frequency to\\n barks is given by freq2bark()\\n\\n scalefactor bands: The spectrum (frequencies) are broken into\\n SBMAX \\\"scalefactor bands\\\".  Thes bands\\n are determined by the MPEG ISO spec.  In\\n the noise shaping/quantization code, we allocate\\n bits among the partition bands to achieve the\\n best possible quality\\n\\n partition bands:   The spectrum is also broken into about\\n 64 \\\"partition bands\\\".  Each partition\\n band is about .34 barks wide.  There are about 2-5\\n partition bands for each scalefactor band.\\n\\n LAME computes all psycho acoustic information for each partition\\n band.  Then at the end of the computations, this information\\n is mapped to scalefactor bands.  The energy in each scalefactor\\n band is taken as the sum of the energy in all partition bands\\n which overlap the scalefactor band.  The maskings can be computed\\n in the same way (and thus represent the average masking in that band)\\n or by taking the minmum value multiplied by the number of\\n partition bands used (which represents a minimum masking in that band).\\n */\\n\\n/*\\n The general outline is as follows:\\n\\n 1. compute the energy in each partition band\\n 2. compute the tonality in each partition band\\n 3. compute the strength of each partion band \\\"masker\\\"\\n 4. compute the masking (via the spreading function applied to each masker)\\n 5. Modifications for mid/side masking.\\n\\n Each partition band is considiered a \\\"masker\\\".  The strength\\n of the i'th masker in band j is given by:\\n\\n s3(bark(i)-bark(j))*strength(i)\\n\\n The strength of the masker is a function of the energy and tonality.\\n The more tonal, the less masking.  LAME uses a simple linear formula\\n (controlled by NMT and TMN) which says the strength is given by the\\n energy divided by a linear function of the tonality.\\n */\\n\\n/*\\n s3() is the \\\"spreading function\\\".  It is given by a formula\\n determined via listening tests.\\n\\n The total masking in the j'th partition band is the sum over\\n all maskings i.  It is thus given by the convolution of\\n the strength with s3(), the \\\"spreading function.\\\"\\n\\n masking(j) = sum_over_i  s3(i-j)*strength(i)  = s3 o strength\\n\\n where \\\"o\\\" = convolution operator.  s3 is given by a formula determined\\n via listening tests.  It is normalized so that s3 o 1 = 1.\\n\\n Note: instead of a simple convolution, LAME also has the\\n option of using \\\"additive masking\\\"\\n\\n The most critical part is step 2, computing the tonality of each\\n partition band.  LAME has two tonality estimators.  The first\\n is based on the ISO spec, and measures how predictiable the\\n signal is over time.  The more predictable, the more tonal.\\n The second measure is based on looking at the spectrum of\\n a single granule.  The more peaky the spectrum, the more\\n tonal.  By most indications, the latter approach is better.\\n\\n Finally, in step 5, the maskings for the mid and side\\n channel are possibly increased.  Under certain circumstances,\\n noise in the mid & side channels is assumed to also\\n be masked by strong maskers in the L or R channels.\\n\\n\\n Other data computed by the psy-model:\\n\\n ms_ratio        side-channel / mid-channel masking ratio (for previous granule)\\n ms_ratio_next   side-channel / mid-channel masking ratio for this granule\\n\\n percep_entropy[2]     L and R values (prev granule) of PE - A measure of how\\n much pre-echo is in the previous granule\\n percep_entropy_MS[2]  mid and side channel values (prev granule) of percep_entropy\\n energy[4]             L,R,M,S energy in each channel, prev granule\\n blocktype_d[2]        block type to use for previous granule\\n */\\n//package mp3;\\n//import java.util.Arrays;\\nvar common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nvar FFT = require(\\\"./FFT.js\\\");\\n\\nvar Encoder = require(\\\"./Encoder.js\\\");\\n\\nfunction PsyModel() {\\n  var fft = new FFT();\\n  var LOG10 = 2.30258509299404568402;\\n  var rpelev = 2;\\n  var rpelev2 = 16;\\n  var rpelev_s = 2;\\n  var rpelev2_s = 16;\\n  /* size of each partition band, in barks: */\\n\\n  var DELBARK = .34;\\n  /* tuned for output level (sensitive to energy scale) */\\n\\n  var VO_SCALE = 1. / (14752 * 14752) / (Encoder.BLKSIZE / 2);\\n  var temporalmask_sustain_sec = 0.01;\\n  var NS_PREECHO_ATT0 = 0.8;\\n  var NS_PREECHO_ATT1 = 0.6;\\n  var NS_PREECHO_ATT2 = 0.3;\\n  var NS_MSFIX = 3.5;\\n  var NSATTACKTHRE = 4.4;\\n  var NSATTACKTHRE_S = 25;\\n  var NSFIRLEN = 21;\\n  /* size of each partition band, in barks: */\\n\\n  var LN_TO_LOG10 = 0.2302585093;\\n\\n  function NON_LINEAR_SCALE_ENERGY(x) {\\n    return x;\\n  }\\n  /**\\n   * <PRE>\\n   *       L3psycho_anal.  Compute psycho acoustics.\\n   *\\n   *       Data returned to the calling program must be delayed by one\\n   *       granule.\\n   *\\n   *       This is done in two places.\\n   *       If we do not need to know the blocktype, the copying\\n   *       can be done here at the top of the program: we copy the data for\\n   *       the last granule (computed during the last call) before it is\\n   *       overwritten with the new data.  It looks like this:\\n   *\\n   *       0. static psymodel_data\\n   *       1. calling_program_data = psymodel_data\\n   *       2. compute psymodel_data\\n   *\\n   *       For data which needs to know the blocktype, the copying must be\\n   *       done at the end of this loop, and the old values must be saved:\\n   *\\n   *       0. static psymodel_data_old\\n   *       1. compute psymodel_data\\n   *       2. compute possible block type of this granule\\n   *       3. compute final block type of previous granule based on #2.\\n   *       4. calling_program_data = psymodel_data_old\\n   *       5. psymodel_data_old = psymodel_data\\n   *     psycho_loudness_approx\\n   *       jd - 2001 mar 12\\n   *    in:  energy   - BLKSIZE/2 elements of frequency magnitudes ^ 2\\n   *         gfp      - uses out_samplerate, ATHtype (also needed for ATHformula)\\n   *    returns: loudness^2 approximation, a positive value roughly tuned for a value\\n   *             of 1.0 for signals near clipping.\\n   *    notes:   When calibrated, feeding this function binary white noise at sample\\n   *             values +32767 or -32768 should return values that approach 3.\\n   *             ATHformula is used to approximate an equal loudness curve.\\n   *    future:  Data indicates that the shape of the equal loudness curve varies\\n   *             with intensity.  This function might be improved by using an equal\\n   *             loudness curve shaped for typical playback levels (instead of the\\n   *             ATH, that is shaped for the threshold).  A flexible realization might\\n   *             simply bend the existing ATH curve to achieve the desired shape.\\n   *             However, the potential gain may not be enough to justify an effort.\\n   * </PRE>\\n   */\\n\\n\\n  function psycho_loudness_approx(energy, gfc) {\\n    var loudness_power = 0.0;\\n    /* apply weights to power in freq. bands */\\n\\n    for (var i = 0; i < Encoder.BLKSIZE / 2; ++i) {\\n      loudness_power += energy[i] * gfc.ATH.eql_w[i];\\n    }\\n\\n    loudness_power *= VO_SCALE;\\n    return loudness_power;\\n  }\\n\\n  function compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, wsamp_lPos, wsamp_s, wsamp_sPos, gr_out, chn, buffer, bufPos) {\\n    var gfc = gfp.internal_flags;\\n\\n    if (chn < 2) {\\n      fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\\n      fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\\n    }\\n    /* FFT data for mid and side channel is derived from L & R */\\n    else if (chn == 2) {\\n        for (var j = Encoder.BLKSIZE - 1; j >= 0; --j) {\\n          var l = wsamp_l[wsamp_lPos + 0][j];\\n          var r = wsamp_l[wsamp_lPos + 1][j];\\n          wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util.SQRT2 * 0.5;\\n          wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util.SQRT2 * 0.5;\\n        }\\n\\n        for (var b = 2; b >= 0; --b) {\\n          for (var j = Encoder.BLKSIZE_s - 1; j >= 0; --j) {\\n            var l = wsamp_s[wsamp_sPos + 0][b][j];\\n            var r = wsamp_s[wsamp_sPos + 1][b][j];\\n            wsamp_s[wsamp_sPos + 0][b][j] = (l + r) * Util.SQRT2 * 0.5;\\n            wsamp_s[wsamp_sPos + 1][b][j] = (l - r) * Util.SQRT2 * 0.5;\\n          }\\n        }\\n      }\\n    /*********************************************************************\\n     * compute energies\\n     *********************************************************************/\\n\\n\\n    fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\\n    fftenergy[0] *= fftenergy[0];\\n\\n    for (var j = Encoder.BLKSIZE / 2 - 1; j >= 0; --j) {\\n      var re = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 - j];\\n      var im = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 + j];\\n      fftenergy[Encoder.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re * re + im * im) * 0.5);\\n    }\\n\\n    for (var b = 2; b >= 0; --b) {\\n      fftenergy_s[b][0] = wsamp_s[wsamp_sPos + 0][b][0];\\n      fftenergy_s[b][0] *= fftenergy_s[b][0];\\n\\n      for (var j = Encoder.BLKSIZE_s / 2 - 1; j >= 0; --j) {\\n        var re = wsamp_s[wsamp_sPos + 0][b][Encoder.BLKSIZE_s / 2 - j];\\n        var im = wsamp_s[wsamp_sPos + 0][b][Encoder.BLKSIZE_s / 2 + j];\\n        fftenergy_s[b][Encoder.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re * re + im * im) * 0.5);\\n      }\\n    }\\n    /* total energy */\\n\\n\\n    {\\n      var totalenergy = 0.0;\\n\\n      for (var j = 11; j < Encoder.HBLKSIZE; j++) {\\n        totalenergy += fftenergy[j];\\n      }\\n\\n      gfc.tot_ener[chn] = totalenergy;\\n    }\\n\\n    if (gfp.analysis) {\\n      for (var j = 0; j < Encoder.HBLKSIZE; j++) {\\n        gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\\n        gfc.pinfo.energy_save[chn][j] = fftenergy[j];\\n      }\\n\\n      gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\\n    }\\n    /*********************************************************************\\n     * compute loudness approximation (used for ATH auto-level adjustment)\\n     *********************************************************************/\\n\\n\\n    if (gfp.athaa_loudapprox == 2 && chn < 2) {\\n      // no loudness for mid/side ch\\n      gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\\n      gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\\n    }\\n  }\\n  /* mask_add optimization */\\n\\n  /* init the limit values used to avoid computing log in mask_add when it is not necessary */\\n\\n  /**\\n   * <PRE>\\n   *  For example, with i = 10*log10(m2/m1)/10*16         (= log10(m2/m1)*16)\\n   *\\n   * abs(i)>8 is equivalent (as i is an integer) to\\n   * abs(i)>=9\\n   * i>=9 || i<=-9\\n   * equivalent to (as i is the biggest integer smaller than log10(m2/m1)*16\\n   * or the smallest integer bigger than log10(m2/m1)*16 depending on the sign of log10(m2/m1)*16)\\n   * log10(m2/m1)>=9/16 || log10(m2/m1)<=-9/16\\n   * exp10 is strictly increasing thus this is equivalent to\\n   * m2/m1 >= 10^(9/16) || m2/m1<=10^(-9/16) which are comparisons to constants\\n   * </PRE>\\n   */\\n\\n  /**\\n   * as in if(i>8)\\n   */\\n\\n\\n  var I1LIMIT = 8;\\n  /**\\n   * as in if(i>24) . changed 23\\n   */\\n\\n  var I2LIMIT = 23;\\n  /**\\n   * as in if(m<15)\\n   */\\n\\n  var MLIMIT = 15;\\n  var ma_max_i1;\\n  var ma_max_i2;\\n  var ma_max_m;\\n  /**\\n   * This is the masking table:<BR>\\n   * According to tonality, values are going from 0dB (TMN) to 9.3dB (NMT).<BR>\\n   * After additive masking computation, 8dB are added, so final values are\\n   * going from 8dB to 17.3dB\\n   *\\n   * pow(10, -0.0..-0.6)\\n   */\\n\\n  var tab = [1.0, 0.79433, 0.63096, 0.63096, 0.63096, 0.63096, 0.63096, 0.25119, 0.11749];\\n\\n  function init_mask_add_max_values() {\\n    ma_max_i1 = Math.pow(10, (I1LIMIT + 1) / 16.0);\\n    ma_max_i2 = Math.pow(10, (I2LIMIT + 1) / 16.0);\\n    ma_max_m = Math.pow(10, MLIMIT / 10.0);\\n  }\\n\\n  var table1 = [3.3246 * 3.3246, 3.23837 * 3.23837, 3.15437 * 3.15437, 3.00412 * 3.00412, 2.86103 * 2.86103, 2.65407 * 2.65407, 2.46209 * 2.46209, 2.284 * 2.284, 2.11879 * 2.11879, 1.96552 * 1.96552, 1.82335 * 1.82335, 1.69146 * 1.69146, 1.56911 * 1.56911, 1.46658 * 1.46658, 1.37074 * 1.37074, 1.31036 * 1.31036, 1.25264 * 1.25264, 1.20648 * 1.20648, 1.16203 * 1.16203, 1.12765 * 1.12765, 1.09428 * 1.09428, 1.0659 * 1.0659, 1.03826 * 1.03826, 1.01895 * 1.01895, 1];\\n  var table2 = [1.33352 * 1.33352, 1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497, 1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382, 1.22321 * 1.22321, 1.14758 * 1.14758, 1];\\n  var table3 = [2.35364 * 2.35364, 2.29259 * 2.29259, 2.23313 * 2.23313, 2.12675 * 2.12675, 2.02545 * 2.02545, 1.87894 * 1.87894, 1.74303 * 1.74303, 1.61695 * 1.61695, 1.49999 * 1.49999, 1.39148 * 1.39148, 1.29083 * 1.29083, 1.19746 * 1.19746, 1.11084 * 1.11084, 1.03826 * 1.03826];\\n  /**\\n   * addition of simultaneous masking Naoki Shibata 2000/7\\n   */\\n\\n  function mask_add(m1, m2, kk, b, gfc, shortblock) {\\n    var ratio;\\n\\n    if (m2 > m1) {\\n      if (m2 < m1 * ma_max_i2) ratio = m2 / m1;else return m1 + m2;\\n    } else {\\n      if (m1 >= m2 * ma_max_i2) return m1 + m2;\\n      ratio = m1 / m2;\\n    }\\n    /* Should always be true, just checking */\\n\\n\\n    assert(m1 >= 0);\\n    assert(m2 >= 0);\\n    m1 += m2; //if (((long)(b + 3) & 0xffffffff) <= 3 + 3) {\\n\\n    if (b + 3 <= 3 + 3) {\\n      /* approximately, 1 bark = 3 partitions */\\n\\n      /* 65% of the cases */\\n\\n      /* originally 'if(i > 8)' */\\n      if (ratio >= ma_max_i1) {\\n        /* 43% of the total */\\n        return m1;\\n      }\\n      /* 22% of the total */\\n\\n\\n      var i = 0 | Util.FAST_LOG10_X(ratio, 16.0);\\n      return m1 * table2[i];\\n    }\\n    /**\\n     * <PRE>\\n     * m<15 equ log10((m1+m2)/gfc.ATH.cb[k])<1.5\\n     * equ (m1+m2)/gfc.ATH.cb[k]<10^1.5\\n     * equ (m1+m2)<10^1.5 * gfc.ATH.cb[k]\\n     * </PRE>\\n     */\\n\\n\\n    var i = 0 | Util.FAST_LOG10_X(ratio, 16.0);\\n\\n    if (shortblock != 0) {\\n      m2 = gfc.ATH.cb_s[kk] * gfc.ATH.adjust;\\n    } else {\\n      m2 = gfc.ATH.cb_l[kk] * gfc.ATH.adjust;\\n    }\\n\\n    assert(m2 >= 0);\\n\\n    if (m1 < ma_max_m * m2) {\\n      /* 3% of the total */\\n\\n      /* Originally if (m > 0) { */\\n      if (m1 > m2) {\\n        var f, r;\\n        f = 1.0;\\n        if (i <= 13) f = table3[i];\\n        r = Util.FAST_LOG10_X(m1 / m2, 10.0 / 15.0);\\n        return m1 * ((table1[i] - f) * r + f);\\n      }\\n\\n      if (i > 13) return m1;\\n      return m1 * table3[i];\\n    }\\n    /* 10% of total */\\n\\n\\n    return m1 * table1[i];\\n  }\\n\\n  var table2_ = [1.33352 * 1.33352, 1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497, 1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382, 1.22321 * 1.22321, 1.14758 * 1.14758, 1];\\n  /**\\n   * addition of simultaneous masking Naoki Shibata 2000/7\\n   */\\n\\n  function vbrpsy_mask_add(m1, m2, b) {\\n    var ratio;\\n\\n    if (m1 < 0) {\\n      m1 = 0;\\n    }\\n\\n    if (m2 < 0) {\\n      m2 = 0;\\n    }\\n\\n    if (m1 <= 0) {\\n      return m2;\\n    }\\n\\n    if (m2 <= 0) {\\n      return m1;\\n    }\\n\\n    if (m2 > m1) {\\n      ratio = m2 / m1;\\n    } else {\\n      ratio = m1 / m2;\\n    }\\n\\n    if (-2 <= b && b <= 2) {\\n      /* approximately, 1 bark = 3 partitions */\\n\\n      /* originally 'if(i > 8)' */\\n      if (ratio >= ma_max_i1) {\\n        return m1 + m2;\\n      } else {\\n        var i = 0 | Util.FAST_LOG10_X(ratio, 16.0);\\n        return (m1 + m2) * table2_[i];\\n      }\\n    }\\n\\n    if (ratio < ma_max_i2) {\\n      return m1 + m2;\\n    }\\n\\n    if (m1 < m2) {\\n      m1 = m2;\\n    }\\n\\n    return m1;\\n  }\\n  /**\\n   * compute interchannel masking effects\\n   */\\n\\n\\n  function calc_interchannel_masking(gfp, ratio) {\\n    var gfc = gfp.internal_flags;\\n\\n    if (gfc.channels_out > 1) {\\n      for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\\n        var l = gfc.thm[0].l[sb];\\n        var r = gfc.thm[1].l[sb];\\n        gfc.thm[0].l[sb] += r * ratio;\\n        gfc.thm[1].l[sb] += l * ratio;\\n      }\\n\\n      for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\\n        for (var sblock = 0; sblock < 3; sblock++) {\\n          var l = gfc.thm[0].s[sb][sblock];\\n          var r = gfc.thm[1].s[sb][sblock];\\n          gfc.thm[0].s[sb][sblock] += r * ratio;\\n          gfc.thm[1].s[sb][sblock] += l * ratio;\\n        }\\n      }\\n    }\\n  }\\n  /**\\n   * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\\n   */\\n\\n\\n  function msfix1(gfc) {\\n    for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\\n      /* use this fix if L & R masking differs by 2db or less */\\n\\n      /* if db = 10*log10(x2/x1) < 2 */\\n\\n      /* if (x2 < 1.58*x1) { */\\n      if (gfc.thm[0].l[sb] > 1.58 * gfc.thm[1].l[sb] || gfc.thm[1].l[sb] > 1.58 * gfc.thm[0].l[sb]) continue;\\n      var mld = gfc.mld_l[sb] * gfc.en[3].l[sb];\\n      var rmid = Math.max(gfc.thm[2].l[sb], Math.min(gfc.thm[3].l[sb], mld));\\n      mld = gfc.mld_l[sb] * gfc.en[2].l[sb];\\n      var rside = Math.max(gfc.thm[3].l[sb], Math.min(gfc.thm[2].l[sb], mld));\\n      gfc.thm[2].l[sb] = rmid;\\n      gfc.thm[3].l[sb] = rside;\\n    }\\n\\n    for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\\n      for (var sblock = 0; sblock < 3; sblock++) {\\n        if (gfc.thm[0].s[sb][sblock] > 1.58 * gfc.thm[1].s[sb][sblock] || gfc.thm[1].s[sb][sblock] > 1.58 * gfc.thm[0].s[sb][sblock]) continue;\\n        var mld = gfc.mld_s[sb] * gfc.en[3].s[sb][sblock];\\n        var rmid = Math.max(gfc.thm[2].s[sb][sblock], Math.min(gfc.thm[3].s[sb][sblock], mld));\\n        mld = gfc.mld_s[sb] * gfc.en[2].s[sb][sblock];\\n        var rside = Math.max(gfc.thm[3].s[sb][sblock], Math.min(gfc.thm[2].s[sb][sblock], mld));\\n        gfc.thm[2].s[sb][sblock] = rmid;\\n        gfc.thm[3].s[sb][sblock] = rside;\\n      }\\n    }\\n  }\\n  /**\\n   * Adjust M/S maskings if user set \\\"msfix\\\"\\n   *\\n   * Naoki Shibata 2000\\n   */\\n\\n\\n  function ns_msfix(gfc, msfix, athadjust) {\\n    var msfix2 = msfix;\\n    var athlower = Math.pow(10, athadjust);\\n    msfix *= 2.0;\\n    msfix2 *= 2.0;\\n\\n    for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\\n      var thmLR, thmM, thmS, ath;\\n      ath = gfc.ATH.cb_l[gfc.bm_l[sb]] * athlower;\\n      thmLR = Math.min(Math.max(gfc.thm[0].l[sb], ath), Math.max(gfc.thm[1].l[sb], ath));\\n      thmM = Math.max(gfc.thm[2].l[sb], ath);\\n      thmS = Math.max(gfc.thm[3].l[sb], ath);\\n\\n      if (thmLR * msfix < thmM + thmS) {\\n        var f = thmLR * msfix2 / (thmM + thmS);\\n        thmM *= f;\\n        thmS *= f;\\n        assert(thmM + thmS > 0);\\n      }\\n\\n      gfc.thm[2].l[sb] = Math.min(thmM, gfc.thm[2].l[sb]);\\n      gfc.thm[3].l[sb] = Math.min(thmS, gfc.thm[3].l[sb]);\\n    }\\n\\n    athlower *= Encoder.BLKSIZE_s / Encoder.BLKSIZE;\\n\\n    for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\\n      for (var sblock = 0; sblock < 3; sblock++) {\\n        var thmLR, thmM, thmS, ath;\\n        ath = gfc.ATH.cb_s[gfc.bm_s[sb]] * athlower;\\n        thmLR = Math.min(Math.max(gfc.thm[0].s[sb][sblock], ath), Math.max(gfc.thm[1].s[sb][sblock], ath));\\n        thmM = Math.max(gfc.thm[2].s[sb][sblock], ath);\\n        thmS = Math.max(gfc.thm[3].s[sb][sblock], ath);\\n\\n        if (thmLR * msfix < thmM + thmS) {\\n          var f = thmLR * msfix / (thmM + thmS);\\n          thmM *= f;\\n          thmS *= f;\\n          assert(thmM + thmS > 0);\\n        }\\n\\n        gfc.thm[2].s[sb][sblock] = Math.min(gfc.thm[2].s[sb][sblock], thmM);\\n        gfc.thm[3].s[sb][sblock] = Math.min(gfc.thm[3].s[sb][sblock], thmS);\\n      }\\n    }\\n  }\\n  /**\\n   * short block threshold calculation (part 2)\\n   *\\n   * partition band bo_s[sfb] is at the transition from scalefactor band sfb\\n   * to the next one sfb+1; enn and thmm have to be split between them\\n   */\\n\\n\\n  function convert_partition2scalefac_s(gfc, eb, thr, chn, sblock) {\\n    var sb, b;\\n    var enn = 0.0;\\n    var thmm = 0.0;\\n\\n    for (sb = b = 0; sb < Encoder.SBMAX_s; ++b, ++sb) {\\n      var bo_s_sb = gfc.bo_s[sb];\\n      var npart_s = gfc.npart_s;\\n      var b_lim = bo_s_sb < npart_s ? bo_s_sb : npart_s;\\n\\n      while (b < b_lim) {\\n        assert(eb[b] >= 0); // iff failed, it may indicate some index error elsewhere\\n\\n        assert(thr[b] >= 0);\\n        enn += eb[b];\\n        thmm += thr[b];\\n        b++;\\n      }\\n\\n      gfc.en[chn].s[sb][sblock] = enn;\\n      gfc.thm[chn].s[sb][sblock] = thmm;\\n\\n      if (b >= npart_s) {\\n        ++sb;\\n        break;\\n      }\\n\\n      assert(eb[b] >= 0); // iff failed, it may indicate some index error elsewhere\\n\\n      assert(thr[b] >= 0);\\n      {\\n        /* at transition sfb . sfb+1 */\\n        var w_curr = gfc.PSY.bo_s_weight[sb];\\n        var w_next = 1.0 - w_curr;\\n        enn = w_curr * eb[b];\\n        thmm = w_curr * thr[b];\\n        gfc.en[chn].s[sb][sblock] += enn;\\n        gfc.thm[chn].s[sb][sblock] += thmm;\\n        enn = w_next * eb[b];\\n        thmm = w_next * thr[b];\\n      }\\n    }\\n    /* zero initialize the rest */\\n\\n\\n    for (; sb < Encoder.SBMAX_s; ++sb) {\\n      gfc.en[chn].s[sb][sblock] = 0;\\n      gfc.thm[chn].s[sb][sblock] = 0;\\n    }\\n  }\\n  /**\\n   * longblock threshold calculation (part 2)\\n   */\\n\\n\\n  function convert_partition2scalefac_l(gfc, eb, thr, chn) {\\n    var sb, b;\\n    var enn = 0.0;\\n    var thmm = 0.0;\\n\\n    for (sb = b = 0; sb < Encoder.SBMAX_l; ++b, ++sb) {\\n      var bo_l_sb = gfc.bo_l[sb];\\n      var npart_l = gfc.npart_l;\\n      var b_lim = bo_l_sb < npart_l ? bo_l_sb : npart_l;\\n\\n      while (b < b_lim) {\\n        assert(eb[b] >= 0); // iff failed, it may indicate some index error elsewhere\\n\\n        assert(thr[b] >= 0);\\n        enn += eb[b];\\n        thmm += thr[b];\\n        b++;\\n      }\\n\\n      gfc.en[chn].l[sb] = enn;\\n      gfc.thm[chn].l[sb] = thmm;\\n\\n      if (b >= npart_l) {\\n        ++sb;\\n        break;\\n      }\\n\\n      assert(eb[b] >= 0);\\n      assert(thr[b] >= 0);\\n      {\\n        /* at transition sfb . sfb+1 */\\n        var w_curr = gfc.PSY.bo_l_weight[sb];\\n        var w_next = 1.0 - w_curr;\\n        enn = w_curr * eb[b];\\n        thmm = w_curr * thr[b];\\n        gfc.en[chn].l[sb] += enn;\\n        gfc.thm[chn].l[sb] += thmm;\\n        enn = w_next * eb[b];\\n        thmm = w_next * thr[b];\\n      }\\n    }\\n    /* zero initialize the rest */\\n\\n\\n    for (; sb < Encoder.SBMAX_l; ++sb) {\\n      gfc.en[chn].l[sb] = 0;\\n      gfc.thm[chn].l[sb] = 0;\\n    }\\n  }\\n\\n  function compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\\n    var gfc = gfp.internal_flags;\\n    var j, b;\\n\\n    for (b = j = 0; b < gfc.npart_s; ++b) {\\n      var ebb = 0,\\n          m = 0;\\n      var n = gfc.numlines_s[b];\\n\\n      for (var i = 0; i < n; ++i, ++j) {\\n        var el = fftenergy_s[sblock][j];\\n        ebb += el;\\n        if (m < el) m = el;\\n      }\\n\\n      eb[b] = ebb;\\n    }\\n\\n    assert(b == gfc.npart_s);\\n    assert(j == 129);\\n\\n    for (j = b = 0; b < gfc.npart_s; b++) {\\n      var kk = gfc.s3ind_s[b][0];\\n      var ecb = gfc.s3_ss[j++] * eb[kk];\\n      ++kk;\\n\\n      while (kk <= gfc.s3ind_s[b][1]) {\\n        ecb += gfc.s3_ss[j] * eb[kk];\\n        ++j;\\n        ++kk;\\n      }\\n\\n      {\\n        /* limit calculated threshold by previous granule */\\n        var x = rpelev_s * gfc.nb_s1[chn][b];\\n        thr[b] = Math.min(ecb, x);\\n      }\\n\\n      if (gfc.blocktype_old[chn & 1] == Encoder.SHORT_TYPE) {\\n        /* limit calculated threshold by even older granule */\\n        var x = rpelev2_s * gfc.nb_s2[chn][b];\\n        var y = thr[b];\\n        thr[b] = Math.min(x, y);\\n      }\\n\\n      gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\\n      gfc.nb_s1[chn][b] = ecb;\\n      assert(thr[b] >= 0);\\n    }\\n\\n    for (; b <= Encoder.CBANDS; ++b) {\\n      eb[b] = 0;\\n      thr[b] = 0;\\n    }\\n  }\\n\\n  function block_type_set(gfp, uselongblock, blocktype_d, blocktype) {\\n    var gfc = gfp.internal_flags;\\n    if (gfp.short_blocks == ShortBlock.short_block_coupled\\n    /* force both channels to use the same block type */\\n\\n    /* this is necessary if the frame is to be encoded in ms_stereo. */\\n\\n    /* But even without ms_stereo, FhG does this */\\n    && !(uselongblock[0] != 0 && uselongblock[1] != 0)) uselongblock[0] = uselongblock[1] = 0;\\n    /*\\n     * update the blocktype of the previous granule, since it depends on\\n     * what happend in this granule\\n     */\\n\\n    for (var chn = 0; chn < gfc.channels_out; chn++) {\\n      blocktype[chn] = Encoder.NORM_TYPE;\\n      /* disable short blocks */\\n\\n      if (gfp.short_blocks == ShortBlock.short_block_dispensed) uselongblock[chn] = 1;\\n      if (gfp.short_blocks == ShortBlock.short_block_forced) uselongblock[chn] = 0;\\n\\n      if (uselongblock[chn] != 0) {\\n        /* no attack : use long blocks */\\n        assert(gfc.blocktype_old[chn] != Encoder.START_TYPE);\\n        if (gfc.blocktype_old[chn] == Encoder.SHORT_TYPE) blocktype[chn] = Encoder.STOP_TYPE;\\n      } else {\\n        /* attack : use short blocks */\\n        blocktype[chn] = Encoder.SHORT_TYPE;\\n\\n        if (gfc.blocktype_old[chn] == Encoder.NORM_TYPE) {\\n          gfc.blocktype_old[chn] = Encoder.START_TYPE;\\n        }\\n\\n        if (gfc.blocktype_old[chn] == Encoder.STOP_TYPE) gfc.blocktype_old[chn] = Encoder.SHORT_TYPE;\\n      }\\n\\n      blocktype_d[chn] = gfc.blocktype_old[chn]; // value returned to calling program\\n\\n      gfc.blocktype_old[chn] = blocktype[chn]; // save for next call to l3psy_anal\\n    }\\n  }\\n\\n  function NS_INTERP(x, y, r) {\\n    /* was pow((x),(r))*pow((y),1-(r)) */\\n    if (r >= 1.0) {\\n      /* 99.7% of the time */\\n      return x;\\n    }\\n\\n    if (r <= 0.0) return y;\\n\\n    if (y > 0.0) {\\n      /* rest of the time */\\n      return Math.pow(x / y, r) * y;\\n    }\\n    /* never happens */\\n\\n\\n    return 0.0;\\n  }\\n  /**\\n   * these values are tuned only for 44.1kHz...\\n   */\\n\\n\\n  var regcoef_s = [11.8, 13.6, 17.2, 32, 46.5, 51.3, 57.5, 67.1, 71.5, 84.6, 97.6, 130];\\n\\n  function pecalc_s(mr, masking_lower) {\\n    var pe_s = 1236.28 / 4;\\n\\n    for (var sb = 0; sb < Encoder.SBMAX_s - 1; sb++) {\\n      for (var sblock = 0; sblock < 3; sblock++) {\\n        var thm = mr.thm.s[sb][sblock];\\n        assert(sb < regcoef_s.length);\\n\\n        if (thm > 0.0) {\\n          var x = thm * masking_lower;\\n          var en = mr.en.s[sb][sblock];\\n\\n          if (en > x) {\\n            if (en > x * 1e10) {\\n              pe_s += regcoef_s[sb] * (10.0 * LOG10);\\n            } else {\\n              assert(x > 0);\\n              pe_s += regcoef_s[sb] * Util.FAST_LOG10(en / x);\\n            }\\n          }\\n        }\\n      }\\n    }\\n\\n    return pe_s;\\n  }\\n  /**\\n   * these values are tuned only for 44.1kHz...\\n   */\\n\\n\\n  var regcoef_l = [6.8, 5.8, 5.8, 6.4, 6.5, 9.9, 12.1, 14.4, 15, 18.9, 21.6, 26.9, 34.2, 40.2, 46.8, 56.5, 60.7, 73.9, 85.7, 93.4, 126.1];\\n\\n  function pecalc_l(mr, masking_lower) {\\n    var pe_l = 1124.23 / 4;\\n\\n    for (var sb = 0; sb < Encoder.SBMAX_l - 1; sb++) {\\n      var thm = mr.thm.l[sb];\\n      assert(sb < regcoef_l.length);\\n\\n      if (thm > 0.0) {\\n        var x = thm * masking_lower;\\n        var en = mr.en.l[sb];\\n\\n        if (en > x) {\\n          if (en > x * 1e10) {\\n            pe_l += regcoef_l[sb] * (10.0 * LOG10);\\n          } else {\\n            assert(x > 0);\\n            pe_l += regcoef_l[sb] * Util.FAST_LOG10(en / x);\\n          }\\n        }\\n      }\\n    }\\n\\n    return pe_l;\\n  }\\n\\n  function calc_energy(gfc, fftenergy, eb, max, avg) {\\n    var b, j;\\n\\n    for (b = j = 0; b < gfc.npart_l; ++b) {\\n      var ebb = 0,\\n          m = 0;\\n      var i;\\n\\n      for (i = 0; i < gfc.numlines_l[b]; ++i, ++j) {\\n        var el = fftenergy[j];\\n        assert(el >= 0);\\n        ebb += el;\\n        if (m < el) m = el;\\n      }\\n\\n      eb[b] = ebb;\\n      max[b] = m;\\n      avg[b] = ebb * gfc.rnumlines_l[b];\\n      assert(gfc.rnumlines_l[b] >= 0);\\n      assert(ebb >= 0);\\n      assert(eb[b] >= 0);\\n      assert(max[b] >= 0);\\n      assert(avg[b] >= 0);\\n    }\\n  }\\n\\n  function calc_mask_index_l(gfc, max, avg, mask_idx) {\\n    var last_tab_entry = tab.length - 1;\\n    var b = 0;\\n    var a = avg[b] + avg[b + 1];\\n    assert(a >= 0);\\n\\n    if (a > 0.0) {\\n      var m = max[b];\\n      if (m < max[b + 1]) m = max[b + 1];\\n      assert(gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1 > 0);\\n      a = 20.0 * (m * 2.0 - a) / (a * (gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1));\\n      var k = 0 | a;\\n      if (k > last_tab_entry) k = last_tab_entry;\\n      mask_idx[b] = k;\\n    } else {\\n      mask_idx[b] = 0;\\n    }\\n\\n    for (b = 1; b < gfc.npart_l - 1; b++) {\\n      a = avg[b - 1] + avg[b] + avg[b + 1];\\n      assert(a >= 0);\\n\\n      if (a > 0.0) {\\n        var m = max[b - 1];\\n        if (m < max[b]) m = max[b];\\n        if (m < max[b + 1]) m = max[b + 1];\\n        assert(gfc.numlines_l[b - 1] + gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1 > 0);\\n        a = 20.0 * (m * 3.0 - a) / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1));\\n        var k = 0 | a;\\n        if (k > last_tab_entry) k = last_tab_entry;\\n        mask_idx[b] = k;\\n      } else {\\n        mask_idx[b] = 0;\\n      }\\n    }\\n\\n    assert(b > 0);\\n    assert(b == gfc.npart_l - 1);\\n    a = avg[b - 1] + avg[b];\\n    assert(a >= 0);\\n\\n    if (a > 0.0) {\\n      var m = max[b - 1];\\n      if (m < max[b]) m = max[b];\\n      assert(gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1 > 0);\\n      a = 20.0 * (m * 2.0 - a) / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1));\\n      var k = 0 | a;\\n      if (k > last_tab_entry) k = last_tab_entry;\\n      mask_idx[b] = k;\\n    } else {\\n      mask_idx[b] = 0;\\n    }\\n\\n    assert(b == gfc.npart_l - 1);\\n  }\\n\\n  var fircoef = [-8.65163e-18 * 2, -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2, -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2, 0.0931738 * 2, -5.52212e-17 * 2, -0.313819 * 2];\\n\\n  this.L3psycho_anal_ns = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\\n    /*\\n     * to get a good cache performance, one has to think about the sequence,\\n     * in which the variables are used.\\n     */\\n    var gfc = gfp.internal_flags;\\n    /* fft and energy calculation */\\n\\n    var wsamp_L = new_float_n([2, Encoder.BLKSIZE]);\\n    var wsamp_S = new_float_n([2, 3, Encoder.BLKSIZE_s]);\\n    /* convolution */\\n\\n    var eb_l = new_float(Encoder.CBANDS + 1);\\n    var eb_s = new_float(Encoder.CBANDS + 1);\\n    var thr = new_float(Encoder.CBANDS + 2);\\n    /* block type */\\n\\n    var blocktype = new_int(2),\\n        uselongblock = new_int(2);\\n    /* usual variables like loop indices, etc.. */\\n\\n    var numchn, chn;\\n    var b, i, j, k;\\n    var sb, sblock;\\n    /* variables used for --nspsytune */\\n\\n    var ns_hpfsmpl = new_float_n([2, 576]);\\n    var pcfact;\\n    var mask_idx_l = new_int(Encoder.CBANDS + 2),\\n        mask_idx_s = new_int(Encoder.CBANDS + 2);\\n    Arrays.fill(mask_idx_s, 0);\\n    numchn = gfc.channels_out;\\n    /* chn=2 and 3 = Mid and Side channels */\\n\\n    if (gfp.mode == MPEGMode.JOINT_STEREO) numchn = 4;\\n    if (gfp.VBR == VbrMode.vbr_off) pcfact = gfc.ResvMax == 0 ? 0 : gfc.ResvSize / gfc.ResvMax * 0.5;else if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\\n      pcfact = 0.6;\\n    } else pcfact = 1.0;\\n    /**********************************************************************\\n     * Apply HPF of fs/4 to the input signal. This is used for attack\\n     * detection / handling.\\n     **********************************************************************/\\n\\n    /* Don't copy the input buffer into a temporary buffer */\\n\\n    /* unroll the loop 2 times */\\n\\n    for (chn = 0; chn < gfc.channels_out; chn++) {\\n      /* apply high pass filter of fs/4 */\\n      var firbuf = buffer[chn];\\n      var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\\n      assert(fircoef.length == (NSFIRLEN - 1) / 2);\\n\\n      for (i = 0; i < 576; i++) {\\n        var sum1, sum2;\\n        sum1 = firbuf[firbufPos + i + 10];\\n        sum2 = 0.0;\\n\\n        for (j = 0; j < (NSFIRLEN - 1) / 2 - 1; j += 2) {\\n          sum1 += fircoef[j] * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i + NSFIRLEN - j]);\\n          sum2 += fircoef[j + 1] * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos + i + NSFIRLEN - j - 1]);\\n        }\\n\\n        ns_hpfsmpl[chn][i] = sum1 + sum2;\\n      }\\n\\n      masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\\n      masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\\n\\n      if (numchn > 2) {\\n        /* MS maskings */\\n\\n        /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\\n        masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\\n        masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\\n      }\\n    }\\n\\n    for (chn = 0; chn < numchn; chn++) {\\n      var wsamp_l;\\n      var wsamp_s;\\n      var en_subshort = new_float(12);\\n      var en_short = [0, 0, 0, 0];\\n      var attack_intensity = new_float(12);\\n      var ns_uselongblock = 1;\\n      var attackThreshold;\\n      var max = new_float(Encoder.CBANDS),\\n          avg = new_float(Encoder.CBANDS);\\n      var ns_attacks = [0, 0, 0, 0];\\n      var fftenergy = new_float(Encoder.HBLKSIZE);\\n      var fftenergy_s = new_float_n([3, Encoder.HBLKSIZE_s]);\\n      /*\\n       * rh 20040301: the following loops do access one off the limits so\\n       * I increase the array dimensions by one and initialize the\\n       * accessed values to zero\\n       */\\n\\n      assert(gfc.npart_s <= Encoder.CBANDS);\\n      assert(gfc.npart_l <= Encoder.CBANDS);\\n      /***************************************************************\\n       * determine the block type (window type)\\n       ***************************************************************/\\n\\n      /* calculate energies of each sub-shortblocks */\\n\\n      for (i = 0; i < 3; i++) {\\n        en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\\n        assert(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\\n        attack_intensity[i] = en_subshort[i] / gfc.nsPsy.last_en_subshort[chn][i + 4];\\n        en_short[0] += en_subshort[i];\\n      }\\n\\n      if (chn == 2) {\\n        for (i = 0; i < 576; i++) {\\n          var l, r;\\n          l = ns_hpfsmpl[0][i];\\n          r = ns_hpfsmpl[1][i];\\n          ns_hpfsmpl[0][i] = l + r;\\n          ns_hpfsmpl[1][i] = l - r;\\n        }\\n      }\\n\\n      {\\n        var pf = ns_hpfsmpl[chn & 1];\\n        var pfPos = 0;\\n\\n        for (i = 0; i < 9; i++) {\\n          var pfe = pfPos + 576 / 9;\\n          var p = 1.;\\n\\n          for (; pfPos < pfe; pfPos++) {\\n            if (p < Math.abs(pf[pfPos])) p = Math.abs(pf[pfPos]);\\n          }\\n\\n          gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\\n          en_short[1 + i / 3] += p;\\n\\n          if (p > en_subshort[i + 3 - 2]) {\\n            assert(en_subshort[i + 3 - 2] > 0);\\n            p = p / en_subshort[i + 3 - 2];\\n          } else if (en_subshort[i + 3 - 2] > p * 10.0) {\\n            assert(p > 0);\\n            p = en_subshort[i + 3 - 2] / (p * 10.0);\\n          } else p = 0.0;\\n\\n          attack_intensity[i + 3] = p;\\n        }\\n      }\\n\\n      if (gfp.analysis) {\\n        var x = attack_intensity[0];\\n\\n        for (i = 1; i < 12; i++) {\\n          if (x < attack_intensity[i]) x = attack_intensity[i];\\n        }\\n\\n        gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\\n        gfc.pinfo.ers_save[chn] = x;\\n      }\\n      /* compare energies between sub-shortblocks */\\n\\n\\n      attackThreshold = chn == 3 ? gfc.nsPsy.attackthre_s : gfc.nsPsy.attackthre;\\n\\n      for (i = 0; i < 12; i++) {\\n        if (0 == ns_attacks[i / 3] && attack_intensity[i] > attackThreshold) ns_attacks[i / 3] = i % 3 + 1;\\n      }\\n      /*\\n       * should have energy change between short blocks, in order to avoid\\n       * periodic signals\\n       */\\n\\n\\n      for (i = 1; i < 4; i++) {\\n        var ratio;\\n\\n        if (en_short[i - 1] > en_short[i]) {\\n          assert(en_short[i] > 0);\\n          ratio = en_short[i - 1] / en_short[i];\\n        } else {\\n          assert(en_short[i - 1] > 0);\\n          ratio = en_short[i] / en_short[i - 1];\\n        }\\n\\n        if (ratio < 1.7) {\\n          ns_attacks[i] = 0;\\n          if (i == 1) ns_attacks[0] = 0;\\n        }\\n      }\\n\\n      if (ns_attacks[0] != 0 && gfc.nsPsy.lastAttacks[chn] != 0) ns_attacks[0] = 0;\\n\\n      if (gfc.nsPsy.lastAttacks[chn] == 3 || ns_attacks[0] + ns_attacks[1] + ns_attacks[2] + ns_attacks[3] != 0) {\\n        ns_uselongblock = 0;\\n        if (ns_attacks[1] != 0 && ns_attacks[0] != 0) ns_attacks[1] = 0;\\n        if (ns_attacks[2] != 0 && ns_attacks[1] != 0) ns_attacks[2] = 0;\\n        if (ns_attacks[3] != 0 && ns_attacks[2] != 0) ns_attacks[3] = 0;\\n      }\\n\\n      if (chn < 2) {\\n        uselongblock[chn] = ns_uselongblock;\\n      } else {\\n        if (ns_uselongblock == 0) {\\n          uselongblock[0] = uselongblock[1] = 0;\\n        }\\n      }\\n      /*\\n       * there is a one granule delay. Copy maskings computed last call\\n       * into masking_ratio to return to calling program.\\n       */\\n\\n\\n      energy[chn] = gfc.tot_ener[chn];\\n      /*********************************************************************\\n       * compute FFTs\\n       *********************************************************************/\\n\\n      wsamp_s = wsamp_S;\\n      wsamp_l = wsamp_L;\\n      compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, chn & 1, wsamp_s, chn & 1, gr_out, chn, buffer, bufPos);\\n      /*********************************************************************\\n       * Calculate the energy and the tonality of each partition.\\n       *********************************************************************/\\n\\n      calc_energy(gfc, fftenergy, eb_l, max, avg);\\n      calc_mask_index_l(gfc, max, avg, mask_idx_l);\\n      /* compute masking thresholds for short blocks */\\n\\n      for (sblock = 0; sblock < 3; sblock++) {\\n        var enn, thmm;\\n        compute_masking_s(gfp, fftenergy_s, eb_s, thr, chn, sblock);\\n        convert_partition2scalefac_s(gfc, eb_s, thr, chn, sblock);\\n        /**** short block pre-echo control ****/\\n\\n        for (sb = 0; sb < Encoder.SBMAX_s; sb++) {\\n          thmm = gfc.thm[chn].s[sb][sblock];\\n          thmm *= NS_PREECHO_ATT0;\\n\\n          if (ns_attacks[sblock] >= 2 || ns_attacks[sblock + 1] == 1) {\\n            var idx = sblock != 0 ? sblock - 1 : 2;\\n            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm, NS_PREECHO_ATT1 * pcfact);\\n            thmm = Math.min(thmm, p);\\n          }\\n\\n          if (ns_attacks[sblock] == 1) {\\n            var idx = sblock != 0 ? sblock - 1 : 2;\\n            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm, NS_PREECHO_ATT2 * pcfact);\\n            thmm = Math.min(thmm, p);\\n          } else if (sblock != 0 && ns_attacks[sblock - 1] == 3 || sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3) {\\n            var idx = sblock != 2 ? sblock + 1 : 0;\\n            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm, NS_PREECHO_ATT2 * pcfact);\\n            thmm = Math.min(thmm, p);\\n          }\\n          /* pulse like signal detection for fatboy.wav and so on */\\n\\n\\n          enn = en_subshort[sblock * 3 + 3] + en_subshort[sblock * 3 + 4] + en_subshort[sblock * 3 + 5];\\n\\n          if (en_subshort[sblock * 3 + 5] * 6 < enn) {\\n            thmm *= 0.5;\\n            if (en_subshort[sblock * 3 + 4] * 6 < enn) thmm *= 0.5;\\n          }\\n\\n          gfc.thm[chn].s[sb][sblock] = thmm;\\n        }\\n      }\\n\\n      gfc.nsPsy.lastAttacks[chn] = ns_attacks[2];\\n      /*********************************************************************\\n       * convolve the partitioned energy and unpredictability with the\\n       * spreading function, s3_l[b][k]\\n       ********************************************************************/\\n\\n      k = 0;\\n      {\\n        for (b = 0; b < gfc.npart_l; b++) {\\n          /*\\n           * convolve the partitioned energy with the spreading\\n           * function\\n           */\\n          var kk = gfc.s3ind[b][0];\\n          var eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\\n          var ecb = gfc.s3_ll[k++] * eb2;\\n\\n          while (++kk <= gfc.s3ind[b][1]) {\\n            eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\\n            ecb = mask_add(ecb, gfc.s3_ll[k++] * eb2, kk, kk - b, gfc, 0);\\n          }\\n\\n          ecb *= 0.158489319246111;\\n          /* pow(10,-0.8) */\\n\\n          /**** long block pre-echo control ****/\\n\\n          /**\\n           * <PRE>\\n           * dont use long block pre-echo control if previous granule was\\n           * a short block.  This is to avoid the situation:\\n           * frame0:  quiet (very low masking)\\n           * frame1:  surge  (triggers short blocks)\\n           * frame2:  regular frame.  looks like pre-echo when compared to\\n           *          frame0, but all pre-echo was in frame1.\\n           * </PRE>\\n           */\\n\\n          /*\\n           * chn=0,1 L and R channels\\n           *\\n           * chn=2,3 S and M channels.\\n           */\\n\\n          if (gfc.blocktype_old[chn & 1] == Encoder.SHORT_TYPE) thr[b] = ecb;else thr[b] = NS_INTERP(Math.min(ecb, Math.min(rpelev * gfc.nb_1[chn][b], rpelev2 * gfc.nb_2[chn][b])), ecb, pcfact);\\n          gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\\n          gfc.nb_1[chn][b] = ecb;\\n        }\\n      }\\n\\n      for (; b <= Encoder.CBANDS; ++b) {\\n        eb_l[b] = 0;\\n        thr[b] = 0;\\n      }\\n      /* compute masking thresholds for long blocks */\\n\\n\\n      convert_partition2scalefac_l(gfc, eb_l, thr, chn);\\n    }\\n    /* end loop over chn */\\n\\n\\n    if (gfp.mode == MPEGMode.STEREO || gfp.mode == MPEGMode.JOINT_STEREO) {\\n      if (gfp.interChRatio > 0.0) {\\n        calc_interchannel_masking(gfp, gfp.interChRatio);\\n      }\\n    }\\n\\n    if (gfp.mode == MPEGMode.JOINT_STEREO) {\\n      var msfix;\\n      msfix1(gfc);\\n      msfix = gfp.msfix;\\n      if (Math.abs(msfix) > 0.0) ns_msfix(gfc, msfix, gfp.ATHlower * gfc.ATH.adjust);\\n    }\\n    /***************************************************************\\n     * determine final block type\\n     ***************************************************************/\\n\\n\\n    block_type_set(gfp, uselongblock, blocktype_d, blocktype);\\n    /*********************************************************************\\n     * compute the value of PE to return ... no delay and advance\\n     *********************************************************************/\\n\\n    for (chn = 0; chn < numchn; chn++) {\\n      var ppe;\\n      var ppePos = 0;\\n      var type;\\n      var mr;\\n\\n      if (chn > 1) {\\n        ppe = percep_MS_entropy;\\n        ppePos = -2;\\n        type = Encoder.NORM_TYPE;\\n        if (blocktype_d[0] == Encoder.SHORT_TYPE || blocktype_d[1] == Encoder.SHORT_TYPE) type = Encoder.SHORT_TYPE;\\n        mr = masking_MS_ratio[gr_out][chn - 2];\\n      } else {\\n        ppe = percep_entropy;\\n        ppePos = 0;\\n        type = blocktype_d[chn];\\n        mr = masking_ratio[gr_out][chn];\\n      }\\n\\n      if (type == Encoder.SHORT_TYPE) ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);else ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\\n      if (gfp.analysis) gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\\n    }\\n\\n    return 0;\\n  };\\n\\n  function vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out, fftenergy, wsamp_l, wsamp_lPos) {\\n    var gfc = gfp.internal_flags;\\n\\n    if (chn < 2) {\\n      fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\\n    } else if (chn == 2) {\\n      /* FFT data for mid and side channel is derived from L & R */\\n      for (var j = Encoder.BLKSIZE - 1; j >= 0; --j) {\\n        var l = wsamp_l[wsamp_lPos + 0][j];\\n        var r = wsamp_l[wsamp_lPos + 1][j];\\n        wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util.SQRT2 * 0.5;\\n        wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util.SQRT2 * 0.5;\\n      }\\n    }\\n    /*********************************************************************\\n     * compute energies\\n     *********************************************************************/\\n\\n\\n    fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\\n    fftenergy[0] *= fftenergy[0];\\n\\n    for (var j = Encoder.BLKSIZE / 2 - 1; j >= 0; --j) {\\n      var re = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 - j];\\n      var im = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 + j];\\n      fftenergy[Encoder.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re * re + im * im) * 0.5);\\n    }\\n    /* total energy */\\n\\n\\n    {\\n      var totalenergy = 0.0;\\n\\n      for (var j = 11; j < Encoder.HBLKSIZE; j++) {\\n        totalenergy += fftenergy[j];\\n      }\\n\\n      gfc.tot_ener[chn] = totalenergy;\\n    }\\n\\n    if (gfp.analysis) {\\n      for (var j = 0; j < Encoder.HBLKSIZE; j++) {\\n        gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\\n        gfc.pinfo.energy_save[chn][j] = fftenergy[j];\\n      }\\n\\n      gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\\n    }\\n  }\\n\\n  function vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock, fftenergy_s, wsamp_s, wsamp_sPos) {\\n    var gfc = gfp.internal_flags;\\n\\n    if (sblock == 0 && chn < 2) {\\n      fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\\n    }\\n\\n    if (chn == 2) {\\n      /* FFT data for mid and side channel is derived from L & R */\\n      for (var j = Encoder.BLKSIZE_s - 1; j >= 0; --j) {\\n        var l = wsamp_s[wsamp_sPos + 0][sblock][j];\\n        var r = wsamp_s[wsamp_sPos + 1][sblock][j];\\n        wsamp_s[wsamp_sPos + 0][sblock][j] = (l + r) * Util.SQRT2 * 0.5;\\n        wsamp_s[wsamp_sPos + 1][sblock][j] = (l - r) * Util.SQRT2 * 0.5;\\n      }\\n    }\\n    /*********************************************************************\\n     * compute energies\\n     *********************************************************************/\\n\\n\\n    fftenergy_s[sblock][0] = wsamp_s[wsamp_sPos + 0][sblock][0];\\n    fftenergy_s[sblock][0] *= fftenergy_s[sblock][0];\\n\\n    for (var j = Encoder.BLKSIZE_s / 2 - 1; j >= 0; --j) {\\n      var re = wsamp_s[wsamp_sPos + 0][sblock][Encoder.BLKSIZE_s / 2 - j];\\n      var im = wsamp_s[wsamp_sPos + 0][sblock][Encoder.BLKSIZE_s / 2 + j];\\n      fftenergy_s[sblock][Encoder.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re * re + im * im) * 0.5);\\n    }\\n  }\\n  /**\\n   * compute loudness approximation (used for ATH auto-level adjustment)\\n   */\\n\\n\\n  function vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn, fftenergy) {\\n    var gfc = gfp.internal_flags;\\n\\n    if (gfp.athaa_loudapprox == 2 && chn < 2) {\\n      // no loudness for mid/side ch\\n      gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\\n      gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\\n    }\\n  }\\n\\n  var fircoef_ = [-8.65163e-18 * 2, -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2, -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2, 0.0931738 * 2, -5.52212e-17 * 2, -0.313819 * 2];\\n  /**\\n   * Apply HPF of fs/4 to the input signal. This is used for attack detection\\n   * / handling.\\n   */\\n\\n  function vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, energy, sub_short_factor, ns_attacks, uselongblock) {\\n    var ns_hpfsmpl = new_float_n([2, 576]);\\n    var gfc = gfp.internal_flags;\\n    var n_chn_out = gfc.channels_out;\\n    /* chn=2 and 3 = Mid and Side channels */\\n\\n    var n_chn_psy = gfp.mode == MPEGMode.JOINT_STEREO ? 4 : n_chn_out;\\n    /* Don't copy the input buffer into a temporary buffer */\\n\\n    /* unroll the loop 2 times */\\n\\n    for (var chn = 0; chn < n_chn_out; chn++) {\\n      /* apply high pass filter of fs/4 */\\n      firbuf = buffer[chn];\\n      var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\\n      assert(fircoef_.length == (NSFIRLEN - 1) / 2);\\n\\n      for (var i = 0; i < 576; i++) {\\n        var sum1, sum2;\\n        sum1 = firbuf[firbufPos + i + 10];\\n        sum2 = 0.0;\\n\\n        for (var j = 0; j < (NSFIRLEN - 1) / 2 - 1; j += 2) {\\n          sum1 += fircoef_[j] * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i + NSFIRLEN - j]);\\n          sum2 += fircoef_[j + 1] * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos + i + NSFIRLEN - j - 1]);\\n        }\\n\\n        ns_hpfsmpl[chn][i] = sum1 + sum2;\\n      }\\n\\n      masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\\n      masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\\n\\n      if (n_chn_psy > 2) {\\n        /* MS maskings */\\n\\n        /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\\n        masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\\n        masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\\n      }\\n    }\\n\\n    for (var chn = 0; chn < n_chn_psy; chn++) {\\n      var attack_intensity = new_float(12);\\n      var en_subshort = new_float(12);\\n      var en_short = [0, 0, 0, 0];\\n      var pf = ns_hpfsmpl[chn & 1];\\n      var pfPos = 0;\\n      var attackThreshold = chn == 3 ? gfc.nsPsy.attackthre_s : gfc.nsPsy.attackthre;\\n      var ns_uselongblock = 1;\\n\\n      if (chn == 2) {\\n        for (var i = 0, j = 576; j > 0; ++i, --j) {\\n          var l = ns_hpfsmpl[0][i];\\n          var r = ns_hpfsmpl[1][i];\\n          ns_hpfsmpl[0][i] = l + r;\\n          ns_hpfsmpl[1][i] = l - r;\\n        }\\n      }\\n      /***************************************************************\\n       * determine the block type (window type)\\n       ***************************************************************/\\n\\n      /* calculate energies of each sub-shortblocks */\\n\\n\\n      for (var i = 0; i < 3; i++) {\\n        en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\\n        assert(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\\n        attack_intensity[i] = en_subshort[i] / gfc.nsPsy.last_en_subshort[chn][i + 4];\\n        en_short[0] += en_subshort[i];\\n      }\\n\\n      for (var i = 0; i < 9; i++) {\\n        var pfe = pfPos + 576 / 9;\\n        var p = 1.;\\n\\n        for (; pfPos < pfe; pfPos++) {\\n          if (p < Math.abs(pf[pfPos])) p = Math.abs(pf[pfPos]);\\n        }\\n\\n        gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\\n        en_short[1 + i / 3] += p;\\n\\n        if (p > en_subshort[i + 3 - 2]) {\\n          assert(en_subshort[i + 3 - 2] > 0);\\n          p = p / en_subshort[i + 3 - 2];\\n        } else if (en_subshort[i + 3 - 2] > p * 10.0) {\\n          assert(p > 0);\\n          p = en_subshort[i + 3 - 2] / (p * 10.0);\\n        } else {\\n          p = 0.0;\\n        }\\n\\n        attack_intensity[i + 3] = p;\\n      }\\n      /* pulse like signal detection for fatboy.wav and so on */\\n\\n\\n      for (var i = 0; i < 3; ++i) {\\n        var enn = en_subshort[i * 3 + 3] + en_subshort[i * 3 + 4] + en_subshort[i * 3 + 5];\\n        var factor = 1.;\\n\\n        if (en_subshort[i * 3 + 5] * 6 < enn) {\\n          factor *= 0.5;\\n\\n          if (en_subshort[i * 3 + 4] * 6 < enn) {\\n            factor *= 0.5;\\n          }\\n        }\\n\\n        sub_short_factor[chn][i] = factor;\\n      }\\n\\n      if (gfp.analysis) {\\n        var x = attack_intensity[0];\\n\\n        for (var i = 1; i < 12; i++) {\\n          if (x < attack_intensity[i]) {\\n            x = attack_intensity[i];\\n          }\\n        }\\n\\n        gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\\n        gfc.pinfo.ers_save[chn] = x;\\n      }\\n      /* compare energies between sub-shortblocks */\\n\\n\\n      for (var i = 0; i < 12; i++) {\\n        if (0 == ns_attacks[chn][i / 3] && attack_intensity[i] > attackThreshold) {\\n          ns_attacks[chn][i / 3] = i % 3 + 1;\\n        }\\n      }\\n      /*\\n       * should have energy change between short blocks, in order to avoid\\n       * periodic signals\\n       */\\n\\n      /* Good samples to show the effect are Trumpet test songs */\\n\\n      /*\\n       * GB: tuned (1) to avoid too many short blocks for test sample\\n       * TRUMPET\\n       */\\n\\n      /*\\n       * RH: tuned (2) to let enough short blocks through for test sample\\n       * FSOL and SNAPS\\n       */\\n\\n\\n      for (var i = 1; i < 4; i++) {\\n        var u = en_short[i - 1];\\n        var v = en_short[i];\\n        var m = Math.max(u, v);\\n\\n        if (m < 40000) {\\n          /* (2) */\\n          if (u < 1.7 * v && v < 1.7 * u) {\\n            /* (1) */\\n            if (i == 1 && ns_attacks[chn][0] <= ns_attacks[chn][i]) {\\n              ns_attacks[chn][0] = 0;\\n            }\\n\\n            ns_attacks[chn][i] = 0;\\n          }\\n        }\\n      }\\n\\n      if (ns_attacks[chn][0] <= gfc.nsPsy.lastAttacks[chn]) {\\n        ns_attacks[chn][0] = 0;\\n      }\\n\\n      if (gfc.nsPsy.lastAttacks[chn] == 3 || ns_attacks[chn][0] + ns_attacks[chn][1] + ns_attacks[chn][2] + ns_attacks[chn][3] != 0) {\\n        ns_uselongblock = 0;\\n\\n        if (ns_attacks[chn][1] != 0 && ns_attacks[chn][0] != 0) {\\n          ns_attacks[chn][1] = 0;\\n        }\\n\\n        if (ns_attacks[chn][2] != 0 && ns_attacks[chn][1] != 0) {\\n          ns_attacks[chn][2] = 0;\\n        }\\n\\n        if (ns_attacks[chn][3] != 0 && ns_attacks[chn][2] != 0) {\\n          ns_attacks[chn][3] = 0;\\n        }\\n      }\\n\\n      if (chn < 2) {\\n        uselongblock[chn] = ns_uselongblock;\\n      } else {\\n        if (ns_uselongblock == 0) {\\n          uselongblock[0] = uselongblock[1] = 0;\\n        }\\n      }\\n      /*\\n       * there is a one granule delay. Copy maskings computed last call\\n       * into masking_ratio to return to calling program.\\n       */\\n\\n\\n      energy[chn] = gfc.tot_ener[chn];\\n    }\\n  }\\n\\n  function vbrpsy_skip_masking_s(gfc, chn, sblock) {\\n    if (sblock == 0) {\\n      for (var b = 0; b < gfc.npart_s; b++) {\\n        gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\\n        gfc.nb_s1[chn][b] = 0;\\n      }\\n    }\\n  }\\n\\n  function vbrpsy_skip_masking_l(gfc, chn) {\\n    for (var b = 0; b < gfc.npart_l; b++) {\\n      gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\\n      gfc.nb_1[chn][b] = 0;\\n    }\\n  }\\n\\n  function psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx) {\\n    var last_tab_entry = tab.length - 1;\\n    var b = 0;\\n    var a = avg[b] + avg[b + 1];\\n    assert(a >= 0);\\n\\n    if (a > 0.0) {\\n      var m = max[b];\\n      if (m < max[b + 1]) m = max[b + 1];\\n      assert(gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1 > 0);\\n      a = 20.0 * (m * 2.0 - a) / (a * (gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1));\\n      var k = 0 | a;\\n      if (k > last_tab_entry) k = last_tab_entry;\\n      mask_idx[b] = k;\\n    } else {\\n      mask_idx[b] = 0;\\n    }\\n\\n    for (b = 1; b < gfc.npart_s - 1; b++) {\\n      a = avg[b - 1] + avg[b] + avg[b + 1];\\n      assert(b + 1 < gfc.npart_s);\\n      assert(a >= 0);\\n\\n      if (a > 0.0) {\\n        var m = max[b - 1];\\n        if (m < max[b]) m = max[b];\\n        if (m < max[b + 1]) m = max[b + 1];\\n        assert(gfc.numlines_s[b - 1] + gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1 > 0);\\n        a = 20.0 * (m * 3.0 - a) / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1));\\n        var k = 0 | a;\\n        if (k > last_tab_entry) k = last_tab_entry;\\n        mask_idx[b] = k;\\n      } else {\\n        mask_idx[b] = 0;\\n      }\\n    }\\n\\n    assert(b > 0);\\n    assert(b == gfc.npart_s - 1);\\n    a = avg[b - 1] + avg[b];\\n    assert(a >= 0);\\n\\n    if (a > 0.0) {\\n      var m = max[b - 1];\\n      if (m < max[b]) m = max[b];\\n      assert(gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1 > 0);\\n      a = 20.0 * (m * 2.0 - a) / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1));\\n      var k = 0 | a;\\n      if (k > last_tab_entry) k = last_tab_entry;\\n      mask_idx[b] = k;\\n    } else {\\n      mask_idx[b] = 0;\\n    }\\n\\n    assert(b == gfc.npart_s - 1);\\n  }\\n\\n  function vbrpsy_compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\\n    var gfc = gfp.internal_flags;\\n    var max = new float[Encoder.CBANDS](),\\n        avg = new_float(Encoder.CBANDS);\\n    var i, j, b;\\n    var mask_idx_s = new int[Encoder.CBANDS]();\\n\\n    for (b = j = 0; b < gfc.npart_s; ++b) {\\n      var ebb = 0,\\n          m = 0;\\n      var n = gfc.numlines_s[b];\\n\\n      for (i = 0; i < n; ++i, ++j) {\\n        var el = fftenergy_s[sblock][j];\\n        ebb += el;\\n        if (m < el) m = el;\\n      }\\n\\n      eb[b] = ebb;\\n      assert(ebb >= 0);\\n      max[b] = m;\\n      assert(n > 0);\\n      avg[b] = ebb / n;\\n      assert(avg[b] >= 0);\\n    }\\n\\n    assert(b == gfc.npart_s);\\n    assert(j == 129);\\n\\n    for (; b < Encoder.CBANDS; ++b) {\\n      max[b] = 0;\\n      avg[b] = 0;\\n    }\\n\\n    psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx_s);\\n\\n    for (j = b = 0; b < gfc.npart_s; b++) {\\n      var kk = gfc.s3ind_s[b][0];\\n      var last = gfc.s3ind_s[b][1];\\n      var dd, dd_n;\\n      var x, ecb, avg_mask;\\n      dd = mask_idx_s[kk];\\n      dd_n = 1;\\n      ecb = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\\n      ++j;\\n      ++kk;\\n\\n      while (kk <= last) {\\n        dd += mask_idx_s[kk];\\n        dd_n += 1;\\n        x = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\\n        ecb = vbrpsy_mask_add(ecb, x, kk - b);\\n        ++j;\\n        ++kk;\\n      }\\n\\n      dd = (1 + 2 * dd) / (2 * dd_n);\\n      avg_mask = tab[dd] * 0.5;\\n      ecb *= avg_mask;\\n      thr[b] = ecb;\\n      gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\\n      gfc.nb_s1[chn][b] = ecb;\\n      {\\n        /*\\n         * if THR exceeds EB, the quantization routines will take the\\n         * difference from other bands. in case of strong tonal samples\\n         * (tonaltest.wav) this leads to heavy distortions. that's why\\n         * we limit THR here.\\n         */\\n        x = max[b];\\n        x *= gfc.minval_s[b];\\n        x *= avg_mask;\\n\\n        if (thr[b] > x) {\\n          thr[b] = x;\\n        }\\n      }\\n\\n      if (gfc.masking_lower > 1) {\\n        thr[b] *= gfc.masking_lower;\\n      }\\n\\n      if (thr[b] > eb[b]) {\\n        thr[b] = eb[b];\\n      }\\n\\n      if (gfc.masking_lower < 1) {\\n        thr[b] *= gfc.masking_lower;\\n      }\\n\\n      assert(thr[b] >= 0);\\n    }\\n\\n    for (; b < Encoder.CBANDS; ++b) {\\n      eb[b] = 0;\\n      thr[b] = 0;\\n    }\\n  }\\n\\n  function vbrpsy_compute_masking_l(gfc, fftenergy, eb_l, thr, chn) {\\n    var max = new_float(Encoder.CBANDS),\\n        avg = new_float(Encoder.CBANDS);\\n    var mask_idx_l = new_int(Encoder.CBANDS + 2);\\n    var b;\\n    /*********************************************************************\\n     * Calculate the energy and the tonality of each partition.\\n     *********************************************************************/\\n\\n    calc_energy(gfc, fftenergy, eb_l, max, avg);\\n    calc_mask_index_l(gfc, max, avg, mask_idx_l);\\n    /*********************************************************************\\n     * convolve the partitioned energy and unpredictability with the\\n     * spreading function, s3_l[b][k]\\n     ********************************************************************/\\n\\n    var k = 0;\\n\\n    for (b = 0; b < gfc.npart_l; b++) {\\n      var x, ecb, avg_mask, t;\\n      /* convolve the partitioned energy with the spreading function */\\n\\n      var kk = gfc.s3ind[b][0];\\n      var last = gfc.s3ind[b][1];\\n      var dd = 0,\\n          dd_n = 0;\\n      dd = mask_idx_l[kk];\\n      dd_n += 1;\\n      ecb = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\\n      ++k;\\n      ++kk;\\n\\n      while (kk <= last) {\\n        dd += mask_idx_l[kk];\\n        dd_n += 1;\\n        x = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\\n        t = vbrpsy_mask_add(ecb, x, kk - b);\\n        ecb = t;\\n        ++k;\\n        ++kk;\\n      }\\n\\n      dd = (1 + 2 * dd) / (2 * dd_n);\\n      avg_mask = tab[dd] * 0.5;\\n      ecb *= avg_mask;\\n      /**** long block pre-echo control ****/\\n\\n      /**\\n       * <PRE>\\n       * dont use long block pre-echo control if previous granule was\\n       * a short block.  This is to avoid the situation:\\n       * frame0:  quiet (very low masking)\\n       * frame1:  surge  (triggers short blocks)\\n       * frame2:  regular frame.  looks like pre-echo when compared to\\n       *          frame0, but all pre-echo was in frame1.\\n       * </PRE>\\n       */\\n\\n      /*\\n       * chn=0,1 L and R channels chn=2,3 S and M channels.\\n       */\\n\\n      if (gfc.blocktype_old[chn & 0x01] == Encoder.SHORT_TYPE) {\\n        var ecb_limit = rpelev * gfc.nb_1[chn][b];\\n\\n        if (ecb_limit > 0) {\\n          thr[b] = Math.min(ecb, ecb_limit);\\n        } else {\\n          /**\\n           * <PRE>\\n           * Robert 071209:\\n           * Because we don't calculate long block psy when we know a granule\\n           * should be of short blocks, we don't have any clue how the granule\\n           * before would have looked like as a long block. So we have to guess\\n           * a little bit for this END_TYPE block.\\n           * Most of the time we get away with this sloppyness. (fingers crossed :)\\n           * The speed increase is worth it.\\n           * </PRE>\\n           */\\n          thr[b] = Math.min(ecb, eb_l[b] * NS_PREECHO_ATT2);\\n        }\\n      } else {\\n        var ecb_limit_2 = rpelev2 * gfc.nb_2[chn][b];\\n        var ecb_limit_1 = rpelev * gfc.nb_1[chn][b];\\n        var ecb_limit;\\n\\n        if (ecb_limit_2 <= 0) {\\n          ecb_limit_2 = ecb;\\n        }\\n\\n        if (ecb_limit_1 <= 0) {\\n          ecb_limit_1 = ecb;\\n        }\\n\\n        if (gfc.blocktype_old[chn & 0x01] == Encoder.NORM_TYPE) {\\n          ecb_limit = Math.min(ecb_limit_1, ecb_limit_2);\\n        } else {\\n          ecb_limit = ecb_limit_1;\\n        }\\n\\n        thr[b] = Math.min(ecb, ecb_limit);\\n      }\\n\\n      gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\\n      gfc.nb_1[chn][b] = ecb;\\n      {\\n        /*\\n         * if THR exceeds EB, the quantization routines will take the\\n         * difference from other bands. in case of strong tonal samples\\n         * (tonaltest.wav) this leads to heavy distortions. that's why\\n         * we limit THR here.\\n         */\\n        x = max[b];\\n        x *= gfc.minval_l[b];\\n        x *= avg_mask;\\n\\n        if (thr[b] > x) {\\n          thr[b] = x;\\n        }\\n      }\\n\\n      if (gfc.masking_lower > 1) {\\n        thr[b] *= gfc.masking_lower;\\n      }\\n\\n      if (thr[b] > eb_l[b]) {\\n        thr[b] = eb_l[b];\\n      }\\n\\n      if (gfc.masking_lower < 1) {\\n        thr[b] *= gfc.masking_lower;\\n      }\\n\\n      assert(thr[b] >= 0);\\n    }\\n\\n    for (; b < Encoder.CBANDS; ++b) {\\n      eb_l[b] = 0;\\n      thr[b] = 0;\\n    }\\n  }\\n\\n  function vbrpsy_compute_block_type(gfp, uselongblock) {\\n    var gfc = gfp.internal_flags;\\n    if (gfp.short_blocks == ShortBlock.short_block_coupled\\n    /* force both channels to use the same block type */\\n\\n    /* this is necessary if the frame is to be encoded in ms_stereo. */\\n\\n    /* But even without ms_stereo, FhG does this */\\n    && !(uselongblock[0] != 0 && uselongblock[1] != 0)) uselongblock[0] = uselongblock[1] = 0;\\n\\n    for (var chn = 0; chn < gfc.channels_out; chn++) {\\n      /* disable short blocks */\\n      if (gfp.short_blocks == ShortBlock.short_block_dispensed) {\\n        uselongblock[chn] = 1;\\n      }\\n\\n      if (gfp.short_blocks == ShortBlock.short_block_forced) {\\n        uselongblock[chn] = 0;\\n      }\\n    }\\n  }\\n\\n  function vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d) {\\n    var gfc = gfp.internal_flags;\\n    /*\\n     * update the blocktype of the previous granule, since it depends on\\n     * what happend in this granule\\n     */\\n\\n    for (var chn = 0; chn < gfc.channels_out; chn++) {\\n      var blocktype = Encoder.NORM_TYPE;\\n      /* disable short blocks */\\n\\n      if (uselongblock[chn] != 0) {\\n        /* no attack : use long blocks */\\n        assert(gfc.blocktype_old[chn] != Encoder.START_TYPE);\\n        if (gfc.blocktype_old[chn] == Encoder.SHORT_TYPE) blocktype = Encoder.STOP_TYPE;\\n      } else {\\n        /* attack : use short blocks */\\n        blocktype = Encoder.SHORT_TYPE;\\n\\n        if (gfc.blocktype_old[chn] == Encoder.NORM_TYPE) {\\n          gfc.blocktype_old[chn] = Encoder.START_TYPE;\\n        }\\n\\n        if (gfc.blocktype_old[chn] == Encoder.STOP_TYPE) gfc.blocktype_old[chn] = Encoder.SHORT_TYPE;\\n      }\\n\\n      blocktype_d[chn] = gfc.blocktype_old[chn]; // value returned to calling program\\n\\n      gfc.blocktype_old[chn] = blocktype; // save for next call to l3psy_anal\\n    }\\n  }\\n  /**\\n   * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\\n   */\\n\\n\\n  function vbrpsy_compute_MS_thresholds(eb, thr, cb_mld, ath_cb, athadjust, msfix, n) {\\n    var msfix2 = msfix * 2;\\n    var athlower = msfix > 0 ? Math.pow(10, athadjust) : 1;\\n    var rside, rmid;\\n\\n    for (var b = 0; b < n; ++b) {\\n      var ebM = eb[2][b];\\n      var ebS = eb[3][b];\\n      var thmL = thr[0][b];\\n      var thmR = thr[1][b];\\n      var thmM = thr[2][b];\\n      var thmS = thr[3][b];\\n      /* use this fix if L & R masking differs by 2db or less */\\n\\n      if (thmL <= 1.58 * thmR && thmR <= 1.58 * thmL) {\\n        var mld_m = cb_mld[b] * ebS;\\n        var mld_s = cb_mld[b] * ebM;\\n        rmid = Math.max(thmM, Math.min(thmS, mld_m));\\n        rside = Math.max(thmS, Math.min(thmM, mld_s));\\n      } else {\\n        rmid = thmM;\\n        rside = thmS;\\n      }\\n\\n      if (msfix > 0) {\\n        /***************************************************************/\\n\\n        /* Adjust M/S maskings if user set \\\"msfix\\\" */\\n\\n        /***************************************************************/\\n\\n        /* Naoki Shibata 2000 */\\n        var thmLR, thmMS;\\n        var ath = ath_cb[b] * athlower;\\n        thmLR = Math.min(Math.max(thmL, ath), Math.max(thmR, ath));\\n        thmM = Math.max(rmid, ath);\\n        thmS = Math.max(rside, ath);\\n        thmMS = thmM + thmS;\\n\\n        if (thmMS > 0 && thmLR * msfix2 < thmMS) {\\n          var f = thmLR * msfix2 / thmMS;\\n          thmM *= f;\\n          thmS *= f;\\n          assert(thmMS > 0);\\n        }\\n\\n        rmid = Math.min(thmM, rmid);\\n        rside = Math.min(thmS, rside);\\n      }\\n\\n      if (rmid > ebM) {\\n        rmid = ebM;\\n      }\\n\\n      if (rside > ebS) {\\n        rside = ebS;\\n      }\\n\\n      thr[2][b] = rmid;\\n      thr[3][b] = rside;\\n    }\\n  }\\n\\n  this.L3psycho_anal_vbr = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\\n    var gfc = gfp.internal_flags;\\n    /* fft and energy calculation */\\n\\n    var wsamp_l;\\n    var wsamp_s;\\n    var fftenergy = new_float(Encoder.HBLKSIZE);\\n    var fftenergy_s = new_float_n([3, Encoder.HBLKSIZE_s]);\\n    var wsamp_L = new_float_n([2, Encoder.BLKSIZE]);\\n    var wsamp_S = new_float_n([2, 3, Encoder.BLKSIZE_s]);\\n    var eb = new_float_n([4, Encoder.CBANDS]),\\n        thr = new_float_n([4, Encoder.CBANDS]);\\n    var sub_short_factor = new_float_n([4, 3]);\\n    var pcfact = 0.6;\\n    /* block type */\\n\\n    var ns_attacks = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\\n    var uselongblock = new_int(2);\\n    /* usual variables like loop indices, etc.. */\\n\\n    /* chn=2 and 3 = Mid and Side channels */\\n\\n    var n_chn_psy = gfp.mode == MPEGMode.JOINT_STEREO ? 4 : gfc.channels_out;\\n    vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, energy, sub_short_factor, ns_attacks, uselongblock);\\n    vbrpsy_compute_block_type(gfp, uselongblock);\\n    /* LONG BLOCK CASE */\\n\\n    {\\n      for (var chn = 0; chn < n_chn_psy; chn++) {\\n        var ch01 = chn & 0x01;\\n        wsamp_l = wsamp_L;\\n        vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out, fftenergy, wsamp_l, ch01);\\n        vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn, fftenergy);\\n\\n        if (uselongblock[ch01] != 0) {\\n          vbrpsy_compute_masking_l(gfc, fftenergy, eb[chn], thr[chn], chn);\\n        } else {\\n          vbrpsy_skip_masking_l(gfc, chn);\\n        }\\n      }\\n\\n      if (uselongblock[0] + uselongblock[1] == 2) {\\n        /* M/S channel */\\n        if (gfp.mode == MPEGMode.JOINT_STEREO) {\\n          vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_l, gfc.ATH.cb_l, gfp.ATHlower * gfc.ATH.adjust, gfp.msfix, gfc.npart_l);\\n        }\\n      }\\n      /* TODO: apply adaptive ATH masking here ?? */\\n\\n\\n      for (var chn = 0; chn < n_chn_psy; chn++) {\\n        var ch01 = chn & 0x01;\\n\\n        if (uselongblock[ch01] != 0) {\\n          convert_partition2scalefac_l(gfc, eb[chn], thr[chn], chn);\\n        }\\n      }\\n    }\\n    /* SHORT BLOCKS CASE */\\n\\n    {\\n      for (var sblock = 0; sblock < 3; sblock++) {\\n        for (var chn = 0; chn < n_chn_psy; ++chn) {\\n          var ch01 = chn & 0x01;\\n\\n          if (uselongblock[ch01] != 0) {\\n            vbrpsy_skip_masking_s(gfc, chn, sblock);\\n          } else {\\n            /* compute masking thresholds for short blocks */\\n            wsamp_s = wsamp_S;\\n            vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock, fftenergy_s, wsamp_s, ch01);\\n            vbrpsy_compute_masking_s(gfp, fftenergy_s, eb[chn], thr[chn], chn, sblock);\\n          }\\n        }\\n\\n        if (uselongblock[0] + uselongblock[1] == 0) {\\n          /* M/S channel */\\n          if (gfp.mode == MPEGMode.JOINT_STEREO) {\\n            vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_s, gfc.ATH.cb_s, gfp.ATHlower * gfc.ATH.adjust, gfp.msfix, gfc.npart_s);\\n          }\\n          /* L/R channel */\\n\\n        }\\n        /* TODO: apply adaptive ATH masking here ?? */\\n\\n\\n        for (var chn = 0; chn < n_chn_psy; ++chn) {\\n          var ch01 = chn & 0x01;\\n\\n          if (0 == uselongblock[ch01]) {\\n            convert_partition2scalefac_s(gfc, eb[chn], thr[chn], chn, sblock);\\n          }\\n        }\\n      }\\n      /**** short block pre-echo control ****/\\n\\n\\n      for (var chn = 0; chn < n_chn_psy; chn++) {\\n        var ch01 = chn & 0x01;\\n\\n        if (uselongblock[ch01] != 0) {\\n          continue;\\n        }\\n\\n        for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\\n          var new_thmm = new_float(3);\\n\\n          for (var sblock = 0; sblock < 3; sblock++) {\\n            var thmm = gfc.thm[chn].s[sb][sblock];\\n            thmm *= NS_PREECHO_ATT0;\\n\\n            if (ns_attacks[chn][sblock] >= 2 || ns_attacks[chn][sblock + 1] == 1) {\\n              var idx = sblock != 0 ? sblock - 1 : 2;\\n              var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm, NS_PREECHO_ATT1 * pcfact);\\n              thmm = Math.min(thmm, p);\\n            } else if (ns_attacks[chn][sblock] == 1) {\\n              var idx = sblock != 0 ? sblock - 1 : 2;\\n              var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm, NS_PREECHO_ATT2 * pcfact);\\n              thmm = Math.min(thmm, p);\\n            } else if (sblock != 0 && ns_attacks[chn][sblock - 1] == 3 || sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3) {\\n              var idx = sblock != 2 ? sblock + 1 : 0;\\n              var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm, NS_PREECHO_ATT2 * pcfact);\\n              thmm = Math.min(thmm, p);\\n            }\\n            /* pulse like signal detection for fatboy.wav and so on */\\n\\n\\n            thmm *= sub_short_factor[chn][sblock];\\n            new_thmm[sblock] = thmm;\\n          }\\n\\n          for (var sblock = 0; sblock < 3; sblock++) {\\n            gfc.thm[chn].s[sb][sblock] = new_thmm[sblock];\\n          }\\n        }\\n      }\\n    }\\n\\n    for (var chn = 0; chn < n_chn_psy; chn++) {\\n      gfc.nsPsy.lastAttacks[chn] = ns_attacks[chn][2];\\n    }\\n    /***************************************************************\\n     * determine final block type\\n     ***************************************************************/\\n\\n\\n    vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d);\\n    /*********************************************************************\\n     * compute the value of PE to return ... no delay and advance\\n     *********************************************************************/\\n\\n    for (var chn = 0; chn < n_chn_psy; chn++) {\\n      var ppe;\\n      var ppePos;\\n      var type;\\n      var mr;\\n\\n      if (chn > 1) {\\n        ppe = percep_MS_entropy;\\n        ppePos = -2;\\n        type = Encoder.NORM_TYPE;\\n        if (blocktype_d[0] == Encoder.SHORT_TYPE || blocktype_d[1] == Encoder.SHORT_TYPE) type = Encoder.SHORT_TYPE;\\n        mr = masking_MS_ratio[gr_out][chn - 2];\\n      } else {\\n        ppe = percep_entropy;\\n        ppePos = 0;\\n        type = blocktype_d[chn];\\n        mr = masking_ratio[gr_out][chn];\\n      }\\n\\n      if (type == Encoder.SHORT_TYPE) {\\n        ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\\n      } else {\\n        ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\\n      }\\n\\n      if (gfp.analysis) {\\n        gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\\n      }\\n    }\\n\\n    return 0;\\n  };\\n\\n  function s3_func_x(bark, hf_slope) {\\n    var tempx = bark,\\n        tempy;\\n\\n    if (tempx >= 0) {\\n      tempy = -tempx * 27;\\n    } else {\\n      tempy = tempx * hf_slope;\\n    }\\n\\n    if (tempy <= -72.0) {\\n      return 0;\\n    }\\n\\n    return Math.exp(tempy * LN_TO_LOG10);\\n  }\\n\\n  function norm_s3_func_x(hf_slope) {\\n    var lim_a = 0,\\n        lim_b = 0;\\n    {\\n      var x = 0,\\n          l,\\n          h;\\n\\n      for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x -= 1) {\\n        ;\\n      }\\n\\n      l = x;\\n      h = 0;\\n\\n      while (Math.abs(h - l) > 1e-12) {\\n        x = (h + l) / 2;\\n\\n        if (s3_func_x(x, hf_slope) > 0) {\\n          h = x;\\n        } else {\\n          l = x;\\n        }\\n      }\\n\\n      lim_a = l;\\n    }\\n    {\\n      var x = 0,\\n          l,\\n          h;\\n\\n      for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x += 1) {\\n        ;\\n      }\\n\\n      l = 0;\\n      h = x;\\n\\n      while (Math.abs(h - l) > 1e-12) {\\n        x = (h + l) / 2;\\n\\n        if (s3_func_x(x, hf_slope) > 0) {\\n          l = x;\\n        } else {\\n          h = x;\\n        }\\n      }\\n\\n      lim_b = h;\\n    }\\n    {\\n      var sum = 0;\\n      var m = 1000;\\n      var i;\\n\\n      for (i = 0; i <= m; ++i) {\\n        var x = lim_a + i * (lim_b - lim_a) / m;\\n        var y = s3_func_x(x, hf_slope);\\n        sum += y;\\n      }\\n\\n      {\\n        var norm = (m + 1) / (sum * (lim_b - lim_a));\\n        /* printf( \\\"norm = %lf\\\\n\\\",norm); */\\n\\n        return norm;\\n      }\\n    }\\n  }\\n  /**\\n   *   The spreading function.  Values returned in units of energy\\n   */\\n\\n\\n  function s3_func(bark) {\\n    var tempx, x, tempy, temp;\\n    tempx = bark;\\n    if (tempx >= 0) tempx *= 3;else tempx *= 1.5;\\n\\n    if (tempx >= 0.5 && tempx <= 2.5) {\\n      temp = tempx - 0.5;\\n      x = 8.0 * (temp * temp - 2.0 * temp);\\n    } else x = 0.0;\\n\\n    tempx += 0.474;\\n    tempy = 15.811389 + 7.5 * tempx - 17.5 * Math.sqrt(1.0 + tempx * tempx);\\n    if (tempy <= -60.0) return 0.0;\\n    tempx = Math.exp((x + tempy) * LN_TO_LOG10);\\n    /**\\n     * <PRE>\\n     * Normalization.  The spreading function should be normalized so that:\\n     * +inf\\n     * /\\n     * |  s3 [ bark ]  d(bark)   =  1\\n     * /\\n     * -inf\\n     * </PRE>\\n     */\\n\\n    tempx /= .6609193;\\n    return tempx;\\n  }\\n  /**\\n   * see for example \\\"Zwicker: Psychoakustik, 1982; ISBN 3-540-11401-7\\n   */\\n\\n\\n  function freq2bark(freq) {\\n    /* input: freq in hz output: barks */\\n    if (freq < 0) freq = 0;\\n    freq = freq * 0.001;\\n    return 13.0 * Math.atan(.76 * freq) + 3.5 * Math.atan(freq * freq / (7.5 * 7.5));\\n  }\\n\\n  function init_numline(numlines, bo, bm, bval, bval_width, mld, bo_w, sfreq, blksize, scalepos, deltafreq, sbmax) {\\n    var b_frq = new_float(Encoder.CBANDS + 1);\\n    var sample_freq_frac = sfreq / (sbmax > 15 ? 2 * 576 : 2 * 192);\\n    var partition = new_int(Encoder.HBLKSIZE);\\n    var i;\\n    sfreq /= blksize;\\n    var j = 0;\\n    var ni = 0;\\n    /* compute numlines, the number of spectral lines in each partition band */\\n\\n    /* each partition band should be about DELBARK wide. */\\n\\n    for (i = 0; i < Encoder.CBANDS; i++) {\\n      var bark1;\\n      var j2;\\n      bark1 = freq2bark(sfreq * j);\\n      b_frq[i] = sfreq * j;\\n\\n      for (j2 = j; freq2bark(sfreq * j2) - bark1 < DELBARK && j2 <= blksize / 2; j2++) {\\n        ;\\n      }\\n\\n      numlines[i] = j2 - j;\\n      ni = i + 1;\\n\\n      while (j < j2) {\\n        assert(j < Encoder.HBLKSIZE);\\n        partition[j++] = i;\\n      }\\n\\n      if (j > blksize / 2) {\\n        j = blksize / 2;\\n        ++i;\\n        break;\\n      }\\n    }\\n\\n    assert(i < Encoder.CBANDS);\\n    b_frq[i] = sfreq * j;\\n\\n    for (var sfb = 0; sfb < sbmax; sfb++) {\\n      var i1, i2, start, end;\\n      var arg;\\n      start = scalepos[sfb];\\n      end = scalepos[sfb + 1];\\n      i1 = 0 | Math.floor(.5 + deltafreq * (start - .5));\\n      if (i1 < 0) i1 = 0;\\n      i2 = 0 | Math.floor(.5 + deltafreq * (end - .5));\\n      if (i2 > blksize / 2) i2 = blksize / 2;\\n      bm[sfb] = (partition[i1] + partition[i2]) / 2;\\n      bo[sfb] = partition[i2];\\n      var f_tmp = sample_freq_frac * end;\\n      /*\\n       * calculate how much of this band belongs to current scalefactor\\n       * band\\n       */\\n\\n      bo_w[sfb] = (f_tmp - b_frq[bo[sfb]]) / (b_frq[bo[sfb] + 1] - b_frq[bo[sfb]]);\\n\\n      if (bo_w[sfb] < 0) {\\n        bo_w[sfb] = 0;\\n      } else {\\n        if (bo_w[sfb] > 1) {\\n          bo_w[sfb] = 1;\\n        }\\n      }\\n      /* setup stereo demasking thresholds */\\n\\n      /* formula reverse enginerred from plot in paper */\\n\\n\\n      arg = freq2bark(sfreq * scalepos[sfb] * deltafreq);\\n      arg = Math.min(arg, 15.5) / 15.5;\\n      mld[sfb] = Math.pow(10.0, 1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\\n    }\\n    /* compute bark values of each critical band */\\n\\n\\n    j = 0;\\n\\n    for (var k = 0; k < ni; k++) {\\n      var w = numlines[k];\\n      var bark1, bark2;\\n      bark1 = freq2bark(sfreq * j);\\n      bark2 = freq2bark(sfreq * (j + w - 1));\\n      bval[k] = .5 * (bark1 + bark2);\\n      bark1 = freq2bark(sfreq * (j - .5));\\n      bark2 = freq2bark(sfreq * (j + w - .5));\\n      bval_width[k] = bark2 - bark1;\\n      j += w;\\n    }\\n\\n    return ni;\\n  }\\n\\n  function init_s3_values(s3ind, npart, bval, bval_width, norm, use_old_s3) {\\n    var s3 = new_float_n([Encoder.CBANDS, Encoder.CBANDS]);\\n    /*\\n     * The s3 array is not linear in the bark scale.\\n     *\\n     * bval[x] should be used to get the bark value.\\n     */\\n\\n    var j;\\n    var numberOfNoneZero = 0;\\n    /**\\n     * <PRE>\\n     * s[i][j], the value of the spreading function,\\n     * centered at band j (masker), for band i (maskee)\\n     *\\n     * i.e.: sum over j to spread into signal barkval=i\\n     * NOTE: i and j are used opposite as in the ISO docs\\n     * </PRE>\\n     */\\n\\n    if (use_old_s3) {\\n      for (var i = 0; i < npart; i++) {\\n        for (j = 0; j < npart; j++) {\\n          var v = s3_func(bval[i] - bval[j]) * bval_width[j];\\n          s3[i][j] = v * norm[i];\\n        }\\n      }\\n    } else {\\n      for (j = 0; j < npart; j++) {\\n        var hf_slope = 15 + Math.min(21 / bval[j], 12);\\n        var s3_x_norm = norm_s3_func_x(hf_slope);\\n\\n        for (var i = 0; i < npart; i++) {\\n          var v = s3_x_norm * s3_func_x(bval[i] - bval[j], hf_slope) * bval_width[j];\\n          s3[i][j] = v * norm[i];\\n        }\\n      }\\n    }\\n\\n    for (var i = 0; i < npart; i++) {\\n      for (j = 0; j < npart; j++) {\\n        if (s3[i][j] > 0.0) break;\\n      }\\n\\n      s3ind[i][0] = j;\\n\\n      for (j = npart - 1; j > 0; j--) {\\n        if (s3[i][j] > 0.0) break;\\n      }\\n\\n      s3ind[i][1] = j;\\n      numberOfNoneZero += s3ind[i][1] - s3ind[i][0] + 1;\\n    }\\n\\n    var p = new_float(numberOfNoneZero);\\n    var k = 0;\\n\\n    for (var i = 0; i < npart; i++) {\\n      for (j = s3ind[i][0]; j <= s3ind[i][1]; j++) {\\n        p[k++] = s3[i][j];\\n      }\\n    }\\n\\n    return p;\\n  }\\n\\n  function stereo_demask(f) {\\n    /* setup stereo demasking thresholds */\\n\\n    /* formula reverse enginerred from plot in paper */\\n    var arg = freq2bark(f);\\n    arg = Math.min(arg, 15.5) / 15.5;\\n    return Math.pow(10.0, 1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\\n  }\\n  /**\\n   * NOTE: the bitrate reduction from the inter-channel masking effect is low\\n   * compared to the chance of getting annyoing artefacts. L3psycho_anal_vbr\\n   * does not use this feature. (Robert 071216)\\n   */\\n\\n\\n  this.psymodel_init = function (gfp) {\\n    var gfc = gfp.internal_flags;\\n    var i;\\n    var useOldS3 = true;\\n    var bvl_a = 13,\\n        bvl_b = 24;\\n    var snr_l_a = 0,\\n        snr_l_b = 0;\\n    var snr_s_a = -8.25,\\n        snr_s_b = -4.5;\\n    var bval = new_float(Encoder.CBANDS);\\n    var bval_width = new_float(Encoder.CBANDS);\\n    var norm = new_float(Encoder.CBANDS);\\n    var sfreq = gfp.out_samplerate;\\n\\n    switch (gfp.experimentalZ) {\\n      default:\\n      case 0:\\n        useOldS3 = true;\\n        break;\\n\\n      case 1:\\n        useOldS3 = gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt ? false : true;\\n        break;\\n\\n      case 2:\\n        useOldS3 = false;\\n        break;\\n\\n      case 3:\\n        bvl_a = 8;\\n        snr_l_a = -1.75;\\n        snr_l_b = -0.0125;\\n        snr_s_a = -8.25;\\n        snr_s_b = -2.25;\\n        break;\\n    }\\n\\n    gfc.ms_ener_ratio_old = .25;\\n    gfc.blocktype_old[0] = gfc.blocktype_old[1] = Encoder.NORM_TYPE; // the vbr header is long blocks\\n\\n    for (i = 0; i < 4; ++i) {\\n      for (var j = 0; j < Encoder.CBANDS; ++j) {\\n        gfc.nb_1[i][j] = 1e20;\\n        gfc.nb_2[i][j] = 1e20;\\n        gfc.nb_s1[i][j] = gfc.nb_s2[i][j] = 1.0;\\n      }\\n\\n      for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\\n        gfc.en[i].l[sb] = 1e20;\\n        gfc.thm[i].l[sb] = 1e20;\\n      }\\n\\n      for (var j = 0; j < 3; ++j) {\\n        for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\\n          gfc.en[i].s[sb][j] = 1e20;\\n          gfc.thm[i].s[sb][j] = 1e20;\\n        }\\n\\n        gfc.nsPsy.lastAttacks[i] = 0;\\n      }\\n\\n      for (var j = 0; j < 9; j++) {\\n        gfc.nsPsy.last_en_subshort[i][j] = 10.;\\n      }\\n    }\\n    /* init. for loudness approx. -jd 2001 mar 27 */\\n\\n\\n    gfc.loudness_sq_save[0] = gfc.loudness_sq_save[1] = 0.0;\\n    /*************************************************************************\\n     * now compute the psychoacoustic model specific constants\\n     ************************************************************************/\\n\\n    /* compute numlines, bo, bm, bval, bval_width, mld */\\n\\n    gfc.npart_l = init_numline(gfc.numlines_l, gfc.bo_l, gfc.bm_l, bval, bval_width, gfc.mld_l, gfc.PSY.bo_l_weight, sfreq, Encoder.BLKSIZE, gfc.scalefac_band.l, Encoder.BLKSIZE / (2.0 * 576), Encoder.SBMAX_l);\\n    assert(gfc.npart_l < Encoder.CBANDS);\\n    /* compute the spreading function */\\n\\n    for (i = 0; i < gfc.npart_l; i++) {\\n      var snr = snr_l_a;\\n\\n      if (bval[i] >= bvl_a) {\\n        snr = snr_l_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_l_a * (bvl_b - bval[i]) / (bvl_b - bvl_a);\\n      }\\n\\n      norm[i] = Math.pow(10.0, snr / 10.0);\\n\\n      if (gfc.numlines_l[i] > 0) {\\n        gfc.rnumlines_l[i] = 1.0 / gfc.numlines_l[i];\\n      } else {\\n        gfc.rnumlines_l[i] = 0;\\n      }\\n    }\\n\\n    gfc.s3_ll = init_s3_values(gfc.s3ind, gfc.npart_l, bval, bval_width, norm, useOldS3);\\n    /* compute long block specific values, ATH and MINVAL */\\n\\n    var j = 0;\\n\\n    for (i = 0; i < gfc.npart_l; i++) {\\n      var x;\\n      /* ATH */\\n\\n      x = Float.MAX_VALUE;\\n\\n      for (var k = 0; k < gfc.numlines_l[i]; k++, j++) {\\n        var freq = sfreq * j / (1000.0 * Encoder.BLKSIZE);\\n        var level;\\n        /*\\n         * ATH below 100 Hz constant, not further climbing\\n         */\\n\\n        level = this.ATHformula(freq * 1000, gfp) - 20; // scale to FFT units; returned value is in dB\\n\\n        level = Math.pow(10., 0.1 * level); // convert from dB . energy\\n\\n        level *= gfc.numlines_l[i];\\n        if (x > level) x = level;\\n      }\\n\\n      gfc.ATH.cb_l[i] = x;\\n      /*\\n       * MINVAL. For low freq, the strength of the masking is limited by\\n       * minval this is an ISO MPEG1 thing, dont know if it is really\\n       * needed\\n       */\\n\\n      /*\\n       * FIXME: it does work to reduce low-freq problems in S53-Wind-Sax\\n       * and lead-voice samples, but introduces some 3 kbps bit bloat too.\\n       * TODO: Further refinement of the shape of this hack.\\n       */\\n\\n      x = -20 + bval[i] * 20 / 10;\\n\\n      if (x > 6) {\\n        x = 100;\\n      }\\n\\n      if (x < -15) {\\n        x = -15;\\n      }\\n\\n      x -= 8.;\\n      gfc.minval_l[i] = Math.pow(10.0, x / 10.) * gfc.numlines_l[i];\\n    }\\n    /************************************************************************\\n     * do the same things for short blocks\\n     ************************************************************************/\\n\\n\\n    gfc.npart_s = init_numline(gfc.numlines_s, gfc.bo_s, gfc.bm_s, bval, bval_width, gfc.mld_s, gfc.PSY.bo_s_weight, sfreq, Encoder.BLKSIZE_s, gfc.scalefac_band.s, Encoder.BLKSIZE_s / (2.0 * 192), Encoder.SBMAX_s);\\n    assert(gfc.npart_s < Encoder.CBANDS);\\n    /* SNR formula. short block is normalized by SNR. is it still right ? */\\n\\n    j = 0;\\n\\n    for (i = 0; i < gfc.npart_s; i++) {\\n      var x;\\n      var snr = snr_s_a;\\n\\n      if (bval[i] >= bvl_a) {\\n        snr = snr_s_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_s_a * (bvl_b - bval[i]) / (bvl_b - bvl_a);\\n      }\\n\\n      norm[i] = Math.pow(10.0, snr / 10.0);\\n      /* ATH */\\n\\n      x = Float.MAX_VALUE;\\n\\n      for (var k = 0; k < gfc.numlines_s[i]; k++, j++) {\\n        var freq = sfreq * j / (1000.0 * Encoder.BLKSIZE_s);\\n        var level;\\n        /* freq = Min(.1,freq); */\\n\\n        /*\\n         * ATH below 100 Hz constant, not\\n         * further climbing\\n         */\\n\\n        level = this.ATHformula(freq * 1000, gfp) - 20; // scale to FFT units; returned value is in dB\\n\\n        level = Math.pow(10., 0.1 * level); // convert from dB . energy\\n\\n        level *= gfc.numlines_s[i];\\n        if (x > level) x = level;\\n      }\\n\\n      gfc.ATH.cb_s[i] = x;\\n      /*\\n       * MINVAL. For low freq, the strength of the masking is limited by\\n       * minval this is an ISO MPEG1 thing, dont know if it is really\\n       * needed\\n       */\\n\\n      x = -7.0 + bval[i] * 7.0 / 12.0;\\n\\n      if (bval[i] > 12) {\\n        x *= 1 + Math.log(1 + x) * 3.1;\\n      }\\n\\n      if (bval[i] < 12) {\\n        x *= 1 + Math.log(1 - x) * 2.3;\\n      }\\n\\n      if (x < -15) {\\n        x = -15;\\n      }\\n\\n      x -= 8;\\n      gfc.minval_s[i] = Math.pow(10.0, x / 10) * gfc.numlines_s[i];\\n    }\\n\\n    gfc.s3_ss = init_s3_values(gfc.s3ind_s, gfc.npart_s, bval, bval_width, norm, useOldS3);\\n    init_mask_add_max_values();\\n    fft.init_fft(gfc);\\n    /* setup temporal masking */\\n\\n    gfc.decay = Math.exp(-1.0 * LOG10 / (temporalmask_sustain_sec * sfreq / 192.0));\\n    {\\n      var msfix;\\n      msfix = NS_MSFIX;\\n      if ((gfp.exp_nspsytune & 2) != 0) msfix = 1.0;\\n      if (Math.abs(gfp.msfix) > 0.0) msfix = gfp.msfix;\\n      gfp.msfix = msfix;\\n      /*\\n       * spread only from npart_l bands. Normally, we use the spreading\\n       * function to convolve from npart_l down to npart_l bands\\n       */\\n\\n      for (var b = 0; b < gfc.npart_l; b++) {\\n        if (gfc.s3ind[b][1] > gfc.npart_l - 1) gfc.s3ind[b][1] = gfc.npart_l - 1;\\n      }\\n    }\\n    /*\\n     * prepare for ATH auto adjustment: we want to decrease the ATH by 12 dB\\n     * per second\\n     */\\n\\n    var frame_duration = 576. * gfc.mode_gr / sfreq;\\n    gfc.ATH.decay = Math.pow(10., -12. / 10. * frame_duration);\\n    gfc.ATH.adjust = 0.01;\\n    /* minimum, for leading low loudness */\\n\\n    gfc.ATH.adjustLimit = 1.0;\\n    /* on lead, allow adjust up to maximum */\\n\\n    assert(gfc.bo_l[Encoder.SBMAX_l - 1] <= gfc.npart_l);\\n    assert(gfc.bo_s[Encoder.SBMAX_s - 1] <= gfc.npart_s);\\n\\n    if (gfp.ATHtype != -1) {\\n      /* compute equal loudness weights (eql_w) */\\n      var freq;\\n      var freq_inc = gfp.out_samplerate / Encoder.BLKSIZE;\\n      var eql_balance = 0.0;\\n      freq = 0.0;\\n\\n      for (i = 0; i < Encoder.BLKSIZE / 2; ++i) {\\n        /* convert ATH dB to relative power (not dB) */\\n\\n        /* to determine eql_w */\\n        freq += freq_inc;\\n        gfc.ATH.eql_w[i] = 1. / Math.pow(10, this.ATHformula(freq, gfp) / 10);\\n        eql_balance += gfc.ATH.eql_w[i];\\n      }\\n\\n      eql_balance = 1.0 / eql_balance;\\n\\n      for (i = Encoder.BLKSIZE / 2; --i >= 0;) {\\n        /* scale weights */\\n        gfc.ATH.eql_w[i] *= eql_balance;\\n      }\\n    }\\n\\n    {\\n      for (var b = j = 0; b < gfc.npart_s; ++b) {\\n        for (i = 0; i < gfc.numlines_s[b]; ++i) {\\n          ++j;\\n        }\\n      }\\n\\n      assert(j == 129);\\n\\n      for (var b = j = 0; b < gfc.npart_l; ++b) {\\n        for (i = 0; i < gfc.numlines_l[b]; ++i) {\\n          ++j;\\n        }\\n      }\\n\\n      assert(j == 513);\\n    }\\n    j = 0;\\n\\n    for (i = 0; i < gfc.npart_l; i++) {\\n      var freq = sfreq * (j + gfc.numlines_l[i] / 2) / (1.0 * Encoder.BLKSIZE);\\n      gfc.mld_cb_l[i] = stereo_demask(freq);\\n      j += gfc.numlines_l[i];\\n    }\\n\\n    for (; i < Encoder.CBANDS; ++i) {\\n      gfc.mld_cb_l[i] = 1;\\n    }\\n\\n    j = 0;\\n\\n    for (i = 0; i < gfc.npart_s; i++) {\\n      var freq = sfreq * (j + gfc.numlines_s[i] / 2) / (1.0 * Encoder.BLKSIZE_s);\\n      gfc.mld_cb_s[i] = stereo_demask(freq);\\n      j += gfc.numlines_s[i];\\n    }\\n\\n    for (; i < Encoder.CBANDS; ++i) {\\n      gfc.mld_cb_s[i] = 1;\\n    }\\n\\n    return 0;\\n  };\\n  /**\\n   * Those ATH formulas are returning their minimum value for input = -1\\n   */\\n\\n\\n  function ATHformula_GB(f, value) {\\n    /**\\n     * <PRE>\\n     *  from Painter & Spanias\\n     *           modified by Gabriel Bouvigne to better fit the reality\\n     *           ath =    3.640 * pow(f,-0.8)\\n     *           - 6.800 * exp(-0.6*pow(f-3.4,2.0))\\n     *           + 6.000 * exp(-0.15*pow(f-8.7,2.0))\\n     *           + 0.6* 0.001 * pow(f,4.0);\\n     *\\n     *\\n     *           In the past LAME was using the Painter &Spanias formula.\\n     *           But we had some recurrent problems with HF content.\\n     *           We measured real ATH values, and found the older formula\\n     *           to be inaccurate in the higher part. So we made this new\\n     *           formula and this solved most of HF problematic test cases.\\n     *           The tradeoff is that in VBR mode it increases a lot the\\n     *           bitrate.\\n     * </PRE>\\n     */\\n\\n    /*\\n     * This curve can be adjusted according to the VBR scale: it adjusts\\n     * from something close to Painter & Spanias on V9 up to Bouvigne's\\n     * formula for V0. This way the VBR bitrate is more balanced according\\n     * to the -V value.\\n     */\\n    // the following Hack allows to ask for the lowest value\\n    if (f < -.3) f = 3410; // convert to khz\\n\\n    f /= 1000;\\n    f = Math.max(0.1, f);\\n    var ath = 3.640 * Math.pow(f, -0.8) - 6.800 * Math.exp(-0.6 * Math.pow(f - 3.4, 2.0)) + 6.000 * Math.exp(-0.15 * Math.pow(f - 8.7, 2.0)) + (0.6 + 0.04 * value) * 0.001 * Math.pow(f, 4.0);\\n    return ath;\\n  }\\n\\n  this.ATHformula = function (f, gfp) {\\n    var ath;\\n\\n    switch (gfp.ATHtype) {\\n      case 0:\\n        ath = ATHformula_GB(f, 9);\\n        break;\\n\\n      case 1:\\n        // over sensitive, should probably be removed\\n        ath = ATHformula_GB(f, -1);\\n        break;\\n\\n      case 2:\\n        ath = ATHformula_GB(f, 0);\\n        break;\\n\\n      case 3:\\n        // modification of GB formula by Roel\\n        ath = ATHformula_GB(f, 1) + 6;\\n        break;\\n\\n      case 4:\\n        ath = ATHformula_GB(f, gfp.ATHcurve);\\n        break;\\n\\n      default:\\n        ath = ATHformula_GB(f, 0);\\n        break;\\n    }\\n\\n    return ath;\\n  };\\n}\\n\\nmodule.exports = PsyModel;\",\"var common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nvar Encoder = require('./Encoder.js');\\n\\nfunction FFT() {\\n  var window = new_float(Encoder.BLKSIZE);\\n  var window_s = new_float(Encoder.BLKSIZE_s / 2);\\n  var costab = [9.238795325112867e-01, 3.826834323650898e-01, 9.951847266721969e-01, 9.801714032956060e-02, 9.996988186962042e-01, 2.454122852291229e-02, 9.999811752826011e-01, 6.135884649154475e-03];\\n\\n  function fht(fz, fzPos, n) {\\n    var tri = 0;\\n    var k4;\\n    var fi;\\n    var gi;\\n    n <<= 1;\\n    /* to get BLKSIZE, because of 3DNow! ASM routine */\\n\\n    var fn = fzPos + n;\\n    k4 = 4;\\n\\n    do {\\n      var s1, c1;\\n      var i, k1, k2, k3, kx;\\n      kx = k4 >> 1;\\n      k1 = k4;\\n      k2 = k4 << 1;\\n      k3 = k2 + k1;\\n      k4 = k2 << 1;\\n      fi = fzPos;\\n      gi = fi + kx;\\n\\n      do {\\n        var f0, f1, f2, f3;\\n        f1 = fz[fi + 0] - fz[fi + k1];\\n        f0 = fz[fi + 0] + fz[fi + k1];\\n        f3 = fz[fi + k2] - fz[fi + k3];\\n        f2 = fz[fi + k2] + fz[fi + k3];\\n        fz[fi + k2] = f0 - f2;\\n        fz[fi + 0] = f0 + f2;\\n        fz[fi + k3] = f1 - f3;\\n        fz[fi + k1] = f1 + f3;\\n        f1 = fz[gi + 0] - fz[gi + k1];\\n        f0 = fz[gi + 0] + fz[gi + k1];\\n        f3 = Util.SQRT2 * fz[gi + k3];\\n        f2 = Util.SQRT2 * fz[gi + k2];\\n        fz[gi + k2] = f0 - f2;\\n        fz[gi + 0] = f0 + f2;\\n        fz[gi + k3] = f1 - f3;\\n        fz[gi + k1] = f1 + f3;\\n        gi += k4;\\n        fi += k4;\\n      } while (fi < fn);\\n\\n      c1 = costab[tri + 0];\\n      s1 = costab[tri + 1];\\n\\n      for (i = 1; i < kx; i++) {\\n        var c2, s2;\\n        c2 = 1 - 2 * s1 * s1;\\n        s2 = 2 * s1 * c1;\\n        fi = fzPos + i;\\n        gi = fzPos + k1 - i;\\n\\n        do {\\n          var a, b, g0, f0, f1, g1, f2, g2, f3, g3;\\n          b = s2 * fz[fi + k1] - c2 * fz[gi + k1];\\n          a = c2 * fz[fi + k1] + s2 * fz[gi + k1];\\n          f1 = fz[fi + 0] - a;\\n          f0 = fz[fi + 0] + a;\\n          g1 = fz[gi + 0] - b;\\n          g0 = fz[gi + 0] + b;\\n          b = s2 * fz[fi + k3] - c2 * fz[gi + k3];\\n          a = c2 * fz[fi + k3] + s2 * fz[gi + k3];\\n          f3 = fz[fi + k2] - a;\\n          f2 = fz[fi + k2] + a;\\n          g3 = fz[gi + k2] - b;\\n          g2 = fz[gi + k2] + b;\\n          b = s1 * f2 - c1 * g3;\\n          a = c1 * f2 + s1 * g3;\\n          fz[fi + k2] = f0 - a;\\n          fz[fi + 0] = f0 + a;\\n          fz[gi + k3] = g1 - b;\\n          fz[gi + k1] = g1 + b;\\n          b = c1 * g2 - s1 * f3;\\n          a = s1 * g2 + c1 * f3;\\n          fz[gi + k2] = g0 - a;\\n          fz[gi + 0] = g0 + a;\\n          fz[fi + k3] = f1 - b;\\n          fz[fi + k1] = f1 + b;\\n          gi += k4;\\n          fi += k4;\\n        } while (fi < fn);\\n\\n        c2 = c1;\\n        c1 = c2 * costab[tri + 0] - s1 * costab[tri + 1];\\n        s1 = c2 * costab[tri + 1] + s1 * costab[tri + 0];\\n      }\\n\\n      tri += 2;\\n    } while (k4 < n);\\n  }\\n\\n  var rv_tbl = [0x00, 0x80, 0x40, 0xc0, 0x20, 0xa0, 0x60, 0xe0, 0x10, 0x90, 0x50, 0xd0, 0x30, 0xb0, 0x70, 0xf0, 0x08, 0x88, 0x48, 0xc8, 0x28, 0xa8, 0x68, 0xe8, 0x18, 0x98, 0x58, 0xd8, 0x38, 0xb8, 0x78, 0xf8, 0x04, 0x84, 0x44, 0xc4, 0x24, 0xa4, 0x64, 0xe4, 0x14, 0x94, 0x54, 0xd4, 0x34, 0xb4, 0x74, 0xf4, 0x0c, 0x8c, 0x4c, 0xcc, 0x2c, 0xac, 0x6c, 0xec, 0x1c, 0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x7c, 0xfc, 0x02, 0x82, 0x42, 0xc2, 0x22, 0xa2, 0x62, 0xe2, 0x12, 0x92, 0x52, 0xd2, 0x32, 0xb2, 0x72, 0xf2, 0x0a, 0x8a, 0x4a, 0xca, 0x2a, 0xaa, 0x6a, 0xea, 0x1a, 0x9a, 0x5a, 0xda, 0x3a, 0xba, 0x7a, 0xfa, 0x06, 0x86, 0x46, 0xc6, 0x26, 0xa6, 0x66, 0xe6, 0x16, 0x96, 0x56, 0xd6, 0x36, 0xb6, 0x76, 0xf6, 0x0e, 0x8e, 0x4e, 0xce, 0x2e, 0xae, 0x6e, 0xee, 0x1e, 0x9e, 0x5e, 0xde, 0x3e, 0xbe, 0x7e, 0xfe];\\n\\n  this.fft_short = function (gfc, x_real, chn, buffer, bufPos) {\\n    for (var b = 0; b < 3; b++) {\\n      var x = Encoder.BLKSIZE_s / 2;\\n      var k = 0xffff & 576 / 3 * (b + 1);\\n      var j = Encoder.BLKSIZE_s / 8 - 1;\\n\\n      do {\\n        var f0, f1, f2, f3, w;\\n        var i = rv_tbl[j << 2] & 0xff;\\n        f0 = window_s[i] * buffer[chn][bufPos + i + k];\\n        w = window_s[0x7f - i] * buffer[chn][bufPos + i + k + 0x80];\\n        f1 = f0 - w;\\n        f0 = f0 + w;\\n        f2 = window_s[i + 0x40] * buffer[chn][bufPos + i + k + 0x40];\\n        w = window_s[0x3f - i] * buffer[chn][bufPos + i + k + 0xc0];\\n        f3 = f2 - w;\\n        f2 = f2 + w;\\n        x -= 4;\\n        x_real[b][x + 0] = f0 + f2;\\n        x_real[b][x + 2] = f0 - f2;\\n        x_real[b][x + 1] = f1 + f3;\\n        x_real[b][x + 3] = f1 - f3;\\n        f0 = window_s[i + 0x01] * buffer[chn][bufPos + i + k + 0x01];\\n        w = window_s[0x7e - i] * buffer[chn][bufPos + i + k + 0x81];\\n        f1 = f0 - w;\\n        f0 = f0 + w;\\n        f2 = window_s[i + 0x41] * buffer[chn][bufPos + i + k + 0x41];\\n        w = window_s[0x3e - i] * buffer[chn][bufPos + i + k + 0xc1];\\n        f3 = f2 - w;\\n        f2 = f2 + w;\\n        x_real[b][x + Encoder.BLKSIZE_s / 2 + 0] = f0 + f2;\\n        x_real[b][x + Encoder.BLKSIZE_s / 2 + 2] = f0 - f2;\\n        x_real[b][x + Encoder.BLKSIZE_s / 2 + 1] = f1 + f3;\\n        x_real[b][x + Encoder.BLKSIZE_s / 2 + 3] = f1 - f3;\\n      } while (--j >= 0);\\n\\n      fht(x_real[b], x, Encoder.BLKSIZE_s / 2);\\n      /* BLKSIZE_s/2 because of 3DNow! ASM routine */\\n\\n      /* BLKSIZE/2 because of 3DNow! ASM routine */\\n    }\\n  };\\n\\n  this.fft_long = function (gfc, y, chn, buffer, bufPos) {\\n    var jj = Encoder.BLKSIZE / 8 - 1;\\n    var x = Encoder.BLKSIZE / 2;\\n\\n    do {\\n      var f0, f1, f2, f3, w;\\n      var i = rv_tbl[jj] & 0xff;\\n      f0 = window[i] * buffer[chn][bufPos + i];\\n      w = window[i + 0x200] * buffer[chn][bufPos + i + 0x200];\\n      f1 = f0 - w;\\n      f0 = f0 + w;\\n      f2 = window[i + 0x100] * buffer[chn][bufPos + i + 0x100];\\n      w = window[i + 0x300] * buffer[chn][bufPos + i + 0x300];\\n      f3 = f2 - w;\\n      f2 = f2 + w;\\n      x -= 4;\\n      y[x + 0] = f0 + f2;\\n      y[x + 2] = f0 - f2;\\n      y[x + 1] = f1 + f3;\\n      y[x + 3] = f1 - f3;\\n      f0 = window[i + 0x001] * buffer[chn][bufPos + i + 0x001];\\n      w = window[i + 0x201] * buffer[chn][bufPos + i + 0x201];\\n      f1 = f0 - w;\\n      f0 = f0 + w;\\n      f2 = window[i + 0x101] * buffer[chn][bufPos + i + 0x101];\\n      w = window[i + 0x301] * buffer[chn][bufPos + i + 0x301];\\n      f3 = f2 - w;\\n      f2 = f2 + w;\\n      y[x + Encoder.BLKSIZE / 2 + 0] = f0 + f2;\\n      y[x + Encoder.BLKSIZE / 2 + 2] = f0 - f2;\\n      y[x + Encoder.BLKSIZE / 2 + 1] = f1 + f3;\\n      y[x + Encoder.BLKSIZE / 2 + 3] = f1 - f3;\\n    } while (--jj >= 0);\\n\\n    fht(y, x, Encoder.BLKSIZE / 2);\\n    /* BLKSIZE/2 because of 3DNow! ASM routine */\\n  };\\n\\n  this.init_fft = function (gfc) {\\n    /* The type of window used here will make no real difference, but */\\n\\n    /*\\n     * in the interest of merging nspsytune stuff - switch to blackman\\n     * window\\n     */\\n    for (var i = 0; i < Encoder.BLKSIZE; i++) {\\n      /* blackman window */\\n      window[i] = 0.42 - 0.5 * Math.cos(2 * Math.PI * (i + .5) / Encoder.BLKSIZE) + 0.08 * Math.cos(4 * Math.PI * (i + .5) / Encoder.BLKSIZE);\\n    }\\n\\n    for (var i = 0; i < Encoder.BLKSIZE_s / 2; i++) {\\n      window_s[i] = 0.5 * (1.0 - Math.cos(2.0 * Math.PI * (i + 0.5) / Encoder.BLKSIZE_s));\\n    }\\n  };\\n}\\n\\nmodule.exports = FFT;\",\"/*\\n *      MP3 window subband -> subband filtering -> mdct routine\\n *\\n *      Copyright (c) 1999-2000 Takehiro Tominaga\\n *\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Library General Public License for more details.\\n *\\n * You should have received a copy of the GNU Library General Public\\n * License along with this library; if not, write to the\\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\\n * Boston, MA 02111-1307, USA.\\n */\\n\\n/*\\n *         Special Thanks to Patrick De Smet for your advices.\\n */\\n\\n/* $Id: NewMDCT.java,v 1.11 2011/05/24 20:48:06 kenchis Exp $ */\\n//package mp3;\\n//import java.util.Arrays;\\nvar common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nvar Encoder = require('./Encoder.js');\\n\\nfunction NewMDCT() {\\n  var enwindow = [-4.77e-07 * 0.740951125354959 / 2.384e-06, 1.03951e-04 * 0.740951125354959 / 2.384e-06, 9.53674e-04 * 0.740951125354959 / 2.384e-06, 2.841473e-03 * 0.740951125354959 / 2.384e-06, 3.5758972e-02 * 0.740951125354959 / 2.384e-06, 3.401756e-03 * 0.740951125354959 / 2.384e-06, 9.83715e-04 * 0.740951125354959 / 2.384e-06, 9.9182e-05 * 0.740951125354959 / 2.384e-06,\\n  /* 15 */\\n  1.2398e-05 * 0.740951125354959 / 2.384e-06, 1.91212e-04 * 0.740951125354959 / 2.384e-06, 2.283096e-03 * 0.740951125354959 / 2.384e-06, 1.6994476e-02 * 0.740951125354959 / 2.384e-06, -1.8756866e-02 * 0.740951125354959 / 2.384e-06, -2.630711e-03 * 0.740951125354959 / 2.384e-06, -2.47478e-04 * 0.740951125354959 / 2.384e-06, -1.4782e-05 * 0.740951125354959 / 2.384e-06, 9.063471690191471e-01, 1.960342806591213e-01, -4.77e-07 * 0.773010453362737 / 2.384e-06, 1.05858e-04 * 0.773010453362737 / 2.384e-06, 9.30786e-04 * 0.773010453362737 / 2.384e-06, 2.521515e-03 * 0.773010453362737 / 2.384e-06, 3.5694122e-02 * 0.773010453362737 / 2.384e-06, 3.643036e-03 * 0.773010453362737 / 2.384e-06, 9.91821e-04 * 0.773010453362737 / 2.384e-06, 9.6321e-05 * 0.773010453362737 / 2.384e-06,\\n  /* 14 */\\n  1.1444e-05 * 0.773010453362737 / 2.384e-06, 1.65462e-04 * 0.773010453362737 / 2.384e-06, 2.110004e-03 * 0.773010453362737 / 2.384e-06, 1.6112804e-02 * 0.773010453362737 / 2.384e-06, -1.9634247e-02 * 0.773010453362737 / 2.384e-06, -2.803326e-03 * 0.773010453362737 / 2.384e-06, -2.77042e-04 * 0.773010453362737 / 2.384e-06, -1.6689e-05 * 0.773010453362737 / 2.384e-06, 8.206787908286602e-01, 3.901806440322567e-01, -4.77e-07 * 0.803207531480645 / 2.384e-06, 1.07288e-04 * 0.803207531480645 / 2.384e-06, 9.02653e-04 * 0.803207531480645 / 2.384e-06, 2.174854e-03 * 0.803207531480645 / 2.384e-06, 3.5586357e-02 * 0.803207531480645 / 2.384e-06, 3.858566e-03 * 0.803207531480645 / 2.384e-06, 9.95159e-04 * 0.803207531480645 / 2.384e-06, 9.3460e-05 * 0.803207531480645 / 2.384e-06,\\n  /* 13 */\\n  1.0014e-05 * 0.803207531480645 / 2.384e-06, 1.40190e-04 * 0.803207531480645 / 2.384e-06, 1.937389e-03 * 0.803207531480645 / 2.384e-06, 1.5233517e-02 * 0.803207531480645 / 2.384e-06, -2.0506859e-02 * 0.803207531480645 / 2.384e-06, -2.974033e-03 * 0.803207531480645 / 2.384e-06, -3.07560e-04 * 0.803207531480645 / 2.384e-06, -1.8120e-05 * 0.803207531480645 / 2.384e-06, 7.416505462720353e-01, 5.805693545089249e-01, -4.77e-07 * 0.831469612302545 / 2.384e-06, 1.08242e-04 * 0.831469612302545 / 2.384e-06, 8.68797e-04 * 0.831469612302545 / 2.384e-06, 1.800537e-03 * 0.831469612302545 / 2.384e-06, 3.5435200e-02 * 0.831469612302545 / 2.384e-06, 4.049301e-03 * 0.831469612302545 / 2.384e-06, 9.94205e-04 * 0.831469612302545 / 2.384e-06, 9.0599e-05 * 0.831469612302545 / 2.384e-06,\\n  /* 12 */\\n  9.060e-06 * 0.831469612302545 / 2.384e-06, 1.16348e-04 * 0.831469612302545 / 2.384e-06, 1.766682e-03 * 0.831469612302545 / 2.384e-06, 1.4358521e-02 * 0.831469612302545 / 2.384e-06, -2.1372318e-02 * 0.831469612302545 / 2.384e-06, -3.14188e-03 * 0.831469612302545 / 2.384e-06, -3.39031e-04 * 0.831469612302545 / 2.384e-06, -1.9550e-05 * 0.831469612302545 / 2.384e-06, 6.681786379192989e-01, 7.653668647301797e-01, -4.77e-07 * 0.857728610000272 / 2.384e-06, 1.08719e-04 * 0.857728610000272 / 2.384e-06, 8.29220e-04 * 0.857728610000272 / 2.384e-06, 1.399517e-03 * 0.857728610000272 / 2.384e-06, 3.5242081e-02 * 0.857728610000272 / 2.384e-06, 4.215240e-03 * 0.857728610000272 / 2.384e-06, 9.89437e-04 * 0.857728610000272 / 2.384e-06, 8.7261e-05 * 0.857728610000272 / 2.384e-06,\\n  /* 11 */\\n  8.106e-06 * 0.857728610000272 / 2.384e-06, 9.3937e-05 * 0.857728610000272 / 2.384e-06, 1.597881e-03 * 0.857728610000272 / 2.384e-06, 1.3489246e-02 * 0.857728610000272 / 2.384e-06, -2.2228718e-02 * 0.857728610000272 / 2.384e-06, -3.306866e-03 * 0.857728610000272 / 2.384e-06, -3.71456e-04 * 0.857728610000272 / 2.384e-06, -2.1458e-05 * 0.857728610000272 / 2.384e-06, 5.993769336819237e-01, 9.427934736519954e-01, -4.77e-07 * 0.881921264348355 / 2.384e-06, 1.08719e-04 * 0.881921264348355 / 2.384e-06, 7.8392e-04 * 0.881921264348355 / 2.384e-06, 9.71317e-04 * 0.881921264348355 / 2.384e-06, 3.5007000e-02 * 0.881921264348355 / 2.384e-06, 4.357815e-03 * 0.881921264348355 / 2.384e-06, 9.80854e-04 * 0.881921264348355 / 2.384e-06, 8.3923e-05 * 0.881921264348355 / 2.384e-06,\\n  /* 10 */\\n  7.629e-06 * 0.881921264348355 / 2.384e-06, 7.2956e-05 * 0.881921264348355 / 2.384e-06, 1.432419e-03 * 0.881921264348355 / 2.384e-06, 1.2627602e-02 * 0.881921264348355 / 2.384e-06, -2.3074150e-02 * 0.881921264348355 / 2.384e-06, -3.467083e-03 * 0.881921264348355 / 2.384e-06, -4.04358e-04 * 0.881921264348355 / 2.384e-06, -2.3365e-05 * 0.881921264348355 / 2.384e-06, 5.345111359507916e-01, 1.111140466039205e+00, -9.54e-07 * 0.903989293123443 / 2.384e-06, 1.08242e-04 * 0.903989293123443 / 2.384e-06, 7.31945e-04 * 0.903989293123443 / 2.384e-06, 5.15938e-04 * 0.903989293123443 / 2.384e-06, 3.4730434e-02 * 0.903989293123443 / 2.384e-06, 4.477024e-03 * 0.903989293123443 / 2.384e-06, 9.68933e-04 * 0.903989293123443 / 2.384e-06, 8.0585e-05 * 0.903989293123443 / 2.384e-06,\\n  /* 9 */\\n  6.676e-06 * 0.903989293123443 / 2.384e-06, 5.2929e-05 * 0.903989293123443 / 2.384e-06, 1.269817e-03 * 0.903989293123443 / 2.384e-06, 1.1775017e-02 * 0.903989293123443 / 2.384e-06, -2.3907185e-02 * 0.903989293123443 / 2.384e-06, -3.622532e-03 * 0.903989293123443 / 2.384e-06, -4.38213e-04 * 0.903989293123443 / 2.384e-06, -2.5272e-05 * 0.903989293123443 / 2.384e-06, 4.729647758913199e-01, 1.268786568327291e+00, -9.54e-07 * 0.92387953251128675613 / 2.384e-06, 1.06812e-04 * 0.92387953251128675613 / 2.384e-06, 6.74248e-04 * 0.92387953251128675613 / 2.384e-06, 3.3379e-05 * 0.92387953251128675613 / 2.384e-06, 3.4412861e-02 * 0.92387953251128675613 / 2.384e-06, 4.573822e-03 * 0.92387953251128675613 / 2.384e-06, 9.54151e-04 * 0.92387953251128675613 / 2.384e-06, 7.6771e-05 * 0.92387953251128675613 / 2.384e-06, 6.199e-06 * 0.92387953251128675613 / 2.384e-06, 3.4332e-05 * 0.92387953251128675613 / 2.384e-06, 1.111031e-03 * 0.92387953251128675613 / 2.384e-06, 1.0933399e-02 * 0.92387953251128675613 / 2.384e-06, -2.4725437e-02 * 0.92387953251128675613 / 2.384e-06, -3.771782e-03 * 0.92387953251128675613 / 2.384e-06, -4.72546e-04 * 0.92387953251128675613 / 2.384e-06, -2.7657e-05 * 0.92387953251128675613 / 2.384e-06, 4.1421356237309504879e-01,\\n  /* tan(PI/8) */\\n  1.414213562373095e+00, -9.54e-07 * 0.941544065183021 / 2.384e-06, 1.05381e-04 * 0.941544065183021 / 2.384e-06, 6.10352e-04 * 0.941544065183021 / 2.384e-06, -4.75883e-04 * 0.941544065183021 / 2.384e-06, 3.4055710e-02 * 0.941544065183021 / 2.384e-06, 4.649162e-03 * 0.941544065183021 / 2.384e-06, 9.35555e-04 * 0.941544065183021 / 2.384e-06, 7.3433e-05 * 0.941544065183021 / 2.384e-06,\\n  /* 7 */\\n  5.245e-06 * 0.941544065183021 / 2.384e-06, 1.7166e-05 * 0.941544065183021 / 2.384e-06, 9.56535e-04 * 0.941544065183021 / 2.384e-06, 1.0103703e-02 * 0.941544065183021 / 2.384e-06, -2.5527000e-02 * 0.941544065183021 / 2.384e-06, -3.914356e-03 * 0.941544065183021 / 2.384e-06, -5.07355e-04 * 0.941544065183021 / 2.384e-06, -3.0041e-05 * 0.941544065183021 / 2.384e-06, 3.578057213145241e-01, 1.546020906725474e+00, -9.54e-07 * 0.956940335732209 / 2.384e-06, 1.02520e-04 * 0.956940335732209 / 2.384e-06, 5.39303e-04 * 0.956940335732209 / 2.384e-06, -1.011848e-03 * 0.956940335732209 / 2.384e-06, 3.3659935e-02 * 0.956940335732209 / 2.384e-06, 4.703045e-03 * 0.956940335732209 / 2.384e-06, 9.15051e-04 * 0.956940335732209 / 2.384e-06, 7.0095e-05 * 0.956940335732209 / 2.384e-06,\\n  /* 6 */\\n  4.768e-06 * 0.956940335732209 / 2.384e-06, 9.54e-07 * 0.956940335732209 / 2.384e-06, 8.06808e-04 * 0.956940335732209 / 2.384e-06, 9.287834e-03 * 0.956940335732209 / 2.384e-06, -2.6310921e-02 * 0.956940335732209 / 2.384e-06, -4.048824e-03 * 0.956940335732209 / 2.384e-06, -5.42164e-04 * 0.956940335732209 / 2.384e-06, -3.2425e-05 * 0.956940335732209 / 2.384e-06, 3.033466836073424e-01, 1.662939224605090e+00, -1.431e-06 * 0.970031253194544 / 2.384e-06, 9.9182e-05 * 0.970031253194544 / 2.384e-06, 4.62532e-04 * 0.970031253194544 / 2.384e-06, -1.573563e-03 * 0.970031253194544 / 2.384e-06, 3.3225536e-02 * 0.970031253194544 / 2.384e-06, 4.737377e-03 * 0.970031253194544 / 2.384e-06, 8.91685e-04 * 0.970031253194544 / 2.384e-06, 6.6280e-05 * 0.970031253194544 / 2.384e-06,\\n  /* 5 */\\n  4.292e-06 * 0.970031253194544 / 2.384e-06, -1.3828e-05 * 0.970031253194544 / 2.384e-06, 6.61850e-04 * 0.970031253194544 / 2.384e-06, 8.487225e-03 * 0.970031253194544 / 2.384e-06, -2.7073860e-02 * 0.970031253194544 / 2.384e-06, -4.174709e-03 * 0.970031253194544 / 2.384e-06, -5.76973e-04 * 0.970031253194544 / 2.384e-06, -3.4809e-05 * 0.970031253194544 / 2.384e-06, 2.504869601913055e-01, 1.763842528696710e+00, -1.431e-06 * 0.98078528040323 / 2.384e-06, 9.5367e-05 * 0.98078528040323 / 2.384e-06, 3.78609e-04 * 0.98078528040323 / 2.384e-06, -2.161503e-03 * 0.98078528040323 / 2.384e-06, 3.2754898e-02 * 0.98078528040323 / 2.384e-06, 4.752159e-03 * 0.98078528040323 / 2.384e-06, 8.66413e-04 * 0.98078528040323 / 2.384e-06, 6.2943e-05 * 0.98078528040323 / 2.384e-06,\\n  /* 4 */\\n  3.815e-06 * 0.98078528040323 / 2.384e-06, -2.718e-05 * 0.98078528040323 / 2.384e-06, 5.22137e-04 * 0.98078528040323 / 2.384e-06, 7.703304e-03 * 0.98078528040323 / 2.384e-06, -2.7815342e-02 * 0.98078528040323 / 2.384e-06, -4.290581e-03 * 0.98078528040323 / 2.384e-06, -6.11782e-04 * 0.98078528040323 / 2.384e-06, -3.7670e-05 * 0.98078528040323 / 2.384e-06, 1.989123673796580e-01, 1.847759065022573e+00, -1.907e-06 * 0.989176509964781 / 2.384e-06, 9.0122e-05 * 0.989176509964781 / 2.384e-06, 2.88486e-04 * 0.989176509964781 / 2.384e-06, -2.774239e-03 * 0.989176509964781 / 2.384e-06, 3.2248020e-02 * 0.989176509964781 / 2.384e-06, 4.748821e-03 * 0.989176509964781 / 2.384e-06, 8.38757e-04 * 0.989176509964781 / 2.384e-06, 5.9605e-05 * 0.989176509964781 / 2.384e-06,\\n  /* 3 */\\n  3.338e-06 * 0.989176509964781 / 2.384e-06, -3.9577e-05 * 0.989176509964781 / 2.384e-06, 3.88145e-04 * 0.989176509964781 / 2.384e-06, 6.937027e-03 * 0.989176509964781 / 2.384e-06, -2.8532982e-02 * 0.989176509964781 / 2.384e-06, -4.395962e-03 * 0.989176509964781 / 2.384e-06, -6.46591e-04 * 0.989176509964781 / 2.384e-06, -4.0531e-05 * 0.989176509964781 / 2.384e-06, 1.483359875383474e-01, 1.913880671464418e+00, -1.907e-06 * 0.995184726672197 / 2.384e-06, 8.4400e-05 * 0.995184726672197 / 2.384e-06, 1.91689e-04 * 0.995184726672197 / 2.384e-06, -3.411293e-03 * 0.995184726672197 / 2.384e-06, 3.1706810e-02 * 0.995184726672197 / 2.384e-06, 4.728317e-03 * 0.995184726672197 / 2.384e-06, 8.09669e-04 * 0.995184726672197 / 2.384e-06, 5.579e-05 * 0.995184726672197 / 2.384e-06, 3.338e-06 * 0.995184726672197 / 2.384e-06, -5.0545e-05 * 0.995184726672197 / 2.384e-06, 2.59876e-04 * 0.995184726672197 / 2.384e-06, 6.189346e-03 * 0.995184726672197 / 2.384e-06, -2.9224873e-02 * 0.995184726672197 / 2.384e-06, -4.489899e-03 * 0.995184726672197 / 2.384e-06, -6.80923e-04 * 0.995184726672197 / 2.384e-06, -4.3392e-05 * 0.995184726672197 / 2.384e-06, 9.849140335716425e-02, 1.961570560806461e+00, -2.384e-06 * 0.998795456205172 / 2.384e-06, 7.7724e-05 * 0.998795456205172 / 2.384e-06, 8.8215e-05 * 0.998795456205172 / 2.384e-06, -4.072189e-03 * 0.998795456205172 / 2.384e-06, 3.1132698e-02 * 0.998795456205172 / 2.384e-06, 4.691124e-03 * 0.998795456205172 / 2.384e-06, 7.79152e-04 * 0.998795456205172 / 2.384e-06, 5.2929e-05 * 0.998795456205172 / 2.384e-06, 2.861e-06 * 0.998795456205172 / 2.384e-06, -6.0558e-05 * 0.998795456205172 / 2.384e-06, 1.37329e-04 * 0.998795456205172 / 2.384e-06, 5.462170e-03 * 0.998795456205172 / 2.384e-06, -2.9890060e-02 * 0.998795456205172 / 2.384e-06, -4.570484e-03 * 0.998795456205172 / 2.384e-06, -7.14302e-04 * 0.998795456205172 / 2.384e-06, -4.6253e-05 * 0.998795456205172 / 2.384e-06, 4.912684976946725e-02, 1.990369453344394e+00, 3.5780907e-02 * Util.SQRT2 * 0.5 / 2.384e-06, 1.7876148e-02 * Util.SQRT2 * 0.5 / 2.384e-06, 3.134727e-03 * Util.SQRT2 * 0.5 / 2.384e-06, 2.457142e-03 * Util.SQRT2 * 0.5 / 2.384e-06, 9.71317e-04 * Util.SQRT2 * 0.5 / 2.384e-06, 2.18868e-04 * Util.SQRT2 * 0.5 / 2.384e-06, 1.01566e-04 * Util.SQRT2 * 0.5 / 2.384e-06, 1.3828e-05 * Util.SQRT2 * 0.5 / 2.384e-06, 3.0526638e-02 / 2.384e-06, 4.638195e-03 / 2.384e-06, 7.47204e-04 / 2.384e-06, 4.9591e-05 / 2.384e-06, 4.756451e-03 / 2.384e-06, 2.1458e-05 / 2.384e-06, -6.9618e-05 / 2.384e-06];\\n  var NS = 12;\\n  var NL = 36;\\n  var win = [[2.382191739347913e-13, 6.423305872147834e-13, 9.400849094049688e-13, 1.122435026096556e-12, 1.183840321267481e-12, 1.122435026096556e-12, 9.400849094049690e-13, 6.423305872147839e-13, 2.382191739347918e-13, 5.456116108943412e-12, 4.878985199565852e-12, 4.240448995017367e-12, 3.559909094758252e-12, 2.858043359288075e-12, 2.156177623817898e-12, 1.475637723558783e-12, 8.371015190102974e-13, 2.599706096327376e-13, -5.456116108943412e-12, -4.878985199565852e-12, -4.240448995017367e-12, -3.559909094758252e-12, -2.858043359288076e-12, -2.156177623817898e-12, -1.475637723558783e-12, -8.371015190102975e-13, -2.599706096327376e-13, -2.382191739347923e-13, -6.423305872147843e-13, -9.400849094049696e-13, -1.122435026096556e-12, -1.183840321267481e-12, -1.122435026096556e-12, -9.400849094049694e-13, -6.423305872147840e-13, -2.382191739347918e-13], [2.382191739347913e-13, 6.423305872147834e-13, 9.400849094049688e-13, 1.122435026096556e-12, 1.183840321267481e-12, 1.122435026096556e-12, 9.400849094049688e-13, 6.423305872147841e-13, 2.382191739347918e-13, 5.456116108943413e-12, 4.878985199565852e-12, 4.240448995017367e-12, 3.559909094758253e-12, 2.858043359288075e-12, 2.156177623817898e-12, 1.475637723558782e-12, 8.371015190102975e-13, 2.599706096327376e-13, -5.461314069809755e-12, -4.921085770524055e-12, -4.343405037091838e-12, -3.732668368707687e-12, -3.093523840190885e-12, -2.430835727329465e-12, -1.734679010007751e-12, -9.748253656609281e-13, -2.797435120168326e-13, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, -2.283748241799531e-13, -4.037858874020686e-13, -2.146547464825323e-13], [1.316524975873958e-01,\\n  /* win[SHORT_TYPE] */\\n  4.142135623730950e-01, 7.673269879789602e-01, 1.091308501069271e+00,\\n  /* tantab_l */\\n  1.303225372841206e+00, 1.569685577117490e+00, 1.920982126971166e+00, 2.414213562373094e+00, 3.171594802363212e+00, 4.510708503662055e+00, 7.595754112725146e+00, 2.290376554843115e+01, 0.98480775301220802032,\\n  /* cx */\\n  0.64278760968653936292, 0.34202014332566882393, 0.93969262078590842791, -0.17364817766693030343, -0.76604444311897790243, 0.86602540378443870761, 0.500000000000000e+00, -5.144957554275265e-01,\\n  /* ca */\\n  -4.717319685649723e-01, -3.133774542039019e-01, -1.819131996109812e-01, -9.457419252642064e-02, -4.096558288530405e-02, -1.419856857247115e-02, -3.699974673760037e-03, 8.574929257125442e-01,\\n  /* cs */\\n  8.817419973177052e-01, 9.496286491027329e-01, 9.833145924917901e-01, 9.955178160675857e-01, 9.991605581781475e-01, 9.998991952444470e-01, 9.999931550702802e-01], [0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 0.000000000000000e+00, 2.283748241799531e-13, 4.037858874020686e-13, 2.146547464825323e-13, 5.461314069809755e-12, 4.921085770524055e-12, 4.343405037091838e-12, 3.732668368707687e-12, 3.093523840190885e-12, 2.430835727329466e-12, 1.734679010007751e-12, 9.748253656609281e-13, 2.797435120168326e-13, -5.456116108943413e-12, -4.878985199565852e-12, -4.240448995017367e-12, -3.559909094758253e-12, -2.858043359288075e-12, -2.156177623817898e-12, -1.475637723558782e-12, -8.371015190102975e-13, -2.599706096327376e-13, -2.382191739347913e-13, -6.423305872147834e-13, -9.400849094049688e-13, -1.122435026096556e-12, -1.183840321267481e-12, -1.122435026096556e-12, -9.400849094049688e-13, -6.423305872147841e-13, -2.382191739347918e-13]];\\n  var tantab_l = win[Encoder.SHORT_TYPE];\\n  var cx = win[Encoder.SHORT_TYPE];\\n  var ca = win[Encoder.SHORT_TYPE];\\n  var cs = win[Encoder.SHORT_TYPE];\\n  /**\\n   * new IDCT routine written by Takehiro TOMINAGA\\n   *\\n   * PURPOSE: Overlapping window on PCM samples<BR>\\n   *\\n   * SEMANTICS:<BR>\\n   * 32 16-bit pcm samples are scaled to fractional 2's complement and\\n   * concatenated to the end of the window buffer #x#. The updated window\\n   * buffer #x# is then windowed by the analysis window #c# to produce the\\n   * windowed sample #z#\\n   */\\n\\n  var order = [0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29, 2, 3, 18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31];\\n  /**\\n   * returns sum_j=0^31 a[j]*cos(PI*j*(k+1/2)/32), 0<=k<32\\n   */\\n\\n  function window_subband(x1, x1Pos, a) {\\n    var wp = 10;\\n    var x2 = x1Pos + 238 - 14 - 286;\\n\\n    for (var i = -15; i < 0; i++) {\\n      var w, s, t;\\n      w = enwindow[wp + -10];\\n      s = x1[x2 + -224] * w;\\n      t = x1[x1Pos + 224] * w;\\n      w = enwindow[wp + -9];\\n      s += x1[x2 + -160] * w;\\n      t += x1[x1Pos + 160] * w;\\n      w = enwindow[wp + -8];\\n      s += x1[x2 + -96] * w;\\n      t += x1[x1Pos + 96] * w;\\n      w = enwindow[wp + -7];\\n      s += x1[x2 + -32] * w;\\n      t += x1[x1Pos + 32] * w;\\n      w = enwindow[wp + -6];\\n      s += x1[x2 + 32] * w;\\n      t += x1[x1Pos + -32] * w;\\n      w = enwindow[wp + -5];\\n      s += x1[x2 + 96] * w;\\n      t += x1[x1Pos + -96] * w;\\n      w = enwindow[wp + -4];\\n      s += x1[x2 + 160] * w;\\n      t += x1[x1Pos + -160] * w;\\n      w = enwindow[wp + -3];\\n      s += x1[x2 + 224] * w;\\n      t += x1[x1Pos + -224] * w;\\n      w = enwindow[wp + -2];\\n      s += x1[x1Pos + -256] * w;\\n      t -= x1[x2 + 256] * w;\\n      w = enwindow[wp + -1];\\n      s += x1[x1Pos + -192] * w;\\n      t -= x1[x2 + 192] * w;\\n      w = enwindow[wp + 0];\\n      s += x1[x1Pos + -128] * w;\\n      t -= x1[x2 + 128] * w;\\n      w = enwindow[wp + 1];\\n      s += x1[x1Pos + -64] * w;\\n      t -= x1[x2 + 64] * w;\\n      w = enwindow[wp + 2];\\n      s += x1[x1Pos + 0] * w;\\n      t -= x1[x2 + 0] * w;\\n      w = enwindow[wp + 3];\\n      s += x1[x1Pos + 64] * w;\\n      t -= x1[x2 + -64] * w;\\n      w = enwindow[wp + 4];\\n      s += x1[x1Pos + 128] * w;\\n      t -= x1[x2 + -128] * w;\\n      w = enwindow[wp + 5];\\n      s += x1[x1Pos + 192] * w;\\n      t -= x1[x2 + -192] * w;\\n      /*\\n       * this multiplyer could be removed, but it needs more 256 FLOAT\\n       * data. thinking about the data cache performance, I think we\\n       * should not use such a huge table. tt 2000/Oct/25\\n       */\\n\\n      s *= enwindow[wp + 6];\\n      w = t - s;\\n      a[30 + i * 2] = t + s;\\n      a[31 + i * 2] = enwindow[wp + 7] * w;\\n      wp += 18;\\n      x1Pos--;\\n      x2++;\\n    }\\n\\n    {\\n      var s, t, u, v;\\n      t = x1[x1Pos + -16] * enwindow[wp + -10];\\n      s = x1[x1Pos + -32] * enwindow[wp + -2];\\n      t += (x1[x1Pos + -48] - x1[x1Pos + 16]) * enwindow[wp + -9];\\n      s += x1[x1Pos + -96] * enwindow[wp + -1];\\n      t += (x1[x1Pos + -80] + x1[x1Pos + 48]) * enwindow[wp + -8];\\n      s += x1[x1Pos + -160] * enwindow[wp + 0];\\n      t += (x1[x1Pos + -112] - x1[x1Pos + 80]) * enwindow[wp + -7];\\n      s += x1[x1Pos + -224] * enwindow[wp + 1];\\n      t += (x1[x1Pos + -144] + x1[x1Pos + 112]) * enwindow[wp + -6];\\n      s -= x1[x1Pos + 32] * enwindow[wp + 2];\\n      t += (x1[x1Pos + -176] - x1[x1Pos + 144]) * enwindow[wp + -5];\\n      s -= x1[x1Pos + 96] * enwindow[wp + 3];\\n      t += (x1[x1Pos + -208] + x1[x1Pos + 176]) * enwindow[wp + -4];\\n      s -= x1[x1Pos + 160] * enwindow[wp + 4];\\n      t += (x1[x1Pos + -240] - x1[x1Pos + 208]) * enwindow[wp + -3];\\n      s -= x1[x1Pos + 224];\\n      u = s - t;\\n      v = s + t;\\n      t = a[14];\\n      s = a[15] - t;\\n      a[31] = v + t;\\n      /* A0 */\\n\\n      a[30] = u + s;\\n      /* A1 */\\n\\n      a[15] = u - s;\\n      /* A2 */\\n\\n      a[14] = v - t;\\n      /* A3 */\\n    }\\n    {\\n      var xr;\\n      xr = a[28] - a[0];\\n      a[0] += a[28];\\n      a[28] = xr * enwindow[wp + -2 * 18 + 7];\\n      xr = a[29] - a[1];\\n      a[1] += a[29];\\n      a[29] = xr * enwindow[wp + -2 * 18 + 7];\\n      xr = a[26] - a[2];\\n      a[2] += a[26];\\n      a[26] = xr * enwindow[wp + -4 * 18 + 7];\\n      xr = a[27] - a[3];\\n      a[3] += a[27];\\n      a[27] = xr * enwindow[wp + -4 * 18 + 7];\\n      xr = a[24] - a[4];\\n      a[4] += a[24];\\n      a[24] = xr * enwindow[wp + -6 * 18 + 7];\\n      xr = a[25] - a[5];\\n      a[5] += a[25];\\n      a[25] = xr * enwindow[wp + -6 * 18 + 7];\\n      xr = a[22] - a[6];\\n      a[6] += a[22];\\n      a[22] = xr * Util.SQRT2;\\n      xr = a[23] - a[7];\\n      a[7] += a[23];\\n      a[23] = xr * Util.SQRT2 - a[7];\\n      a[7] -= a[6];\\n      a[22] -= a[7];\\n      a[23] -= a[22];\\n      xr = a[6];\\n      a[6] = a[31] - xr;\\n      a[31] = a[31] + xr;\\n      xr = a[7];\\n      a[7] = a[30] - xr;\\n      a[30] = a[30] + xr;\\n      xr = a[22];\\n      a[22] = a[15] - xr;\\n      a[15] = a[15] + xr;\\n      xr = a[23];\\n      a[23] = a[14] - xr;\\n      a[14] = a[14] + xr;\\n      xr = a[20] - a[8];\\n      a[8] += a[20];\\n      a[20] = xr * enwindow[wp + -10 * 18 + 7];\\n      xr = a[21] - a[9];\\n      a[9] += a[21];\\n      a[21] = xr * enwindow[wp + -10 * 18 + 7];\\n      xr = a[18] - a[10];\\n      a[10] += a[18];\\n      a[18] = xr * enwindow[wp + -12 * 18 + 7];\\n      xr = a[19] - a[11];\\n      a[11] += a[19];\\n      a[19] = xr * enwindow[wp + -12 * 18 + 7];\\n      xr = a[16] - a[12];\\n      a[12] += a[16];\\n      a[16] = xr * enwindow[wp + -14 * 18 + 7];\\n      xr = a[17] - a[13];\\n      a[13] += a[17];\\n      a[17] = xr * enwindow[wp + -14 * 18 + 7];\\n      xr = -a[20] + a[24];\\n      a[20] += a[24];\\n      a[24] = xr * enwindow[wp + -12 * 18 + 7];\\n      xr = -a[21] + a[25];\\n      a[21] += a[25];\\n      a[25] = xr * enwindow[wp + -12 * 18 + 7];\\n      xr = a[4] - a[8];\\n      a[4] += a[8];\\n      a[8] = xr * enwindow[wp + -12 * 18 + 7];\\n      xr = a[5] - a[9];\\n      a[5] += a[9];\\n      a[9] = xr * enwindow[wp + -12 * 18 + 7];\\n      xr = a[0] - a[12];\\n      a[0] += a[12];\\n      a[12] = xr * enwindow[wp + -4 * 18 + 7];\\n      xr = a[1] - a[13];\\n      a[1] += a[13];\\n      a[13] = xr * enwindow[wp + -4 * 18 + 7];\\n      xr = a[16] - a[28];\\n      a[16] += a[28];\\n      a[28] = xr * enwindow[wp + -4 * 18 + 7];\\n      xr = -a[17] + a[29];\\n      a[17] += a[29];\\n      a[29] = xr * enwindow[wp + -4 * 18 + 7];\\n      xr = Util.SQRT2 * (a[2] - a[10]);\\n      a[2] += a[10];\\n      a[10] = xr;\\n      xr = Util.SQRT2 * (a[3] - a[11]);\\n      a[3] += a[11];\\n      a[11] = xr;\\n      xr = Util.SQRT2 * (-a[18] + a[26]);\\n      a[18] += a[26];\\n      a[26] = xr - a[18];\\n      xr = Util.SQRT2 * (-a[19] + a[27]);\\n      a[19] += a[27];\\n      a[27] = xr - a[19];\\n      xr = a[2];\\n      a[19] -= a[3];\\n      a[3] -= xr;\\n      a[2] = a[31] - xr;\\n      a[31] += xr;\\n      xr = a[3];\\n      a[11] -= a[19];\\n      a[18] -= xr;\\n      a[3] = a[30] - xr;\\n      a[30] += xr;\\n      xr = a[18];\\n      a[27] -= a[11];\\n      a[19] -= xr;\\n      a[18] = a[15] - xr;\\n      a[15] += xr;\\n      xr = a[19];\\n      a[10] -= xr;\\n      a[19] = a[14] - xr;\\n      a[14] += xr;\\n      xr = a[10];\\n      a[11] -= xr;\\n      a[10] = a[23] - xr;\\n      a[23] += xr;\\n      xr = a[11];\\n      a[26] -= xr;\\n      a[11] = a[22] - xr;\\n      a[22] += xr;\\n      xr = a[26];\\n      a[27] -= xr;\\n      a[26] = a[7] - xr;\\n      a[7] += xr;\\n      xr = a[27];\\n      a[27] = a[6] - xr;\\n      a[6] += xr;\\n      xr = Util.SQRT2 * (a[0] - a[4]);\\n      a[0] += a[4];\\n      a[4] = xr;\\n      xr = Util.SQRT2 * (a[1] - a[5]);\\n      a[1] += a[5];\\n      a[5] = xr;\\n      xr = Util.SQRT2 * (a[16] - a[20]);\\n      a[16] += a[20];\\n      a[20] = xr;\\n      xr = Util.SQRT2 * (a[17] - a[21]);\\n      a[17] += a[21];\\n      a[21] = xr;\\n      xr = -Util.SQRT2 * (a[8] - a[12]);\\n      a[8] += a[12];\\n      a[12] = xr - a[8];\\n      xr = -Util.SQRT2 * (a[9] - a[13]);\\n      a[9] += a[13];\\n      a[13] = xr - a[9];\\n      xr = -Util.SQRT2 * (a[25] - a[29]);\\n      a[25] += a[29];\\n      a[29] = xr - a[25];\\n      xr = -Util.SQRT2 * (a[24] + a[28]);\\n      a[24] -= a[28];\\n      a[28] = xr - a[24];\\n      xr = a[24] - a[16];\\n      a[24] = xr;\\n      xr = a[20] - xr;\\n      a[20] = xr;\\n      xr = a[28] - xr;\\n      a[28] = xr;\\n      xr = a[25] - a[17];\\n      a[25] = xr;\\n      xr = a[21] - xr;\\n      a[21] = xr;\\n      xr = a[29] - xr;\\n      a[29] = xr;\\n      xr = a[17] - a[1];\\n      a[17] = xr;\\n      xr = a[9] - xr;\\n      a[9] = xr;\\n      xr = a[25] - xr;\\n      a[25] = xr;\\n      xr = a[5] - xr;\\n      a[5] = xr;\\n      xr = a[21] - xr;\\n      a[21] = xr;\\n      xr = a[13] - xr;\\n      a[13] = xr;\\n      xr = a[29] - xr;\\n      a[29] = xr;\\n      xr = a[1] - a[0];\\n      a[1] = xr;\\n      xr = a[16] - xr;\\n      a[16] = xr;\\n      xr = a[17] - xr;\\n      a[17] = xr;\\n      xr = a[8] - xr;\\n      a[8] = xr;\\n      xr = a[9] - xr;\\n      a[9] = xr;\\n      xr = a[24] - xr;\\n      a[24] = xr;\\n      xr = a[25] - xr;\\n      a[25] = xr;\\n      xr = a[4] - xr;\\n      a[4] = xr;\\n      xr = a[5] - xr;\\n      a[5] = xr;\\n      xr = a[20] - xr;\\n      a[20] = xr;\\n      xr = a[21] - xr;\\n      a[21] = xr;\\n      xr = a[12] - xr;\\n      a[12] = xr;\\n      xr = a[13] - xr;\\n      a[13] = xr;\\n      xr = a[28] - xr;\\n      a[28] = xr;\\n      xr = a[29] - xr;\\n      a[29] = xr;\\n      xr = a[0];\\n      a[0] += a[31];\\n      a[31] -= xr;\\n      xr = a[1];\\n      a[1] += a[30];\\n      a[30] -= xr;\\n      xr = a[16];\\n      a[16] += a[15];\\n      a[15] -= xr;\\n      xr = a[17];\\n      a[17] += a[14];\\n      a[14] -= xr;\\n      xr = a[8];\\n      a[8] += a[23];\\n      a[23] -= xr;\\n      xr = a[9];\\n      a[9] += a[22];\\n      a[22] -= xr;\\n      xr = a[24];\\n      a[24] += a[7];\\n      a[7] -= xr;\\n      xr = a[25];\\n      a[25] += a[6];\\n      a[6] -= xr;\\n      xr = a[4];\\n      a[4] += a[27];\\n      a[27] -= xr;\\n      xr = a[5];\\n      a[5] += a[26];\\n      a[26] -= xr;\\n      xr = a[20];\\n      a[20] += a[11];\\n      a[11] -= xr;\\n      xr = a[21];\\n      a[21] += a[10];\\n      a[10] -= xr;\\n      xr = a[12];\\n      a[12] += a[19];\\n      a[19] -= xr;\\n      xr = a[13];\\n      a[13] += a[18];\\n      a[18] -= xr;\\n      xr = a[28];\\n      a[28] += a[3];\\n      a[3] -= xr;\\n      xr = a[29];\\n      a[29] += a[2];\\n      a[2] -= xr;\\n    }\\n  }\\n  /**\\n   * Function: Calculation of the MDCT In the case of long blocks (type 0,1,3)\\n   * there are 36 coefficents in the time domain and 18 in the frequency\\n   * domain.<BR>\\n   * In the case of short blocks (type 2) there are 3 transformations with\\n   * short length. This leads to 12 coefficents in the time and 6 in the\\n   * frequency domain. In this case the results are stored side by side in the\\n   * vector out[].\\n   *\\n   * New layer3\\n   */\\n\\n\\n  function mdct_short(inout, inoutPos) {\\n    for (var l = 0; l < 3; l++) {\\n      var tc0, tc1, tc2, ts0, ts1, ts2;\\n      ts0 = inout[inoutPos + 2 * 3] * win[Encoder.SHORT_TYPE][0] - inout[inoutPos + 5 * 3];\\n      tc0 = inout[inoutPos + 0 * 3] * win[Encoder.SHORT_TYPE][2] - inout[inoutPos + 3 * 3];\\n      tc1 = ts0 + tc0;\\n      tc2 = ts0 - tc0;\\n      ts0 = inout[inoutPos + 5 * 3] * win[Encoder.SHORT_TYPE][0] + inout[inoutPos + 2 * 3];\\n      tc0 = inout[inoutPos + 3 * 3] * win[Encoder.SHORT_TYPE][2] + inout[inoutPos + 0 * 3];\\n      ts1 = ts0 + tc0;\\n      ts2 = -ts0 + tc0;\\n      tc0 = (inout[inoutPos + 1 * 3] * win[Encoder.SHORT_TYPE][1] - inout[inoutPos + 4 * 3]) * 2.069978111953089e-11;\\n      /*\\n       * tritab_s [ 1 ]\\n       */\\n\\n      ts0 = (inout[inoutPos + 4 * 3] * win[Encoder.SHORT_TYPE][1] + inout[inoutPos + 1 * 3]) * 2.069978111953089e-11;\\n      /*\\n       * tritab_s [ 1 ]\\n       */\\n\\n      inout[inoutPos + 3 * 0] = tc1 * 1.907525191737280e-11 + tc0;\\n      /*\\n       * tritab_s[ 2 ]\\n       */\\n\\n      inout[inoutPos + 3 * 5] = -ts1 * 1.907525191737280e-11 + ts0;\\n      /*\\n       * tritab_s[0 ]\\n       */\\n\\n      tc2 = tc2 * 0.86602540378443870761 * 1.907525191737281e-11;\\n      /*\\n       * tritab_s[ 2]\\n       */\\n\\n      ts1 = ts1 * 0.5 * 1.907525191737281e-11 + ts0;\\n      inout[inoutPos + 3 * 1] = tc2 - ts1;\\n      inout[inoutPos + 3 * 2] = tc2 + ts1;\\n      tc1 = tc1 * 0.5 * 1.907525191737281e-11 - tc0;\\n      ts2 = ts2 * 0.86602540378443870761 * 1.907525191737281e-11;\\n      /*\\n       * tritab_s[ 0]\\n       */\\n\\n      inout[inoutPos + 3 * 3] = tc1 + ts2;\\n      inout[inoutPos + 3 * 4] = tc1 - ts2;\\n      inoutPos++;\\n    }\\n  }\\n\\n  function mdct_long(out, outPos, _in) {\\n    var ct, st;\\n    {\\n      var tc1, tc2, tc3, tc4, ts5, ts6, ts7, ts8;\\n      /* 1,2, 5,6, 9,10, 13,14, 17 */\\n\\n      tc1 = _in[17] - _in[9];\\n      tc3 = _in[15] - _in[11];\\n      tc4 = _in[14] - _in[12];\\n      ts5 = _in[0] + _in[8];\\n      ts6 = _in[1] + _in[7];\\n      ts7 = _in[2] + _in[6];\\n      ts8 = _in[3] + _in[5];\\n      out[outPos + 17] = ts5 + ts7 - ts8 - (ts6 - _in[4]);\\n      st = (ts5 + ts7 - ts8) * cx[12 + 7] + (ts6 - _in[4]);\\n      ct = (tc1 - tc3 - tc4) * cx[12 + 6];\\n      out[outPos + 5] = ct + st;\\n      out[outPos + 6] = ct - st;\\n      tc2 = (_in[16] - _in[10]) * cx[12 + 6];\\n      ts6 = ts6 * cx[12 + 7] + _in[4];\\n      ct = tc1 * cx[12 + 0] + tc2 + tc3 * cx[12 + 1] + tc4 * cx[12 + 2];\\n      st = -ts5 * cx[12 + 4] + ts6 - ts7 * cx[12 + 5] + ts8 * cx[12 + 3];\\n      out[outPos + 1] = ct + st;\\n      out[outPos + 2] = ct - st;\\n      ct = tc1 * cx[12 + 1] - tc2 - tc3 * cx[12 + 2] + tc4 * cx[12 + 0];\\n      st = -ts5 * cx[12 + 5] + ts6 - ts7 * cx[12 + 3] + ts8 * cx[12 + 4];\\n      out[outPos + 9] = ct + st;\\n      out[outPos + 10] = ct - st;\\n      ct = tc1 * cx[12 + 2] - tc2 + tc3 * cx[12 + 0] - tc4 * cx[12 + 1];\\n      st = ts5 * cx[12 + 3] - ts6 + ts7 * cx[12 + 4] - ts8 * cx[12 + 5];\\n      out[outPos + 13] = ct + st;\\n      out[outPos + 14] = ct - st;\\n    }\\n    {\\n      var ts1, ts2, ts3, ts4, tc5, tc6, tc7, tc8;\\n      ts1 = _in[8] - _in[0];\\n      ts3 = _in[6] - _in[2];\\n      ts4 = _in[5] - _in[3];\\n      tc5 = _in[17] + _in[9];\\n      tc6 = _in[16] + _in[10];\\n      tc7 = _in[15] + _in[11];\\n      tc8 = _in[14] + _in[12];\\n      out[outPos + 0] = tc5 + tc7 + tc8 + (tc6 + _in[13]);\\n      ct = (tc5 + tc7 + tc8) * cx[12 + 7] - (tc6 + _in[13]);\\n      st = (ts1 - ts3 + ts4) * cx[12 + 6];\\n      out[outPos + 11] = ct + st;\\n      out[outPos + 12] = ct - st;\\n      ts2 = (_in[7] - _in[1]) * cx[12 + 6];\\n      tc6 = _in[13] - tc6 * cx[12 + 7];\\n      ct = tc5 * cx[12 + 3] - tc6 + tc7 * cx[12 + 4] + tc8 * cx[12 + 5];\\n      st = ts1 * cx[12 + 2] + ts2 + ts3 * cx[12 + 0] + ts4 * cx[12 + 1];\\n      out[outPos + 3] = ct + st;\\n      out[outPos + 4] = ct - st;\\n      ct = -tc5 * cx[12 + 5] + tc6 - tc7 * cx[12 + 3] - tc8 * cx[12 + 4];\\n      st = ts1 * cx[12 + 1] + ts2 - ts3 * cx[12 + 2] - ts4 * cx[12 + 0];\\n      out[outPos + 7] = ct + st;\\n      out[outPos + 8] = ct - st;\\n      ct = -tc5 * cx[12 + 4] + tc6 - tc7 * cx[12 + 5] - tc8 * cx[12 + 3];\\n      st = ts1 * cx[12 + 0] - ts2 + ts3 * cx[12 + 1] - ts4 * cx[12 + 2];\\n      out[outPos + 15] = ct + st;\\n      out[outPos + 16] = ct - st;\\n    }\\n  }\\n\\n  this.mdct_sub48 = function (gfc, w0, w1) {\\n    var wk = w0;\\n    var wkPos = 286;\\n    /* thinking cache performance, ch->gr loop is better than gr->ch loop */\\n\\n    for (var ch = 0; ch < gfc.channels_out; ch++) {\\n      for (var gr = 0; gr < gfc.mode_gr; gr++) {\\n        var band;\\n        var gi = gfc.l3_side.tt[gr][ch];\\n        var mdct_enc = gi.xr;\\n        var mdct_encPos = 0;\\n        var samp = gfc.sb_sample[ch][1 - gr];\\n        var sampPos = 0;\\n\\n        for (var k = 0; k < 18 / 2; k++) {\\n          window_subband(wk, wkPos, samp[sampPos]);\\n          window_subband(wk, wkPos + 32, samp[sampPos + 1]);\\n          sampPos += 2;\\n          wkPos += 64;\\n          /*\\n           * Compensate for inversion in the analysis filter\\n           */\\n\\n          for (band = 1; band < 32; band += 2) {\\n            samp[sampPos - 1][band] *= -1;\\n          }\\n        }\\n        /*\\n         * Perform imdct of 18 previous subband samples + 18 current\\n         * subband samples\\n         */\\n\\n\\n        for (band = 0; band < 32; band++, mdct_encPos += 18) {\\n          var type = gi.block_type;\\n          var band0 = gfc.sb_sample[ch][gr];\\n          var band1 = gfc.sb_sample[ch][1 - gr];\\n          if (gi.mixed_block_flag != 0 && band < 2) type = 0;\\n\\n          if (gfc.amp_filter[band] < 1e-12) {\\n            Arrays.fill(mdct_enc, mdct_encPos + 0, mdct_encPos + 18, 0);\\n          } else {\\n            if (gfc.amp_filter[band] < 1.0) {\\n              for (var k = 0; k < 18; k++) {\\n                band1[k][order[band]] *= gfc.amp_filter[band];\\n              }\\n            }\\n\\n            if (type == Encoder.SHORT_TYPE) {\\n              for (var k = -NS / 4; k < 0; k++) {\\n                var w = win[Encoder.SHORT_TYPE][k + 3];\\n                mdct_enc[mdct_encPos + k * 3 + 9] = band0[9 + k][order[band]] * w - band0[8 - k][order[band]];\\n                mdct_enc[mdct_encPos + k * 3 + 18] = band0[14 - k][order[band]] * w + band0[15 + k][order[band]];\\n                mdct_enc[mdct_encPos + k * 3 + 10] = band0[15 + k][order[band]] * w - band0[14 - k][order[band]];\\n                mdct_enc[mdct_encPos + k * 3 + 19] = band1[2 - k][order[band]] * w + band1[3 + k][order[band]];\\n                mdct_enc[mdct_encPos + k * 3 + 11] = band1[3 + k][order[band]] * w - band1[2 - k][order[band]];\\n                mdct_enc[mdct_encPos + k * 3 + 20] = band1[8 - k][order[band]] * w + band1[9 + k][order[band]];\\n              }\\n\\n              mdct_short(mdct_enc, mdct_encPos);\\n            } else {\\n              var work = new_float(18);\\n\\n              for (var k = -NL / 4; k < 0; k++) {\\n                var a, b;\\n                a = win[type][k + 27] * band1[k + 9][order[band]] + win[type][k + 36] * band1[8 - k][order[band]];\\n                b = win[type][k + 9] * band0[k + 9][order[band]] - win[type][k + 18] * band0[8 - k][order[band]];\\n                work[k + 9] = a - b * tantab_l[3 + k + 9];\\n                work[k + 18] = a * tantab_l[3 + k + 9] + b;\\n              }\\n\\n              mdct_long(mdct_enc, mdct_encPos, work);\\n            }\\n          }\\n          /*\\n           * Perform aliasing reduction butterfly\\n           */\\n\\n\\n          if (type != Encoder.SHORT_TYPE && band != 0) {\\n            for (var k = 7; k >= 0; --k) {\\n              var bu, bd;\\n              bu = mdct_enc[mdct_encPos + k] * ca[20 + k] + mdct_enc[mdct_encPos + -1 - k] * cs[28 + k];\\n              bd = mdct_enc[mdct_encPos + k] * cs[28 + k] - mdct_enc[mdct_encPos + -1 - k] * ca[20 + k];\\n              mdct_enc[mdct_encPos + -1 - k] = bu;\\n              mdct_enc[mdct_encPos + k] = bd;\\n            }\\n          }\\n        }\\n      }\\n\\n      wk = w1;\\n      wkPos = 286;\\n\\n      if (gfc.mode_gr == 1) {\\n        for (var i = 0; i < 18; i++) {\\n          System.arraycopy(gfc.sb_sample[ch][1][i], 0, gfc.sb_sample[ch][0][i], 0, 32);\\n        }\\n      }\\n    }\\n  };\\n}\\n\\nmodule.exports = NewMDCT;\",\"//package mp3;\\nvar III_psy_xmin = require('./III_psy_xmin.js');\\n\\nfunction III_psy_ratio() {\\n  this.thm = new III_psy_xmin();\\n  this.en = new III_psy_xmin();\\n}\\n\\nmodule.exports = III_psy_ratio;\",\"var MPEGMode = require('./MPEGMode.js');\\n\\nfunction LameGlobalFlags() {\\n  this.class_id = 0;\\n  /* input description */\\n\\n  /**\\n   * number of samples. default=-1\\n   */\\n\\n  this.num_samples = 0;\\n  /**\\n   * input number of channels. default=2\\n   */\\n\\n  this.num_channels = 0;\\n  /**\\n   * input_samp_rate in Hz. default=44.1 kHz\\n   */\\n\\n  this.in_samplerate = 0;\\n  /**\\n   * output_samp_rate. default: LAME picks best value at least not used for\\n   * MP3 decoding: Remember 44.1 kHz MP3s and AC97\\n   */\\n\\n  this.out_samplerate = 0;\\n  /**\\n   * scale input by this amount before encoding at least not used for MP3\\n   * decoding\\n   */\\n\\n  this.scale = 0.;\\n  /**\\n   * scale input of channel 0 (left) by this amount before encoding\\n   */\\n\\n  this.scale_left = 0.;\\n  /**\\n   * scale input of channel 1 (right) by this amount before encoding\\n   */\\n\\n  this.scale_right = 0.;\\n  /* general control params */\\n\\n  /**\\n   * collect data for a MP3 frame analyzer?\\n   */\\n\\n  this.analysis = false;\\n  /**\\n   * add Xing VBR tag?\\n   */\\n\\n  this.bWriteVbrTag = false;\\n  /**\\n   * use lame/mpglib to convert mp3 to wav\\n   */\\n\\n  this.decode_only = false;\\n  /**\\n   * quality setting 0=best, 9=worst default=5\\n   */\\n\\n  this.quality = 0;\\n  /**\\n   * see enum default = LAME picks best value\\n   */\\n\\n  this.mode = MPEGMode.STEREO;\\n  /**\\n   * force M/S mode. requires mode=1\\n   */\\n\\n  this.force_ms = false;\\n  /**\\n   * use free format? default=0\\n   */\\n\\n  this.free_format = false;\\n  /**\\n   * find the RG value? default=0\\n   */\\n\\n  this.findReplayGain = false;\\n  /**\\n   * decode on the fly? default=0\\n   */\\n\\n  this.decode_on_the_fly = false;\\n  /**\\n   * 1 (default) writes ID3 tags, 0 not\\n   */\\n\\n  this.write_id3tag_automatic = false;\\n  /*\\n   * set either brate>0 or compression_ratio>0, LAME will compute the value of\\n   * the variable not set. Default is compression_ratio = 11.025\\n   */\\n\\n  /**\\n   * bitrate\\n   */\\n\\n  this.brate = 0;\\n  /**\\n   * sizeof(wav file)/sizeof(mp3 file)\\n   */\\n\\n  this.compression_ratio = 0.;\\n  /* frame params */\\n\\n  /**\\n   * mark as copyright. default=0\\n   */\\n\\n  this.copyright = 0;\\n  /**\\n   * mark as original. default=1\\n   */\\n\\n  this.original = 0;\\n  /**\\n   * the MP3 'private extension' bit. Meaningless\\n   */\\n\\n  this.extension = 0;\\n  /**\\n   * Input PCM is emphased PCM (for instance from one of the rarely emphased\\n   * CDs), it is STRONGLY not recommended to use this, because psycho does not\\n   * take it into account, and last but not least many decoders don't care\\n   * about these bits\\n   */\\n\\n  this.emphasis = 0;\\n  /**\\n   * use 2 bytes per frame for a CRC checksum. default=0\\n   */\\n\\n  this.error_protection = 0;\\n  /**\\n   * enforce ISO spec as much as possible\\n   */\\n\\n  this.strict_ISO = false;\\n  /**\\n   * use bit reservoir?\\n   */\\n\\n  this.disable_reservoir = false;\\n  /* quantization/noise shaping */\\n\\n  this.quant_comp = 0;\\n  this.quant_comp_short = 0;\\n  this.experimentalY = false;\\n  this.experimentalZ = 0;\\n  this.exp_nspsytune = 0;\\n  this.preset = 0;\\n  /* VBR control */\\n\\n  this.VBR = null;\\n  /**\\n   * Range [0,...,1[\\n   */\\n\\n  this.VBR_q_frac = 0.;\\n  /**\\n   * Range [0,...,9]\\n   */\\n\\n  this.VBR_q = 0;\\n  this.VBR_mean_bitrate_kbps = 0;\\n  this.VBR_min_bitrate_kbps = 0;\\n  this.VBR_max_bitrate_kbps = 0;\\n  /**\\n   * strictly enforce VBR_min_bitrate normaly, it will be violated for analog\\n   * silence\\n   */\\n\\n  this.VBR_hard_min = 0;\\n  /* resampling and filtering */\\n\\n  /**\\n   * freq in Hz. 0=lame choses. -1=no filter\\n   */\\n\\n  this.lowpassfreq = 0;\\n  /**\\n   * freq in Hz. 0=lame choses. -1=no filter\\n   */\\n\\n  this.highpassfreq = 0;\\n  /**\\n   * freq width of filter, in Hz (default=15%)\\n   */\\n\\n  this.lowpasswidth = 0;\\n  /**\\n   * freq width of filter, in Hz (default=15%)\\n   */\\n\\n  this.highpasswidth = 0;\\n  /*\\n   * psycho acoustics and other arguments which you should not change unless\\n   * you know what you are doing\\n   */\\n\\n  this.maskingadjust = 0.;\\n  this.maskingadjust_short = 0.;\\n  /**\\n   * only use ATH\\n   */\\n\\n  this.ATHonly = false;\\n  /**\\n   * only use ATH for short blocks\\n   */\\n\\n  this.ATHshort = false;\\n  /**\\n   * disable ATH\\n   */\\n\\n  this.noATH = false;\\n  /**\\n   * select ATH formula\\n   */\\n\\n  this.ATHtype = 0;\\n  /**\\n   * change ATH formula 4 shape\\n   */\\n\\n  this.ATHcurve = 0.;\\n  /**\\n   * lower ATH by this many db\\n   */\\n\\n  this.ATHlower = 0.;\\n  /**\\n   * select ATH auto-adjust scheme\\n   */\\n\\n  this.athaa_type = 0;\\n  /**\\n   * select ATH auto-adjust loudness calc\\n   */\\n\\n  this.athaa_loudapprox = 0;\\n  /**\\n   * dB, tune active region of auto-level\\n   */\\n\\n  this.athaa_sensitivity = 0.;\\n  this.short_blocks = null;\\n  /**\\n   * use temporal masking effect\\n   */\\n\\n  this.useTemporal = false;\\n  this.interChRatio = 0.;\\n  /**\\n   * Naoki's adjustment of Mid/Side maskings\\n   */\\n\\n  this.msfix = 0.;\\n  /**\\n   * 0 off, 1 on\\n   */\\n\\n  this.tune = false;\\n  /**\\n   * used to pass values for debugging and stuff\\n   */\\n\\n  this.tune_value_a = 0.;\\n  /************************************************************************/\\n\\n  /* internal variables, do not set... */\\n\\n  /* provided because they may be of use to calling application */\\n\\n  /************************************************************************/\\n\\n  /**\\n   * 0=MPEG-2/2.5 1=MPEG-1\\n   */\\n\\n  this.version = 0;\\n  this.encoder_delay = 0;\\n  /**\\n   * number of samples of padding appended to input\\n   */\\n\\n  this.encoder_padding = 0;\\n  this.framesize = 0;\\n  /**\\n   * number of frames encoded\\n   */\\n\\n  this.frameNum = 0;\\n  /**\\n   * is this struct owned by calling program or lame?\\n   */\\n\\n  this.lame_allocated_gfp = 0;\\n  /**************************************************************************/\\n\\n  /* more internal variables are stored in this structure: */\\n\\n  /**************************************************************************/\\n\\n  this.internal_flags = null;\\n}\\n\\nmodule.exports = LameGlobalFlags;\",\"var common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nvar GrInfo = require('./GrInfo.js');\\n\\nfunction IIISideInfo() {\\n  this.tt = [[null, null], [null, null]];\\n  this.main_data_begin = 0;\\n  this.private_bits = 0;\\n  this.resvDrain_pre = 0;\\n  this.resvDrain_post = 0;\\n  this.scfsi = [new_int(4), new_int(4)];\\n\\n  for (var gr = 0; gr < 2; gr++) {\\n    for (var ch = 0; ch < 2; ch++) {\\n      this.tt[gr][ch] = new GrInfo();\\n    }\\n  }\\n}\\n\\nmodule.exports = IIISideInfo;\",\"var common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nvar Encoder = require('./Encoder.js'); //package mp3;\\n\\n/**\\n * Variables used for --nspsytune\\n *\\n * @author Ken\\n *\\n */\\n\\n\\nfunction NsPsy() {\\n  this.last_en_subshort = new_float_n([4, 9]);\\n  this.lastAttacks = new_int(4);\\n  this.pefirbuf = new_float(19);\\n  this.longfact = new_float(Encoder.SBMAX_l);\\n  this.shortfact = new_float(Encoder.SBMAX_s);\\n  /**\\n   * short block tuning\\n   */\\n\\n  this.attackthre = 0.;\\n  this.attackthre_s = 0.;\\n}\\n\\nmodule.exports = NsPsy;\",\"//package mp3;\\nfunction VBRSeekInfo() {\\n  /**\\n   * What we have seen so far.\\n   */\\n  this.sum = 0;\\n  /**\\n   * How many frames we have seen in this chunk.\\n   */\\n\\n  this.seen = 0;\\n  /**\\n   * How many frames we want to collect into one chunk.\\n   */\\n\\n  this.want = 0;\\n  /**\\n   * Actual position in our bag.\\n   */\\n\\n  this.pos = 0;\\n  /**\\n   * Size of our bag.\\n   */\\n\\n  this.size = 0;\\n  /**\\n   * Pointer to our bag.\\n   */\\n\\n  this.bag = null;\\n  this.nVbrNumFrames = 0;\\n  this.nBytesWritten = 0;\\n  /* VBR tag data */\\n\\n  this.TotalFrameSize = 0;\\n}\\n\\nmodule.exports = VBRSeekInfo;\",\"var common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nvar Encoder = require('./Encoder.js');\\n/**\\n * ATH related stuff, if something new ATH related has to be added, please plug\\n * it here into the ATH.\\n */\\n\\n\\nfunction ATH() {\\n  /**\\n   * Method for the auto adjustment.\\n   */\\n  this.useAdjust = 0;\\n  /**\\n   * factor for tuning the (sample power) point below which adaptive threshold\\n   * of hearing adjustment occurs\\n   */\\n\\n  this.aaSensitivityP = 0.;\\n  /**\\n   * Lowering based on peak volume, 1 = no lowering.\\n   */\\n\\n  this.adjust = 0.;\\n  /**\\n   * Limit for dynamic ATH adjust.\\n   */\\n\\n  this.adjustLimit = 0.;\\n  /**\\n   * Determined to lower x dB each second.\\n   */\\n\\n  this.decay = 0.;\\n  /**\\n   * Lowest ATH value.\\n   */\\n\\n  this.floor = 0.;\\n  /**\\n   * ATH for sfbs in long blocks.\\n   */\\n\\n  this.l = new_float(Encoder.SBMAX_l);\\n  /**\\n   * ATH for sfbs in short blocks.\\n   */\\n\\n  this.s = new_float(Encoder.SBMAX_s);\\n  /**\\n   * ATH for partitioned sfb21 in long blocks.\\n   */\\n\\n  this.psfb21 = new_float(Encoder.PSFB21);\\n  /**\\n   * ATH for partitioned sfb12 in short blocks.\\n   */\\n\\n  this.psfb12 = new_float(Encoder.PSFB12);\\n  /**\\n   * ATH for long block convolution bands.\\n   */\\n\\n  this.cb_l = new_float(Encoder.CBANDS);\\n  /**\\n   * ATH for short block convolution bands.\\n   */\\n\\n  this.cb_s = new_float(Encoder.CBANDS);\\n  /**\\n   * Equal loudness weights (based on ATH).\\n   */\\n\\n  this.eql_w = new_float(Encoder.BLKSIZE / 2);\\n}\\n\\nmodule.exports = ATH;\",\"var common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nvar GainAnalysis = require('./GainAnalysis.js');\\n\\nfunction ReplayGain() {\\n  this.linprebuf = new_float(GainAnalysis.MAX_ORDER * 2);\\n  /**\\n   * left input samples, with pre-buffer\\n   */\\n\\n  this.linpre = 0;\\n  this.lstepbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\\n  /**\\n   * left \\\"first step\\\" (i.e. post first filter) samples\\n   */\\n\\n  this.lstep = 0;\\n  this.loutbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\\n  /**\\n   * left \\\"out\\\" (i.e. post second filter) samples\\n   */\\n\\n  this.lout = 0;\\n  this.rinprebuf = new_float(GainAnalysis.MAX_ORDER * 2);\\n  /**\\n   * right input samples ...\\n   */\\n\\n  this.rinpre = 0;\\n  this.rstepbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\\n  this.rstep = 0;\\n  this.routbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\\n  this.rout = 0;\\n  /**\\n   * number of samples required to reach number of milliseconds required\\n   * for RMS window\\n   */\\n\\n  this.sampleWindow = 0;\\n  this.totsamp = 0;\\n  this.lsum = 0.;\\n  this.rsum = 0.;\\n  this.freqindex = 0;\\n  this.first = 0;\\n  this.A = new_int(0 | GainAnalysis.STEPS_per_dB * GainAnalysis.MAX_dB);\\n  this.B = new_int(0 | GainAnalysis.STEPS_per_dB * GainAnalysis.MAX_dB);\\n}\\n\\nmodule.exports = ReplayGain;\",\"var common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nvar MeanBits = require('./MeanBits.js');\\n\\nvar Encoder = require('./Encoder.js');\\n\\nvar L3Side = require('./L3Side.js');\\n\\nvar LameInternalFlags = require('./LameInternalFlags.js');\\n\\nfunction CBRNewIterationLoop(_quantize) {\\n  var quantize = _quantize;\\n  this.quantize = quantize;\\n\\n  this.iteration_loop = function (gfp, pe, ms_ener_ratio, ratio) {\\n    var gfc = gfp.internal_flags;\\n    var l3_xmin = new_float(L3Side.SFBMAX);\\n    var xrpow = new_float(576);\\n    var targ_bits = new_int(2);\\n    var mean_bits = 0,\\n        max_bits;\\n    var l3_side = gfc.l3_side;\\n    var mb = new MeanBits(mean_bits);\\n    this.quantize.rv.ResvFrameBegin(gfp, mb);\\n    mean_bits = mb.bits;\\n    /* quantize! */\\n\\n    for (var gr = 0; gr < gfc.mode_gr; gr++) {\\n      /*\\n       * calculate needed bits\\n       */\\n      max_bits = this.quantize.qupvt.on_pe(gfp, pe, targ_bits, mean_bits, gr, gr);\\n\\n      if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\\n        this.quantize.ms_convert(gfc.l3_side, gr);\\n        this.quantize.qupvt.reduce_side(targ_bits, ms_ener_ratio[gr], mean_bits, max_bits);\\n      }\\n\\n      for (var ch = 0; ch < gfc.channels_out; ch++) {\\n        var adjust, masking_lower_db;\\n        var cod_info = l3_side.tt[gr][ch];\\n\\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\\n          // NORM, START or STOP type\\n          adjust = 0;\\n          masking_lower_db = gfc.PSY.mask_adjust - adjust;\\n        } else {\\n          adjust = 0;\\n          masking_lower_db = gfc.PSY.mask_adjust_short - adjust;\\n        }\\n\\n        gfc.masking_lower = Math.pow(10.0, masking_lower_db * 0.1);\\n        /*\\n         * init_outer_loop sets up cod_info, scalefac and xrpow\\n         */\\n\\n        this.quantize.init_outer_loop(gfc, cod_info);\\n\\n        if (this.quantize.init_xrpow(gfc, cod_info, xrpow)) {\\n          /*\\n           * xr contains energy we will have to encode calculate the\\n           * masking abilities find some good quantization in\\n           * outer_loop\\n           */\\n          this.quantize.qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info, l3_xmin);\\n          this.quantize.outer_loop(gfp, cod_info, l3_xmin, xrpow, ch, targ_bits[ch]);\\n        }\\n\\n        this.quantize.iteration_finish_one(gfc, gr, ch);\\n        assert(cod_info.part2_3_length <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\\n        assert(cod_info.part2_3_length <= targ_bits[ch]);\\n      }\\n      /* for ch */\\n\\n    }\\n    /* for gr */\\n\\n\\n    this.quantize.rv.ResvFrameEnd(gfc, mean_bits);\\n  };\\n}\\n\\nmodule.exports = CBRNewIterationLoop;\",\"var common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nfunction Presets() {\\n  function VBRPresets(qual, comp, compS, y, shThreshold, shThresholdS, adj, adjShort, lower, curve, sens, inter, joint, mod, fix) {\\n    this.vbr_q = qual;\\n    this.quant_comp = comp;\\n    this.quant_comp_s = compS;\\n    this.expY = y;\\n    this.st_lrm = shThreshold;\\n    this.st_s = shThresholdS;\\n    this.masking_adj = adj;\\n    this.masking_adj_short = adjShort;\\n    this.ath_lower = lower;\\n    this.ath_curve = curve;\\n    this.ath_sensitivity = sens;\\n    this.interch = inter;\\n    this.safejoint = joint;\\n    this.sfb21mod = mod;\\n    this.msfix = fix;\\n  }\\n\\n  function ABRPresets(kbps, comp, compS, joint, fix, shThreshold, shThresholdS, bass, sc, mask, lower, curve, interCh, sfScale) {\\n    this.quant_comp = comp;\\n    this.quant_comp_s = compS;\\n    this.safejoint = joint;\\n    this.nsmsfix = fix;\\n    this.st_lrm = shThreshold;\\n    this.st_s = shThresholdS;\\n    this.nsbass = bass;\\n    this.scale = sc;\\n    this.masking_adj = mask;\\n    this.ath_lower = lower;\\n    this.ath_curve = curve;\\n    this.interch = interCh;\\n    this.sfscale = sfScale;\\n  }\\n\\n  var lame;\\n\\n  this.setModules = function (_lame) {\\n    lame = _lame;\\n  };\\n  /**\\n   * <PRE>\\n   * Switch mappings for VBR mode VBR_RH\\n   *             vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\\n   * </PRE>\\n   */\\n\\n\\n  var vbr_old_switch_map = [new VBRPresets(0, 9, 9, 0, 5.20, 125.0, -4.2, -6.3, 4.8, 1, 0, 0, 2, 21, 0.97), new VBRPresets(1, 9, 9, 0, 5.30, 125.0, -3.6, -5.6, 4.5, 1.5, 0, 0, 2, 21, 1.35), new VBRPresets(2, 9, 9, 0, 5.60, 125.0, -2.2, -3.5, 2.8, 2, 0, 0, 2, 21, 1.49), new VBRPresets(3, 9, 9, 1, 5.80, 130.0, -1.8, -2.8, 2.6, 3, -4, 0, 2, 20, 1.64), new VBRPresets(4, 9, 9, 1, 6.00, 135.0, -0.7, -1.1, 1.1, 3.5, -8, 0, 2, 0, 1.79), new VBRPresets(5, 9, 9, 1, 6.40, 140.0, 0.5, 0.4, -7.5, 4, -12, 0.0002, 0, 0, 1.95), new VBRPresets(6, 9, 9, 1, 6.60, 145.0, 0.67, 0.65, -14.7, 6.5, -19, 0.0004, 0, 0, 2.30), new VBRPresets(7, 9, 9, 1, 6.60, 145.0, 0.8, 0.75, -19.7, 8, -22, 0.0006, 0, 0, 2.70), new VBRPresets(8, 9, 9, 1, 6.60, 145.0, 1.2, 1.15, -27.5, 10, -23, 0.0007, 0, 0, 0), new VBRPresets(9, 9, 9, 1, 6.60, 145.0, 1.6, 1.6, -36, 11, -25, 0.0008, 0, 0, 0), new VBRPresets(10, 9, 9, 1, 6.60, 145.0, 2.0, 2.0, -36, 12, -25, 0.0008, 0, 0, 0)];\\n  /**\\n   * <PRE>\\n   *                 vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\\n   * </PRE>\\n   */\\n\\n  var vbr_psy_switch_map = [new VBRPresets(0, 9, 9, 0, 4.20, 25.0, -7.0, -4.0, 7.5, 1, 0, 0, 2, 26, 0.97), new VBRPresets(1, 9, 9, 0, 4.20, 25.0, -5.6, -3.6, 4.5, 1.5, 0, 0, 2, 21, 1.35), new VBRPresets(2, 9, 9, 0, 4.20, 25.0, -4.4, -1.8, 2, 2, 0, 0, 2, 18, 1.49), new VBRPresets(3, 9, 9, 1, 4.20, 25.0, -3.4, -1.25, 1.1, 3, -4, 0, 2, 15, 1.64), new VBRPresets(4, 9, 9, 1, 4.20, 25.0, -2.2, 0.1, 0, 3.5, -8, 0, 2, 0, 1.79), new VBRPresets(5, 9, 9, 1, 4.20, 25.0, -1.0, 1.65, -7.7, 4, -12, 0.0002, 0, 0, 1.95), new VBRPresets(6, 9, 9, 1, 4.20, 25.0, -0.0, 2.47, -7.7, 6.5, -19, 0.0004, 0, 0, 2), new VBRPresets(7, 9, 9, 1, 4.20, 25.0, 0.5, 2.0, -14.5, 8, -22, 0.0006, 0, 0, 2), new VBRPresets(8, 9, 9, 1, 4.20, 25.0, 1.0, 2.4, -22.0, 10, -23, 0.0007, 0, 0, 2), new VBRPresets(9, 9, 9, 1, 4.20, 25.0, 1.5, 2.95, -30.0, 11, -25, 0.0008, 0, 0, 2), new VBRPresets(10, 9, 9, 1, 4.20, 25.0, 2.0, 2.95, -36.0, 12, -30, 0.0008, 0, 0, 2)];\\n\\n  function apply_vbr_preset(gfp, a, enforce) {\\n    var vbr_preset = gfp.VBR == VbrMode.vbr_rh ? vbr_old_switch_map : vbr_psy_switch_map;\\n    var x = gfp.VBR_q_frac;\\n    var p = vbr_preset[a];\\n    var q = vbr_preset[a + 1];\\n    var set = p; // NOOP(vbr_q);\\n    // NOOP(quant_comp);\\n    // NOOP(quant_comp_s);\\n    // NOOP(expY);\\n\\n    p.st_lrm = p.st_lrm + x * (q.st_lrm - p.st_lrm); // LERP(st_lrm);\\n\\n    p.st_s = p.st_s + x * (q.st_s - p.st_s); // LERP(st_s);\\n\\n    p.masking_adj = p.masking_adj + x * (q.masking_adj - p.masking_adj); // LERP(masking_adj);\\n\\n    p.masking_adj_short = p.masking_adj_short + x * (q.masking_adj_short - p.masking_adj_short); // LERP(masking_adj_short);\\n\\n    p.ath_lower = p.ath_lower + x * (q.ath_lower - p.ath_lower); // LERP(ath_lower);\\n\\n    p.ath_curve = p.ath_curve + x * (q.ath_curve - p.ath_curve); // LERP(ath_curve);\\n\\n    p.ath_sensitivity = p.ath_sensitivity + x * (q.ath_sensitivity - p.ath_sensitivity); // LERP(ath_sensitivity);\\n\\n    p.interch = p.interch + x * (q.interch - p.interch); // LERP(interch);\\n    // NOOP(safejoint);\\n    // NOOP(sfb21mod);\\n\\n    p.msfix = p.msfix + x * (q.msfix - p.msfix); // LERP(msfix);\\n\\n    lame_set_VBR_q(gfp, set.vbr_q);\\n    if (enforce != 0) gfp.quant_comp = set.quant_comp;else if (!(Math.abs(gfp.quant_comp - -1) > 0)) gfp.quant_comp = set.quant_comp; // SET_OPTION(quant_comp, set.quant_comp, -1);\\n\\n    if (enforce != 0) gfp.quant_comp_short = set.quant_comp_s;else if (!(Math.abs(gfp.quant_comp_short - -1) > 0)) gfp.quant_comp_short = set.quant_comp_s; // SET_OPTION(quant_comp_short, set.quant_comp_s, -1);\\n\\n    if (set.expY != 0) {\\n      gfp.experimentalY = set.expY != 0;\\n    }\\n\\n    if (enforce != 0) gfp.internal_flags.nsPsy.attackthre = set.st_lrm;else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0)) gfp.internal_flags.nsPsy.attackthre = set.st_lrm; // SET_OPTION(short_threshold_lrm, set.st_lrm, -1);\\n\\n    if (enforce != 0) gfp.internal_flags.nsPsy.attackthre_s = set.st_s;else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0)) gfp.internal_flags.nsPsy.attackthre_s = set.st_s; // SET_OPTION(short_threshold_s, set.st_s, -1);\\n\\n    if (enforce != 0) gfp.maskingadjust = set.masking_adj;else if (!(Math.abs(gfp.maskingadjust - 0) > 0)) gfp.maskingadjust = set.masking_adj; // SET_OPTION(maskingadjust, set.masking_adj, 0);\\n\\n    if (enforce != 0) gfp.maskingadjust_short = set.masking_adj_short;else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0)) gfp.maskingadjust_short = set.masking_adj_short; // SET_OPTION(maskingadjust_short, set.masking_adj_short, 0);\\n\\n    if (enforce != 0) gfp.ATHlower = -set.ath_lower / 10.0;else if (!(Math.abs(-gfp.ATHlower * 10.0 - 0) > 0)) gfp.ATHlower = -set.ath_lower / 10.0; // SET_OPTION(ATHlower, set.ath_lower, 0);\\n\\n    if (enforce != 0) gfp.ATHcurve = set.ath_curve;else if (!(Math.abs(gfp.ATHcurve - -1) > 0)) gfp.ATHcurve = set.ath_curve; // SET_OPTION(ATHcurve, set.ath_curve, -1);\\n\\n    if (enforce != 0) gfp.athaa_sensitivity = set.ath_sensitivity;else if (!(Math.abs(gfp.athaa_sensitivity - -1) > 0)) gfp.athaa_sensitivity = set.ath_sensitivity; // SET_OPTION(athaa_sensitivity, set.ath_sensitivity, 0);\\n\\n    if (set.interch > 0) {\\n      if (enforce != 0) gfp.interChRatio = set.interch;else if (!(Math.abs(gfp.interChRatio - -1) > 0)) gfp.interChRatio = set.interch; // SET_OPTION(interChRatio, set.interch, -1);\\n    }\\n    /* parameters for which there is no proper set/get interface */\\n\\n\\n    if (set.safejoint > 0) {\\n      gfp.exp_nspsytune = gfp.exp_nspsytune | set.safejoint;\\n    }\\n\\n    if (set.sfb21mod > 0) {\\n      gfp.exp_nspsytune = gfp.exp_nspsytune | set.sfb21mod << 20;\\n    }\\n\\n    if (enforce != 0) gfp.msfix = set.msfix;else if (!(Math.abs(gfp.msfix - -1) > 0)) gfp.msfix = set.msfix; // SET_OPTION(msfix, set.msfix, -1);\\n\\n    if (enforce == 0) {\\n      gfp.VBR_q = a;\\n      gfp.VBR_q_frac = x;\\n    }\\n  }\\n  /**\\n   * <PRE>\\n   *  Switch mappings for ABR mode\\n   *\\n   *              kbps  quant q_s safejoint nsmsfix st_lrm  st_s  ns-bass scale   msk ath_lwr ath_curve  interch , sfscale\\n   * </PRE>\\n   */\\n\\n\\n  var abr_switch_map = [new ABRPresets(8, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -30.0, 11, 0.0012, 1),\\n  /*   8, impossible to use in stereo */\\n  new ABRPresets(16, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -25.0, 11, 0.0010, 1),\\n  /*  16 */\\n  new ABRPresets(24, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -20.0, 11, 0.0010, 1),\\n  /*  24 */\\n  new ABRPresets(32, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -15.0, 11, 0.0010, 1),\\n  /*  32 */\\n  new ABRPresets(40, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1),\\n  /*  40 */\\n  new ABRPresets(48, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1),\\n  /*  48 */\\n  new ABRPresets(56, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -6.0, 11, 0.0008, 1),\\n  /*  56 */\\n  new ABRPresets(64, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -2.0, 11, 0.0008, 1),\\n  /*  64 */\\n  new ABRPresets(80, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, .0, 8, 0.0007, 1),\\n  /*  80 */\\n  new ABRPresets(96, 9, 9, 0, 2.50, 6.60, 145, 0, 0.95, 0, 1.0, 5.5, 0.0006, 1),\\n  /*  96 */\\n  new ABRPresets(112, 9, 9, 0, 2.25, 6.60, 145, 0, 0.95, 0, 2.0, 4.5, 0.0005, 1),\\n  /* 112 */\\n  new ABRPresets(128, 9, 9, 0, 1.95, 6.40, 140, 0, 0.95, 0, 3.0, 4, 0.0002, 1),\\n  /* 128 */\\n  new ABRPresets(160, 9, 9, 1, 1.79, 6.00, 135, 0, 0.95, -2, 5.0, 3.5, 0, 1),\\n  /* 160 */\\n  new ABRPresets(192, 9, 9, 1, 1.49, 5.60, 125, 0, 0.97, -4, 7.0, 3, 0, 0),\\n  /* 192 */\\n  new ABRPresets(224, 9, 9, 1, 1.25, 5.20, 125, 0, 0.98, -6, 9.0, 2, 0, 0),\\n  /* 224 */\\n  new ABRPresets(256, 9, 9, 1, 0.97, 5.20, 125, 0, 1.00, -8, 10.0, 1, 0, 0),\\n  /* 256 */\\n  new ABRPresets(320, 9, 9, 1, 0.90, 5.20, 125, 0, 1.00, -10, 12.0, 0, 0, 0)\\n  /* 320 */\\n  ];\\n\\n  function apply_abr_preset(gfp, preset, enforce) {\\n    /* Variables for the ABR stuff */\\n    var actual_bitrate = preset;\\n    var r = lame.nearestBitrateFullIndex(preset);\\n    gfp.VBR = VbrMode.vbr_abr;\\n    gfp.VBR_mean_bitrate_kbps = actual_bitrate;\\n    gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps, 320);\\n    gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps, 8);\\n    gfp.brate = gfp.VBR_mean_bitrate_kbps;\\n\\n    if (gfp.VBR_mean_bitrate_kbps > 320) {\\n      gfp.disable_reservoir = true;\\n    }\\n    /* parameters for which there is no proper set/get interface */\\n\\n\\n    if (abr_switch_map[r].safejoint > 0) gfp.exp_nspsytune = gfp.exp_nspsytune | 2;\\n    /* safejoint */\\n\\n    if (abr_switch_map[r].sfscale > 0) {\\n      gfp.internal_flags.noise_shaping = 2;\\n    }\\n    /* ns-bass tweaks */\\n\\n\\n    if (Math.abs(abr_switch_map[r].nsbass) > 0) {\\n      var k = int(abr_switch_map[r].nsbass * 4);\\n      if (k < 0) k += 64;\\n      gfp.exp_nspsytune = gfp.exp_nspsytune | k << 2;\\n    }\\n\\n    if (enforce != 0) gfp.quant_comp = abr_switch_map[r].quant_comp;else if (!(Math.abs(gfp.quant_comp - -1) > 0)) gfp.quant_comp = abr_switch_map[r].quant_comp; // SET_OPTION(quant_comp, abr_switch_map[r].quant_comp, -1);\\n\\n    if (enforce != 0) gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;else if (!(Math.abs(gfp.quant_comp_short - -1) > 0)) gfp.quant_comp_short = abr_switch_map[r].quant_comp_s; // SET_OPTION(quant_comp_short, abr_switch_map[r].quant_comp_s, -1);\\n\\n    if (enforce != 0) gfp.msfix = abr_switch_map[r].nsmsfix;else if (!(Math.abs(gfp.msfix - -1) > 0)) gfp.msfix = abr_switch_map[r].nsmsfix; // SET_OPTION(msfix, abr_switch_map[r].nsmsfix, -1);\\n\\n    if (enforce != 0) gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0)) gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm; // SET_OPTION(short_threshold_lrm, abr_switch_map[r].st_lrm, -1);\\n\\n    if (enforce != 0) gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0)) gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s; // SET_OPTION(short_threshold_s, abr_switch_map[r].st_s, -1);\\n\\n    /*\\n     * ABR seems to have big problems with clipping, especially at low\\n     * bitrates\\n     */\\n\\n    /*\\n     * so we compensate for that here by using a scale value depending on\\n     * bitrate\\n     */\\n\\n    if (enforce != 0) gfp.scale = abr_switch_map[r].scale;else if (!(Math.abs(gfp.scale - -1) > 0)) gfp.scale = abr_switch_map[r].scale; // SET_OPTION(scale, abr_switch_map[r].scale, -1);\\n\\n    if (enforce != 0) gfp.maskingadjust = abr_switch_map[r].masking_adj;else if (!(Math.abs(gfp.maskingadjust - 0) > 0)) gfp.maskingadjust = abr_switch_map[r].masking_adj; // SET_OPTION(maskingadjust, abr_switch_map[r].masking_adj, 0);\\n\\n    if (abr_switch_map[r].masking_adj > 0) {\\n      if (enforce != 0) gfp.maskingadjust_short = abr_switch_map[r].masking_adj * .9;else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0)) gfp.maskingadjust_short = abr_switch_map[r].masking_adj * .9; // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\\n      // .9, 0);\\n    } else {\\n      if (enforce != 0) gfp.maskingadjust_short = abr_switch_map[r].masking_adj * 1.1;else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0)) gfp.maskingadjust_short = abr_switch_map[r].masking_adj * 1.1; // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\\n      // 1.1, 0);\\n    }\\n\\n    if (enforce != 0) gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;else if (!(Math.abs(-gfp.ATHlower * 10. - 0) > 0)) gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.; // SET_OPTION(ATHlower, abr_switch_map[r].ath_lower, 0);\\n\\n    if (enforce != 0) gfp.ATHcurve = abr_switch_map[r].ath_curve;else if (!(Math.abs(gfp.ATHcurve - -1) > 0)) gfp.ATHcurve = abr_switch_map[r].ath_curve; // SET_OPTION(ATHcurve, abr_switch_map[r].ath_curve, -1);\\n\\n    if (enforce != 0) gfp.interChRatio = abr_switch_map[r].interch;else if (!(Math.abs(gfp.interChRatio - -1) > 0)) gfp.interChRatio = abr_switch_map[r].interch; // SET_OPTION(interChRatio, abr_switch_map[r].interch, -1);\\n\\n    return preset;\\n  }\\n\\n  this.apply_preset = function (gfp, preset, enforce) {\\n    /* translate legacy presets */\\n    switch (preset) {\\n      case Lame.R3MIX:\\n        {\\n          preset = Lame.V3;\\n          gfp.VBR = VbrMode.vbr_mtrh;\\n          break;\\n        }\\n\\n      case Lame.MEDIUM:\\n        {\\n          preset = Lame.V4;\\n          gfp.VBR = VbrMode.vbr_rh;\\n          break;\\n        }\\n\\n      case Lame.MEDIUM_FAST:\\n        {\\n          preset = Lame.V4;\\n          gfp.VBR = VbrMode.vbr_mtrh;\\n          break;\\n        }\\n\\n      case Lame.STANDARD:\\n        {\\n          preset = Lame.V2;\\n          gfp.VBR = VbrMode.vbr_rh;\\n          break;\\n        }\\n\\n      case Lame.STANDARD_FAST:\\n        {\\n          preset = Lame.V2;\\n          gfp.VBR = VbrMode.vbr_mtrh;\\n          break;\\n        }\\n\\n      case Lame.EXTREME:\\n        {\\n          preset = Lame.V0;\\n          gfp.VBR = VbrMode.vbr_rh;\\n          break;\\n        }\\n\\n      case Lame.EXTREME_FAST:\\n        {\\n          preset = Lame.V0;\\n          gfp.VBR = VbrMode.vbr_mtrh;\\n          break;\\n        }\\n\\n      case Lame.INSANE:\\n        {\\n          preset = 320;\\n          gfp.preset = preset;\\n          apply_abr_preset(gfp, preset, enforce);\\n          gfp.VBR = VbrMode.vbr_off;\\n          return preset;\\n        }\\n    }\\n\\n    gfp.preset = preset;\\n    {\\n      switch (preset) {\\n        case Lame.V9:\\n          apply_vbr_preset(gfp, 9, enforce);\\n          return preset;\\n\\n        case Lame.V8:\\n          apply_vbr_preset(gfp, 8, enforce);\\n          return preset;\\n\\n        case Lame.V7:\\n          apply_vbr_preset(gfp, 7, enforce);\\n          return preset;\\n\\n        case Lame.V6:\\n          apply_vbr_preset(gfp, 6, enforce);\\n          return preset;\\n\\n        case Lame.V5:\\n          apply_vbr_preset(gfp, 5, enforce);\\n          return preset;\\n\\n        case Lame.V4:\\n          apply_vbr_preset(gfp, 4, enforce);\\n          return preset;\\n\\n        case Lame.V3:\\n          apply_vbr_preset(gfp, 3, enforce);\\n          return preset;\\n\\n        case Lame.V2:\\n          apply_vbr_preset(gfp, 2, enforce);\\n          return preset;\\n\\n        case Lame.V1:\\n          apply_vbr_preset(gfp, 1, enforce);\\n          return preset;\\n\\n        case Lame.V0:\\n          apply_vbr_preset(gfp, 0, enforce);\\n          return preset;\\n\\n        default:\\n          break;\\n      }\\n    }\\n\\n    if (8 <= preset && preset <= 320) {\\n      return apply_abr_preset(gfp, preset, enforce);\\n    }\\n    /* no corresponding preset found */\\n\\n\\n    gfp.preset = 0;\\n    return preset;\\n  }; // Rest from getset.c:\\n\\n  /**\\n   * VBR quality level.<BR>\\n   * 0 = highest<BR>\\n   * 9 = lowest\\n   */\\n\\n\\n  function lame_set_VBR_q(gfp, VBR_q) {\\n    var ret = 0;\\n\\n    if (0 > VBR_q) {\\n      /* Unknown VBR quality level! */\\n      ret = -1;\\n      VBR_q = 0;\\n    }\\n\\n    if (9 < VBR_q) {\\n      ret = -1;\\n      VBR_q = 9;\\n    }\\n\\n    gfp.VBR_q = VBR_q;\\n    gfp.VBR_q_frac = 0;\\n    return ret;\\n  }\\n}\\n\\nmodule.exports = Presets;\",\"/*\\n * MP3 quantization\\n *\\n *      Copyright (c) 1999-2000 Mark Taylor\\n *      Copyright (c) 1999-2003 Takehiro Tominaga\\n *      Copyright (c) 2000-2007 Robert Hegemann\\n *      Copyright (c) 2001-2005 Gabriel Bouvigne\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.     See the GNU\\n * Library General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the\\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\\n * Boston, MA 02111-1307, USA.\\n */\\n\\n/* $Id: Quantize.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\\n//package mp3;\\n//import java.util.Arrays;\\nvar common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n\\nvar VBRQuantize = require('./VBRQuantize.js');\\n\\nvar CalcNoiseResult = require('./CalcNoiseResult.js');\\n\\nvar CalcNoiseData = require('./CalcNoiseData.js');\\n\\nvar Encoder = require('./Encoder.js');\\n\\nvar GrInfo = require('./GrInfo.js');\\n\\nvar L3Side = require('./L3Side.js');\\n\\nfunction Quantize() {\\n  var bs;\\n  this.rv = null;\\n  var rv;\\n  this.qupvt = null;\\n  var qupvt;\\n  var vbr = new VBRQuantize();\\n  var tk;\\n\\n  this.setModules = function (_bs, _rv, _qupvt, _tk) {\\n    bs = _bs;\\n    rv = _rv;\\n    this.rv = _rv;\\n    qupvt = _qupvt;\\n    this.qupvt = _qupvt;\\n    tk = _tk;\\n    vbr.setModules(qupvt, tk);\\n  };\\n  /**\\n   * convert from L/R <. Mid/Side\\n   */\\n\\n\\n  this.ms_convert = function (l3_side, gr) {\\n    for (var i = 0; i < 576; ++i) {\\n      var l = l3_side.tt[gr][0].xr[i];\\n      var r = l3_side.tt[gr][1].xr[i];\\n      l3_side.tt[gr][0].xr[i] = (l + r) * (Util.SQRT2 * 0.5);\\n      l3_side.tt[gr][1].xr[i] = (l - r) * (Util.SQRT2 * 0.5);\\n    }\\n  };\\n  /**\\n   * mt 6/99\\n   *\\n   * initializes cod_info, scalefac and xrpow\\n   *\\n   * returns 0 if all energies in xr are zero, else 1\\n   */\\n\\n\\n  function init_xrpow_core(cod_info, xrpow, upper, sum) {\\n    sum = 0;\\n\\n    for (var i = 0; i <= upper; ++i) {\\n      var tmp = Math.abs(cod_info.xr[i]);\\n      sum += tmp;\\n      xrpow[i] = Math.sqrt(tmp * Math.sqrt(tmp));\\n      if (xrpow[i] > cod_info.xrpow_max) cod_info.xrpow_max = xrpow[i];\\n    }\\n\\n    return sum;\\n  }\\n\\n  this.init_xrpow = function (gfc, cod_info, xrpow) {\\n    var sum = 0;\\n    var upper = 0 | cod_info.max_nonzero_coeff;\\n    assert(xrpow != null);\\n    cod_info.xrpow_max = 0;\\n    /*\\n     * check if there is some energy we have to quantize and calculate xrpow\\n     * matching our fresh scalefactors\\n     */\\n\\n    assert(0 <= upper && upper <= 575);\\n    Arrays.fill(xrpow, upper, 576, 0);\\n    sum = init_xrpow_core(cod_info, xrpow, upper, sum);\\n    /*\\n     * return 1 if we have something to quantize, else 0\\n     */\\n\\n    if (sum > 1E-20) {\\n      var j = 0;\\n      if ((gfc.substep_shaping & 2) != 0) j = 1;\\n\\n      for (var i = 0; i < cod_info.psymax; i++) {\\n        gfc.pseudohalf[i] = j;\\n      }\\n\\n      return true;\\n    }\\n\\n    Arrays.fill(cod_info.l3_enc, 0, 576, 0);\\n    return false;\\n  };\\n  /**\\n   * Gabriel Bouvigne feb/apr 2003<BR>\\n   * Analog silence detection in partitionned sfb21 or sfb12 for short blocks\\n   *\\n   * From top to bottom of sfb, changes to 0 coeffs which are below ath. It\\n   * stops on the first coeff higher than ath.\\n   */\\n\\n\\n  function psfb21_analogsilence(gfc, cod_info) {\\n    var ath = gfc.ATH;\\n    var xr = cod_info.xr;\\n\\n    if (cod_info.block_type != Encoder.SHORT_TYPE) {\\n      /* NORM, START or STOP type, but not SHORT blocks */\\n      var stop = false;\\n\\n      for (var gsfb = Encoder.PSFB21 - 1; gsfb >= 0 && !stop; gsfb--) {\\n        var start = gfc.scalefac_band.psfb21[gsfb];\\n        var end = gfc.scalefac_band.psfb21[gsfb + 1];\\n        var ath21 = qupvt.athAdjust(ath.adjust, ath.psfb21[gsfb], ath.floor);\\n        if (gfc.nsPsy.longfact[21] > 1e-12) ath21 *= gfc.nsPsy.longfact[21];\\n\\n        for (var j = end - 1; j >= start; j--) {\\n          if (Math.abs(xr[j]) < ath21) xr[j] = 0;else {\\n            stop = true;\\n            break;\\n          }\\n        }\\n      }\\n    } else {\\n      /* note: short blocks coeffs are reordered */\\n      for (var block = 0; block < 3; block++) {\\n        var stop = false;\\n\\n        for (var gsfb = Encoder.PSFB12 - 1; gsfb >= 0 && !stop; gsfb--) {\\n          var start = gfc.scalefac_band.s[12] * 3 + (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12]) * block + (gfc.scalefac_band.psfb12[gsfb] - gfc.scalefac_band.psfb12[0]);\\n          var end = start + (gfc.scalefac_band.psfb12[gsfb + 1] - gfc.scalefac_band.psfb12[gsfb]);\\n          var ath12 = qupvt.athAdjust(ath.adjust, ath.psfb12[gsfb], ath.floor);\\n          if (gfc.nsPsy.shortfact[12] > 1e-12) ath12 *= gfc.nsPsy.shortfact[12];\\n\\n          for (var j = end - 1; j >= start; j--) {\\n            if (Math.abs(xr[j]) < ath12) xr[j] = 0;else {\\n              stop = true;\\n              break;\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  this.init_outer_loop = function (gfc, cod_info) {\\n    /*\\n     * initialize fresh cod_info\\n     */\\n    cod_info.part2_3_length = 0;\\n    cod_info.big_values = 0;\\n    cod_info.count1 = 0;\\n    cod_info.global_gain = 210;\\n    cod_info.scalefac_compress = 0;\\n    /* mixed_block_flag, block_type was set in psymodel.c */\\n\\n    cod_info.table_select[0] = 0;\\n    cod_info.table_select[1] = 0;\\n    cod_info.table_select[2] = 0;\\n    cod_info.subblock_gain[0] = 0;\\n    cod_info.subblock_gain[1] = 0;\\n    cod_info.subblock_gain[2] = 0;\\n    cod_info.subblock_gain[3] = 0;\\n    /* this one is always 0 */\\n\\n    cod_info.region0_count = 0;\\n    cod_info.region1_count = 0;\\n    cod_info.preflag = 0;\\n    cod_info.scalefac_scale = 0;\\n    cod_info.count1table_select = 0;\\n    cod_info.part2_length = 0;\\n    cod_info.sfb_lmax = Encoder.SBPSY_l;\\n    cod_info.sfb_smin = Encoder.SBPSY_s;\\n    cod_info.psy_lmax = gfc.sfb21_extra ? Encoder.SBMAX_l : Encoder.SBPSY_l;\\n    cod_info.psymax = cod_info.psy_lmax;\\n    cod_info.sfbmax = cod_info.sfb_lmax;\\n    cod_info.sfbdivide = 11;\\n\\n    for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\\n      cod_info.width[sfb] = gfc.scalefac_band.l[sfb + 1] - gfc.scalefac_band.l[sfb];\\n      /* which is always 0. */\\n\\n      cod_info.window[sfb] = 3;\\n    }\\n\\n    if (cod_info.block_type == Encoder.SHORT_TYPE) {\\n      var ixwork = new_float(576);\\n      cod_info.sfb_smin = 0;\\n      cod_info.sfb_lmax = 0;\\n\\n      if (cod_info.mixed_block_flag != 0) {\\n        /*\\n         * MPEG-1: sfbs 0-7 long block, 3-12 short blocks MPEG-2(.5):\\n         * sfbs 0-5 long block, 3-12 short blocks\\n         */\\n        cod_info.sfb_smin = 3;\\n        cod_info.sfb_lmax = gfc.mode_gr * 2 + 4;\\n      }\\n\\n      cod_info.psymax = cod_info.sfb_lmax + 3 * ((gfc.sfb21_extra ? Encoder.SBMAX_s : Encoder.SBPSY_s) - cod_info.sfb_smin);\\n      cod_info.sfbmax = cod_info.sfb_lmax + 3 * (Encoder.SBPSY_s - cod_info.sfb_smin);\\n      cod_info.sfbdivide = cod_info.sfbmax - 18;\\n      cod_info.psy_lmax = cod_info.sfb_lmax;\\n      /* re-order the short blocks, for more efficient encoding below */\\n\\n      /* By Takehiro TOMINAGA */\\n\\n      /*\\n       * Within each scalefactor band, data is given for successive time\\n       * windows, beginning with window 0 and ending with window 2. Within\\n       * each window, the quantized values are then arranged in order of\\n       * increasing frequency...\\n       */\\n\\n      var ix = gfc.scalefac_band.l[cod_info.sfb_lmax];\\n      System.arraycopy(cod_info.xr, 0, ixwork, 0, 576);\\n\\n      for (var sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\\n        var start = gfc.scalefac_band.s[sfb];\\n        var end = gfc.scalefac_band.s[sfb + 1];\\n\\n        for (var window = 0; window < 3; window++) {\\n          for (var l = start; l < end; l++) {\\n            cod_info.xr[ix++] = ixwork[3 * l + window];\\n          }\\n        }\\n      }\\n\\n      var j = cod_info.sfb_lmax;\\n\\n      for (var sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\\n        cod_info.width[j] = cod_info.width[j + 1] = cod_info.width[j + 2] = gfc.scalefac_band.s[sfb + 1] - gfc.scalefac_band.s[sfb];\\n        cod_info.window[j] = 0;\\n        cod_info.window[j + 1] = 1;\\n        cod_info.window[j + 2] = 2;\\n        j += 3;\\n      }\\n    }\\n\\n    cod_info.count1bits = 0;\\n    cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[0][0];\\n    cod_info.slen[0] = 0;\\n    cod_info.slen[1] = 0;\\n    cod_info.slen[2] = 0;\\n    cod_info.slen[3] = 0;\\n    cod_info.max_nonzero_coeff = 575;\\n    /*\\n     * fresh scalefactors are all zero\\n     */\\n\\n    Arrays.fill(cod_info.scalefac, 0);\\n    psfb21_analogsilence(gfc, cod_info);\\n  };\\n\\n  function BinSearchDirection(ordinal) {\\n    this.ordinal = ordinal;\\n  }\\n\\n  BinSearchDirection.BINSEARCH_NONE = new BinSearchDirection(0);\\n  BinSearchDirection.BINSEARCH_UP = new BinSearchDirection(1);\\n  BinSearchDirection.BINSEARCH_DOWN = new BinSearchDirection(2);\\n  /**\\n   * author/date??\\n   *\\n   * binary step size search used by outer_loop to get a quantizer step size\\n   * to start with\\n   */\\n\\n  function bin_search_StepSize(gfc, cod_info, desired_rate, ch, xrpow) {\\n    var nBits;\\n    var CurrentStep = gfc.CurrentStep[ch];\\n    var flagGoneOver = false;\\n    var start = gfc.OldValue[ch];\\n    var Direction = BinSearchDirection.BINSEARCH_NONE;\\n    cod_info.global_gain = start;\\n    desired_rate -= cod_info.part2_length;\\n    assert(CurrentStep != 0);\\n\\n    for (;;) {\\n      var step;\\n      nBits = tk.count_bits(gfc, xrpow, cod_info, null);\\n      if (CurrentStep == 1 || nBits == desired_rate) break;\\n      /* nothing to adjust anymore */\\n\\n      if (nBits > desired_rate) {\\n        /* increase Quantize_StepSize */\\n        if (Direction == BinSearchDirection.BINSEARCH_DOWN) flagGoneOver = true;\\n        if (flagGoneOver) CurrentStep /= 2;\\n        Direction = BinSearchDirection.BINSEARCH_UP;\\n        step = CurrentStep;\\n      } else {\\n        /* decrease Quantize_StepSize */\\n        if (Direction == BinSearchDirection.BINSEARCH_UP) flagGoneOver = true;\\n        if (flagGoneOver) CurrentStep /= 2;\\n        Direction = BinSearchDirection.BINSEARCH_DOWN;\\n        step = -CurrentStep;\\n      }\\n\\n      cod_info.global_gain += step;\\n\\n      if (cod_info.global_gain < 0) {\\n        cod_info.global_gain = 0;\\n        flagGoneOver = true;\\n      }\\n\\n      if (cod_info.global_gain > 255) {\\n        cod_info.global_gain = 255;\\n        flagGoneOver = true;\\n      }\\n    }\\n\\n    assert(cod_info.global_gain >= 0);\\n    assert(cod_info.global_gain < 256);\\n\\n    while (nBits > desired_rate && cod_info.global_gain < 255) {\\n      cod_info.global_gain++;\\n      nBits = tk.count_bits(gfc, xrpow, cod_info, null);\\n    }\\n\\n    gfc.CurrentStep[ch] = start - cod_info.global_gain >= 4 ? 4 : 2;\\n    gfc.OldValue[ch] = cod_info.global_gain;\\n    cod_info.part2_3_length = nBits;\\n    return nBits;\\n  }\\n\\n  this.trancate_smallspectrums = function (gfc, gi, l3_xmin, work) {\\n    var distort = new_float(L3Side.SFBMAX);\\n    if (0 == (gfc.substep_shaping & 4) && gi.block_type == Encoder.SHORT_TYPE || (gfc.substep_shaping & 0x80) != 0) return;\\n    qupvt.calc_noise(gi, l3_xmin, distort, new CalcNoiseResult(), null);\\n\\n    for (var j = 0; j < 576; j++) {\\n      var xr = 0.0;\\n      if (gi.l3_enc[j] != 0) xr = Math.abs(gi.xr[j]);\\n      work[j] = xr;\\n    }\\n\\n    var j = 0;\\n    var sfb = 8;\\n    if (gi.block_type == Encoder.SHORT_TYPE) sfb = 6;\\n\\n    do {\\n      var allowedNoise, trancateThreshold;\\n      var nsame, start;\\n      var width = gi.width[sfb];\\n      j += width;\\n      if (distort[sfb] >= 1.0) continue;\\n      Arrays.sort(work, j - width, width);\\n      if (BitStream.EQ(work[j - 1], 0.0)) continue;\\n      /* all zero sfb */\\n\\n      allowedNoise = (1.0 - distort[sfb]) * l3_xmin[sfb];\\n      trancateThreshold = 0.0;\\n      start = 0;\\n\\n      do {\\n        var noise;\\n\\n        for (nsame = 1; start + nsame < width; nsame++) {\\n          if (BitStream.NEQ(work[start + j - width], work[start + j + nsame - width])) break;\\n        }\\n\\n        noise = work[start + j - width] * work[start + j - width] * nsame;\\n\\n        if (allowedNoise < noise) {\\n          if (start != 0) trancateThreshold = work[start + j - width - 1];\\n          break;\\n        }\\n\\n        allowedNoise -= noise;\\n        start += nsame;\\n      } while (start < width);\\n\\n      if (BitStream.EQ(trancateThreshold, 0.0)) continue;\\n\\n      do {\\n        if (Math.abs(gi.xr[j - width]) <= trancateThreshold) gi.l3_enc[j - width] = 0;\\n      } while (--width > 0);\\n    } while (++sfb < gi.psymax);\\n\\n    gi.part2_3_length = tk.noquant_count_bits(gfc, gi, null);\\n  };\\n  /**\\n   * author/date??\\n   *\\n   * Function: Returns zero if there is a scalefac which has not been\\n   * amplified. Otherwise it returns one.\\n   */\\n\\n\\n  function loop_break(cod_info) {\\n    for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\\n      if (cod_info.scalefac[sfb] + cod_info.subblock_gain[cod_info.window[sfb]] == 0) return false;\\n    }\\n\\n    return true;\\n  }\\n  /* mt 5/99: Function: Improved calc_noise for a single channel */\\n\\n\\n  function penalties(noise) {\\n    return Util.FAST_LOG10(0.368 + 0.632 * noise * noise * noise);\\n  }\\n  /**\\n   * author/date??\\n   *\\n   * several different codes to decide which quantization is better\\n   */\\n\\n\\n  function get_klemm_noise(distort, gi) {\\n    var klemm_noise = 1E-37;\\n\\n    for (var sfb = 0; sfb < gi.psymax; sfb++) {\\n      klemm_noise += penalties(distort[sfb]);\\n    }\\n\\n    return Math.max(1e-20, klemm_noise);\\n  }\\n\\n  function quant_compare(quant_comp, best, calc, gi, distort) {\\n    /**\\n     * noise is given in decibels (dB) relative to masking thesholds.<BR>\\n     *\\n     * over_noise: ??? (the previous comment is fully wrong)<BR>\\n     * tot_noise: ??? (the previous comment is fully wrong)<BR>\\n     * max_noise: max quantization noise\\n     */\\n    var better;\\n\\n    switch (quant_comp) {\\n      default:\\n      case 9:\\n        {\\n          if (best.over_count > 0) {\\n            /* there are distorted sfb */\\n            better = calc.over_SSD <= best.over_SSD;\\n            if (calc.over_SSD == best.over_SSD) better = calc.bits < best.bits;\\n          } else {\\n            /* no distorted sfb */\\n            better = calc.max_noise < 0 && calc.max_noise * 10 + calc.bits <= best.max_noise * 10 + best.bits;\\n          }\\n\\n          break;\\n        }\\n\\n      case 0:\\n        better = calc.over_count < best.over_count || calc.over_count == best.over_count && calc.over_noise < best.over_noise || calc.over_count == best.over_count && BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise;\\n        break;\\n\\n      case 8:\\n        calc.max_noise = get_klemm_noise(distort, gi);\\n      //$FALL-THROUGH$\\n\\n      case 1:\\n        better = calc.max_noise < best.max_noise;\\n        break;\\n\\n      case 2:\\n        better = calc.tot_noise < best.tot_noise;\\n        break;\\n\\n      case 3:\\n        better = calc.tot_noise < best.tot_noise && calc.max_noise < best.max_noise;\\n        break;\\n\\n      case 4:\\n        better = calc.max_noise <= 0.0 && best.max_noise > 0.2 || calc.max_noise <= 0.0 && best.max_noise < 0.0 && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise || calc.max_noise <= 0.0 && best.max_noise > 0.0 && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise + best.over_noise || calc.max_noise > 0.0 && best.max_noise > -0.05 && best.max_noise > calc.max_noise - 0.1 && calc.tot_noise + calc.over_noise < best.tot_noise + best.over_noise || calc.max_noise > 0.0 && best.max_noise > -0.1 && best.max_noise > calc.max_noise - 0.15 && calc.tot_noise + calc.over_noise + calc.over_noise < best.tot_noise + best.over_noise + best.over_noise;\\n        break;\\n\\n      case 5:\\n        better = calc.over_noise < best.over_noise || BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise;\\n        break;\\n\\n      case 6:\\n        better = calc.over_noise < best.over_noise || BitStream.EQ(calc.over_noise, best.over_noise) && (calc.max_noise < best.max_noise || BitStream.EQ(calc.max_noise, best.max_noise) && calc.tot_noise <= best.tot_noise);\\n        break;\\n\\n      case 7:\\n        better = calc.over_count < best.over_count || calc.over_noise < best.over_noise;\\n        break;\\n    }\\n\\n    if (best.over_count == 0) {\\n      /*\\n       * If no distorted bands, only use this quantization if it is\\n       * better, and if it uses less bits. Unfortunately, part2_3_length\\n       * is sometimes a poor estimator of the final size at low bitrates.\\n       */\\n      better = better && calc.bits < best.bits;\\n    }\\n\\n    return better;\\n  }\\n  /**\\n   * author/date??\\n   *\\n   * <PRE>\\n   *  Amplify the scalefactor bands that violate the masking threshold.\\n   *  See ISO 11172-3 Section C.1.5.4.3.5\\n   *\\n   *  distort[] = noise/masking\\n   *  distort[] > 1   ==> noise is not masked\\n   *  distort[] < 1   ==> noise is masked\\n   *  max_dist = maximum value of distort[]\\n   *\\n   *  Three algorithms:\\n   *  noise_shaping_amp\\n   *        0             Amplify all bands with distort[]>1.\\n   *\\n   *        1             Amplify all bands with distort[] >= max_dist^(.5);\\n   *                     ( 50% in the db scale)\\n   *\\n   *        2             Amplify first band with distort[] >= max_dist;\\n   *\\n   *\\n   *  For algorithms 0 and 1, if max_dist < 1, then amplify all bands\\n   *  with distort[] >= .95*max_dist.  This is to make sure we always\\n   *  amplify at least one band.\\n   * </PRE>\\n   */\\n\\n\\n  function amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine) {\\n    var gfc = gfp.internal_flags;\\n    var ifqstep34;\\n\\n    if (cod_info.scalefac_scale == 0) {\\n      ifqstep34 = 1.29683955465100964055;\\n      /* 2**(.75*.5) */\\n    } else {\\n      ifqstep34 = 1.68179283050742922612;\\n      /* 2**(.75*1) */\\n    }\\n    /* compute maximum value of distort[] */\\n\\n\\n    var trigger = 0;\\n\\n    for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\\n      if (trigger < distort[sfb]) trigger = distort[sfb];\\n    }\\n\\n    var noise_shaping_amp = gfc.noise_shaping_amp;\\n\\n    if (noise_shaping_amp == 3) {\\n      if (bRefine) noise_shaping_amp = 2;else noise_shaping_amp = 1;\\n    }\\n\\n    switch (noise_shaping_amp) {\\n      case 2:\\n        /* amplify exactly 1 band */\\n        break;\\n\\n      case 1:\\n        /* amplify bands within 50% of max (on db scale) */\\n        if (trigger > 1.0) trigger = Math.pow(trigger, .5);else trigger *= .95;\\n        break;\\n\\n      case 0:\\n      default:\\n        /* ISO algorithm. amplify all bands with distort>1 */\\n        if (trigger > 1.0) trigger = 1.0;else trigger *= .95;\\n        break;\\n    }\\n\\n    var j = 0;\\n\\n    for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\\n      var width = cod_info.width[sfb];\\n      var l;\\n      j += width;\\n      if (distort[sfb] < trigger) continue;\\n\\n      if ((gfc.substep_shaping & 2) != 0) {\\n        gfc.pseudohalf[sfb] = 0 == gfc.pseudohalf[sfb] ? 1 : 0;\\n        if (0 == gfc.pseudohalf[sfb] && gfc.noise_shaping_amp == 2) return;\\n      }\\n\\n      cod_info.scalefac[sfb]++;\\n\\n      for (l = -width; l < 0; l++) {\\n        xrpow[j + l] *= ifqstep34;\\n        if (xrpow[j + l] > cod_info.xrpow_max) cod_info.xrpow_max = xrpow[j + l];\\n      }\\n\\n      if (gfc.noise_shaping_amp == 2) return;\\n    }\\n  }\\n  /**\\n   * Takehiro Tominaga 2000-xx-xx\\n   *\\n   * turns on scalefac scale and adjusts scalefactors\\n   */\\n\\n\\n  function inc_scalefac_scale(cod_info, xrpow) {\\n    var ifqstep34 = 1.29683955465100964055;\\n    var j = 0;\\n\\n    for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\\n      var width = cod_info.width[sfb];\\n      var s = cod_info.scalefac[sfb];\\n      if (cod_info.preflag != 0) s += qupvt.pretab[sfb];\\n      j += width;\\n\\n      if ((s & 1) != 0) {\\n        s++;\\n\\n        for (var l = -width; l < 0; l++) {\\n          xrpow[j + l] *= ifqstep34;\\n          if (xrpow[j + l] > cod_info.xrpow_max) cod_info.xrpow_max = xrpow[j + l];\\n        }\\n      }\\n\\n      cod_info.scalefac[sfb] = s >> 1;\\n    }\\n\\n    cod_info.preflag = 0;\\n    cod_info.scalefac_scale = 1;\\n  }\\n  /**\\n   * Takehiro Tominaga 2000-xx-xx\\n   *\\n   * increases the subblock gain and adjusts scalefactors\\n   */\\n\\n\\n  function inc_subblock_gain(gfc, cod_info, xrpow) {\\n    var sfb;\\n    var scalefac = cod_info.scalefac;\\n    /* subbloc_gain can't do anything in the long block region */\\n\\n    for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\\n      if (scalefac[sfb] >= 16) return true;\\n    }\\n\\n    for (var window = 0; window < 3; window++) {\\n      var s1 = 0;\\n      var s2 = 0;\\n\\n      for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbdivide; sfb += 3) {\\n        if (s1 < scalefac[sfb]) s1 = scalefac[sfb];\\n      }\\n\\n      for (; sfb < cod_info.sfbmax; sfb += 3) {\\n        if (s2 < scalefac[sfb]) s2 = scalefac[sfb];\\n      }\\n\\n      if (s1 < 16 && s2 < 8) continue;\\n      if (cod_info.subblock_gain[window] >= 7) return true;\\n      /*\\n       * even though there is no scalefactor for sfb12 subblock gain\\n       * affects upper frequencies too, that's why we have to go up to\\n       * SBMAX_s\\n       */\\n\\n      cod_info.subblock_gain[window]++;\\n      var j = gfc.scalefac_band.l[cod_info.sfb_lmax];\\n\\n      for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbmax; sfb += 3) {\\n        var amp;\\n        var width = cod_info.width[sfb];\\n        var s = scalefac[sfb];\\n        assert(s >= 0);\\n        s = s - (4 >> cod_info.scalefac_scale);\\n\\n        if (s >= 0) {\\n          scalefac[sfb] = s;\\n          j += width * 3;\\n          continue;\\n        }\\n\\n        scalefac[sfb] = 0;\\n        {\\n          var gain = 210 + (s << cod_info.scalefac_scale + 1);\\n          amp = qupvt.IPOW20(gain);\\n        }\\n        j += width * (window + 1);\\n\\n        for (var l = -width; l < 0; l++) {\\n          xrpow[j + l] *= amp;\\n          if (xrpow[j + l] > cod_info.xrpow_max) cod_info.xrpow_max = xrpow[j + l];\\n        }\\n\\n        j += width * (3 - window - 1);\\n      }\\n\\n      {\\n        var amp = qupvt.IPOW20(202);\\n        j += cod_info.width[sfb] * (window + 1);\\n\\n        for (var l = -cod_info.width[sfb]; l < 0; l++) {\\n          xrpow[j + l] *= amp;\\n          if (xrpow[j + l] > cod_info.xrpow_max) cod_info.xrpow_max = xrpow[j + l];\\n        }\\n      }\\n    }\\n\\n    return false;\\n  }\\n  /**\\n   * <PRE>\\n   *  Takehiro Tominaga /date??\\n   *  Robert Hegemann 2000-09-06: made a function of it\\n   *\\n   *  amplifies scalefactor bands,\\n   *   - if all are already amplified returns 0\\n   *   - if some bands are amplified too much:\\n   *      * try to increase scalefac_scale\\n   *      * if already scalefac_scale was set\\n   *          try on short blocks to increase subblock gain\\n   * </PRE>\\n   */\\n\\n\\n  function balance_noise(gfp, cod_info, distort, xrpow, bRefine) {\\n    var gfc = gfp.internal_flags;\\n    amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine);\\n    /*\\n     * check to make sure we have not amplified too much loop_break returns\\n     * 0 if there is an unamplified scalefac scale_bitcount returns 0 if no\\n     * scalefactors are too large\\n     */\\n\\n    var status = loop_break(cod_info);\\n    if (status) return false;\\n    /* all bands amplified */\\n\\n    /*\\n     * not all scalefactors have been amplified. so these scalefacs are\\n     * possibly valid. encode them:\\n     */\\n\\n    if (gfc.mode_gr == 2) status = tk.scale_bitcount(cod_info);else status = tk.scale_bitcount_lsf(gfc, cod_info);\\n    if (!status) return true;\\n    /* amplified some bands not exceeding limits */\\n\\n    /*\\n     * some scalefactors are too large. lets try setting scalefac_scale=1\\n     */\\n\\n    if (gfc.noise_shaping > 1) {\\n      Arrays.fill(gfc.pseudohalf, 0);\\n\\n      if (0 == cod_info.scalefac_scale) {\\n        inc_scalefac_scale(cod_info, xrpow);\\n        status = false;\\n      } else {\\n        if (cod_info.block_type == Encoder.SHORT_TYPE && gfc.subblock_gain > 0) {\\n          status = inc_subblock_gain(gfc, cod_info, xrpow) || loop_break(cod_info);\\n        }\\n      }\\n    }\\n\\n    if (!status) {\\n      if (gfc.mode_gr == 2) status = tk.scale_bitcount(cod_info);else status = tk.scale_bitcount_lsf(gfc, cod_info);\\n    }\\n\\n    return !status;\\n  }\\n  /**\\n   * <PRE>\\n   *  Function: The outer iteration loop controls the masking conditions\\n   *  of all scalefactorbands. It computes the best scalefac and\\n   *  global gain. This module calls the inner iteration loop\\n   *\\n   *  mt 5/99 completely rewritten to allow for bit reservoir control,\\n   *  mid/side channels with L/R or mid/side masking thresholds,\\n   *  and chooses best quantization instead of last quantization when\\n   *  no distortion free quantization can be found.\\n   *\\n   *  added VBR support mt 5/99\\n   *\\n   *  some code shuffle rh 9/00\\n   * </PRE>\\n   *\\n   * @param l3_xmin\\n   *            allowed distortion\\n   * @param xrpow\\n   *            coloured magnitudes of spectral\\n   * @param targ_bits\\n   *            maximum allowed bits\\n   */\\n\\n\\n  this.outer_loop = function (gfp, cod_info, l3_xmin, xrpow, ch, targ_bits) {\\n    var gfc = gfp.internal_flags;\\n    var cod_info_w = new GrInfo();\\n    var save_xrpow = new_float(576);\\n    var distort = new_float(L3Side.SFBMAX);\\n    var best_noise_info = new CalcNoiseResult();\\n    var better;\\n    var prev_noise = new CalcNoiseData();\\n    var best_part2_3_length = 9999999;\\n    var bEndOfSearch = false;\\n    var bRefine = false;\\n    var best_ggain_pass1 = 0;\\n    bin_search_StepSize(gfc, cod_info, targ_bits, ch, xrpow);\\n    if (0 == gfc.noise_shaping)\\n      /* fast mode, no noise shaping, we are ready */\\n      return 100;\\n    /* default noise_info.over_count */\\n\\n    /* compute the distortion in this quantization */\\n\\n    /* coefficients and thresholds both l/r (or both mid/side) */\\n\\n    qupvt.calc_noise(cod_info, l3_xmin, distort, best_noise_info, prev_noise);\\n    best_noise_info.bits = cod_info.part2_3_length;\\n    cod_info_w.assign(cod_info);\\n    var age = 0;\\n    System.arraycopy(xrpow, 0, save_xrpow, 0, 576);\\n\\n    while (!bEndOfSearch) {\\n      /* BEGIN MAIN LOOP */\\n      do {\\n        var noise_info = new CalcNoiseResult();\\n        var search_limit;\\n        var maxggain = 255;\\n        /*\\n         * When quantization with no distorted bands is found, allow up\\n         * to X new unsuccesful tries in serial. This gives us more\\n         * possibilities for different quant_compare modes. Much more\\n         * than 3 makes not a big difference, it is only slower.\\n         */\\n\\n        if ((gfc.substep_shaping & 2) != 0) {\\n          search_limit = 20;\\n        } else {\\n          search_limit = 3;\\n        }\\n        /*\\n         * Check if the last scalefactor band is distorted. in VBR mode\\n         * we can't get rid of the distortion, so quit now and VBR mode\\n         * will try again with more bits. (makes a 10% speed increase,\\n         * the files I tested were binary identical, 2000/05/20 Robert\\n         * Hegemann) distort[] > 1 means noise > allowed noise\\n         */\\n\\n\\n        if (gfc.sfb21_extra) {\\n          if (distort[cod_info_w.sfbmax] > 1.0) break;\\n          if (cod_info_w.block_type == Encoder.SHORT_TYPE && (distort[cod_info_w.sfbmax + 1] > 1.0 || distort[cod_info_w.sfbmax + 2] > 1.0)) break;\\n        }\\n        /* try a new scalefactor conbination on cod_info_w */\\n\\n\\n        if (!balance_noise(gfp, cod_info_w, distort, xrpow, bRefine)) break;\\n        if (cod_info_w.scalefac_scale != 0) maxggain = 254;\\n        /*\\n         * inner_loop starts with the initial quantization step computed\\n         * above and slowly increases until the bits < huff_bits. Thus\\n         * it is important not to start with too large of an inital\\n         * quantization step. Too small is ok, but inner_loop will take\\n         * longer\\n         */\\n\\n        var huff_bits = targ_bits - cod_info_w.part2_length;\\n        if (huff_bits <= 0) break;\\n        /*\\n         * increase quantizer stepsize until needed bits are below\\n         * maximum\\n         */\\n\\n        while ((cod_info_w.part2_3_length = tk.count_bits(gfc, xrpow, cod_info_w, prev_noise)) > huff_bits && cod_info_w.global_gain <= maxggain) {\\n          cod_info_w.global_gain++;\\n        }\\n\\n        if (cod_info_w.global_gain > maxggain) break;\\n\\n        if (best_noise_info.over_count == 0) {\\n          while ((cod_info_w.part2_3_length = tk.count_bits(gfc, xrpow, cod_info_w, prev_noise)) > best_part2_3_length && cod_info_w.global_gain <= maxggain) {\\n            cod_info_w.global_gain++;\\n          }\\n\\n          if (cod_info_w.global_gain > maxggain) break;\\n        }\\n        /* compute the distortion in this quantization */\\n\\n\\n        qupvt.calc_noise(cod_info_w, l3_xmin, distort, noise_info, prev_noise);\\n        noise_info.bits = cod_info_w.part2_3_length;\\n        /*\\n         * check if this quantization is better than our saved\\n         * quantization\\n         */\\n\\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\\n          // NORM, START or STOP type\\n          better = gfp.quant_comp;\\n        } else better = gfp.quant_comp_short;\\n\\n        better = quant_compare(better, best_noise_info, noise_info, cod_info_w, distort) ? 1 : 0;\\n        /* save data so we can restore this quantization later */\\n\\n        if (better != 0) {\\n          best_part2_3_length = cod_info.part2_3_length;\\n          best_noise_info = noise_info;\\n          cod_info.assign(cod_info_w);\\n          age = 0;\\n          /* save data so we can restore this quantization later */\\n\\n          /* store for later reuse */\\n\\n          System.arraycopy(xrpow, 0, save_xrpow, 0, 576);\\n        } else {\\n          /* early stop? */\\n          if (gfc.full_outer_loop == 0) {\\n            if (++age > search_limit && best_noise_info.over_count == 0) break;\\n            if (gfc.noise_shaping_amp == 3 && bRefine && age > 30) break;\\n            if (gfc.noise_shaping_amp == 3 && bRefine && cod_info_w.global_gain - best_ggain_pass1 > 15) break;\\n          }\\n        }\\n      } while (cod_info_w.global_gain + cod_info_w.scalefac_scale < 255);\\n\\n      if (gfc.noise_shaping_amp == 3) {\\n        if (!bRefine) {\\n          /* refine search */\\n          cod_info_w.assign(cod_info);\\n          System.arraycopy(save_xrpow, 0, xrpow, 0, 576);\\n          age = 0;\\n          best_ggain_pass1 = cod_info_w.global_gain;\\n          bRefine = true;\\n        } else {\\n          /* search already refined, stop */\\n          bEndOfSearch = true;\\n        }\\n      } else {\\n        bEndOfSearch = true;\\n      }\\n    }\\n\\n    assert(cod_info.global_gain + cod_info.scalefac_scale <= 255);\\n    /*\\n     * finish up\\n     */\\n\\n    if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\\n      /* restore for reuse on next try */\\n      System.arraycopy(save_xrpow, 0, xrpow, 0, 576);\\n      /*\\n       * do the 'substep shaping'\\n       */\\n    else if ((gfc.substep_shaping & 1) != 0) trancate_smallspectrums(gfc, cod_info, l3_xmin, xrpow);\\n    return best_noise_info.over_count;\\n  };\\n  /**\\n   * Robert Hegemann 2000-09-06\\n   *\\n   * update reservoir status after FINAL quantization/bitrate\\n   */\\n\\n\\n  this.iteration_finish_one = function (gfc, gr, ch) {\\n    var l3_side = gfc.l3_side;\\n    var cod_info = l3_side.tt[gr][ch];\\n    /*\\n     * try some better scalefac storage\\n     */\\n\\n    tk.best_scalefac_store(gfc, gr, ch, l3_side);\\n    /*\\n     * best huffman_divide may save some bits too\\n     */\\n\\n    if (gfc.use_best_huffman == 1) tk.best_huffman_divide(gfc, cod_info);\\n    /*\\n     * update reservoir status after FINAL quantization/bitrate\\n     */\\n\\n    rv.ResvAdjust(gfc, cod_info);\\n  };\\n  /**\\n   *\\n   * 2000-09-04 Robert Hegemann\\n   *\\n   * @param l3_xmin\\n   *            allowed distortion of the scalefactor\\n   * @param xrpow\\n   *            coloured magnitudes of spectral values\\n   */\\n\\n\\n  this.VBR_encode_granule = function (gfp, cod_info, l3_xmin, xrpow, ch, min_bits, max_bits) {\\n    var gfc = gfp.internal_flags;\\n    var bst_cod_info = new GrInfo();\\n    var bst_xrpow = new_float(576);\\n    var Max_bits = max_bits;\\n    var real_bits = max_bits + 1;\\n    var this_bits = (max_bits + min_bits) / 2;\\n    var dbits,\\n        over,\\n        found = 0;\\n    var sfb21_extra = gfc.sfb21_extra;\\n    assert(Max_bits <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\\n    Arrays.fill(bst_cod_info.l3_enc, 0);\\n    /*\\n     * search within round about 40 bits of optimal\\n     */\\n\\n    do {\\n      assert(this_bits >= min_bits);\\n      assert(this_bits <= max_bits);\\n      assert(min_bits <= max_bits);\\n      if (this_bits > Max_bits - 42) gfc.sfb21_extra = false;else gfc.sfb21_extra = sfb21_extra;\\n      over = outer_loop(gfp, cod_info, l3_xmin, xrpow, ch, this_bits);\\n      /*\\n       * is quantization as good as we are looking for ? in this case: is\\n       * no scalefactor band distorted?\\n       */\\n\\n      if (over <= 0) {\\n        found = 1;\\n        /*\\n         * now we know it can be done with \\\"real_bits\\\" and maybe we can\\n         * skip some iterations\\n         */\\n\\n        real_bits = cod_info.part2_3_length;\\n        /*\\n         * store best quantization so far\\n         */\\n\\n        bst_cod_info.assign(cod_info);\\n        System.arraycopy(xrpow, 0, bst_xrpow, 0, 576);\\n        /*\\n         * try with fewer bits\\n         */\\n\\n        max_bits = real_bits - 32;\\n        dbits = max_bits - min_bits;\\n        this_bits = (max_bits + min_bits) / 2;\\n      } else {\\n        /*\\n         * try with more bits\\n         */\\n        min_bits = this_bits + 32;\\n        dbits = max_bits - min_bits;\\n        this_bits = (max_bits + min_bits) / 2;\\n\\n        if (found != 0) {\\n          found = 2;\\n          /*\\n           * start again with best quantization so far\\n           */\\n\\n          cod_info.assign(bst_cod_info);\\n          System.arraycopy(bst_xrpow, 0, xrpow, 0, 576);\\n        }\\n      }\\n    } while (dbits > 12);\\n\\n    gfc.sfb21_extra = sfb21_extra;\\n    /*\\n     * found=0 => nothing found, use last one found=1 => we just found the\\n     * best and left the loop found=2 => we restored a good one and have now\\n     * l3_enc to restore too\\n     */\\n\\n    if (found == 2) {\\n      System.arraycopy(bst_cod_info.l3_enc, 0, cod_info.l3_enc, 0, 576);\\n    }\\n\\n    assert(cod_info.part2_3_length <= Max_bits);\\n  };\\n  /**\\n   * Robert Hegemann 2000-09-05\\n   *\\n   * calculates * how many bits are available for analog silent granules * how\\n   * many bits to use for the lowest allowed bitrate * how many bits each\\n   * bitrate would provide\\n   */\\n\\n\\n  this.get_framebits = function (gfp, frameBits) {\\n    var gfc = gfp.internal_flags;\\n    /*\\n     * always use at least this many bits per granule per channel unless we\\n     * detect analog silence, see below\\n     */\\n\\n    gfc.bitrate_index = gfc.VBR_min_bitrate;\\n    var bitsPerFrame = bs.getframebits(gfp);\\n    /*\\n     * bits for analog silence\\n     */\\n\\n    gfc.bitrate_index = 1;\\n    bitsPerFrame = bs.getframebits(gfp);\\n\\n    for (var i = 1; i <= gfc.VBR_max_bitrate; i++) {\\n      gfc.bitrate_index = i;\\n      var mb = new MeanBits(bitsPerFrame);\\n      frameBits[i] = rv.ResvFrameBegin(gfp, mb);\\n      bitsPerFrame = mb.bits;\\n    }\\n  };\\n  /* RH: this one needs to be overhauled sometime */\\n\\n  /**\\n   * <PRE>\\n   *  2000-09-04 Robert Hegemann\\n   *\\n   *  * converts LR to MS coding when necessary\\n   *  * calculates allowed/adjusted quantization noise amounts\\n   *  * detects analog silent frames\\n   *\\n   *  some remarks:\\n   *  - lower masking depending on Quality setting\\n   *  - quality control together with adjusted ATH MDCT scaling\\n   *    on lower quality setting allocate more noise from\\n   *    ATH masking, and on higher quality setting allocate\\n   *    less noise from ATH masking.\\n   *  - experiments show that going more than 2dB over GPSYCHO's\\n   *    limits ends up in very annoying artefacts\\n   * </PRE>\\n   */\\n\\n\\n  this.VBR_old_prepare = function (gfp, pe, ms_ener_ratio, ratio, l3_xmin, frameBits, min_bits, max_bits, bands) {\\n    var gfc = gfp.internal_flags;\\n    var masking_lower_db,\\n        adjust = 0.0;\\n    var analog_silence = 1;\\n    var bits = 0;\\n    gfc.bitrate_index = gfc.VBR_max_bitrate;\\n    var avg = rv.ResvFrameBegin(gfp, new MeanBits(0)) / gfc.mode_gr;\\n    get_framebits(gfp, frameBits);\\n\\n    for (var gr = 0; gr < gfc.mode_gr; gr++) {\\n      var mxb = qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\\n\\n      if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\\n        ms_convert(gfc.l3_side, gr);\\n        qupvt.reduce_side(max_bits[gr], ms_ener_ratio[gr], avg, mxb);\\n      }\\n\\n      for (var ch = 0; ch < gfc.channels_out; ++ch) {\\n        var cod_info = gfc.l3_side.tt[gr][ch];\\n\\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\\n          // NORM, START or STOP type\\n          adjust = 1.28 / (1 + Math.exp(3.5 - pe[gr][ch] / 300.)) - 0.05;\\n          masking_lower_db = gfc.PSY.mask_adjust - adjust;\\n        } else {\\n          adjust = 2.56 / (1 + Math.exp(3.5 - pe[gr][ch] / 300.)) - 0.14;\\n          masking_lower_db = gfc.PSY.mask_adjust_short - adjust;\\n        }\\n\\n        gfc.masking_lower = Math.pow(10.0, masking_lower_db * 0.1);\\n        init_outer_loop(gfc, cod_info);\\n        bands[gr][ch] = qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info, l3_xmin[gr][ch]);\\n        if (bands[gr][ch] != 0) analog_silence = 0;\\n        min_bits[gr][ch] = 126;\\n        bits += max_bits[gr][ch];\\n      }\\n    }\\n\\n    for (var gr = 0; gr < gfc.mode_gr; gr++) {\\n      for (var ch = 0; ch < gfc.channels_out; ch++) {\\n        if (bits > frameBits[gfc.VBR_max_bitrate]) {\\n          max_bits[gr][ch] *= frameBits[gfc.VBR_max_bitrate];\\n          max_bits[gr][ch] /= bits;\\n        }\\n\\n        if (min_bits[gr][ch] > max_bits[gr][ch]) min_bits[gr][ch] = max_bits[gr][ch];\\n      }\\n      /* for ch */\\n\\n    }\\n    /* for gr */\\n\\n\\n    return analog_silence;\\n  };\\n\\n  this.bitpressure_strategy = function (gfc, l3_xmin, min_bits, max_bits) {\\n    for (var gr = 0; gr < gfc.mode_gr; gr++) {\\n      for (var ch = 0; ch < gfc.channels_out; ch++) {\\n        var gi = gfc.l3_side.tt[gr][ch];\\n        var pxmin = l3_xmin[gr][ch];\\n        var pxminPos = 0;\\n\\n        for (var sfb = 0; sfb < gi.psy_lmax; sfb++) {\\n          pxmin[pxminPos++] *= 1. + .029 * sfb * sfb / Encoder.SBMAX_l / Encoder.SBMAX_l;\\n        }\\n\\n        if (gi.block_type == Encoder.SHORT_TYPE) {\\n          for (var sfb = gi.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\\n            pxmin[pxminPos++] *= 1. + .029 * sfb * sfb / Encoder.SBMAX_s / Encoder.SBMAX_s;\\n            pxmin[pxminPos++] *= 1. + .029 * sfb * sfb / Encoder.SBMAX_s / Encoder.SBMAX_s;\\n            pxmin[pxminPos++] *= 1. + .029 * sfb * sfb / Encoder.SBMAX_s / Encoder.SBMAX_s;\\n          }\\n        }\\n\\n        max_bits[gr][ch] = 0 | Math.max(min_bits[gr][ch], 0.9 * max_bits[gr][ch]);\\n      }\\n    }\\n  };\\n\\n  this.VBR_new_prepare = function (gfp, pe, ratio, l3_xmin, frameBits, max_bits) {\\n    var gfc = gfp.internal_flags;\\n    var analog_silence = 1;\\n    var avg = 0,\\n        bits = 0;\\n    var maximum_framebits;\\n\\n    if (!gfp.free_format) {\\n      gfc.bitrate_index = gfc.VBR_max_bitrate;\\n      var mb = new MeanBits(avg);\\n      rv.ResvFrameBegin(gfp, mb);\\n      avg = mb.bits;\\n      get_framebits(gfp, frameBits);\\n      maximum_framebits = frameBits[gfc.VBR_max_bitrate];\\n    } else {\\n      gfc.bitrate_index = 0;\\n      var mb = new MeanBits(avg);\\n      maximum_framebits = rv.ResvFrameBegin(gfp, mb);\\n      avg = mb.bits;\\n      frameBits[0] = maximum_framebits;\\n    }\\n\\n    for (var gr = 0; gr < gfc.mode_gr; gr++) {\\n      qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\\n\\n      if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\\n        ms_convert(gfc.l3_side, gr);\\n      }\\n\\n      for (var ch = 0; ch < gfc.channels_out; ++ch) {\\n        var cod_info = gfc.l3_side.tt[gr][ch];\\n        gfc.masking_lower = Math.pow(10.0, gfc.PSY.mask_adjust * 0.1);\\n        init_outer_loop(gfc, cod_info);\\n        if (0 != qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info, l3_xmin[gr][ch])) analog_silence = 0;\\n        bits += max_bits[gr][ch];\\n      }\\n    }\\n\\n    for (var gr = 0; gr < gfc.mode_gr; gr++) {\\n      for (var ch = 0; ch < gfc.channels_out; ch++) {\\n        if (bits > maximum_framebits) {\\n          max_bits[gr][ch] *= maximum_framebits;\\n          max_bits[gr][ch] /= bits;\\n        }\\n      }\\n      /* for ch */\\n\\n    }\\n    /* for gr */\\n\\n\\n    return analog_silence;\\n  };\\n  /**\\n   * calculates target bits for ABR encoding\\n   *\\n   * mt 2000/05/31\\n   */\\n\\n\\n  this.calc_target_bits = function (gfp, pe, ms_ener_ratio, targ_bits, analog_silence_bits, max_frame_bits) {\\n    var gfc = gfp.internal_flags;\\n    var l3_side = gfc.l3_side;\\n    var res_factor;\\n    var gr,\\n        ch,\\n        totbits,\\n        mean_bits = 0;\\n    gfc.bitrate_index = gfc.VBR_max_bitrate;\\n    var mb = new MeanBits(mean_bits);\\n    max_frame_bits[0] = rv.ResvFrameBegin(gfp, mb);\\n    mean_bits = mb.bits;\\n    gfc.bitrate_index = 1;\\n    mean_bits = bs.getframebits(gfp) - gfc.sideinfo_len * 8;\\n    analog_silence_bits[0] = mean_bits / (gfc.mode_gr * gfc.channels_out);\\n    mean_bits = gfp.VBR_mean_bitrate_kbps * gfp.framesize * 1000;\\n    if ((gfc.substep_shaping & 1) != 0) mean_bits *= 1.09;\\n    mean_bits /= gfp.out_samplerate;\\n    mean_bits -= gfc.sideinfo_len * 8;\\n    mean_bits /= gfc.mode_gr * gfc.channels_out;\\n    /**\\n     * <PRE>\\n     *           res_factor is the percentage of the target bitrate that should\\n     *           be used on average.  the remaining bits are added to the\\n     *           bitreservoir and used for difficult to encode frames.\\n     *\\n     *           Since we are tracking the average bitrate, we should adjust\\n     *           res_factor \\\"on the fly\\\", increasing it if the average bitrate\\n     *           is greater than the requested bitrate, and decreasing it\\n     *           otherwise.  Reasonable ranges are from .9 to 1.0\\n     *\\n     *           Until we get the above suggestion working, we use the following\\n     *           tuning:\\n     *           compression ratio    res_factor\\n     *           5.5  (256kbps)         1.0      no need for bitreservoir\\n     *           11   (128kbps)         .93      7% held for reservoir\\n     *\\n     *           with linear interpolation for other values.\\n     * </PRE>\\n     */\\n\\n    res_factor = .93 + .07 * (11.0 - gfp.compression_ratio) / (11.0 - 5.5);\\n    if (res_factor < .90) res_factor = .90;\\n    if (res_factor > 1.00) res_factor = 1.00;\\n\\n    for (gr = 0; gr < gfc.mode_gr; gr++) {\\n      var sum = 0;\\n\\n      for (ch = 0; ch < gfc.channels_out; ch++) {\\n        targ_bits[gr][ch] = int(res_factor * mean_bits);\\n\\n        if (pe[gr][ch] > 700) {\\n          var add_bits = int((pe[gr][ch] - 700) / 1.4);\\n          var cod_info = l3_side.tt[gr][ch];\\n          targ_bits[gr][ch] = int(res_factor * mean_bits);\\n          /* short blocks use a little extra, no matter what the pe */\\n\\n          if (cod_info.block_type == Encoder.SHORT_TYPE) {\\n            if (add_bits < mean_bits / 2) add_bits = mean_bits / 2;\\n          }\\n          /* at most increase bits by 1.5*average */\\n\\n\\n          if (add_bits > mean_bits * 3 / 2) add_bits = mean_bits * 3 / 2;else if (add_bits < 0) add_bits = 0;\\n          targ_bits[gr][ch] += add_bits;\\n        }\\n\\n        if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL) {\\n          targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\\n        }\\n\\n        sum += targ_bits[gr][ch];\\n      }\\n      /* for ch */\\n\\n\\n      if (sum > LameInternalFlags.MAX_BITS_PER_GRANULE) {\\n        for (ch = 0; ch < gfc.channels_out; ++ch) {\\n          targ_bits[gr][ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\\n          targ_bits[gr][ch] /= sum;\\n        }\\n      }\\n    }\\n    /* for gr */\\n\\n\\n    if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) for (gr = 0; gr < gfc.mode_gr; gr++) {\\n      qupvt.reduce_side(targ_bits[gr], ms_ener_ratio[gr], mean_bits * gfc.channels_out, LameInternalFlags.MAX_BITS_PER_GRANULE);\\n    }\\n    /*\\n     * sum target bits\\n     */\\n\\n    totbits = 0;\\n\\n    for (gr = 0; gr < gfc.mode_gr; gr++) {\\n      for (ch = 0; ch < gfc.channels_out; ch++) {\\n        if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL) targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\\n        totbits += targ_bits[gr][ch];\\n      }\\n    }\\n    /*\\n     * repartion target bits if needed\\n     */\\n\\n\\n    if (totbits > max_frame_bits[0]) {\\n      for (gr = 0; gr < gfc.mode_gr; gr++) {\\n        for (ch = 0; ch < gfc.channels_out; ch++) {\\n          targ_bits[gr][ch] *= max_frame_bits[0];\\n          targ_bits[gr][ch] /= totbits;\\n        }\\n      }\\n    }\\n  };\\n}\\n\\nmodule.exports = Quantize;\",\"function VBRQuantize() {\\n  var qupvt;\\n  var tak;\\n\\n  this.setModules = function (_qupvt, _tk) {\\n    qupvt = _qupvt;\\n    tak = _tk;\\n  }; //TODO\\n\\n}\\n\\nmodule.exports = VBRQuantize;\",\"//package mp3;\\nfunction CalcNoiseResult() {\\n  /**\\n   * sum of quantization noise > masking\\n   */\\n  this.over_noise = 0.;\\n  /**\\n   * sum of all quantization noise\\n   */\\n\\n  this.tot_noise = 0.;\\n  /**\\n   * max quantization noise\\n   */\\n\\n  this.max_noise = 0.;\\n  /**\\n   * number of quantization noise > masking\\n   */\\n\\n  this.over_count = 0;\\n  /**\\n   * SSD-like cost of distorted bands\\n   */\\n\\n  this.over_SSD = 0;\\n  this.bits = 0;\\n}\\n\\nmodule.exports = CalcNoiseResult;\",\"var common = require('./common.js');\\n\\nvar new_float = common.new_float;\\nvar new_int = common.new_int;\\nvar assert = common.assert;\\n\\nfunction CalcNoiseData() {\\n  this.global_gain = 0;\\n  this.sfb_count1 = 0;\\n  this.step = new_int(39);\\n  this.noise = new_float(39);\\n  this.noise_log = new_float(39);\\n}\\n\\nmodule.exports = CalcNoiseData;\",\"/*\\n *      bit reservoir source file\\n *\\n *      Copyright (c) 1999-2000 Mark Taylor\\n *\\n * This library is free software; you can redistribute it and/or\\n * modify it under the terms of the GNU Lesser General Public\\n * License as published by the Free Software Foundation; either\\n * version 2 of the License, or (at your option) any later version.\\n *\\n * This library is distributed in the hope that it will be useful,\\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\\n * Library General Public License for more details.\\n *\\n * You should have received a copy of the GNU Lesser General Public\\n * License along with this library; if not, write to the\\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\\n * Boston, MA 02111-1307, USA.\\n */\\n\\n/* $Id: Reservoir.java,v 1.9 2011/05/24 20:48:06 kenchis Exp $ */\\n//package mp3;\\n\\n/**\\n * ResvFrameBegin:<BR>\\n * Called (repeatedly) at the beginning of a frame. Updates the maximum size of\\n * the reservoir, and checks to make sure main_data_begin was set properly by\\n * the formatter<BR>\\n * Background information:\\n * \\n * This is the original text from the ISO standard. Because of sooo many bugs\\n * and irritations correcting comments are added in brackets []. A '^W' means\\n * you should remove the last word.\\n * \\n * <PRE>\\n *  1. The following rule can be used to calculate the maximum\\n *     number of bits used for one granule [^W frame]:<BR>\\n *     At the highest possible bitrate of Layer III (320 kbps\\n *     per stereo signal [^W^W^W], 48 kHz) the frames must be of\\n *     [^W^W^W are designed to have] constant length, i.e.\\n *     one buffer [^W^W the frame] length is:<BR>\\n * \\n *         320 kbps * 1152/48 kHz = 7680 bit = 960 byte\\n * \\n *     This value is used as the maximum buffer per channel [^W^W] at\\n *     lower bitrates [than 320 kbps]. At 64 kbps mono or 128 kbps\\n *     stereo the main granule length is 64 kbps * 576/48 kHz = 768 bit\\n *     [per granule and channel] at 48 kHz sampling frequency.\\n *     This means that there is a maximum deviation (short time buffer\\n *     [= reservoir]) of 7680 - 2*2*768 = 4608 bits is allowed at 64 kbps.\\n *     The actual deviation is equal to the number of bytes [with the\\n *     meaning of octets] denoted by the main_data_end offset pointer.\\n *     The actual maximum deviation is (2^9-1)*8 bit = 4088 bits\\n *     [for MPEG-1 and (2^8-1)*8 bit for MPEG-2, both are hard limits].\\n *     ... The xchange of buffer bits between the left and right channel\\n *     is allowed without restrictions [exception: dual channel].\\n *     Because of the [constructed] constraint on the buffer size\\n *     main_data_end is always set to 0 in the case of bit_rate_index==14,\\n *     i.e. data rate 320 kbps per stereo signal [^W^W^W]. In this case\\n *     all data are allocated between adjacent header [^W sync] words\\n *     [, i.e. there is no buffering at all].\\n * </PRE>\\n */\\nvar common = require('./common.js');\\n\\nvar assert = common.assert;\\n\\nfunction Reservoir() {\\n  var bs;\\n\\n  this.setModules = function (_bs) {\\n    bs = _bs;\\n  };\\n\\n  this.ResvFrameBegin = function (gfp, mean_bits) {\\n    var gfc = gfp.internal_flags;\\n    var maxmp3buf;\\n    var l3_side = gfc.l3_side;\\n    var frameLength = bs.getframebits(gfp);\\n    mean_bits.bits = (frameLength - gfc.sideinfo_len * 8) / gfc.mode_gr;\\n    /**\\n     * <PRE>\\n     *  Meaning of the variables:\\n     *      resvLimit: (0, 8, ..., 8*255 (MPEG-2), 8*511 (MPEG-1))\\n     *          Number of bits can be stored in previous frame(s) due to\\n     *          counter size constaints\\n     *      maxmp3buf: ( ??? ... 8*1951 (MPEG-1 and 2), 8*2047 (MPEG-2.5))\\n     *          Number of bits allowed to encode one frame (you can take 8*511 bit\\n     *          from the bit reservoir and at most 8*1440 bit from the current\\n     *          frame (320 kbps, 32 kHz), so 8*1951 bit is the largest possible\\n     *          value for MPEG-1 and -2)\\n     * \\n     *          maximum allowed granule/channel size times 4 = 8*2047 bits.,\\n     *          so this is the absolute maximum supported by the format.\\n     * \\n     * \\n     *      fullFrameBits:  maximum number of bits available for encoding\\n     *                      the current frame.\\n     * \\n     *      mean_bits:      target number of bits per granule.\\n     * \\n     *      frameLength:\\n     * \\n     *      gfc.ResvMax:   maximum allowed reservoir\\n     * \\n     *      gfc.ResvSize:  current reservoir size\\n     * \\n     *      l3_side.resvDrain_pre:\\n     *         ancillary data to be added to previous frame:\\n     *         (only usefull in VBR modes if it is possible to have\\n     *         maxmp3buf < fullFrameBits)).  Currently disabled,\\n     *         see #define NEW_DRAIN\\n     *         2010-02-13: RH now enabled, it seems to be needed for CBR too,\\n     *                     as there exists one example, where the FhG decoder\\n     *                     can't decode a -b320 CBR file anymore.\\n     * \\n     *      l3_side.resvDrain_post:\\n     *         ancillary data to be added to this frame:\\n     * \\n     * </PRE>\\n     */\\n\\n    /* main_data_begin has 9 bits in MPEG-1, 8 bits MPEG-2 */\\n\\n    var resvLimit = 8 * 256 * gfc.mode_gr - 8;\\n    /*\\n     * maximum allowed frame size. dont use more than this number of bits,\\n     * even if the frame has the space for them:\\n     */\\n\\n    if (gfp.brate > 320) {\\n      /* in freeformat the buffer is constant */\\n      maxmp3buf = 8 * int(gfp.brate * 1000 / (gfp.out_samplerate / 1152) / 8 + .5);\\n    } else {\\n      /*\\n       * all mp3 decoders should have enough buffer to handle this value:\\n       * size of a 320kbps 32kHz frame\\n       */\\n      maxmp3buf = 8 * 1440;\\n      /*\\n       * Bouvigne suggests this more lax interpretation of the ISO doc\\n       * instead of using 8*960.\\n       */\\n\\n      if (gfp.strict_ISO) {\\n        maxmp3buf = 8 * int(320000 / (gfp.out_samplerate / 1152) / 8 + .5);\\n      }\\n    }\\n\\n    gfc.ResvMax = maxmp3buf - frameLength;\\n    if (gfc.ResvMax > resvLimit) gfc.ResvMax = resvLimit;\\n    if (gfc.ResvMax < 0 || gfp.disable_reservoir) gfc.ResvMax = 0;\\n    var fullFrameBits = mean_bits.bits * gfc.mode_gr + Math.min(gfc.ResvSize, gfc.ResvMax);\\n    if (fullFrameBits > maxmp3buf) fullFrameBits = maxmp3buf;\\n    assert(0 == gfc.ResvMax % 8);\\n    assert(gfc.ResvMax >= 0);\\n    l3_side.resvDrain_pre = 0; // frame analyzer code\\n\\n    if (gfc.pinfo != null) {\\n      /*\\n       * expected bits per channel per granule [is this also right for\\n       * mono/stereo, MPEG-1/2 ?]\\n       */\\n      gfc.pinfo.mean_bits = mean_bits.bits / 2;\\n      gfc.pinfo.resvsize = gfc.ResvSize;\\n    }\\n\\n    return fullFrameBits;\\n  };\\n  /**\\n   * returns targ_bits: target number of bits to use for 1 granule<BR>\\n   * extra_bits: amount extra available from reservoir<BR>\\n   * Mark Taylor 4/99\\n   */\\n\\n\\n  this.ResvMaxBits = function (gfp, mean_bits, targ_bits, cbr) {\\n    var gfc = gfp.internal_flags;\\n    var add_bits;\\n    var ResvSize = gfc.ResvSize,\\n        ResvMax = gfc.ResvMax;\\n    /* compensate the saved bits used in the 1st granule */\\n\\n    if (cbr != 0) ResvSize += mean_bits;\\n    if ((gfc.substep_shaping & 1) != 0) ResvMax *= 0.9;\\n    targ_bits.bits = mean_bits;\\n    /* extra bits if the reservoir is almost full */\\n\\n    if (ResvSize * 10 > ResvMax * 9) {\\n      add_bits = ResvSize - ResvMax * 9 / 10;\\n      targ_bits.bits += add_bits;\\n      gfc.substep_shaping |= 0x80;\\n    } else {\\n      add_bits = 0;\\n      gfc.substep_shaping &= 0x7f;\\n      /*\\n       * build up reservoir. this builds the reservoir a little slower\\n       * than FhG. It could simple be mean_bits/15, but this was rigged to\\n       * always produce 100 (the old value) at 128kbs\\n       */\\n\\n      if (!gfp.disable_reservoir && 0 == (gfc.substep_shaping & 1)) targ_bits.bits -= .1 * mean_bits;\\n    }\\n    /* amount from the reservoir we are allowed to use. ISO says 6/10 */\\n\\n\\n    var extra_bits = ResvSize < gfc.ResvMax * 6 / 10 ? ResvSize : gfc.ResvMax * 6 / 10;\\n    extra_bits -= add_bits;\\n    if (extra_bits < 0) extra_bits = 0;\\n    return extra_bits;\\n  };\\n  /**\\n   * Called after a granule's bit allocation. Readjusts the size of the\\n   * reservoir to reflect the granule's usage.\\n   */\\n\\n\\n  this.ResvAdjust = function (gfc, gi) {\\n    gfc.ResvSize -= gi.part2_3_length + gi.part2_length;\\n  };\\n  /**\\n   * Called after all granules in a frame have been allocated. Makes sure that\\n   * the reservoir size is within limits, possibly by adding stuffing bits.\\n   */\\n\\n\\n  this.ResvFrameEnd = function (gfc, mean_bits) {\\n    var over_bits;\\n    var l3_side = gfc.l3_side;\\n    gfc.ResvSize += mean_bits * gfc.mode_gr;\\n    var stuffingBits = 0;\\n    l3_side.resvDrain_post = 0;\\n    l3_side.resvDrain_pre = 0;\\n    /* we must be byte aligned */\\n\\n    if ((over_bits = gfc.ResvSize % 8) != 0) stuffingBits += over_bits;\\n    over_bits = gfc.ResvSize - stuffingBits - gfc.ResvMax;\\n\\n    if (over_bits > 0) {\\n      assert(0 == over_bits % 8);\\n      assert(over_bits >= 0);\\n      stuffingBits += over_bits;\\n    }\\n    /*\\n     * NOTE: enabling the NEW_DRAIN code fixes some problems with FhG\\n     * decoder shipped with MS Windows operating systems. Using this, it is\\n     * even possible to use Gabriel's lax buffer consideration again, which\\n     * assumes, any decoder should have a buffer large enough for a 320 kbps\\n     * frame at 32 kHz sample rate.\\n     * \\n     * old drain code: lame -b320 BlackBird.wav --. does not play with\\n     * GraphEdit.exe using FhG decoder V1.5 Build 50\\n     * \\n     * new drain code: lame -b320 BlackBird.wav --. plays fine with\\n     * GraphEdit.exe using FhG decoder V1.5 Build 50\\n     * \\n     * Robert Hegemann, 2010-02-13.\\n     */\\n\\n    /*\\n     * drain as many bits as possible into previous frame ancillary data In\\n     * particular, in VBR mode ResvMax may have changed, and we have to make\\n     * sure main_data_begin does not create a reservoir bigger than ResvMax\\n     * mt 4/00\\n     */\\n\\n\\n    {\\n      var mdb_bytes = Math.min(l3_side.main_data_begin * 8, stuffingBits) / 8;\\n      l3_side.resvDrain_pre += 8 * mdb_bytes;\\n      stuffingBits -= 8 * mdb_bytes;\\n      gfc.ResvSize -= 8 * mdb_bytes;\\n      l3_side.main_data_begin -= mdb_bytes;\\n    }\\n    /* drain the rest into this frames ancillary data */\\n\\n    l3_side.resvDrain_post += stuffingBits;\\n    gfc.ResvSize -= stuffingBits;\\n  };\\n}\\n\\nmodule.exports = Reservoir;\",\"function Version() {\\n  /**\\n   * URL for the LAME website.\\n   */\\n  var LAME_URL = \\\"http://www.mp3dev.org/\\\";\\n  /**\\n   * Major version number.\\n   */\\n\\n  var LAME_MAJOR_VERSION = 3;\\n  /**\\n   * Minor version number.\\n   */\\n\\n  var LAME_MINOR_VERSION = 98;\\n  /**\\n   * Patch level.\\n   */\\n\\n  var LAME_PATCH_VERSION = 4;\\n  /**\\n   * Major version number.\\n   */\\n\\n  var PSY_MAJOR_VERSION = 0;\\n  /**\\n   * Minor version number.\\n   */\\n\\n  var PSY_MINOR_VERSION = 93;\\n  /**\\n   * A string which describes the version of LAME.\\n   *\\n   * @return string which describes the version of LAME\\n   */\\n\\n  this.getLameVersion = function () {\\n    // primary to write screen reports\\n    return LAME_MAJOR_VERSION + \\\".\\\" + LAME_MINOR_VERSION + \\\".\\\" + LAME_PATCH_VERSION;\\n  };\\n  /**\\n   * The short version of the LAME version string.\\n   *\\n   * @return short version of the LAME version string\\n   */\\n\\n\\n  this.getLameShortVersion = function () {\\n    // Adding date and time to version string makes it harder for output\\n    // validation\\n    return LAME_MAJOR_VERSION + \\\".\\\" + LAME_MINOR_VERSION + \\\".\\\" + LAME_PATCH_VERSION;\\n  };\\n  /**\\n   * The shortest version of the LAME version string.\\n   *\\n   * @return shortest version of the LAME version string\\n   */\\n\\n\\n  this.getLameVeryShortVersion = function () {\\n    // Adding date and time to version string makes it harder for output\\n    return \\\"LAME\\\" + LAME_MAJOR_VERSION + \\\".\\\" + LAME_MINOR_VERSION + \\\"r\\\";\\n  };\\n  /**\\n   * String which describes the version of GPSYCHO\\n   *\\n   * @return string which describes the version of GPSYCHO\\n   */\\n\\n\\n  this.getPsyVersion = function () {\\n    return PSY_MAJOR_VERSION + \\\".\\\" + PSY_MINOR_VERSION;\\n  };\\n  /**\\n   * String which is a URL for the LAME website.\\n   *\\n   * @return string which is a URL for the LAME website\\n   */\\n\\n\\n  this.getLameUrl = function () {\\n    return LAME_URL;\\n  };\\n  /**\\n   * Quite useless for a java version, however we are compatible ;-)\\n   *\\n   * @return \\\"32bits\\\"\\n   */\\n\\n\\n  this.getLameOsBitness = function () {\\n    return \\\"32bits\\\";\\n  };\\n}\\n\\nmodule.exports = Version;\",\"var common = require('./common.js');\\n\\nvar System = common.System;\\nvar VbrMode = common.VbrMode;\\nvar Float = common.Float;\\nvar ShortBlock = common.ShortBlock;\\nvar Util = common.Util;\\nvar Arrays = common.Arrays;\\nvar new_array_n = common.new_array_n;\\nvar new_byte = common.new_byte;\\nvar new_double = common.new_double;\\nvar new_float = common.new_float;\\nvar new_float_n = common.new_float_n;\\nvar new_int = common.new_int;\\nvar new_int_n = common.new_int_n;\\nvar assert = common.assert;\\n/**\\n * A Vbr header may be present in the ancillary data field of the first frame of\\n * an mp3 bitstream<BR>\\n * The Vbr header (optionally) contains\\n * <UL>\\n * <LI>frames total number of audio frames in the bitstream\\n * <LI>bytes total number of bytes in the bitstream\\n * <LI>toc table of contents\\n * </UL>\\n *\\n * toc (table of contents) gives seek points for random access.<BR>\\n * The ith entry determines the seek point for i-percent duration.<BR>\\n * seek point in bytes = (toc[i]/256.0) * total_bitstream_bytes<BR>\\n * e.g. half duration seek point = (toc[50]/256.0) * total_bitstream_bytes\\n */\\n\\nVBRTag.NUMTOCENTRIES = 100;\\nVBRTag.MAXFRAMESIZE = 2880;\\n\\nfunction VBRTag() {\\n  var lame;\\n  var bs;\\n  var v;\\n\\n  this.setModules = function (_lame, _bs, _v) {\\n    lame = _lame;\\n    bs = _bs;\\n    v = _v;\\n  };\\n\\n  var FRAMES_FLAG = 0x0001;\\n  var BYTES_FLAG = 0x0002;\\n  var TOC_FLAG = 0x0004;\\n  var VBR_SCALE_FLAG = 0x0008;\\n  var NUMTOCENTRIES = VBRTag.NUMTOCENTRIES;\\n  /**\\n   * (0xB40) the max freeformat 640 32kHz framesize.\\n   */\\n\\n  var MAXFRAMESIZE = VBRTag.MAXFRAMESIZE;\\n  /**\\n   * <PRE>\\n   *    4 bytes for Header Tag\\n   *    4 bytes for Header Flags\\n   *  100 bytes for entry (toc)\\n   *    4 bytes for frame size\\n   *    4 bytes for stream size\\n   *    4 bytes for VBR scale. a VBR quality indicator: 0=best 100=worst\\n   *   20 bytes for LAME tag.  for example, \\\"LAME3.12 (beta 6)\\\"\\n   * ___________\\n   *  140 bytes\\n   * </PRE>\\n   */\\n\\n  var VBRHEADERSIZE = NUMTOCENTRIES + 4 + 4 + 4 + 4 + 4;\\n  var LAMEHEADERSIZE = VBRHEADERSIZE + 9 + 1 + 1 + 8 + 1 + 1 + 3 + 1 + 1 + 2 + 4 + 2 + 2;\\n  /**\\n   * The size of the Xing header MPEG-1, bit rate in kbps.\\n   */\\n\\n  var XING_BITRATE1 = 128;\\n  /**\\n   * The size of the Xing header MPEG-2, bit rate in kbps.\\n   */\\n\\n  var XING_BITRATE2 = 64;\\n  /**\\n   * The size of the Xing header MPEG-2.5, bit rate in kbps.\\n   */\\n\\n  var XING_BITRATE25 = 32;\\n  /**\\n   * ISO-8859-1 charset for byte to string operations.\\n   */\\n\\n  var ISO_8859_1 = null; //Charset.forName(\\\"ISO-8859-1\\\");\\n\\n  /**\\n   * VBR header magic string.\\n   */\\n\\n  var VBRTag0 = \\\"Xing\\\";\\n  /**\\n   * VBR header magic string (VBR == VBRMode.vbr_off).\\n   */\\n\\n  var VBRTag1 = \\\"Info\\\";\\n  /**\\n   * Lookup table for fast CRC-16 computation. Uses the polynomial\\n   * x^16+x^15+x^2+1\\n   */\\n\\n  var crc16Lookup = [0x0000, 0xC0C1, 0xC181, 0x0140, 0xC301, 0x03C0, 0x0280, 0xC241, 0xC601, 0x06C0, 0x0780, 0xC741, 0x0500, 0xC5C1, 0xC481, 0x0440, 0xCC01, 0x0CC0, 0x0D80, 0xCD41, 0x0F00, 0xCFC1, 0xCE81, 0x0E40, 0x0A00, 0xCAC1, 0xCB81, 0x0B40, 0xC901, 0x09C0, 0x0880, 0xC841, 0xD801, 0x18C0, 0x1980, 0xD941, 0x1B00, 0xDBC1, 0xDA81, 0x1A40, 0x1E00, 0xDEC1, 0xDF81, 0x1F40, 0xDD01, 0x1DC0, 0x1C80, 0xDC41, 0x1400, 0xD4C1, 0xD581, 0x1540, 0xD701, 0x17C0, 0x1680, 0xD641, 0xD201, 0x12C0, 0x1380, 0xD341, 0x1100, 0xD1C1, 0xD081, 0x1040, 0xF001, 0x30C0, 0x3180, 0xF141, 0x3300, 0xF3C1, 0xF281, 0x3240, 0x3600, 0xF6C1, 0xF781, 0x3740, 0xF501, 0x35C0, 0x3480, 0xF441, 0x3C00, 0xFCC1, 0xFD81, 0x3D40, 0xFF01, 0x3FC0, 0x3E80, 0xFE41, 0xFA01, 0x3AC0, 0x3B80, 0xFB41, 0x3900, 0xF9C1, 0xF881, 0x3840, 0x2800, 0xE8C1, 0xE981, 0x2940, 0xEB01, 0x2BC0, 0x2A80, 0xEA41, 0xEE01, 0x2EC0, 0x2F80, 0xEF41, 0x2D00, 0xEDC1, 0xEC81, 0x2C40, 0xE401, 0x24C0, 0x2580, 0xE541, 0x2700, 0xE7C1, 0xE681, 0x2640, 0x2200, 0xE2C1, 0xE381, 0x2340, 0xE101, 0x21C0, 0x2080, 0xE041, 0xA001, 0x60C0, 0x6180, 0xA141, 0x6300, 0xA3C1, 0xA281, 0x6240, 0x6600, 0xA6C1, 0xA781, 0x6740, 0xA501, 0x65C0, 0x6480, 0xA441, 0x6C00, 0xACC1, 0xAD81, 0x6D40, 0xAF01, 0x6FC0, 0x6E80, 0xAE41, 0xAA01, 0x6AC0, 0x6B80, 0xAB41, 0x6900, 0xA9C1, 0xA881, 0x6840, 0x7800, 0xB8C1, 0xB981, 0x7940, 0xBB01, 0x7BC0, 0x7A80, 0xBA41, 0xBE01, 0x7EC0, 0x7F80, 0xBF41, 0x7D00, 0xBDC1, 0xBC81, 0x7C40, 0xB401, 0x74C0, 0x7580, 0xB541, 0x7700, 0xB7C1, 0xB681, 0x7640, 0x7200, 0xB2C1, 0xB381, 0x7340, 0xB101, 0x71C0, 0x7080, 0xB041, 0x5000, 0x90C1, 0x9181, 0x5140, 0x9301, 0x53C0, 0x5280, 0x9241, 0x9601, 0x56C0, 0x5780, 0x9741, 0x5500, 0x95C1, 0x9481, 0x5440, 0x9C01, 0x5CC0, 0x5D80, 0x9D41, 0x5F00, 0x9FC1, 0x9E81, 0x5E40, 0x5A00, 0x9AC1, 0x9B81, 0x5B40, 0x9901, 0x59C0, 0x5880, 0x9841, 0x8801, 0x48C0, 0x4980, 0x8941, 0x4B00, 0x8BC1, 0x8A81, 0x4A40, 0x4E00, 0x8EC1, 0x8F81, 0x4F40, 0x8D01, 0x4DC0, 0x4C80, 0x8C41, 0x4400, 0x84C1, 0x8581, 0x4540, 0x8701, 0x47C0, 0x4680, 0x8641, 0x8201, 0x42C0, 0x4380, 0x8341, 0x4100, 0x81C1, 0x8081, 0x4040];\\n  /***********************************************************************\\n   * Robert Hegemann 2001-01-17\\n   ***********************************************************************/\\n\\n  function addVbr(v, bitrate) {\\n    v.nVbrNumFrames++;\\n    v.sum += bitrate;\\n    v.seen++;\\n\\n    if (v.seen < v.want) {\\n      return;\\n    }\\n\\n    if (v.pos < v.size) {\\n      v.bag[v.pos] = v.sum;\\n      v.pos++;\\n      v.seen = 0;\\n    }\\n\\n    if (v.pos == v.size) {\\n      for (var i = 1; i < v.size; i += 2) {\\n        v.bag[i / 2] = v.bag[i];\\n      }\\n\\n      v.want *= 2;\\n      v.pos /= 2;\\n    }\\n  }\\n\\n  function xingSeekTable(v, t) {\\n    if (v.pos <= 0) return;\\n\\n    for (var i = 1; i < NUMTOCENTRIES; ++i) {\\n      var j = i / NUMTOCENTRIES,\\n          act,\\n          sum;\\n      var indx = 0 | Math.floor(j * v.pos);\\n      if (indx > v.pos - 1) indx = v.pos - 1;\\n      act = v.bag[indx];\\n      sum = v.sum;\\n      var seek_point = 0 | 256. * act / sum;\\n      if (seek_point > 255) seek_point = 255;\\n      t[i] = 0xff & seek_point;\\n    }\\n  }\\n  /**\\n   * Add VBR entry, used to fill the VBR TOC entries.\\n   *\\n   * @param gfp\\n   *            global flags\\n   */\\n\\n\\n  this.addVbrFrame = function (gfp) {\\n    var gfc = gfp.internal_flags;\\n    var kbps = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\\n    assert(gfc.VBR_seek_table.bag != null);\\n    addVbr(gfc.VBR_seek_table, kbps);\\n  };\\n  /**\\n   * Read big endian integer (4-bytes) from header.\\n   *\\n   * @param buf\\n   *            header containing the integer\\n   * @param bufPos\\n   *            offset into the header\\n   * @return extracted integer\\n   */\\n\\n\\n  function extractInteger(buf, bufPos) {\\n    var x = buf[bufPos + 0] & 0xff;\\n    x <<= 8;\\n    x |= buf[bufPos + 1] & 0xff;\\n    x <<= 8;\\n    x |= buf[bufPos + 2] & 0xff;\\n    x <<= 8;\\n    x |= buf[bufPos + 3] & 0xff;\\n    return x;\\n  }\\n  /**\\n   * Write big endian integer (4-bytes) in the header.\\n   *\\n   * @param buf\\n   *            header to write the integer into\\n   * @param bufPos\\n   *            offset into the header\\n   * @param value\\n   *            integer value to write\\n   */\\n\\n\\n  function createInteger(buf, bufPos, value) {\\n    buf[bufPos + 0] = 0xff & (value >> 24 & 0xff);\\n    buf[bufPos + 1] = 0xff & (value >> 16 & 0xff);\\n    buf[bufPos + 2] = 0xff & (value >> 8 & 0xff);\\n    buf[bufPos + 3] = 0xff & (value & 0xff);\\n  }\\n  /**\\n   * Write big endian short (2-bytes) in the header.\\n   *\\n   * @param buf\\n   *            header to write the integer into\\n   * @param bufPos\\n   *            offset into the header\\n   * @param value\\n   *            integer value to write\\n   */\\n\\n\\n  function createShort(buf, bufPos, value) {\\n    buf[bufPos + 0] = 0xff & (value >> 8 & 0xff);\\n    buf[bufPos + 1] = 0xff & (value & 0xff);\\n  }\\n  /**\\n   * Check for magic strings (Xing/Info).\\n   *\\n   * @param buf\\n   *            header to check\\n   * @param bufPos\\n   *            header offset to check\\n   * @return magic string found\\n   */\\n\\n\\n  function isVbrTag(buf, bufPos) {\\n    return new String(buf, bufPos, VBRTag0.length(), ISO_8859_1).equals(VBRTag0) || new String(buf, bufPos, VBRTag1.length(), ISO_8859_1).equals(VBRTag1);\\n  }\\n\\n  function shiftInBitsValue(x, n, v) {\\n    return 0xff & (x << n | v & ~(-1 << n));\\n  }\\n  /**\\n   * Construct the MP3 header using the settings of the global flags.\\n   *\\n   * <img src=\\\"1000px-Mp3filestructure.svg.png\\\">\\n   *\\n   * @param gfp\\n   *            global flags\\n   * @param buffer\\n   *            header\\n   */\\n\\n\\n  function setLameTagFrameHeader(gfp, buffer) {\\n    var gfc = gfp.internal_flags; // MP3 Sync Word\\n\\n    buffer[0] = shiftInBitsValue(buffer[0], 8, 0xff);\\n    buffer[1] = shiftInBitsValue(buffer[1], 3, 7);\\n    buffer[1] = shiftInBitsValue(buffer[1], 1, gfp.out_samplerate < 16000 ? 0 : 1); // Version\\n\\n    buffer[1] = shiftInBitsValue(buffer[1], 1, gfp.version); // 01 == Layer 3\\n\\n    buffer[1] = shiftInBitsValue(buffer[1], 2, 4 - 3); // Error protection\\n\\n    buffer[1] = shiftInBitsValue(buffer[1], 1, !gfp.error_protection ? 1 : 0); // Bit rate\\n\\n    buffer[2] = shiftInBitsValue(buffer[2], 4, gfc.bitrate_index); // Frequency\\n\\n    buffer[2] = shiftInBitsValue(buffer[2], 2, gfc.samplerate_index); // Pad. Bit\\n\\n    buffer[2] = shiftInBitsValue(buffer[2], 1, 0); // Priv. Bit\\n\\n    buffer[2] = shiftInBitsValue(buffer[2], 1, gfp.extension); // Mode\\n\\n    buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.mode.ordinal()); // Mode extension (Used with Joint Stereo)\\n\\n    buffer[3] = shiftInBitsValue(buffer[3], 2, gfc.mode_ext); // Copy\\n\\n    buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.copyright); // Original\\n\\n    buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.original); // Emphasis\\n\\n    buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.emphasis);\\n    /* the default VBR header. 48 kbps layer III, no padding, no crc */\\n\\n    /* but sampling freq, mode and copyright/copy protection taken */\\n\\n    /* from first valid frame */\\n\\n    buffer[0] = 0xff;\\n    var abyte = 0xff & (buffer[1] & 0xf1);\\n    var bitrate;\\n\\n    if (1 == gfp.version) {\\n      bitrate = XING_BITRATE1;\\n    } else {\\n      if (gfp.out_samplerate < 16000) bitrate = XING_BITRATE25;else bitrate = XING_BITRATE2;\\n    }\\n\\n    if (gfp.VBR == VbrMode.vbr_off) bitrate = gfp.brate;\\n    var bbyte;\\n    if (gfp.free_format) bbyte = 0x00;else bbyte = 0xff & 16 * lame.BitrateIndex(bitrate, gfp.version, gfp.out_samplerate);\\n    /*\\n     * Use as much of the info from the real frames in the Xing header:\\n     * samplerate, channels, crc, etc...\\n     */\\n\\n    if (gfp.version == 1) {\\n      /* MPEG1 */\\n      buffer[1] = 0xff & (abyte | 0x0a);\\n      /* was 0x0b; */\\n\\n      abyte = 0xff & (buffer[2] & 0x0d);\\n      /* AF keep also private bit */\\n\\n      buffer[2] = 0xff & (bbyte | abyte);\\n      /* 64kbs MPEG1 frame */\\n    } else {\\n      /* MPEG2 */\\n      buffer[1] = 0xff & (abyte | 0x02);\\n      /* was 0x03; */\\n\\n      abyte = 0xff & (buffer[2] & 0x0d);\\n      /* AF keep also private bit */\\n\\n      buffer[2] = 0xff & (bbyte | abyte);\\n      /* 64kbs MPEG2 frame */\\n    }\\n  }\\n  /**\\n   * Get VBR tag information\\n   *\\n   * @param buf\\n   *            header to analyze\\n   * @param bufPos\\n   *            offset into the header\\n   * @return VBR tag data\\n   */\\n\\n\\n  this.getVbrTag = function (buf) {\\n    var pTagData = new VBRTagData();\\n    var bufPos = 0;\\n    /* get Vbr header data */\\n\\n    pTagData.flags = 0;\\n    /* get selected MPEG header data */\\n\\n    var hId = buf[bufPos + 1] >> 3 & 1;\\n    var hSrIndex = buf[bufPos + 2] >> 2 & 3;\\n    var hMode = buf[bufPos + 3] >> 6 & 3;\\n    var hBitrate = buf[bufPos + 2] >> 4 & 0xf;\\n    hBitrate = Tables.bitrate_table[hId][hBitrate];\\n    /* check for FFE syncword */\\n\\n    if (buf[bufPos + 1] >> 4 == 0xE) pTagData.samprate = Tables.samplerate_table[2][hSrIndex];else pTagData.samprate = Tables.samplerate_table[hId][hSrIndex];\\n    /* determine offset of header */\\n\\n    if (hId != 0) {\\n      /* mpeg1 */\\n      if (hMode != 3) bufPos += 32 + 4;else bufPos += 17 + 4;\\n    } else {\\n      /* mpeg2 */\\n      if (hMode != 3) bufPos += 17 + 4;else bufPos += 9 + 4;\\n    }\\n\\n    if (!isVbrTag(buf, bufPos)) return null;\\n    bufPos += 4;\\n    pTagData.hId = hId;\\n    /* get flags */\\n\\n    var head_flags = pTagData.flags = extractInteger(buf, bufPos);\\n    bufPos += 4;\\n\\n    if ((head_flags & FRAMES_FLAG) != 0) {\\n      pTagData.frames = extractInteger(buf, bufPos);\\n      bufPos += 4;\\n    }\\n\\n    if ((head_flags & BYTES_FLAG) != 0) {\\n      pTagData.bytes = extractInteger(buf, bufPos);\\n      bufPos += 4;\\n    }\\n\\n    if ((head_flags & TOC_FLAG) != 0) {\\n      if (pTagData.toc != null) {\\n        for (var i = 0; i < NUMTOCENTRIES; i++) {\\n          pTagData.toc[i] = buf[bufPos + i];\\n        }\\n      }\\n\\n      bufPos += NUMTOCENTRIES;\\n    }\\n\\n    pTagData.vbrScale = -1;\\n\\n    if ((head_flags & VBR_SCALE_FLAG) != 0) {\\n      pTagData.vbrScale = extractInteger(buf, bufPos);\\n      bufPos += 4;\\n    }\\n\\n    pTagData.headersize = (hId + 1) * 72000 * hBitrate / pTagData.samprate;\\n    bufPos += 21;\\n    var encDelay = buf[bufPos + 0] << 4;\\n    encDelay += buf[bufPos + 1] >> 4;\\n    var encPadding = (buf[bufPos + 1] & 0x0F) << 8;\\n    encPadding += buf[bufPos + 2] & 0xff;\\n    /* check for reasonable values (this may be an old Xing header, */\\n\\n    /* not a INFO tag) */\\n\\n    if (encDelay < 0 || encDelay > 3000) encDelay = -1;\\n    if (encPadding < 0 || encPadding > 3000) encPadding = -1;\\n    pTagData.encDelay = encDelay;\\n    pTagData.encPadding = encPadding;\\n    /* success */\\n\\n    return pTagData;\\n  };\\n  /**\\n   * Initializes the header\\n   *\\n   * @param gfp\\n   *            global flags\\n   */\\n\\n\\n  this.InitVbrTag = function (gfp) {\\n    var gfc = gfp.internal_flags;\\n    /**\\n     * <PRE>\\n     * Xing VBR pretends to be a 48kbs layer III frame.  (at 44.1kHz).\\n     * (at 48kHz they use 56kbs since 48kbs frame not big enough for\\n     * table of contents)\\n     * let's always embed Xing header inside a 64kbs layer III frame.\\n     * this gives us enough room for a LAME version string too.\\n     * size determined by sampling frequency (MPEG1)\\n     * 32kHz:    216 bytes@48kbs    288bytes@ 64kbs\\n     * 44.1kHz:  156 bytes          208bytes@64kbs     (+1 if padding = 1)\\n     * 48kHz:    144 bytes          192\\n     *\\n     * MPEG 2 values are the same since the framesize and samplerate\\n     * are each reduced by a factor of 2.\\n     * </PRE>\\n     */\\n\\n    var kbps_header;\\n\\n    if (1 == gfp.version) {\\n      kbps_header = XING_BITRATE1;\\n    } else {\\n      if (gfp.out_samplerate < 16000) kbps_header = XING_BITRATE25;else kbps_header = XING_BITRATE2;\\n    }\\n\\n    if (gfp.VBR == VbrMode.vbr_off) kbps_header = gfp.brate; // make sure LAME Header fits into Frame\\n\\n    var totalFrameSize = (gfp.version + 1) * 72000 * kbps_header / gfp.out_samplerate;\\n    var headerSize = gfc.sideinfo_len + LAMEHEADERSIZE;\\n    gfc.VBR_seek_table.TotalFrameSize = totalFrameSize;\\n\\n    if (totalFrameSize < headerSize || totalFrameSize > MAXFRAMESIZE) {\\n      /* disable tag, it wont fit */\\n      gfp.bWriteVbrTag = false;\\n      return;\\n    }\\n\\n    gfc.VBR_seek_table.nVbrNumFrames = 0;\\n    gfc.VBR_seek_table.nBytesWritten = 0;\\n    gfc.VBR_seek_table.sum = 0;\\n    gfc.VBR_seek_table.seen = 0;\\n    gfc.VBR_seek_table.want = 1;\\n    gfc.VBR_seek_table.pos = 0;\\n\\n    if (gfc.VBR_seek_table.bag == null) {\\n      gfc.VBR_seek_table.bag = new int[400]();\\n      gfc.VBR_seek_table.size = 400;\\n    } // write dummy VBR tag of all 0's into bitstream\\n\\n\\n    var buffer = new_byte(MAXFRAMESIZE);\\n    setLameTagFrameHeader(gfp, buffer);\\n    var n = gfc.VBR_seek_table.TotalFrameSize;\\n\\n    for (var i = 0; i < n; ++i) {\\n      bs.add_dummy_byte(gfp, buffer[i] & 0xff, 1);\\n    }\\n  };\\n  /**\\n   * Fast CRC-16 computation (uses table crc16Lookup).\\n   *\\n   * @param value\\n   * @param crc\\n   * @return\\n   */\\n\\n\\n  function crcUpdateLookup(value, crc) {\\n    var tmp = crc ^ value;\\n    crc = crc >> 8 ^ crc16Lookup[tmp & 0xff];\\n    return crc;\\n  }\\n\\n  this.updateMusicCRC = function (crc, buffer, bufferPos, size) {\\n    for (var i = 0; i < size; ++i) {\\n      crc[0] = crcUpdateLookup(buffer[bufferPos + i], crc[0]);\\n    }\\n  };\\n  /**\\n   * Write LAME info: mini version + info on various switches used (Jonathan\\n   * Dee 2001/08/31).\\n   *\\n   * @param gfp\\n   *            global flags\\n   * @param musicLength\\n   *            music length\\n   * @param streamBuffer\\n   *            pointer to output buffer\\n   * @param streamBufferPos\\n   *            offset into the output buffer\\n   * @param crc\\n   *            computation of CRC-16 of Lame Tag so far (starting at frame\\n   *            sync)\\n   * @return number of bytes written to the stream\\n   */\\n\\n\\n  function putLameVBR(gfp, musicLength, streamBuffer, streamBufferPos, crc) {\\n    var gfc = gfp.internal_flags;\\n    var bytesWritten = 0;\\n    /* encoder delay */\\n\\n    var encDelay = gfp.encoder_delay;\\n    /* encoder padding */\\n\\n    var encPadding = gfp.encoder_padding;\\n    /* recall: gfp.VBR_q is for example set by the switch -V */\\n\\n    /* gfp.quality by -q, -h, -f, etc */\\n\\n    var quality = 100 - 10 * gfp.VBR_q - gfp.quality;\\n    var version = v.getLameVeryShortVersion();\\n    var vbr;\\n    var revision = 0x00;\\n    var revMethod; // numbering different in vbr_mode vs. Lame tag\\n\\n    var vbrTypeTranslator = [1, 5, 3, 2, 4, 0, 3];\\n    var lowpass = 0 | (gfp.lowpassfreq / 100.0 + .5 > 255 ? 255 : gfp.lowpassfreq / 100.0 + .5);\\n    var peakSignalAmplitude = 0;\\n    var radioReplayGain = 0;\\n    var audiophileReplayGain = 0;\\n    var noiseShaping = gfp.internal_flags.noise_shaping;\\n    var stereoMode = 0;\\n    var nonOptimal = 0;\\n    var sourceFreq = 0;\\n    var misc = 0;\\n    var musicCRC = 0; // psy model type: Gpsycho or NsPsytune\\n\\n    var expNPsyTune = (gfp.exp_nspsytune & 1) != 0;\\n    var safeJoint = (gfp.exp_nspsytune & 2) != 0;\\n    var noGapMore = false;\\n    var noGapPrevious = false;\\n    var noGapCount = gfp.internal_flags.nogap_total;\\n    var noGapCurr = gfp.internal_flags.nogap_current; // 4 bits\\n\\n    var athType = gfp.ATHtype;\\n    var flags = 0; // vbr modes\\n\\n    var abrBitrate;\\n\\n    switch (gfp.VBR) {\\n      case vbr_abr:\\n        abrBitrate = gfp.VBR_mean_bitrate_kbps;\\n        break;\\n\\n      case vbr_off:\\n        abrBitrate = gfp.brate;\\n        break;\\n\\n      default:\\n        abrBitrate = gfp.VBR_min_bitrate_kbps;\\n    } // revision and vbr method\\n\\n\\n    if (gfp.VBR.ordinal() < vbrTypeTranslator.length) vbr = vbrTypeTranslator[gfp.VBR.ordinal()];else vbr = 0x00; // unknown\\n\\n    revMethod = 0x10 * revision + vbr; // ReplayGain\\n\\n    if (gfc.findReplayGain) {\\n      if (gfc.RadioGain > 0x1FE) gfc.RadioGain = 0x1FE;\\n      if (gfc.RadioGain < -0x1FE) gfc.RadioGain = -0x1FE; // set name code\\n\\n      radioReplayGain = 0x2000; // set originator code to `determined automatically'\\n\\n      radioReplayGain |= 0xC00;\\n\\n      if (gfc.RadioGain >= 0) {\\n        // set gain adjustment\\n        radioReplayGain |= gfc.RadioGain;\\n      } else {\\n        // set the sign bit\\n        radioReplayGain |= 0x200; // set gain adjustment\\n\\n        radioReplayGain |= -gfc.RadioGain;\\n      }\\n    } // peak sample\\n\\n\\n    if (gfc.findPeakSample) peakSignalAmplitude = Math.abs(0 | gfc.PeakSample / 32767.0 * Math.pow(2, 23) + .5); // nogap\\n\\n    if (noGapCount != -1) {\\n      if (noGapCurr > 0) noGapPrevious = true;\\n      if (noGapCurr < noGapCount - 1) noGapMore = true;\\n    } // flags\\n\\n\\n    flags = athType + ((expNPsyTune ? 1 : 0) << 4) + ((safeJoint ? 1 : 0) << 5) + ((noGapMore ? 1 : 0) << 6) + ((noGapPrevious ? 1 : 0) << 7);\\n    if (quality < 0) quality = 0; // stereo mode field (Intensity stereo is not implemented)\\n\\n    switch (gfp.mode) {\\n      case MONO:\\n        stereoMode = 0;\\n        break;\\n\\n      case STEREO:\\n        stereoMode = 1;\\n        break;\\n\\n      case DUAL_CHANNEL:\\n        stereoMode = 2;\\n        break;\\n\\n      case JOINT_STEREO:\\n        if (gfp.force_ms) stereoMode = 4;else stereoMode = 3;\\n        break;\\n\\n      case NOT_SET: //$FALL-THROUGH$\\n\\n      default:\\n        stereoMode = 7;\\n        break;\\n    }\\n\\n    if (gfp.in_samplerate <= 32000) sourceFreq = 0x00;else if (gfp.in_samplerate == 48000) sourceFreq = 0x02;else if (gfp.in_samplerate > 48000) sourceFreq = 0x03;else {\\n      // default is 44100Hz\\n      sourceFreq = 0x01;\\n    } // Check if the user overrided the default LAME behavior with some\\n    // nasty options\\n\\n    if (gfp.short_blocks == ShortBlock.short_block_forced || gfp.short_blocks == ShortBlock.short_block_dispensed || gfp.lowpassfreq == -1 && gfp.highpassfreq == -1 ||\\n    /* \\\"-k\\\" */\\n    gfp.scale_left < gfp.scale_right || gfp.scale_left > gfp.scale_right || gfp.disable_reservoir && gfp.brate < 320 || gfp.noATH || gfp.ATHonly || athType == 0 || gfp.in_samplerate <= 32000) nonOptimal = 1;\\n    misc = noiseShaping + (stereoMode << 2) + (nonOptimal << 5) + (sourceFreq << 6);\\n    musicCRC = gfc.nMusicCRC; // Write all this information into the stream\\n\\n    createInteger(streamBuffer, streamBufferPos + bytesWritten, quality);\\n    bytesWritten += 4;\\n\\n    for (var j = 0; j < 9; j++) {\\n      streamBuffer[streamBufferPos + bytesWritten + j] = 0xff & version.charAt(j);\\n    }\\n\\n    bytesWritten += 9;\\n    streamBuffer[streamBufferPos + bytesWritten] = 0xff & revMethod;\\n    bytesWritten++;\\n    streamBuffer[streamBufferPos + bytesWritten] = 0xff & lowpass;\\n    bytesWritten++;\\n    createInteger(streamBuffer, streamBufferPos + bytesWritten, peakSignalAmplitude);\\n    bytesWritten += 4;\\n    createShort(streamBuffer, streamBufferPos + bytesWritten, radioReplayGain);\\n    bytesWritten += 2;\\n    createShort(streamBuffer, streamBufferPos + bytesWritten, audiophileReplayGain);\\n    bytesWritten += 2;\\n    streamBuffer[streamBufferPos + bytesWritten] = 0xff & flags;\\n    bytesWritten++;\\n    if (abrBitrate >= 255) streamBuffer[streamBufferPos + bytesWritten] = 0xFF;else streamBuffer[streamBufferPos + bytesWritten] = 0xff & abrBitrate;\\n    bytesWritten++;\\n    streamBuffer[streamBufferPos + bytesWritten] = 0xff & encDelay >> 4;\\n    streamBuffer[streamBufferPos + bytesWritten + 1] = 0xff & (encDelay << 4) + (encPadding >> 8);\\n    streamBuffer[streamBufferPos + bytesWritten + 2] = 0xff & encPadding;\\n    bytesWritten += 3;\\n    streamBuffer[streamBufferPos + bytesWritten] = 0xff & misc;\\n    bytesWritten++; // unused in rev0\\n\\n    streamBuffer[streamBufferPos + bytesWritten++] = 0;\\n    createShort(streamBuffer, streamBufferPos + bytesWritten, gfp.preset);\\n    bytesWritten += 2;\\n    createInteger(streamBuffer, streamBufferPos + bytesWritten, musicLength);\\n    bytesWritten += 4;\\n    createShort(streamBuffer, streamBufferPos + bytesWritten, musicCRC);\\n    bytesWritten += 2; // Calculate tag CRC.... must be done here, since it includes previous\\n    // information\\n\\n    for (var i = 0; i < bytesWritten; i++) {\\n      crc = crcUpdateLookup(streamBuffer[streamBufferPos + i], crc);\\n    }\\n\\n    createShort(streamBuffer, streamBufferPos + bytesWritten, crc);\\n    bytesWritten += 2;\\n    return bytesWritten;\\n  }\\n\\n  function skipId3v2(fpStream) {\\n    // seek to the beginning of the stream\\n    fpStream.seek(0); // read 10 bytes in case there's an ID3 version 2 header here\\n\\n    var id3v2Header = new_byte(10);\\n    fpStream.readFully(id3v2Header);\\n    /* does the stream begin with the ID3 version 2 file identifier? */\\n\\n    var id3v2TagSize;\\n\\n    if (!new String(id3v2Header, \\\"ISO-8859-1\\\").startsWith(\\\"ID3\\\")) {\\n      /*\\n       * the tag size (minus the 10-byte header) is encoded into four\\n       * bytes where the most significant bit is clear in each byte\\n       */\\n      id3v2TagSize = ((id3v2Header[6] & 0x7f) << 21 | (id3v2Header[7] & 0x7f) << 14 | (id3v2Header[8] & 0x7f) << 7 | id3v2Header[9] & 0x7f) + id3v2Header.length;\\n    } else {\\n      /* no ID3 version 2 tag in this stream */\\n      id3v2TagSize = 0;\\n    }\\n\\n    return id3v2TagSize;\\n  }\\n\\n  this.getLameTagFrame = function (gfp, buffer) {\\n    var gfc = gfp.internal_flags;\\n\\n    if (!gfp.bWriteVbrTag) {\\n      return 0;\\n    }\\n\\n    if (gfc.Class_ID != Lame.LAME_ID) {\\n      return 0;\\n    }\\n\\n    if (gfc.VBR_seek_table.pos <= 0) {\\n      return 0;\\n    }\\n\\n    if (buffer.length < gfc.VBR_seek_table.TotalFrameSize) {\\n      return gfc.VBR_seek_table.TotalFrameSize;\\n    }\\n\\n    Arrays.fill(buffer, 0, gfc.VBR_seek_table.TotalFrameSize, 0); // 4 bytes frame header\\n\\n    setLameTagFrameHeader(gfp, buffer); // Create TOC entries\\n\\n    var toc = new_byte(NUMTOCENTRIES);\\n\\n    if (gfp.free_format) {\\n      for (var i = 1; i < NUMTOCENTRIES; ++i) {\\n        toc[i] = 0xff & 255 * i / 100;\\n      }\\n    } else {\\n      xingSeekTable(gfc.VBR_seek_table, toc);\\n    } // Start writing the tag after the zero frame\\n\\n\\n    var streamIndex = gfc.sideinfo_len;\\n    /**\\n     * Note: Xing header specifies that Xing data goes in the ancillary data\\n     * with NO ERROR PROTECTION. If error protecton in enabled, the Xing\\n     * data still starts at the same offset, and now it is in sideinfo data\\n     * block, and thus will not decode correctly by non-Xing tag aware\\n     * players\\n     */\\n\\n    if (gfp.error_protection) streamIndex -= 2; // Put Vbr tag\\n\\n    if (gfp.VBR == VbrMode.vbr_off) {\\n      buffer[streamIndex++] = 0xff & VBRTag1.charAt(0);\\n      buffer[streamIndex++] = 0xff & VBRTag1.charAt(1);\\n      buffer[streamIndex++] = 0xff & VBRTag1.charAt(2);\\n      buffer[streamIndex++] = 0xff & VBRTag1.charAt(3);\\n    } else {\\n      buffer[streamIndex++] = 0xff & VBRTag0.charAt(0);\\n      buffer[streamIndex++] = 0xff & VBRTag0.charAt(1);\\n      buffer[streamIndex++] = 0xff & VBRTag0.charAt(2);\\n      buffer[streamIndex++] = 0xff & VBRTag0.charAt(3);\\n    } // Put header flags\\n\\n\\n    createInteger(buffer, streamIndex, FRAMES_FLAG + BYTES_FLAG + TOC_FLAG + VBR_SCALE_FLAG);\\n    streamIndex += 4; // Put Total Number of frames\\n\\n    createInteger(buffer, streamIndex, gfc.VBR_seek_table.nVbrNumFrames);\\n    streamIndex += 4; // Put total audio stream size, including Xing/LAME Header\\n\\n    var streamSize = gfc.VBR_seek_table.nBytesWritten + gfc.VBR_seek_table.TotalFrameSize;\\n    createInteger(buffer, streamIndex, 0 | streamSize);\\n    streamIndex += 4;\\n    /* Put TOC */\\n\\n    System.arraycopy(toc, 0, buffer, streamIndex, toc.length);\\n    streamIndex += toc.length;\\n\\n    if (gfp.error_protection) {\\n      // (jo) error_protection: add crc16 information to header\\n      bs.CRC_writeheader(gfc, buffer);\\n    } // work out CRC so far: initially crc = 0\\n\\n\\n    var crc = 0x00;\\n\\n    for (var i = 0; i < streamIndex; i++) {\\n      crc = crcUpdateLookup(buffer[i], crc);\\n    } // Put LAME VBR info\\n\\n\\n    streamIndex += putLameVBR(gfp, streamSize, buffer, streamIndex, crc);\\n    return gfc.VBR_seek_table.TotalFrameSize;\\n  };\\n  /**\\n   * Write final VBR tag to the file.\\n   *\\n   * @param gfp\\n   *            global flags\\n   * @param stream\\n   *            stream to add the VBR tag to\\n   * @return 0 (OK), -1 else\\n   * @throws IOException\\n   *             I/O error\\n   */\\n\\n\\n  this.putVbrTag = function (gfp, stream) {\\n    var gfc = gfp.internal_flags;\\n    if (gfc.VBR_seek_table.pos <= 0) return -1; // Seek to end of file\\n\\n    stream.seek(stream.length()); // Get file size, abort if file has zero length.\\n\\n    if (stream.length() == 0) return -1; // The VBR tag may NOT be located at the beginning of the stream. If an\\n    // ID3 version 2 tag was added, then it must be skipped to write the VBR\\n    // tag data.\\n\\n    var id3v2TagSize = skipId3v2(stream); // Seek to the beginning of the stream\\n\\n    stream.seek(id3v2TagSize);\\n    var buffer = new_byte(MAXFRAMESIZE);\\n    var bytes = getLameTagFrame(gfp, buffer);\\n\\n    if (bytes > buffer.length) {\\n      return -1;\\n    }\\n\\n    if (bytes < 1) {\\n      return 0;\\n    } // Put it all to disk again\\n\\n\\n    stream.write(buffer, 0, bytes); // success\\n\\n    return 0;\\n  };\\n}\\n\\nmodule.exports = VBRTag;\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[3],Array(298).concat([function(e,t){function n(e){return new Int16Array(e)}function o(e){return new Int32Array(e)}function a(e){return new Float32Array(e)}var r={fill:function(e,t,n,o){if(2==arguments.length)for(var a=0;a<e.length;a++)e[a]=arguments[1];else for(a=t;a<n;a++)e[a]=o}},c={arraycopy:function(e,t,n,o,a){for(var r=t+a;t<r;)n[o++]=e[t++]}},i={};function s(e){this.ordinal=e}i.SQRT2=1.4142135623730951,i.FAST_LOG10=function(e){return Math.log10(e)},i.FAST_LOG10_X=function(e,t){return Math.log10(e)*t},s.short_block_allowed=new s(0),s.short_block_coupled=new s(1),s.short_block_dispensed=new s(2),s.short_block_forced=new s(3);var l={};function M(e){this.ordinal=e}l.MAX_VALUE=3.4028235e38,M.vbr_off=new M(0),M.vbr_mt=new M(1),M.vbr_rh=new M(2),M.vbr_abr=new M(3),M.vbr_mtrh=new M(4),M.vbr_default=M.vbr_mtrh;e.exports={System:c,VbrMode:M,Float:l,ShortBlock:s,Util:i,Arrays:r,new_array_n:function e(t){if(1==t.length)return new Array(t[0]);var n=t[0];t=t.slice(1);for(var o=[],a=0;a<n;a++)o.push(e(t));return o},new_byte:function(e){return new Int8Array(e)},new_double:function(e){return new Float64Array(e)},new_float:a,new_float_n:function e(t){if(1==t.length)return a(t[0]);var n=t[0];t=t.slice(1);for(var o=[],r=0;r<n;r++)o.push(e(t));return o},new_int:o,new_int_n:function e(t){if(1==t.length)return o(t[0]);var n=t[0];t=t.slice(1);for(var a=[],r=0;r<n;r++)a.push(e(t));return a},new_short:n,new_short_n:function e(t){if(1==t.length)return n(t[0]);var o=t[0];t=t.slice(1);for(var a=[],r=0;r<o;r++)a.push(e(t));return a},assert:function(e){}}},function(e,t,n){var o=n(298),a=o.System,r=o.VbrMode,c=(o.Float,o.ShortBlock,o.Util,o.Arrays,o.new_array_n),i=(o.new_byte,o.new_double,o.new_float),s=o.new_float_n,l=o.new_int,M=(o.new_int_n,o.assert);function p(){var e=n(415),t=n(416),o=p.FFTOFFSET,u=p.MPG_MD_MS_LR,f=null;this.psy=null;var b=null,d=null,h=null;this.setModules=function(e,t,n,o){f=e,this.psy=t,b=t,d=o,h=n};var _=new e;this.lame_encode_mp3_frame=function(e,n,A,m,z,g){var O,L=c([2,2]);L[0][0]=new t,L[0][1]=new t,L[1][0]=new t,L[1][1]=new t;var y,v=c([2,2]);v[0][0]=new t,v[0][1]=new t,v[1][0]=new t,v[1][1]=new t;var N,q,T,B=[null,null],S=e.internal_flags,w=s([2,4]),W=[.5,.5],X=[[0,0],[0,0]],R=[[0,0],[0,0]];if(B[0]=n,B[1]=A,0==S.lame_encode_frame_init&&function(e,t){var n,o,a=e.internal_flags;if(0==a.lame_encode_frame_init){var r,c,s=i(2014),l=i(2014);for(a.lame_encode_frame_init=1,r=0,c=0;r<286+576*(1+a.mode_gr);++r)r<576*a.mode_gr?(s[r]=0,2==a.channels_out&&(l[r]=0)):(s[r]=t[0][c],2==a.channels_out&&(l[r]=t[1][c]),++c);for(o=0;o<a.mode_gr;o++)for(n=0;n<a.channels_out;n++)a.l3_side.tt[o][n].block_type=p.SHORT_TYPE;_.mdct_sub48(a,s,l),M(576>=p.FFTOFFSET),M(a.mf_size>=p.BLKSIZE+e.framesize-p.FFTOFFSET),M(a.mf_size>=512+e.framesize-32)}}(e,B),S.padding=0,(S.slot_lag-=S.frac_SpF)<0&&(S.slot_lag+=e.out_samplerate,S.padding=1),0!=S.psymodel){var E=[null,null],C=0,k=l(2);for(T=0;T<S.mode_gr;T++){for(q=0;q<S.channels_out;q++)E[q]=B[q],C=576+576*T-p.FFTOFFSET;if(0!=(e.VBR==r.vbr_mtrh||e.VBR==r.vbr_mt?b.L3psycho_anal_vbr(e,E,C,T,L,v,X[T],R[T],w[T],k):b.L3psycho_anal_ns(e,E,C,T,L,v,X[T],R[T],w[T],k)))return-4;for(e.mode==MPEGMode.JOINT_STEREO&&(W[T]=w[T][2]+w[T][3],W[T]>0&&(W[T]=w[T][3]/W[T])),q=0;q<S.channels_out;q++){var x=S.l3_side.tt[T][q];x.block_type=k[q],x.mixed_block_flag=0}}}else for(T=0;T<S.mode_gr;T++)for(q=0;q<S.channels_out;q++)S.l3_side.tt[T][q].block_type=p.NORM_TYPE,S.l3_side.tt[T][q].mixed_block_flag=0,R[T][q]=X[T][q]=700;if(function(e){var t,n;if(0!=e.ATH.useAdjust)if(n=e.loudness_sq[0][0],t=e.loudness_sq[1][0],2==e.channels_out?(n+=e.loudness_sq[0][1],t+=e.loudness_sq[1][1]):(n+=n,t+=t),2==e.mode_gr&&(n=Math.max(n,t)),n*=.5,(n*=e.ATH.aaSensitivityP)>.03125)e.ATH.adjust>=1?e.ATH.adjust=1:e.ATH.adjust<e.ATH.adjustLimit&&(e.ATH.adjust=e.ATH.adjustLimit),e.ATH.adjustLimit=1;else{var o=31.98*n+625e-6;e.ATH.adjust>=o?(e.ATH.adjust*=.075*o+.925,e.ATH.adjust<o&&(e.ATH.adjust=o)):e.ATH.adjustLimit>=o?e.ATH.adjust=o:e.ATH.adjust<e.ATH.adjustLimit&&(e.ATH.adjust=e.ATH.adjustLimit),e.ATH.adjustLimit=o}else e.ATH.adjust=1}(S),_.mdct_sub48(S,B[0],B[1]),S.mode_ext=p.MPG_MD_LR_LR,e.force_ms)S.mode_ext=p.MPG_MD_MS_LR;else if(e.mode==MPEGMode.JOINT_STEREO){var P=0,D=0;for(T=0;T<S.mode_gr;T++)for(q=0;q<S.channels_out;q++)P+=R[T][q],D+=X[T][q];if(P<=1*D){var F=S.l3_side.tt[0],I=S.l3_side.tt[S.mode_gr-1];F[0].block_type==F[1].block_type&&I[0].block_type==I[1].block_type&&(S.mode_ext=p.MPG_MD_MS_LR)}}if(S.mode_ext==u?(y=v,N=R):(y=L,N=X),e.analysis&&null!=S.pinfo)for(T=0;T<S.mode_gr;T++)for(q=0;q<S.channels_out;q++)S.pinfo.ms_ratio[T]=S.ms_ratio[T],S.pinfo.ms_ener_ratio[T]=W[T],S.pinfo.blocktype[T][q]=S.l3_side.tt[T][q].block_type,S.pinfo.pe[T][q]=N[T][q],a.arraycopy(S.l3_side.tt[T][q].xr,0,S.pinfo.xr[T][q],0,576),S.mode_ext==u&&(S.pinfo.ers[T][q]=S.pinfo.ers[T][q+2],a.arraycopy(S.pinfo.energy[T][q+2],0,S.pinfo.energy[T][q],0,S.pinfo.energy[T][q].length));if(e.VBR==r.vbr_off||e.VBR==r.vbr_abr){var H,V;for(H=0;H<18;H++)S.nsPsy.pefirbuf[H]=S.nsPsy.pefirbuf[H+1];for(V=0,T=0;T<S.mode_gr;T++)for(q=0;q<S.channels_out;q++)V+=N[T][q];for(S.nsPsy.pefirbuf[18]=V,V=S.nsPsy.pefirbuf[9],H=0;H<9;H++)V+=(S.nsPsy.pefirbuf[H]+S.nsPsy.pefirbuf[18-H])*p.fircoef[H];for(V=3350*S.mode_gr*S.channels_out/V,T=0;T<S.mode_gr;T++)for(q=0;q<S.channels_out;q++)N[T][q]*=V}if(S.iteration_loop.iteration_loop(e,N,W,y),f.format_bitstream(e),O=f.copy_buffer(S,m,z,g,1),e.bWriteVbrTag&&d.addVbrFrame(e),e.analysis&&null!=S.pinfo){for(q=0;q<S.channels_out;q++){var U;for(U=0;U<o;U++)S.pinfo.pcmdata[q][U]=S.pinfo.pcmdata[q][U+e.framesize];for(U=o;U<1600;U++)S.pinfo.pcmdata[q][U]=B[q][U-o]}h.set_frame_pinfo(e,y)}return function(e){var t,n;for(M(0<=e.bitrate_index&&e.bitrate_index<16),M(0<=e.mode_ext&&e.mode_ext<4),e.bitrate_stereoMode_Hist[e.bitrate_index][4]++,e.bitrate_stereoMode_Hist[15][4]++,2==e.channels_out&&(e.bitrate_stereoMode_Hist[e.bitrate_index][e.mode_ext]++,e.bitrate_stereoMode_Hist[15][e.mode_ext]++),t=0;t<e.mode_gr;++t)for(n=0;n<e.channels_out;++n){var o=0|e.l3_side.tt[t][n].block_type;0!=e.l3_side.tt[t][n].mixed_block_flag&&(o=4),e.bitrate_blockType_Hist[e.bitrate_index][o]++,e.bitrate_blockType_Hist[e.bitrate_index][5]++,e.bitrate_blockType_Hist[15][o]++,e.bitrate_blockType_Hist[15][5]++}}(S),O}}p.ENCDELAY=576,p.POSTDELAY=1152,p.MDCTDELAY=48,p.FFTOFFSET=224+p.MDCTDELAY,p.DECDELAY=528,p.SBLIMIT=32,p.CBANDS=64,p.SBPSY_l=21,p.SBPSY_s=12,p.SBMAX_l=22,p.SBMAX_s=13,p.PSFB21=6,p.PSFB12=6,p.BLKSIZE=1024,p.HBLKSIZE=p.BLKSIZE/2+1,p.BLKSIZE_s=256,p.HBLKSIZE_s=p.BLKSIZE_s/2+1,p.NORM_TYPE=0,p.START_TYPE=1,p.SHORT_TYPE=2,p.STOP_TYPE=3,p.MPG_MD_LR_LR=0,p.MPG_MD_LR_I=1,p.MPG_MD_MS_LR=2,p.MPG_MD_MS_I=3,p.fircoef=[-.1039435,-.1892065,5*-.0432472,-.155915,3.898045e-17,.0467745*5,.50455,.756825,.187098*5],e.exports=p},function(e,t,n){var o,a=n(387),r=n(345),c=n(389),i=n(390),s=n(391);\"undefined\"!==typeof ArrayBuffer&&(o=n(392));var l=\"undefined\"!==typeof navigator&&/Android/i.test(navigator.userAgent),M=\"undefined\"!==typeof navigator&&/PhantomJS/i.test(navigator.userAgent),p=l||M;t.protocol=3;var u=t.packets={open:0,close:1,ping:2,pong:3,message:4,upgrade:5,noop:6},f=a(u),b={type:\"error\",data:\"parser error\"},d=n(393);function h(e,t,n){for(var o=new Array(e.length),a=i(e.length,n),r=function(e,n,a){t(n,function(t,n){o[e]=n,a(t,o)})},c=0;c<e.length;c++)r(c,e[c],a)}t.encodePacket=function(e,n,o,a){\"function\"===typeof n&&(a=n,n=!1),\"function\"===typeof o&&(a=o,o=null);var r=void 0===e.data?void 0:e.data.buffer||e.data;if(\"undefined\"!==typeof ArrayBuffer&&r instanceof ArrayBuffer)return function(e,n,o){if(!n)return t.encodeBase64Packet(e,o);var a=e.data,r=new Uint8Array(a),c=new Uint8Array(1+a.byteLength);c[0]=u[e.type];for(var i=0;i<r.length;i++)c[i+1]=r[i];return o(c.buffer)}(e,n,a);if(\"undefined\"!==typeof d&&r instanceof d)return function(e,n,o){if(!n)return t.encodeBase64Packet(e,o);if(p)return function(e,n,o){if(!n)return t.encodeBase64Packet(e,o);var a=new FileReader;return a.onload=function(){t.encodePacket({type:e.type,data:a.result},n,!0,o)},a.readAsArrayBuffer(e.data)}(e,n,o);var a=new Uint8Array(1);a[0]=u[e.type];var r=new d([a.buffer,e.data]);return o(r)}(e,n,a);if(r&&r.base64)return function(e,n){var o=\"b\"+t.packets[e.type]+e.data.data;return n(o)}(e,a);var c=u[e.type];return void 0!==e.data&&(c+=o?s.encode(String(e.data),{strict:!1}):String(e.data)),a(\"\"+c)},t.encodeBase64Packet=function(e,n){var o,a=\"b\"+t.packets[e.type];if(\"undefined\"!==typeof d&&e.data instanceof d){var r=new FileReader;return r.onload=function(){var e=r.result.split(\",\")[1];n(a+e)},r.readAsDataURL(e.data)}try{o=String.fromCharCode.apply(null,new Uint8Array(e.data))}catch(l){for(var c=new Uint8Array(e.data),i=new Array(c.length),s=0;s<c.length;s++)i[s]=c[s];o=String.fromCharCode.apply(null,i)}return a+=btoa(o),n(a)},t.decodePacket=function(e,n,o){if(void 0===e)return b;if(\"string\"===typeof e){if(\"b\"===e.charAt(0))return t.decodeBase64Packet(e.substr(1),n);if(o&&!1===(e=function(e){try{e=s.decode(e,{strict:!1})}catch(t){return!1}return e}(e)))return b;var a=e.charAt(0);return Number(a)==a&&f[a]?e.length>1?{type:f[a],data:e.substring(1)}:{type:f[a]}:b}a=new Uint8Array(e)[0];var r=c(e,1);return d&&\"blob\"===n&&(r=new d([r])),{type:f[a],data:r}},t.decodeBase64Packet=function(e,t){var n=f[e.charAt(0)];if(!o)return{type:n,data:{base64:!0,data:e.substr(1)}};var a=o.decode(e.substr(1));return\"blob\"===t&&d&&(a=new d([a])),{type:n,data:a}},t.encodePayload=function(e,n,o){\"function\"===typeof n&&(o=n,n=null);var a=r(e);if(n&&a)return d&&!p?t.encodePayloadAsBlob(e,o):t.encodePayloadAsArrayBuffer(e,o);if(!e.length)return o(\"0:\");h(e,function(e,o){t.encodePacket(e,!!a&&n,!1,function(e){o(null,function(e){return e.length+\":\"+e}(e))})},function(e,t){return o(t.join(\"\"))})},t.decodePayload=function(e,n,o){if(\"string\"!==typeof e)return t.decodePayloadAsBinary(e,n,o);var a;if(\"function\"===typeof n&&(o=n,n=null),\"\"===e)return o(b,0,1);for(var r,c,i=\"\",s=0,l=e.length;s<l;s++){var M=e.charAt(s);if(\":\"===M){if(\"\"===i||i!=(r=Number(i)))return o(b,0,1);if(i!=(c=e.substr(s+1,r)).length)return o(b,0,1);if(c.length){if(a=t.decodePacket(c,n,!1),b.type===a.type&&b.data===a.data)return o(b,0,1);if(!1===o(a,s+r,l))return}s+=r,i=\"\"}else i+=M}return\"\"!==i?o(b,0,1):void 0},t.encodePayloadAsArrayBuffer=function(e,n){if(!e.length)return n(new ArrayBuffer(0));h(e,function(e,n){t.encodePacket(e,!0,!0,function(e){return n(null,e)})},function(e,t){var o=t.reduce(function(e,t){var n;return e+(n=\"string\"===typeof t?t.length:t.byteLength).toString().length+n+2},0),a=new Uint8Array(o),r=0;return t.forEach(function(e){var t=\"string\"===typeof e,n=e;if(t){for(var o=new Uint8Array(e.length),c=0;c<e.length;c++)o[c]=e.charCodeAt(c);n=o.buffer}a[r++]=t?0:1;var i=n.byteLength.toString();for(c=0;c<i.length;c++)a[r++]=parseInt(i[c]);a[r++]=255;for(o=new Uint8Array(n),c=0;c<o.length;c++)a[r++]=o[c]}),n(a.buffer)})},t.encodePayloadAsBlob=function(e,n){h(e,function(e,n){t.encodePacket(e,!0,!0,function(e){var t=new Uint8Array(1);if(t[0]=1,\"string\"===typeof e){for(var o=new Uint8Array(e.length),a=0;a<e.length;a++)o[a]=e.charCodeAt(a);e=o.buffer,t[0]=0}var r=(e instanceof ArrayBuffer?e.byteLength:e.size).toString(),c=new Uint8Array(r.length+1);for(a=0;a<r.length;a++)c[a]=parseInt(r[a]);if(c[r.length]=255,d){var i=new d([t.buffer,c.buffer,e]);n(null,i)}})},function(e,t){return n(new d(t))})},t.decodePayloadAsBinary=function(e,n,o){\"function\"===typeof n&&(o=n,n=null);for(var a=e,r=[];a.byteLength>0;){for(var i=new Uint8Array(a),s=0===i[0],l=\"\",M=1;255!==i[M];M++){if(l.length>310)return o(b,0,1);l+=i[M]}a=c(a,2+l.length),l=parseInt(l);var p=c(a,0,l);if(s)try{p=String.fromCharCode.apply(null,new Uint8Array(p))}catch(d){var u=new Uint8Array(p);p=\"\";for(M=0;M<u.length;M++)p+=String.fromCharCode(u[M])}r.push(p),a=c(a,l)}var f=r.length;r.forEach(function(e,a){o(t.decodePacket(e,n,!0),a,f)})}},function(e,t,n){\"use strict\";var o={};function a(e,t,n){n||(n=Error);var a=function(e){var n,o;function a(n,o,a){return e.call(this,function(e,n,o){return\"string\"===typeof t?t:t(e,n,o)}(n,o,a))||this}return o=e,(n=a).prototype=Object.create(o.prototype),n.prototype.constructor=n,n.__proto__=o,a}(n);a.prototype.name=n.name,a.prototype.code=e,o[e]=a}function r(e,t){if(Array.isArray(e)){var n=e.length;return e=e.map(function(e){return String(e)}),n>2?\"one of \".concat(t,\" \").concat(e.slice(0,n-1).join(\", \"),\", or \")+e[n-1]:2===n?\"one of \".concat(t,\" \").concat(e[0],\" or \").concat(e[1]):\"of \".concat(t,\" \").concat(e[0])}return\"of \".concat(t,\" \").concat(String(e))}a(\"ERR_INVALID_OPT_VALUE\",function(e,t){return'The value \"'+t+'\" is invalid for option \"'+e+'\"'},TypeError),a(\"ERR_INVALID_ARG_TYPE\",function(e,t,n){var o,a,c,i;if(\"string\"===typeof t&&(a=\"not \",t.substr(!c||c<0?0:+c,a.length)===a)?(o=\"must not be\",t=t.replace(/^not /,\"\")):o=\"must be\",function(e,t,n){return(void 0===n||n>e.length)&&(n=e.length),e.substring(n-t.length,n)===t}(e,\" argument\"))i=\"The \".concat(e,\" \").concat(o,\" \").concat(r(t,\"type\"));else{var s=function(e,t,n){return\"number\"!==typeof n&&(n=0),!(n+t.length>e.length)&&-1!==e.indexOf(t,n)}(e,\".\")?\"property\":\"argument\";i='The \"'.concat(e,'\" ').concat(s,\" \").concat(o,\" \").concat(r(t,\"type\"))}return i+=\". Received type \".concat(typeof n)},TypeError),a(\"ERR_STREAM_PUSH_AFTER_EOF\",\"stream.push() after EOF\"),a(\"ERR_METHOD_NOT_IMPLEMENTED\",function(e){return\"The \"+e+\" method is not implemented\"}),a(\"ERR_STREAM_PREMATURE_CLOSE\",\"Premature close\"),a(\"ERR_STREAM_DESTROYED\",function(e){return\"Cannot call \"+e+\" after a stream was destroyed\"}),a(\"ERR_MULTIPLE_CALLBACK\",\"Callback called multiple times\"),a(\"ERR_STREAM_CANNOT_PIPE\",\"Cannot pipe, not readable\"),a(\"ERR_STREAM_WRITE_AFTER_END\",\"write after end\"),a(\"ERR_STREAM_NULL_VALUES\",\"May not write null values to stream\",TypeError),a(\"ERR_UNKNOWN_ENCODING\",function(e){return\"Unknown encoding: \"+e},TypeError),a(\"ERR_STREAM_UNSHIFT_AFTER_END_EVENT\",\"stream.unshift() after end event\"),e.exports.codes=o},function(e,t,n){\"use strict\";(function(t){var o=Object.keys||function(e){var t=[];for(var n in e)t.push(n);return t};e.exports=l;var a=n(352),r=n(356);n(8)(l,a);for(var c=o(r.prototype),i=0;i<c.length;i++){var s=c[i];l.prototype[s]||(l.prototype[s]=r.prototype[s])}function l(e){if(!(this instanceof l))return new l(e);a.call(this,e),r.call(this,e),this.allowHalfOpen=!0,e&&(!1===e.readable&&(this.readable=!1),!1===e.writable&&(this.writable=!1),!1===e.allowHalfOpen&&(this.allowHalfOpen=!1,this.once(\"end\",M)))}function M(){this._writableState.ended||t.nextTick(p,this)}function p(e){e.end()}Object.defineProperty(l.prototype,\"writableHighWaterMark\",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(l.prototype,\"writableBuffer\",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(l.prototype,\"writableLength\",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(l.prototype,\"destroyed\",{enumerable:!1,get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed&&this._writableState.destroyed)},set:function(e){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}})}).call(this,n(18))},function(e,t,n){(function(o){function a(){var e;try{e=t.storage.debug}catch(n){}return!e&&\"undefined\"!==typeof o&&\"env\"in o&&(e=Object({NODE_ENV:\"production\",PUBLIC_URL:\"\"}).DEBUG),e}(t=e.exports=n(376)).log=function(){return\"object\"===typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},t.formatArgs=function(e){var n=this.useColors;if(e[0]=(n?\"%c\":\"\")+this.namespace+(n?\" %c\":\" \")+e[0]+(n?\"%c \":\" \")+\"+\"+t.humanize(this.diff),!n)return;var o=\"color: \"+this.color;e.splice(1,0,o,\"color: inherit\");var a=0,r=0;e[0].replace(/%[a-zA-Z%]/g,function(e){\"%%\"!==e&&(a++,\"%c\"===e&&(r=a))}),e.splice(r,0,o)},t.save=function(e){try{null==e?t.storage.removeItem(\"debug\"):t.storage.debug=e}catch(n){}},t.load=a,t.useColors=function(){if(\"undefined\"!==typeof window&&window.process&&\"renderer\"===window.process.type)return!0;if(\"undefined\"!==typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/))return!1;return\"undefined\"!==typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||\"undefined\"!==typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||\"undefined\"!==typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&parseInt(RegExp.$1,10)>=31||\"undefined\"!==typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/)},t.storage=\"undefined\"!=typeof chrome&&\"undefined\"!=typeof chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),t.colors=[\"#0000CC\",\"#0000FF\",\"#0033CC\",\"#0033FF\",\"#0066CC\",\"#0066FF\",\"#0099CC\",\"#0099FF\",\"#00CC00\",\"#00CC33\",\"#00CC66\",\"#00CC99\",\"#00CCCC\",\"#00CCFF\",\"#3300CC\",\"#3300FF\",\"#3333CC\",\"#3333FF\",\"#3366CC\",\"#3366FF\",\"#3399CC\",\"#3399FF\",\"#33CC00\",\"#33CC33\",\"#33CC66\",\"#33CC99\",\"#33CCCC\",\"#33CCFF\",\"#6600CC\",\"#6600FF\",\"#6633CC\",\"#6633FF\",\"#66CC00\",\"#66CC33\",\"#9900CC\",\"#9900FF\",\"#9933CC\",\"#9933FF\",\"#99CC00\",\"#99CC33\",\"#CC0000\",\"#CC0033\",\"#CC0066\",\"#CC0099\",\"#CC00CC\",\"#CC00FF\",\"#CC3300\",\"#CC3333\",\"#CC3366\",\"#CC3399\",\"#CC33CC\",\"#CC33FF\",\"#CC6600\",\"#CC6633\",\"#CC9900\",\"#CC9933\",\"#CCCC00\",\"#CCCC33\",\"#FF0000\",\"#FF0033\",\"#FF0066\",\"#FF0099\",\"#FF00CC\",\"#FF00FF\",\"#FF3300\",\"#FF3333\",\"#FF3366\",\"#FF3399\",\"#FF33CC\",\"#FF33FF\",\"#FF6600\",\"#FF6633\",\"#FF9900\",\"#FF9933\",\"#FFCC00\",\"#FFCC33\"],t.formatters.j=function(e){try{return JSON.stringify(e)}catch(t){return\"[UnexpectedJSONParseError]: \"+t.message}},t.enable(a())}).call(this,n(18))},function(e,t){t.encode=function(e){var t=\"\";for(var n in e)e.hasOwnProperty(n)&&(t.length&&(t+=\"&\"),t+=encodeURIComponent(n)+\"=\"+encodeURIComponent(e[n]));return t},t.decode=function(e){for(var t={},n=e.split(\"&\"),o=0,a=n.length;o<a;o++){var r=n[o].split(\"=\");t[decodeURIComponent(r[0])]=decodeURIComponent(r[1])}return t}},function(e,t){e.exports=function(e,t){var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}},function(e,t,n){(function(o){function a(){var e;try{e=t.storage.debug}catch(n){}return!e&&\"undefined\"!==typeof o&&\"env\"in o&&(e=Object({NODE_ENV:\"production\",PUBLIC_URL:\"\"}).DEBUG),e}(t=e.exports=n(394)).log=function(){return\"object\"===typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},t.formatArgs=function(e){var n=this.useColors;if(e[0]=(n?\"%c\":\"\")+this.namespace+(n?\" %c\":\" \")+e[0]+(n?\"%c \":\" \")+\"+\"+t.humanize(this.diff),!n)return;var o=\"color: \"+this.color;e.splice(1,0,o,\"color: inherit\");var a=0,r=0;e[0].replace(/%[a-zA-Z%]/g,function(e){\"%%\"!==e&&(a++,\"%c\"===e&&(r=a))}),e.splice(r,0,o)},t.save=function(e){try{null==e?t.storage.removeItem(\"debug\"):t.storage.debug=e}catch(n){}},t.load=a,t.useColors=function(){if(\"undefined\"!==typeof window&&window.process&&\"renderer\"===window.process.type)return!0;if(\"undefined\"!==typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/))return!1;return\"undefined\"!==typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||\"undefined\"!==typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||\"undefined\"!==typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&parseInt(RegExp.$1,10)>=31||\"undefined\"!==typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/)},t.storage=\"undefined\"!=typeof chrome&&\"undefined\"!=typeof chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),t.colors=[\"#0000CC\",\"#0000FF\",\"#0033CC\",\"#0033FF\",\"#0066CC\",\"#0066FF\",\"#0099CC\",\"#0099FF\",\"#00CC00\",\"#00CC33\",\"#00CC66\",\"#00CC99\",\"#00CCCC\",\"#00CCFF\",\"#3300CC\",\"#3300FF\",\"#3333CC\",\"#3333FF\",\"#3366CC\",\"#3366FF\",\"#3399CC\",\"#3399FF\",\"#33CC00\",\"#33CC33\",\"#33CC66\",\"#33CC99\",\"#33CCCC\",\"#33CCFF\",\"#6600CC\",\"#6600FF\",\"#6633CC\",\"#6633FF\",\"#66CC00\",\"#66CC33\",\"#9900CC\",\"#9900FF\",\"#9933CC\",\"#9933FF\",\"#99CC00\",\"#99CC33\",\"#CC0000\",\"#CC0033\",\"#CC0066\",\"#CC0099\",\"#CC00CC\",\"#CC00FF\",\"#CC3300\",\"#CC3333\",\"#CC3366\",\"#CC3399\",\"#CC33CC\",\"#CC33FF\",\"#CC6600\",\"#CC6633\",\"#CC9900\",\"#CC9933\",\"#CCCC00\",\"#CCCC33\",\"#FF0000\",\"#FF0033\",\"#FF0066\",\"#FF0099\",\"#FF00CC\",\"#FF00FF\",\"#FF3300\",\"#FF3333\",\"#FF3366\",\"#FF3399\",\"#FF33CC\",\"#FF33FF\",\"#FF6600\",\"#FF6633\",\"#FF9900\",\"#FF9933\",\"#FFCC00\",\"#FFCC33\"],t.formatters.j=function(e){try{return JSON.stringify(e)}catch(t){return\"[UnexpectedJSONParseError]: \"+t.message}},t.enable(a())}).call(this,n(18))},function(e,t,n){var o=n(298),a=(o.System,o.VbrMode,o.Float,o.ShortBlock,o.Util,o.Arrays,o.new_array_n,o.new_byte),r=o.new_double,c=o.new_float,i=o.new_float_n,s=o.new_int,l=o.new_int_n,M=(o.assert,n(418)),p=n(360),u=n(419),f=n(420),b=n(358),d=n(299),h=n(308);function _(){var e=40;function t(){this.write_timing=0,this.ptr=0,this.buf=a(e)}this.Class_ID=0,this.lame_encode_frame_init=0,this.iteration_init_init=0,this.fill_buffer_resample_init=0,this.mfbuf=i([2,_.MFSIZE]),this.mode_gr=0,this.channels_in=0,this.channels_out=0,this.resample_ratio=0,this.mf_samples_to_encode=0,this.mf_size=0,this.VBR_min_bitrate=0,this.VBR_max_bitrate=0,this.bitrate_index=0,this.samplerate_index=0,this.mode_ext=0,this.lowpass1=0,this.lowpass2=0,this.highpass1=0,this.highpass2=0,this.noise_shaping=0,this.noise_shaping_amp=0,this.substep_shaping=0,this.psymodel=0,this.noise_shaping_stop=0,this.subblock_gain=0,this.use_best_huffman=0,this.full_outer_loop=0,this.l3_side=new M,this.ms_ratio=c(2),this.padding=0,this.frac_SpF=0,this.slot_lag=0,this.tag_spec=null,this.nMusicCRC=0,this.OldValue=s(2),this.CurrentStep=s(2),this.masking_lower=0,this.bv_scf=s(576),this.pseudohalf=s(h.SFBMAX),this.sfb21_extra=!1,this.inbuf_old=new Array(2),this.blackfilt=new Array(2*_.BPC+1),this.itime=r(2),this.sideinfo_len=0,this.sb_sample=i([2,2,18,d.SBLIMIT]),this.amp_filter=c(32),this.header=new Array(_.MAX_HEADER_BUF),this.h_ptr=0,this.w_ptr=0,this.ancillary_flag=0,this.ResvSize=0,this.ResvMax=0,this.scalefac_band=new p,this.minval_l=c(d.CBANDS),this.minval_s=c(d.CBANDS),this.nb_1=i([4,d.CBANDS]),this.nb_2=i([4,d.CBANDS]),this.nb_s1=i([4,d.CBANDS]),this.nb_s2=i([4,d.CBANDS]),this.s3_ss=null,this.s3_ll=null,this.decay=0,this.thm=new Array(4),this.en=new Array(4),this.tot_ener=c(4),this.loudness_sq=i([2,2]),this.loudness_sq_save=c(2),this.mld_l=c(d.SBMAX_l),this.mld_s=c(d.SBMAX_s),this.bm_l=s(d.SBMAX_l),this.bo_l=s(d.SBMAX_l),this.bm_s=s(d.SBMAX_s),this.bo_s=s(d.SBMAX_s),this.npart_l=0,this.npart_s=0,this.s3ind=l([d.CBANDS,2]),this.s3ind_s=l([d.CBANDS,2]),this.numlines_s=s(d.CBANDS),this.numlines_l=s(d.CBANDS),this.rnumlines_l=c(d.CBANDS),this.mld_cb_l=c(d.CBANDS),this.mld_cb_s=c(d.CBANDS),this.numlines_s_num1=0,this.numlines_l_num1=0,this.pe=c(4),this.ms_ratio_s_old=0,this.ms_ratio_l_old=0,this.ms_ener_ratio_old=0,this.blocktype_old=s(2),this.nsPsy=new u,this.VBR_seek_table=new f,this.ATH=null,this.PSY=null,this.nogap_total=0,this.nogap_current=0,this.decode_on_the_fly=!0,this.findReplayGain=!0,this.findPeakSample=!0,this.PeakSample=0,this.RadioGain=0,this.AudiophileGain=0,this.rgdata=null,this.noclipGainChange=0,this.noclipScale=0,this.bitrate_stereoMode_Hist=l([16,5]),this.bitrate_blockType_Hist=l([16,6]),this.pinfo=null,this.hip=null,this.in_buffer_nsamples=0,this.in_buffer_0=null,this.in_buffer_1=null,this.iteration_loop=null;for(var n=0;n<this.en.length;n++)this.en[n]=new b;for(n=0;n<this.thm.length;n++)this.thm[n]=new b;for(n=0;n<this.header.length;n++)this.header[n]=new t}_.MFSIZE=3456+d.ENCDELAY-d.MDCTDELAY,_.MAX_HEADER_BUF=256,_.MAX_BITS_PER_CHANNEL=4095,_.MAX_BITS_PER_GRANULE=7680,_.BPC=320,e.exports=_},function(e,t,n){var o=n(299),a={};a.SFBMAX=3*o.SBMAX_s,e.exports=a},function(e,t,n){var o,a;e.exports=(o=n(310),a=n(0),function(e){var t={};function n(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var a in e)n.d(o,a,function(t){return e[t]}.bind(null,a));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=6)}([function(e,t,n){e.exports=n(3)()},function(e,t){e.exports=o},function(e,t){e.exports=a},function(e,t,n){\"use strict\";var o=n(4);function a(){}function r(){}r.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,r,c){if(c!==o){var i=new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\");throw i.name=\"Invariant Violation\",i}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:r,resetWarningCache:a};return n.PropTypes=n,n}},function(e,t,n){\"use strict\";e.exports=\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\"},function(e,t,n){var o,a,r,c,i;c=this,i=function(e){var t=!1,n=!1,o=\"escape years months weeks days hours minutes seconds milliseconds general\".split(\" \"),a=[{type:\"seconds\",targets:[{type:\"minutes\",value:60},{type:\"hours\",value:3600},{type:\"days\",value:86400},{type:\"weeks\",value:604800},{type:\"months\",value:2678400},{type:\"years\",value:31536e3}]},{type:\"minutes\",targets:[{type:\"hours\",value:60},{type:\"days\",value:1440},{type:\"weeks\",value:10080},{type:\"months\",value:44640},{type:\"years\",value:525600}]},{type:\"hours\",targets:[{type:\"days\",value:24},{type:\"weeks\",value:168},{type:\"months\",value:744},{type:\"years\",value:8760}]},{type:\"days\",targets:[{type:\"weeks\",value:7},{type:\"months\",value:31},{type:\"years\",value:365}]},{type:\"months\",targets:[{type:\"years\",value:12}]}];function r(e,t){return!(t.length>e.length)&&-1!==e.indexOf(t)}function c(e){for(var t=\"\";e;)t+=\"0\",e-=1;return t}function i(e,t,o){var a,r,s,l=t.useToLocaleString,M=t.useGrouping,p=M&&t.grouping.slice(),u=t.maximumSignificantDigits,f=t.minimumIntegerDigits||1,b=t.fractionDigits||0,d=t.groupingSeparator,h=t.decimalSeparator;if(l&&o){var _={minimumIntegerDigits:f,useGrouping:M};if(b&&(_.maximumFractionDigits=b,_.minimumFractionDigits=b),u&&e>0&&(_.maximumSignificantDigits=u),!n){var A=g({},t);A.useGrouping=!1,A.decimalSeparator=\".\",e=parseFloat(i(e,A),10)}return e.toLocaleString(o,_)}var m=(u?e.toPrecision(u+1):e.toFixed(b+1)).split(\"e\");s=m[1]||\"\",r=(m=m[0].split(\".\"))[1]||\"\";var z=(a=m[0]||\"\").length,O=r.length,L=z+O,y=a+r;(u&&L===u+1||!u&&O===b+1)&&((y=function(e){for(var t=e.split(\"\").reverse(),n=0,o=!0;o&&n<t.length;)n?\"9\"===t[n]?t[n]=\"0\":(t[n]=(parseInt(t[n],10)+1).toString(),o=!1):(parseInt(t[n],10)<5&&(o=!1),t[n]=\"0\"),n+=1;return o&&t.push(\"1\"),t.reverse().join(\"\")}(y)).length===L+1&&(z+=1),O&&(y=y.slice(0,-1)),a=y.slice(0,z),r=y.slice(z)),u&&(r=r.replace(/0*$/,\"\"));var v=parseInt(s,10);v>0?r.length<=v?(a+=r+=c(v-r.length),r=\"\"):(a+=r.slice(0,v),r=r.slice(v)):v<0&&(r=c(Math.abs(v)-a.length)+a+r,a=\"0\"),u||((r=r.slice(0,b)).length<b&&(r+=c(b-r.length)),a.length<f&&(a=c(f-a.length)+a));var N,q=\"\";if(M)for(m=a;m.length;)p.length&&(N=p.shift()),q&&(q=d+q),q=m.slice(-N)+q,m=m.slice(0,-N);else q=a;return r&&(q=q+h+r),q}function s(e,t){return e.label.length>t.label.length?-1:e.label.length<t.label.length?1:0}var l,M={durationLabelsStandard:{S:\"millisecond\",SS:\"milliseconds\",s:\"second\",ss:\"seconds\",m:\"minute\",mm:\"minutes\",h:\"hour\",hh:\"hours\",d:\"day\",dd:\"days\",w:\"week\",ww:\"weeks\",M:\"month\",MM:\"months\",y:\"year\",yy:\"years\"},durationLabelsShort:{S:\"msec\",SS:\"msecs\",s:\"sec\",ss:\"secs\",m:\"min\",mm:\"mins\",h:\"hr\",hh:\"hrs\",d:\"dy\",dd:\"dys\",w:\"wk\",ww:\"wks\",M:\"mo\",MM:\"mos\",y:\"yr\",yy:\"yrs\"},durationTimeTemplates:{HMS:\"h:mm:ss\",HM:\"h:mm\",MS:\"m:ss\"},durationLabelTypes:[{type:\"standard\",string:\"__\"},{type:\"short\",string:\"_\"}],durationPluralKey:function(e,t,n){return 1===t&&null===n?e:e+e}};function p(e){return\"[object Array]\"===Object.prototype.toString.call(e)}function u(e){return\"[object Object]\"===Object.prototype.toString.call(e)}function f(e,t){var n,o=0,a=e&&e.length||0;for(\"function\"!=typeof t&&(n=t,t=function(e){return e===n});o<a;){if(t(e[o]))return e[o];o+=1}}function b(e,t){var n=0,o=e.length;if(e&&o)for(;n<o;){if(!1===t(e[n],n))return;n+=1}}function d(e,t){var n=0,o=e.length,a=[];if(!e||!o)return a;for(;n<o;)a[n]=t(e[n],n),n+=1;return a}function h(e,t){return d(e,function(e){return e[t]})}function _(e){var t=[];return b(e,function(e){e&&t.push(e)}),t}function A(e){var t=[];return b(e,function(e){f(t,e)||t.push(e)}),t}function m(e,t){var n=[];return b(e,function(e){b(t,function(t){e===t&&n.push(e)})}),A(n)}function z(e,t){var n=[];return b(e,function(o,a){if(!t(o))return n=e.slice(a),!1}),n}function g(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}function O(e){var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(n);return t}function L(e,t){var n=0,o=e.length;if(!e||!o)return!1;for(;n<o;){if(!0===t(e[n],n))return!0;n+=1}return!1}function y(){var e,t=[].slice.call(arguments),n={};if(b(t,function(t,o){if(!o){if(!p(t))throw\"Expected array as the first argument to durationsFormat.\";e=t}\"string\"!=typeof t&&\"function\"!=typeof t?\"number\"!=typeof t?u(t)&&g(n,t):n.precision=t:n.template=t}),!e||!e.length)return[];n.returnMomentTypes=!0;var a,r=d(e,function(e){return e.format(n)}),c=m(o,A(h((a=[],b(r,function(e){a=a.concat(e)}),a),\"type\"))),i=n.largest;return i&&(c=c.slice(0,i)),n.returnMomentTypes=!1,n.outputTypes=c,d(e,function(e){return e.format(n)})}function v(){var n=[].slice.call(arguments),c=g({},this.format.defaults),l=this.asMilliseconds(),y=this.asMonths();\"function\"==typeof this.isValid&&!1===this.isValid()&&(l=0,y=0);var v=l<0,N=e.duration(Math.abs(l),\"milliseconds\"),q=e.duration(Math.abs(y),\"months\");b(n,function(e){\"string\"!=typeof e&&\"function\"!=typeof e?\"number\"!=typeof e?u(e)&&g(c,e):c.precision=e:c.template=e});var T={years:\"y\",months:\"M\",weeks:\"w\",days:\"d\",hours:\"h\",minutes:\"m\",seconds:\"s\",milliseconds:\"S\"},B={escape:/\\[(.+?)\\]/,years:/\\*?[Yy]+/,months:/\\*?M+/,weeks:/\\*?[Ww]+/,days:/\\*?[Dd]+/,hours:/\\*?[Hh]+/,minutes:/\\*?m+/,seconds:/\\*?s+/,milliseconds:/\\*?S+/,general:/.+?/};c.types=o;var S=function(e){return f(o,function(t){return B[t].test(e)})},w=new RegExp(d(o,function(e){return B[e].source}).join(\"|\"),\"g\");c.duration=this;var W=\"function\"==typeof c.template?c.template.apply(c):c.template,X=c.outputTypes,R=c.returnMomentTypes,E=c.largest,C=[];X||(p(c.stopTrim)&&(c.stopTrim=c.stopTrim.join(\"\")),c.stopTrim&&b(c.stopTrim.match(w),function(e){var t=S(e);\"escape\"!==t&&\"general\"!==t&&C.push(t)}));var k=e.localeData();k||(k={}),b(O(M),function(e){\"function\"!=typeof M[e]?k[\"_\"+e]||(k[\"_\"+e]=M[e]):k[e]||(k[e]=M[e])}),b(O(k._durationTimeTemplates),function(e){W=W.replace(\"_\"+e+\"_\",k._durationTimeTemplates[e])});var x=c.userLocale||e.locale(),P=c.useLeftUnits,D=c.usePlural,F=c.precision,I=c.forceLength,H=c.useGrouping,V=c.trunc,U=c.useSignificantDigits&&F>0,j=U?c.precision:0,Y=j,G=c.minValue,K=!1,Q=c.maxValue,J=!1,Z=c.useToLocaleString,$=c.groupingSeparator,ee=c.decimalSeparator,te=c.grouping;Z=Z&&t;var ne=c.trim;p(ne)&&(ne=ne.join(\" \")),null===ne&&(E||Q||U)&&(ne=\"all\"),null!==ne&&!0!==ne&&\"left\"!==ne&&\"right\"!==ne||(ne=\"large\"),!1===ne&&(ne=\"\");var oe=function(e){return e.test(ne)},ae=/both/,re=/^all|[^sm]all/,ce=E>0||L([/large/,ae,re],oe),ie=L([/small/,ae,re],oe),se=L([/mid/,re],oe),le=L([/final/,re],oe),Me=d(W.match(w),function(e,t){var n=S(e);return\"*\"===e.slice(0,1)&&(e=e.slice(1),\"escape\"!==n&&\"general\"!==n&&C.push(n)),{index:t,length:e.length,text:\"\",token:\"escape\"===n?e.replace(B.escape,\"$1\"):e,type:\"escape\"===n||\"general\"===n?null:n}}),pe={index:0,length:0,token:\"\",text:\"\",type:null},ue=[];P&&Me.reverse(),b(Me,function(e){if(e.type)return(pe.type||pe.text)&&ue.push(pe),void(pe=e);P?pe.text=e.token+pe.text:pe.text+=e.token}),(pe.type||pe.text)&&ue.push(pe),P&&ue.reverse();var fe=m(o,A(_(h(ue,\"type\"))));if(!fe.length)return h(ue,\"text\").join(\"\");fe=d(fe,function(e,t){var n,o=t+1===fe.length,a=!t;n=\"years\"===e||\"months\"===e?q.as(e):N.as(e);var r=Math.floor(n),i=n-r,s=f(ue,function(t){return e===t.type});return a&&Q&&n>Q&&(J=!0),o&&G&&Math.abs(c.duration.as(e))<G&&(K=!0),a&&null===I&&s.length>1&&(I=!0),N.subtract(r,e),q.subtract(r,e),{rawValue:n,wholeValue:r,decimalValue:o?i:0,isSmallest:o,isLargest:a,type:e,tokenLength:s.length}});var be,de=V?Math.floor:Math.round,he=function(e,t){var n=Math.pow(10,t);return de(e*n)/n},_e=!1,Ae=!1,me=function(e,t){var n={useGrouping:H,groupingSeparator:$,decimalSeparator:ee,grouping:te,useToLocaleString:Z};return U&&(j<=0?(e.rawValue=0,e.wholeValue=0,e.decimalValue=0):(n.maximumSignificantDigits=j,e.significantDigits=j)),J&&!Ae&&(e.isLargest?(e.wholeValue=Q,e.decimalValue=0):(e.wholeValue=0,e.decimalValue=0)),K&&!Ae&&(e.isSmallest?(e.wholeValue=G,e.decimalValue=0):(e.wholeValue=0,e.decimalValue=0)),e.isSmallest||e.significantDigits&&e.significantDigits-e.wholeValue.toString().length<=0?F<0?e.value=he(e.wholeValue,F):0===F?e.value=de(e.wholeValue+e.decimalValue):U?(e.value=V?he(e.rawValue,j-e.wholeValue.toString().length):e.rawValue,e.wholeValue&&(j-=e.wholeValue.toString().length)):(n.fractionDigits=F,e.value=V?e.wholeValue+he(e.decimalValue,F):e.wholeValue+e.decimalValue):U&&e.wholeValue?(e.value=Math.round(he(e.wholeValue,e.significantDigits-e.wholeValue.toString().length)),j-=e.wholeValue.toString().length):e.value=e.wholeValue,e.tokenLength>1&&(I||_e)&&(n.minimumIntegerDigits=e.tokenLength,Ae&&n.maximumSignificantDigits<e.tokenLength&&delete n.maximumSignificantDigits),!_e&&(e.value>0||\"\"===ne||f(C,e.type)||f(X,e.type))&&(_e=!0),e.formattedValue=i(e.value,n,x),n.useGrouping=!1,n.decimalSeparator=\".\",e.formattedValueEn=i(e.value,n,\"en\"),2===e.tokenLength&&\"milliseconds\"===e.type&&(e.formattedValueMS=i(e.value,{minimumIntegerDigits:3,useGrouping:!1},\"en\").slice(0,2)),e};if((fe=_(fe=d(fe,me))).length>1){var ze=function(e){return f(fe,function(t){return t.type===e})};b(a,function(e){var t=ze(e.type);t&&b(e.targets,function(e){var n=ze(e.type);n&&parseInt(t.formattedValueEn,10)===e.value&&(t.rawValue=0,t.wholeValue=0,t.decimalValue=0,n.rawValue+=1,n.wholeValue+=1,n.decimalValue=0,n.formattedValueEn=n.wholeValue.toString(),Ae=!0)})})}return Ae&&(_e=!1,j=Y,fe=_(fe=d(fe,me))),!X||J&&!c.trim?(ce&&(fe=z(fe,function(e){return!e.isSmallest&&!e.wholeValue&&!f(C,e.type)})),E&&fe.length&&(fe=fe.slice(0,E)),ie&&fe.length>1&&(be=function(e){return!e.wholeValue&&!f(C,e.type)&&!e.isLargest},fe=z(fe.slice().reverse(),be).reverse()),se&&(fe=_(fe=d(fe,function(e,t){return t>0&&t<fe.length-1&&!e.wholeValue?null:e}))),!le||1!==fe.length||fe[0].wholeValue||!V&&fe[0].isSmallest&&fe[0].rawValue<G||(fe=[])):fe=_(fe=d(fe,function(e){return f(X,function(t){return e.type===t})?e:null})),R?fe:(b(ue,function(e){var t=T[e.type],n=f(fe,function(t){return t.type===e.type});if(t&&n){var o=n.formattedValueEn.split(\".\");o[0]=parseInt(o[0],10),o[1]?o[1]=parseFloat(\"0.\"+o[1],10):o[1]=null;var a=k.durationPluralKey(t,o[0],o[1]),c=function(e,t){var n=[];return b(O(t),function(o){if(\"_durationLabels\"===o.slice(0,15)){var a=o.slice(15).toLowerCase();b(O(t[o]),function(r){r.slice(0,1)===e&&n.push({type:a,key:r,label:t[o][r]})})}}),n}(t,k),i=!1,l={};b(k._durationLabelTypes,function(t){var n=f(c,function(e){return e.type===t.type&&e.key===a});n&&(l[n.type]=n.label,r(e.text,t.string)&&(e.text=e.text.replace(t.string,n.label),i=!0))}),D&&!i&&(c.sort(s),b(c,function(t){return l[t.type]===t.label?!r(e.text,t.label)&&void 0:r(e.text,t.label)?(e.text=e.text.replace(t.label,l[t.type]),!1):void 0}))}}),(ue=d(ue,function(e){if(!e.type)return e.text;var t=f(fe,function(t){return t.type===e.type});if(!t)return\"\";var n=\"\";return P&&(n+=e.text),(v&&J||!v&&K)&&(n+=\"< \",J=!1,K=!1),(v&&K||!v&&J)&&(n+=\"> \",J=!1,K=!1),v&&(t.value>0||\"\"===ne||f(C,t.type)||f(X,t.type))&&(n+=\"-\",v=!1),\"milliseconds\"===e.type&&t.formattedValueMS?n+=t.formattedValueMS:n+=t.formattedValue,P||(n+=e.text),n})).join(\"\").replace(/(,| |:|\\.)*$/,\"\").replace(/^(,| |:|\\.)*/,\"\"))}function N(){var e=this.duration,t=function(t){return e._data[t]},n=f(this.types,t),o=function(e,t){for(var n=e.length;n-=1;)if(t(e[n]))return e[n]}(this.types,t);switch(n){case\"milliseconds\":return\"S __\";case\"seconds\":case\"minutes\":return\"*_MS_\";case\"hours\":return\"_HMS_\";case\"days\":if(n===o)return\"d __\";case\"weeks\":return n===o?\"w __\":(null===this.trim&&(this.trim=\"both\"),\"w __, d __, h __\");case\"months\":if(n===o)return\"M __\";case\"years\":return n===o?\"y __\":(null===this.trim&&(this.trim=\"both\"),\"y __, M __, d __\");default:return null===this.trim&&(this.trim=\"both\"),\"y __, d __, h __, m __, s __\"}}function q(e){if(!e)throw\"Moment Duration Format init cannot find moment instance.\";e.duration.format=y,e.duration.fn.format=v,e.duration.fn.format.defaults={trim:null,stopTrim:null,largest:null,maxValue:null,minValue:null,precision:0,trunc:!1,forceLength:null,userLocale:null,usePlural:!0,useLeftUnits:!1,useGrouping:!0,useSignificantDigits:!1,template:N,useToLocaleString:!0,groupingSeparator:\",\",decimalSeparator:\".\",grouping:[3]},e.updateLocale(\"en\",M)}return t=!!((l=(l=!0)&&function(){try{(0).toLocaleString(\"i\")}catch(e){return\"RangeError\"===e.name}return!1}())&&(l=(l=(l=l&&\"1\"===1..toLocaleString(\"en\",{minimumIntegerDigits:1}))&&\"01\"===1..toLocaleString(\"en\",{minimumIntegerDigits:2}))&&\"001\"===1..toLocaleString(\"en\",{minimumIntegerDigits:3}))&&(l=(l=(l=(l=l&&\"100\"===99.99.toLocaleString(\"en\",{maximumFractionDigits:0,minimumFractionDigits:0}))&&\"100.0\"===99.99.toLocaleString(\"en\",{maximumFractionDigits:1,minimumFractionDigits:1}))&&\"99.99\"===99.99.toLocaleString(\"en\",{maximumFractionDigits:2,minimumFractionDigits:2}))&&\"99.990\"===99.99.toLocaleString(\"en\",{maximumFractionDigits:3,minimumFractionDigits:3}))&&(l=(l=(l=(l=(l=l&&\"100\"===99.99.toLocaleString(\"en\",{maximumSignificantDigits:1}))&&\"100\"===99.99.toLocaleString(\"en\",{maximumSignificantDigits:2}))&&\"100\"===99.99.toLocaleString(\"en\",{maximumSignificantDigits:3}))&&\"99.99\"===99.99.toLocaleString(\"en\",{maximumSignificantDigits:4}))&&\"99.99\"===99.99.toLocaleString(\"en\",{maximumSignificantDigits:5}))&&(l=(l=l&&\"1,000\"===1e3.toLocaleString(\"en\",{useGrouping:!0}))&&\"1000\"===1e3.toLocaleString(\"en\",{useGrouping:!1}))),n=t&&\"3.6\"===3.55.toLocaleString(\"en\",{useGrouping:!1,minimumIntegerDigits:1,minimumFractionDigits:1,maximumFractionDigits:1}),q(e),q},a=[n(1)],void 0===(r=\"function\"==typeof(o=i)?o.apply(t,a):o)||(e.exports=r),c&&(c.momentDurationFormatSetup=c.moment?i(c.moment):i)},function(e,t,n){\"use strict\";n.r(t);var o=n(2),a=n.n(o),r=n(0),c=n.n(r),i=n(1),s=n.n(i);function l(e){return(l=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function M(e){return(M=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function f(e,t,n){return t&&u(e.prototype,t),n&&u(e,n),e}function b(e,t){return(b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n(5),n.d(t,\"default\",function(){return m});var h=[c.a.string,c.a.number,c.a.array,c.a.object],_=[c.a.string,c.a.array],A=[c.a.object,c.a.bool],m=function(e){function t(e){var n,o;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,t),o=M(t).call(this,e),n=!o||\"object\"!==l(o)&&\"function\"!=typeof o?p(this):o,d(p(n),\"setTimer\",function(){var e=n.props.interval;n.clearTimer(),t.pooledTimer||0===e||(n.timer=setInterval(function(){n.update(n.props)},e))}),d(p(n),\"clearTimer\",function(){!t.pooledTimer&&n.timer&&(clearInterval(n.timer),n.timer=null),t.pooledTimer&&!n.timer&&t.removePooledElement(p(n))}),d(p(n),\"getTitle\",function(){var e=n.props.titleFormat,o=t.getDatetime(n.props),a=e||t.globalFormat;return o.format(a)}),t.globalMoment||(t.globalMoment=s.a),n.state={content:\"\"},n.timer=null,n}return function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(t,a.a.Component),f(t,null,[{key:\"startPooledTimer\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:6e4;t.clearPooledTimer(),t.pooledTimer=setInterval(function(){t.pooledElements.forEach(function(e){0!==e.props.interval&&e.update()})},e)}},{key:\"clearPooledTimer\",value:function(){t.pooledTimer&&(clearInterval(t.pooledTimer),t.pooledTimer=null,t.pooledElements=[])}},{key:\"pushPooledElement\",value:function(e){e instanceof t?-1===t.pooledElements.indexOf(e)&&t.pooledElements.push(e):console.error(\"Element not an instance of Moment.\")}},{key:\"removePooledElement\",value:function(e){var n=t.pooledElements.indexOf(e);-1!==n&&t.pooledElements.splice(n,1)}},{key:\"getDatetime\",value:function(e){var n=e.utc,o=e.unix,a=e.date,r=e.locale,c=e.parse,i=e.tz,s=e.local;a=a||e.children,c=c||t.globalParse,s=s||t.globalLocal,i=i||t.globalTimezone,r=t.globalLocale?t.globalLocale:r||t.globalMoment.locale();var l=null;return l=n?t.globalMoment.utc(a,c,r):o?t.globalMoment(1e3*a,c,r):t.globalMoment(a,c,r),i?l=l.tz(i):s&&(l=l.local()),l}}]),f(t,[{key:\"componentWillMount\",value:function(){this.update(this.props)}},{key:\"componentDidMount\",value:function(){this.setTimer(),t.pooledTimer&&t.pushPooledElement(this)}},{key:\"componentWillReceiveProps\",value:function(e){this.update(e)}},{key:\"componentDidUpdate\",value:function(e){var t=this.props.interval;e.interval!==t&&this.setTimer()}},{key:\"componentWillUnmount\",value:function(){this.clearTimer()}},{key:\"update\",value:function(e){var n=e=e||this.props,o=n.fromNow,a=n.fromNowDuring,r=n.from,c=n.add,i=n.subtract,l=n.toNow,M=n.to,p=n.ago,u=n.calendar,f=n.diff,b=n.duration,d=n.durationFromNow,h=n.unit,_=n.decimal,A=n.onChange,m=e.format;m=m||t.globalFormat;var z=t.getDatetime(e);c&&z.add(c),i&&z.subtract(i);var g=Boolean(a)&&-z.diff(s()())<a,O=\"\";O=m&&!g?z.format(m):r?z.from(r,p):o||g?z.fromNow(p):M?z.to(M,p):l?z.toNow(p):u?z.calendar(null,u):f?z.diff(f,h,_):b?z.diff(b):d?s()().diff(z):z.toString(),(b||d)&&(O=(O=s.a.duration(O)).format(m));var L=t.globalFilter||this.props.filter;O=L(O),this.setState({content:O},function(){A(O)})}},{key:\"render\",value:function(){var e,n,o,r,c=this.props,i=c.withTitle,s=c.element,l=function(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}(c,[\"withTitle\",\"element\"]),M=this.state.content,p=(e=l,n=t.propTypes,o=Object.keys(n),r=Object.assign({},e),Object.keys(r).filter(function(e){return-1!==o.indexOf(e)}).forEach(function(e){return delete r[e]}),r);return i&&(p.title=this.getTitle()),a.a.createElement(s||t.globalElement,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},o=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),o.forEach(function(t){d(e,t,n[t])})}return e}({dateTime:t.getDatetime(this.props)},p),M)}}]),t}();d(m,\"propTypes\",{element:c.a.any,date:c.a.oneOfType(h),parse:c.a.oneOfType(_),format:c.a.string,add:c.a.object,subtract:c.a.object,ago:c.a.bool,fromNow:c.a.bool,fromNowDuring:c.a.number,from:c.a.oneOfType(h),toNow:c.a.bool,to:c.a.oneOfType(h),calendar:c.a.oneOfType(A),unix:c.a.bool,utc:c.a.bool,local:c.a.bool,tz:c.a.string,withTitle:c.a.bool,titleFormat:c.a.string,locale:c.a.string,interval:c.a.number,diff:c.a.oneOfType(h),duration:c.a.oneOfType(h),durationFromNow:c.a.bool,unit:c.a.string,decimal:c.a.bool,filter:c.a.func,onChange:c.a.func}),d(m,\"defaultProps\",{element:null,fromNow:!1,toNow:!1,calendar:!1,ago:!1,unix:!1,utc:!1,local:!1,unit:null,withTitle:!1,decimal:!1,titleFormat:\"\",interval:6e4,filter:function(e){return e},onChange:function(){}}),d(m,\"globalMoment\",null),d(m,\"globalLocale\",null),d(m,\"globalLocal\",null),d(m,\"globalFormat\",null),d(m,\"globalParse\",null),d(m,\"globalFilter\",null),d(m,\"globalElement\",\"time\"),d(m,\"globalTimezone\",null),d(m,\"pooledElements\",[]),d(m,\"pooledTimer\",null)}]))},function(e,t,n){(function(e){e.exports=function(){\"use strict\";var t,n;function o(){return t.apply(null,arguments)}function a(e){return e instanceof Array||\"[object Array]\"===Object.prototype.toString.call(e)}function r(e){return null!=e&&\"[object Object]\"===Object.prototype.toString.call(e)}function c(e){return void 0===e}function i(e){return\"number\"===typeof e||\"[object Number]\"===Object.prototype.toString.call(e)}function s(e){return e instanceof Date||\"[object Date]\"===Object.prototype.toString.call(e)}function l(e,t){var n,o=[];for(n=0;n<e.length;++n)o.push(t(e[n],n));return o}function M(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function p(e,t){for(var n in t)M(t,n)&&(e[n]=t[n]);return M(t,\"toString\")&&(e.toString=t.toString),M(t,\"valueOf\")&&(e.valueOf=t.valueOf),e}function u(e,t,n,o){return Bt(e,t,n,o,!0).utc()}function f(e){return null==e._pf&&(e._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}),e._pf}function b(e){if(null==e._isValid){var t=f(e),o=n.call(t.parsedDateParts,function(e){return null!=e}),a=!isNaN(e._d.getTime())&&t.overflow<0&&!t.empty&&!t.invalidMonth&&!t.invalidWeekday&&!t.weekdayMismatch&&!t.nullInput&&!t.invalidFormat&&!t.userInvalidated&&(!t.meridiem||t.meridiem&&o);if(e._strict&&(a=a&&0===t.charsLeftOver&&0===t.unusedTokens.length&&void 0===t.bigHour),null!=Object.isFrozen&&Object.isFrozen(e))return a;e._isValid=a}return e._isValid}function d(e){var t=u(NaN);return null!=e?p(f(t),e):f(t).userInvalidated=!0,t}n=Array.prototype.some?Array.prototype.some:function(e){for(var t=Object(this),n=t.length>>>0,o=0;o<n;o++)if(o in t&&e.call(this,t[o],o,t))return!0;return!1};var h=o.momentProperties=[];function _(e,t){var n,o,a;if(c(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),c(t._i)||(e._i=t._i),c(t._f)||(e._f=t._f),c(t._l)||(e._l=t._l),c(t._strict)||(e._strict=t._strict),c(t._tzm)||(e._tzm=t._tzm),c(t._isUTC)||(e._isUTC=t._isUTC),c(t._offset)||(e._offset=t._offset),c(t._pf)||(e._pf=f(t)),c(t._locale)||(e._locale=t._locale),h.length>0)for(n=0;n<h.length;n++)o=h[n],c(a=t[o])||(e[o]=a);return e}var A=!1;function m(e){_(this,e),this._d=new Date(null!=e._d?e._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===A&&(A=!0,o.updateOffset(this),A=!1)}function z(e){return e instanceof m||null!=e&&null!=e._isAMomentObject}function g(e){return e<0?Math.ceil(e)||0:Math.floor(e)}function O(e){var t=+e,n=0;return 0!==t&&isFinite(t)&&(n=g(t)),n}function L(e,t,n){var o,a=Math.min(e.length,t.length),r=Math.abs(e.length-t.length),c=0;for(o=0;o<a;o++)(n&&e[o]!==t[o]||!n&&O(e[o])!==O(t[o]))&&c++;return c+r}function y(e){!1===o.suppressDeprecationWarnings&&\"undefined\"!==typeof console&&console.warn&&console.warn(\"Deprecation warning: \"+e)}function v(e,t){var n=!0;return p(function(){if(null!=o.deprecationHandler&&o.deprecationHandler(null,e),n){for(var a,r=[],c=0;c<arguments.length;c++){if(a=\"\",\"object\"===typeof arguments[c]){for(var i in a+=\"\\n[\"+c+\"] \",arguments[0])a+=i+\": \"+arguments[0][i]+\", \";a=a.slice(0,-2)}else a=arguments[c];r.push(a)}y(e+\"\\nArguments: \"+Array.prototype.slice.call(r).join(\"\")+\"\\n\"+(new Error).stack),n=!1}return t.apply(this,arguments)},t)}var N,q={};function T(e,t){null!=o.deprecationHandler&&o.deprecationHandler(e,t),q[e]||(y(t),q[e]=!0)}function B(e){return e instanceof Function||\"[object Function]\"===Object.prototype.toString.call(e)}function S(e,t){var n,o=p({},e);for(n in t)M(t,n)&&(r(e[n])&&r(t[n])?(o[n]={},p(o[n],e[n]),p(o[n],t[n])):null!=t[n]?o[n]=t[n]:delete o[n]);for(n in e)M(e,n)&&!M(t,n)&&r(e[n])&&(o[n]=p({},o[n]));return o}function w(e){null!=e&&this.set(e)}o.suppressDeprecationWarnings=!1,o.deprecationHandler=null,N=Object.keys?Object.keys:function(e){var t,n=[];for(t in e)M(e,t)&&n.push(t);return n};var W={};function X(e,t){var n=e.toLowerCase();W[n]=W[n+\"s\"]=W[t]=e}function R(e){return\"string\"===typeof e?W[e]||W[e.toLowerCase()]:void 0}function E(e){var t,n,o={};for(n in e)M(e,n)&&(t=R(n))&&(o[t]=e[n]);return o}var C={};function k(e,t){C[e]=t}function x(e,t,n){var o=\"\"+Math.abs(e),a=t-o.length,r=e>=0;return(r?n?\"+\":\"\":\"-\")+Math.pow(10,Math.max(0,a)).toString().substr(1)+o}var P=/(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,D=/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,F={},I={};function H(e,t,n,o){var a=o;\"string\"===typeof o&&(a=function(){return this[o]()}),e&&(I[e]=a),t&&(I[t[0]]=function(){return x(a.apply(this,arguments),t[1],t[2])}),n&&(I[n]=function(){return this.localeData().ordinal(a.apply(this,arguments),e)})}function V(e,t){return e.isValid()?(t=U(t,e.localeData()),F[t]=F[t]||function(e){var t,n,o,a=e.match(P);for(t=0,n=a.length;t<n;t++)I[a[t]]?a[t]=I[a[t]]:a[t]=(o=a[t]).match(/\\[[\\s\\S]/)?o.replace(/^\\[|\\]$/g,\"\"):o.replace(/\\\\/g,\"\");return function(t){var o,r=\"\";for(o=0;o<n;o++)r+=B(a[o])?a[o].call(t,e):a[o];return r}}(t),F[t](e)):e.localeData().invalidDate()}function U(e,t){var n=5;function o(e){return t.longDateFormat(e)||e}for(D.lastIndex=0;n>=0&&D.test(e);)e=e.replace(D,o),D.lastIndex=0,n-=1;return e}var j=/\\d/,Y=/\\d\\d/,G=/\\d{3}/,K=/\\d{4}/,Q=/[+-]?\\d{6}/,J=/\\d\\d?/,Z=/\\d\\d\\d\\d?/,$=/\\d\\d\\d\\d\\d\\d?/,ee=/\\d{1,3}/,te=/\\d{1,4}/,ne=/[+-]?\\d{1,6}/,oe=/\\d+/,ae=/[+-]?\\d+/,re=/Z|[+-]\\d\\d:?\\d\\d/gi,ce=/Z|[+-]\\d\\d(?::?\\d\\d)?/gi,ie=/[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,se={};function le(e,t,n){se[e]=B(t)?t:function(e,o){return e&&n?n:t}}function Me(e,t){return M(se,e)?se[e](t._strict,t._locale):new RegExp(pe(e.replace(\"\\\\\",\"\").replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,function(e,t,n,o,a){return t||n||o||a})))}function pe(e){return e.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,\"\\\\$&\")}var ue={};function fe(e,t){var n,o=t;for(\"string\"===typeof e&&(e=[e]),i(t)&&(o=function(e,n){n[t]=O(e)}),n=0;n<e.length;n++)ue[e[n]]=o}function be(e,t){fe(e,function(e,n,o,a){o._w=o._w||{},t(e,o._w,o,a)})}function de(e,t,n){null!=t&&M(ue,e)&&ue[e](t,n._a,n,e)}var he=0,_e=1,Ae=2,me=3,ze=4,ge=5,Oe=6,Le=7,ye=8;function ve(e){return Ne(e)?366:365}function Ne(e){return e%4===0&&e%100!==0||e%400===0}H(\"Y\",0,0,function(){var e=this.year();return e<=9999?\"\"+e:\"+\"+e}),H(0,[\"YY\",2],0,function(){return this.year()%100}),H(0,[\"YYYY\",4],0,\"year\"),H(0,[\"YYYYY\",5],0,\"year\"),H(0,[\"YYYYYY\",6,!0],0,\"year\"),X(\"year\",\"y\"),k(\"year\",1),le(\"Y\",ae),le(\"YY\",J,Y),le(\"YYYY\",te,K),le(\"YYYYY\",ne,Q),le(\"YYYYYY\",ne,Q),fe([\"YYYYY\",\"YYYYYY\"],he),fe(\"YYYY\",function(e,t){t[he]=2===e.length?o.parseTwoDigitYear(e):O(e)}),fe(\"YY\",function(e,t){t[he]=o.parseTwoDigitYear(e)}),fe(\"Y\",function(e,t){t[he]=parseInt(e,10)}),o.parseTwoDigitYear=function(e){return O(e)+(O(e)>68?1900:2e3)};var qe,Te=Be(\"FullYear\",!0);function Be(e,t){return function(n){return null!=n?(we(this,e,n),o.updateOffset(this,t),this):Se(this,e)}}function Se(e,t){return e.isValid()?e._d[\"get\"+(e._isUTC?\"UTC\":\"\")+t]():NaN}function we(e,t,n){e.isValid()&&!isNaN(n)&&(\"FullYear\"===t&&Ne(e.year())&&1===e.month()&&29===e.date()?e._d[\"set\"+(e._isUTC?\"UTC\":\"\")+t](n,e.month(),We(n,e.month())):e._d[\"set\"+(e._isUTC?\"UTC\":\"\")+t](n))}function We(e,t){if(isNaN(e)||isNaN(t))return NaN;var n,o=(t%(n=12)+n)%n;return e+=(t-o)/12,1===o?Ne(e)?29:28:31-o%7%2}qe=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1},H(\"M\",[\"MM\",2],\"Mo\",function(){return this.month()+1}),H(\"MMM\",0,0,function(e){return this.localeData().monthsShort(this,e)}),H(\"MMMM\",0,0,function(e){return this.localeData().months(this,e)}),X(\"month\",\"M\"),k(\"month\",8),le(\"M\",J),le(\"MM\",J,Y),le(\"MMM\",function(e,t){return t.monthsShortRegex(e)}),le(\"MMMM\",function(e,t){return t.monthsRegex(e)}),fe([\"M\",\"MM\"],function(e,t){t[_e]=O(e)-1}),fe([\"MMM\",\"MMMM\"],function(e,t,n,o){var a=n._locale.monthsParse(e,o,n._strict);null!=a?t[_e]=a:f(n).invalidMonth=e});var Xe=/D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,Re=\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),Ee=\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\");function Ce(e,t){var n;if(!e.isValid())return e;if(\"string\"===typeof t)if(/^\\d+$/.test(t))t=O(t);else if(!i(t=e.localeData().monthsParse(t)))return e;return n=Math.min(e.date(),We(e.year(),t)),e._d[\"set\"+(e._isUTC?\"UTC\":\"\")+\"Month\"](t,n),e}function ke(e){return null!=e?(Ce(this,e),o.updateOffset(this,!0),this):Se(this,\"Month\")}var xe=ie,Pe=ie;function De(){function e(e,t){return t.length-e.length}var t,n,o=[],a=[],r=[];for(t=0;t<12;t++)n=u([2e3,t]),o.push(this.monthsShort(n,\"\")),a.push(this.months(n,\"\")),r.push(this.months(n,\"\")),r.push(this.monthsShort(n,\"\"));for(o.sort(e),a.sort(e),r.sort(e),t=0;t<12;t++)o[t]=pe(o[t]),a[t]=pe(a[t]);for(t=0;t<24;t++)r[t]=pe(r[t]);this._monthsRegex=new RegExp(\"^(\"+r.join(\"|\")+\")\",\"i\"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp(\"^(\"+a.join(\"|\")+\")\",\"i\"),this._monthsShortStrictRegex=new RegExp(\"^(\"+o.join(\"|\")+\")\",\"i\")}function Fe(e){var t;if(e<100&&e>=0){var n=Array.prototype.slice.call(arguments);n[0]=e+400,t=new Date(Date.UTC.apply(null,n)),isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e)}else t=new Date(Date.UTC.apply(null,arguments));return t}function Ie(e,t,n){var o=7+t-n,a=(7+Fe(e,0,o).getUTCDay()-t)%7;return-a+o-1}function He(e,t,n,o,a){var r,c,i=(7+n-o)%7,s=Ie(e,o,a),l=1+7*(t-1)+i+s;return l<=0?c=ve(r=e-1)+l:l>ve(e)?(r=e+1,c=l-ve(e)):(r=e,c=l),{year:r,dayOfYear:c}}function Ve(e,t,n){var o,a,r=Ie(e.year(),t,n),c=Math.floor((e.dayOfYear()-r-1)/7)+1;return c<1?(a=e.year()-1,o=c+Ue(a,t,n)):c>Ue(e.year(),t,n)?(o=c-Ue(e.year(),t,n),a=e.year()+1):(a=e.year(),o=c),{week:o,year:a}}function Ue(e,t,n){var o=Ie(e,t,n),a=Ie(e+1,t,n);return(ve(e)-o+a)/7}function je(e,t){return e.slice(t,7).concat(e.slice(0,t))}H(\"w\",[\"ww\",2],\"wo\",\"week\"),H(\"W\",[\"WW\",2],\"Wo\",\"isoWeek\"),X(\"week\",\"w\"),X(\"isoWeek\",\"W\"),k(\"week\",5),k(\"isoWeek\",5),le(\"w\",J),le(\"ww\",J,Y),le(\"W\",J),le(\"WW\",J,Y),be([\"w\",\"ww\",\"W\",\"WW\"],function(e,t,n,o){t[o.substr(0,1)]=O(e)}),H(\"d\",0,\"do\",\"day\"),H(\"dd\",0,0,function(e){return this.localeData().weekdaysMin(this,e)}),H(\"ddd\",0,0,function(e){return this.localeData().weekdaysShort(this,e)}),H(\"dddd\",0,0,function(e){return this.localeData().weekdays(this,e)}),H(\"e\",0,0,\"weekday\"),H(\"E\",0,0,\"isoWeekday\"),X(\"day\",\"d\"),X(\"weekday\",\"e\"),X(\"isoWeekday\",\"E\"),k(\"day\",11),k(\"weekday\",11),k(\"isoWeekday\",11),le(\"d\",J),le(\"e\",J),le(\"E\",J),le(\"dd\",function(e,t){return t.weekdaysMinRegex(e)}),le(\"ddd\",function(e,t){return t.weekdaysShortRegex(e)}),le(\"dddd\",function(e,t){return t.weekdaysRegex(e)}),be([\"dd\",\"ddd\",\"dddd\"],function(e,t,n,o){var a=n._locale.weekdaysParse(e,o,n._strict);null!=a?t.d=a:f(n).invalidWeekday=e}),be([\"d\",\"e\",\"E\"],function(e,t,n,o){t[o]=O(e)});var Ye=\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),Ge=\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),Ke=\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),Qe=ie,Je=ie,Ze=ie;function $e(){function e(e,t){return t.length-e.length}var t,n,o,a,r,c=[],i=[],s=[],l=[];for(t=0;t<7;t++)n=u([2e3,1]).day(t),o=this.weekdaysMin(n,\"\"),a=this.weekdaysShort(n,\"\"),r=this.weekdays(n,\"\"),c.push(o),i.push(a),s.push(r),l.push(o),l.push(a),l.push(r);for(c.sort(e),i.sort(e),s.sort(e),l.sort(e),t=0;t<7;t++)i[t]=pe(i[t]),s[t]=pe(s[t]),l[t]=pe(l[t]);this._weekdaysRegex=new RegExp(\"^(\"+l.join(\"|\")+\")\",\"i\"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp(\"^(\"+s.join(\"|\")+\")\",\"i\"),this._weekdaysShortStrictRegex=new RegExp(\"^(\"+i.join(\"|\")+\")\",\"i\"),this._weekdaysMinStrictRegex=new RegExp(\"^(\"+c.join(\"|\")+\")\",\"i\")}function et(){return this.hours()%12||12}function tt(e,t){H(e,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)})}function nt(e,t){return t._meridiemParse}H(\"H\",[\"HH\",2],0,\"hour\"),H(\"h\",[\"hh\",2],0,et),H(\"k\",[\"kk\",2],0,function(){return this.hours()||24}),H(\"hmm\",0,0,function(){return\"\"+et.apply(this)+x(this.minutes(),2)}),H(\"hmmss\",0,0,function(){return\"\"+et.apply(this)+x(this.minutes(),2)+x(this.seconds(),2)}),H(\"Hmm\",0,0,function(){return\"\"+this.hours()+x(this.minutes(),2)}),H(\"Hmmss\",0,0,function(){return\"\"+this.hours()+x(this.minutes(),2)+x(this.seconds(),2)}),tt(\"a\",!0),tt(\"A\",!1),X(\"hour\",\"h\"),k(\"hour\",13),le(\"a\",nt),le(\"A\",nt),le(\"H\",J),le(\"h\",J),le(\"k\",J),le(\"HH\",J,Y),le(\"hh\",J,Y),le(\"kk\",J,Y),le(\"hmm\",Z),le(\"hmmss\",$),le(\"Hmm\",Z),le(\"Hmmss\",$),fe([\"H\",\"HH\"],me),fe([\"k\",\"kk\"],function(e,t,n){var o=O(e);t[me]=24===o?0:o}),fe([\"a\",\"A\"],function(e,t,n){n._isPm=n._locale.isPM(e),n._meridiem=e}),fe([\"h\",\"hh\"],function(e,t,n){t[me]=O(e),f(n).bigHour=!0}),fe(\"hmm\",function(e,t,n){var o=e.length-2;t[me]=O(e.substr(0,o)),t[ze]=O(e.substr(o)),f(n).bigHour=!0}),fe(\"hmmss\",function(e,t,n){var o=e.length-4,a=e.length-2;t[me]=O(e.substr(0,o)),t[ze]=O(e.substr(o,2)),t[ge]=O(e.substr(a)),f(n).bigHour=!0}),fe(\"Hmm\",function(e,t,n){var o=e.length-2;t[me]=O(e.substr(0,o)),t[ze]=O(e.substr(o))}),fe(\"Hmmss\",function(e,t,n){var o=e.length-4,a=e.length-2;t[me]=O(e.substr(0,o)),t[ze]=O(e.substr(o,2)),t[ge]=O(e.substr(a))});var ot,at=Be(\"Hours\",!0),rt={calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},longDateFormat:{LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},invalidDate:\"Invalid date\",ordinal:\"%d\",dayOfMonthOrdinalParse:/\\d{1,2}/,relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",ss:\"%d seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},months:Re,monthsShort:Ee,week:{dow:0,doy:6},weekdays:Ye,weekdaysMin:Ke,weekdaysShort:Ge,meridiemParse:/[ap]\\.?m?\\.?/i},ct={},it={};function st(e){return e?e.toLowerCase().replace(\"_\",\"-\"):e}function lt(t){var n=null;if(!ct[t]&&\"undefined\"!==typeof e&&e&&e.exports)try{n=ot._abbr,!function(){var e=new Error(\"Cannot find module 'undefined'\");throw e.code=\"MODULE_NOT_FOUND\",e}(),Mt(n)}catch(o){}return ct[t]}function Mt(e,t){var n;return e&&((n=c(t)?ut(e):pt(e,t))?ot=n:\"undefined\"!==typeof console&&console.warn&&console.warn(\"Locale \"+e+\" not found. Did you forget to load it?\")),ot._abbr}function pt(e,t){if(null!==t){var n,o=rt;if(t.abbr=e,null!=ct[e])T(\"defineLocaleOverride\",\"use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.\"),o=ct[e]._config;else if(null!=t.parentLocale)if(null!=ct[t.parentLocale])o=ct[t.parentLocale]._config;else{if(null==(n=lt(t.parentLocale)))return it[t.parentLocale]||(it[t.parentLocale]=[]),it[t.parentLocale].push({name:e,config:t}),null;o=n._config}return ct[e]=new w(S(o,t)),it[e]&&it[e].forEach(function(e){pt(e.name,e.config)}),Mt(e),ct[e]}return delete ct[e],null}function ut(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return ot;if(!a(e)){if(t=lt(e))return t;e=[e]}return function(e){for(var t,n,o,a,r=0;r<e.length;){for(a=st(e[r]).split(\"-\"),t=a.length,n=(n=st(e[r+1]))?n.split(\"-\"):null;t>0;){if(o=lt(a.slice(0,t).join(\"-\")))return o;if(n&&n.length>=t&&L(a,n,!0)>=t-1)break;t--}r++}return ot}(e)}function ft(e){var t,n=e._a;return n&&-2===f(e).overflow&&(t=n[_e]<0||n[_e]>11?_e:n[Ae]<1||n[Ae]>We(n[he],n[_e])?Ae:n[me]<0||n[me]>24||24===n[me]&&(0!==n[ze]||0!==n[ge]||0!==n[Oe])?me:n[ze]<0||n[ze]>59?ze:n[ge]<0||n[ge]>59?ge:n[Oe]<0||n[Oe]>999?Oe:-1,f(e)._overflowDayOfYear&&(t<he||t>Ae)&&(t=Ae),f(e)._overflowWeeks&&-1===t&&(t=Le),f(e)._overflowWeekday&&-1===t&&(t=ye),f(e).overflow=t),e}function bt(e,t,n){return null!=e?e:null!=t?t:n}function dt(e){var t,n,a,r,c,i=[];if(!e._d){for(a=function(e){var t=new Date(o.now());return e._useUTC?[t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()]:[t.getFullYear(),t.getMonth(),t.getDate()]}(e),e._w&&null==e._a[Ae]&&null==e._a[_e]&&function(e){var t,n,o,a,r,c,i,s;if(null!=(t=e._w).GG||null!=t.W||null!=t.E)r=1,c=4,n=bt(t.GG,e._a[he],Ve(St(),1,4).year),o=bt(t.W,1),((a=bt(t.E,1))<1||a>7)&&(s=!0);else{r=e._locale._week.dow,c=e._locale._week.doy;var l=Ve(St(),r,c);n=bt(t.gg,e._a[he],l.year),o=bt(t.w,l.week),null!=t.d?((a=t.d)<0||a>6)&&(s=!0):null!=t.e?(a=t.e+r,(t.e<0||t.e>6)&&(s=!0)):a=r}o<1||o>Ue(n,r,c)?f(e)._overflowWeeks=!0:null!=s?f(e)._overflowWeekday=!0:(i=He(n,o,a,r,c),e._a[he]=i.year,e._dayOfYear=i.dayOfYear)}(e),null!=e._dayOfYear&&(c=bt(e._a[he],a[he]),(e._dayOfYear>ve(c)||0===e._dayOfYear)&&(f(e)._overflowDayOfYear=!0),n=Fe(c,0,e._dayOfYear),e._a[_e]=n.getUTCMonth(),e._a[Ae]=n.getUTCDate()),t=0;t<3&&null==e._a[t];++t)e._a[t]=i[t]=a[t];for(;t<7;t++)e._a[t]=i[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[me]&&0===e._a[ze]&&0===e._a[ge]&&0===e._a[Oe]&&(e._nextDay=!0,e._a[me]=0),e._d=(e._useUTC?Fe:function(e,t,n,o,a,r,c){var i;return e<100&&e>=0?(i=new Date(e+400,t,n,o,a,r,c),isFinite(i.getFullYear())&&i.setFullYear(e)):i=new Date(e,t,n,o,a,r,c),i}).apply(null,i),r=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[me]=24),e._w&&\"undefined\"!==typeof e._w.d&&e._w.d!==r&&(f(e).weekdayMismatch=!0)}}var ht=/^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,_t=/^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,At=/Z|[+-]\\d\\d(?::?\\d\\d)?/,mt=[[\"YYYYYY-MM-DD\",/[+-]\\d{6}-\\d\\d-\\d\\d/],[\"YYYY-MM-DD\",/\\d{4}-\\d\\d-\\d\\d/],[\"GGGG-[W]WW-E\",/\\d{4}-W\\d\\d-\\d/],[\"GGGG-[W]WW\",/\\d{4}-W\\d\\d/,!1],[\"YYYY-DDD\",/\\d{4}-\\d{3}/],[\"YYYY-MM\",/\\d{4}-\\d\\d/,!1],[\"YYYYYYMMDD\",/[+-]\\d{10}/],[\"YYYYMMDD\",/\\d{8}/],[\"GGGG[W]WWE\",/\\d{4}W\\d{3}/],[\"GGGG[W]WW\",/\\d{4}W\\d{2}/,!1],[\"YYYYDDD\",/\\d{7}/]],zt=[[\"HH:mm:ss.SSSS\",/\\d\\d:\\d\\d:\\d\\d\\.\\d+/],[\"HH:mm:ss,SSSS\",/\\d\\d:\\d\\d:\\d\\d,\\d+/],[\"HH:mm:ss\",/\\d\\d:\\d\\d:\\d\\d/],[\"HH:mm\",/\\d\\d:\\d\\d/],[\"HHmmss.SSSS\",/\\d\\d\\d\\d\\d\\d\\.\\d+/],[\"HHmmss,SSSS\",/\\d\\d\\d\\d\\d\\d,\\d+/],[\"HHmmss\",/\\d\\d\\d\\d\\d\\d/],[\"HHmm\",/\\d\\d\\d\\d/],[\"HH\",/\\d\\d/]],gt=/^\\/?Date\\((\\-?\\d+)/i;function Ot(e){var t,n,o,a,r,c,i=e._i,s=ht.exec(i)||_t.exec(i);if(s){for(f(e).iso=!0,t=0,n=mt.length;t<n;t++)if(mt[t][1].exec(s[1])){a=mt[t][0],o=!1!==mt[t][2];break}if(null==a)return void(e._isValid=!1);if(s[3]){for(t=0,n=zt.length;t<n;t++)if(zt[t][1].exec(s[3])){r=(s[2]||\" \")+zt[t][0];break}if(null==r)return void(e._isValid=!1)}if(!o&&null!=r)return void(e._isValid=!1);if(s[4]){if(!At.exec(s[4]))return void(e._isValid=!1);c=\"Z\"}e._f=a+(r||\"\")+(c||\"\"),qt(e)}else e._isValid=!1}var Lt=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;function yt(e){var t=parseInt(e,10);return t<=49?2e3+t:t<=999?1900+t:t}var vt={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function Nt(e){var t=Lt.exec(e._i.replace(/\\([^)]*\\)|[\\n\\t]/g,\" \").replace(/(\\s\\s+)/g,\" \").replace(/^\\s\\s*/,\"\").replace(/\\s\\s*$/,\"\"));if(t){var n=function(e,t,n,o,a,r){var c=[yt(e),Ee.indexOf(t),parseInt(n,10),parseInt(o,10),parseInt(a,10)];return r&&c.push(parseInt(r,10)),c}(t[4],t[3],t[2],t[5],t[6],t[7]);if(!function(e,t,n){if(e){var o=Ge.indexOf(e),a=new Date(t[0],t[1],t[2]).getDay();if(o!==a)return f(n).weekdayMismatch=!0,n._isValid=!1,!1}return!0}(t[1],n,e))return;e._a=n,e._tzm=function(e,t,n){if(e)return vt[e];if(t)return 0;var o=parseInt(n,10),a=o%100,r=(o-a)/100;return 60*r+a}(t[8],t[9],t[10]),e._d=Fe.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),f(e).rfc2822=!0}else e._isValid=!1}function qt(e){if(e._f!==o.ISO_8601)if(e._f!==o.RFC_2822){e._a=[],f(e).empty=!0;var t,n,a,r,c,i=\"\"+e._i,s=i.length,l=0;for(a=U(e._f,e._locale).match(P)||[],t=0;t<a.length;t++)r=a[t],(n=(i.match(Me(r,e))||[])[0])&&((c=i.substr(0,i.indexOf(n))).length>0&&f(e).unusedInput.push(c),i=i.slice(i.indexOf(n)+n.length),l+=n.length),I[r]?(n?f(e).empty=!1:f(e).unusedTokens.push(r),de(r,n,e)):e._strict&&!n&&f(e).unusedTokens.push(r);f(e).charsLeftOver=s-l,i.length>0&&f(e).unusedInput.push(i),e._a[me]<=12&&!0===f(e).bigHour&&e._a[me]>0&&(f(e).bigHour=void 0),f(e).parsedDateParts=e._a.slice(0),f(e).meridiem=e._meridiem,e._a[me]=function(e,t,n){var o;return null==n?t:null!=e.meridiemHour?e.meridiemHour(t,n):null!=e.isPM?((o=e.isPM(n))&&t<12&&(t+=12),o||12!==t||(t=0),t):t}(e._locale,e._a[me],e._meridiem),dt(e),ft(e)}else Nt(e);else Ot(e)}function Tt(e){var t=e._i,n=e._f;return e._locale=e._locale||ut(e._l),null===t||void 0===n&&\"\"===t?d({nullInput:!0}):(\"string\"===typeof t&&(e._i=t=e._locale.preparse(t)),z(t)?new m(ft(t)):(s(t)?e._d=t:a(n)?function(e){var t,n,o,a,r;if(0===e._f.length)return f(e).invalidFormat=!0,void(e._d=new Date(NaN));for(a=0;a<e._f.length;a++)r=0,t=_({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[a],qt(t),b(t)&&(r+=f(t).charsLeftOver,r+=10*f(t).unusedTokens.length,f(t).score=r,(null==o||r<o)&&(o=r,n=t));p(e,n||t)}(e):n?qt(e):function(e){var t=e._i;c(t)?e._d=new Date(o.now()):s(t)?e._d=new Date(t.valueOf()):\"string\"===typeof t?function(e){var t=gt.exec(e._i);null===t?(Ot(e),!1===e._isValid&&(delete e._isValid,Nt(e),!1===e._isValid&&(delete e._isValid,o.createFromInputFallback(e)))):e._d=new Date(+t[1])}(e):a(t)?(e._a=l(t.slice(0),function(e){return parseInt(e,10)}),dt(e)):r(t)?function(e){if(!e._d){var t=E(e._i);e._a=l([t.year,t.month,t.day||t.date,t.hour,t.minute,t.second,t.millisecond],function(e){return e&&parseInt(e,10)}),dt(e)}}(e):i(t)?e._d=new Date(t):o.createFromInputFallback(e)}(e),b(e)||(e._d=null),e))}function Bt(e,t,n,o,c){var i={};return!0!==n&&!1!==n||(o=n,n=void 0),(r(e)&&function(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;var t;for(t in e)if(e.hasOwnProperty(t))return!1;return!0}(e)||a(e)&&0===e.length)&&(e=void 0),i._isAMomentObject=!0,i._useUTC=i._isUTC=c,i._l=n,i._i=e,i._f=t,i._strict=o,function(e){var t=new m(ft(Tt(e)));return t._nextDay&&(t.add(1,\"d\"),t._nextDay=void 0),t}(i)}function St(e,t,n,o){return Bt(e,t,n,o,!1)}o.createFromInputFallback=v(\"value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.\",function(e){e._d=new Date(e._i+(e._useUTC?\" UTC\":\"\"))}),o.ISO_8601=function(){},o.RFC_2822=function(){};var wt=v(\"moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/\",function(){var e=St.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:d()}),Wt=v(\"moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/\",function(){var e=St.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:d()});function Xt(e,t){var n,o;if(1===t.length&&a(t[0])&&(t=t[0]),!t.length)return St();for(n=t[0],o=1;o<t.length;++o)t[o].isValid()&&!t[o][e](n)||(n=t[o]);return n}var Rt=[\"year\",\"quarter\",\"month\",\"week\",\"day\",\"hour\",\"minute\",\"second\",\"millisecond\"];function Et(e){var t=E(e),n=t.year||0,o=t.quarter||0,a=t.month||0,r=t.week||t.isoWeek||0,c=t.day||0,i=t.hour||0,s=t.minute||0,l=t.second||0,M=t.millisecond||0;this._isValid=function(e){for(var t in e)if(-1===qe.call(Rt,t)||null!=e[t]&&isNaN(e[t]))return!1;for(var n=!1,o=0;o<Rt.length;++o)if(e[Rt[o]]){if(n)return!1;parseFloat(e[Rt[o]])!==O(e[Rt[o]])&&(n=!0)}return!0}(t),this._milliseconds=+M+1e3*l+6e4*s+1e3*i*60*60,this._days=+c+7*r,this._months=+a+3*o+12*n,this._data={},this._locale=ut(),this._bubble()}function Ct(e){return e instanceof Et}function kt(e){return e<0?-1*Math.round(-1*e):Math.round(e)}function xt(e,t){H(e,0,0,function(){var e=this.utcOffset(),n=\"+\";return e<0&&(e=-e,n=\"-\"),n+x(~~(e/60),2)+t+x(~~e%60,2)})}xt(\"Z\",\":\"),xt(\"ZZ\",\"\"),le(\"Z\",ce),le(\"ZZ\",ce),fe([\"Z\",\"ZZ\"],function(e,t,n){n._useUTC=!0,n._tzm=Dt(ce,e)});var Pt=/([\\+\\-]|\\d\\d)/gi;function Dt(e,t){var n=(t||\"\").match(e);if(null===n)return null;var o=n[n.length-1]||[],a=(o+\"\").match(Pt)||[\"-\",0,0],r=60*a[1]+O(a[2]);return 0===r?0:\"+\"===a[0]?r:-r}function Ft(e,t){var n,a;return t._isUTC?(n=t.clone(),a=(z(e)||s(e)?e.valueOf():St(e).valueOf())-n.valueOf(),n._d.setTime(n._d.valueOf()+a),o.updateOffset(n,!1),n):St(e).local()}function It(e){return 15*-Math.round(e._d.getTimezoneOffset()/15)}function Ht(){return!!this.isValid()&&this._isUTC&&0===this._offset}o.updateOffset=function(){};var Vt=/^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/,Ut=/^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function jt(e,t){var n,o,a,r=e,c=null;return Ct(e)?r={ms:e._milliseconds,d:e._days,M:e._months}:i(e)?(r={},t?r[t]=e:r.milliseconds=e):(c=Vt.exec(e))?(n=\"-\"===c[1]?-1:1,r={y:0,d:O(c[Ae])*n,h:O(c[me])*n,m:O(c[ze])*n,s:O(c[ge])*n,ms:O(kt(1e3*c[Oe]))*n}):(c=Ut.exec(e))?(n=\"-\"===c[1]?-1:1,r={y:Yt(c[2],n),M:Yt(c[3],n),w:Yt(c[4],n),d:Yt(c[5],n),h:Yt(c[6],n),m:Yt(c[7],n),s:Yt(c[8],n)}):null==r?r={}:\"object\"===typeof r&&(\"from\"in r||\"to\"in r)&&(a=function(e,t){var n;return e.isValid()&&t.isValid()?(t=Ft(t,e),e.isBefore(t)?n=Gt(e,t):((n=Gt(t,e)).milliseconds=-n.milliseconds,n.months=-n.months),n):{milliseconds:0,months:0}}(St(r.from),St(r.to)),(r={}).ms=a.milliseconds,r.M=a.months),o=new Et(r),Ct(e)&&M(e,\"_locale\")&&(o._locale=e._locale),o}function Yt(e,t){var n=e&&parseFloat(e.replace(\",\",\".\"));return(isNaN(n)?0:n)*t}function Gt(e,t){var n={};return n.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(n.months,\"M\").isAfter(t)&&--n.months,n.milliseconds=+t-+e.clone().add(n.months,\"M\"),n}function Kt(e,t){return function(n,o){var a;return null===o||isNaN(+o)||(T(t,\"moment().\"+t+\"(period, number) is deprecated. Please use moment().\"+t+\"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.\"),a=n,n=o,o=a),Qt(this,jt(n=\"string\"===typeof n?+n:n,o),e),this}}function Qt(e,t,n,a){var r=t._milliseconds,c=kt(t._days),i=kt(t._months);e.isValid()&&(a=null==a||a,i&&Ce(e,Se(e,\"Month\")+i*n),c&&we(e,\"Date\",Se(e,\"Date\")+c*n),r&&e._d.setTime(e._d.valueOf()+r*n),a&&o.updateOffset(e,c||i))}jt.fn=Et.prototype,jt.invalid=function(){return jt(NaN)};var Jt=Kt(1,\"add\"),Zt=Kt(-1,\"subtract\");function $t(e,t){var n,o,a=12*(t.year()-e.year())+(t.month()-e.month()),r=e.clone().add(a,\"months\");return t-r<0?(n=e.clone().add(a-1,\"months\"),o=(t-r)/(r-n)):(n=e.clone().add(a+1,\"months\"),o=(t-r)/(n-r)),-(a+o)||0}function en(e){var t;return void 0===e?this._locale._abbr:(null!=(t=ut(e))&&(this._locale=t),this)}o.defaultFormat=\"YYYY-MM-DDTHH:mm:ssZ\",o.defaultFormatUtc=\"YYYY-MM-DDTHH:mm:ss[Z]\";var tn=v(\"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.\",function(e){return void 0===e?this.localeData():this.locale(e)});function nn(){return this._locale}var on=1e3,an=60*on,rn=60*an,cn=3506328*rn;function sn(e,t){return(e%t+t)%t}function ln(e,t,n){return e<100&&e>=0?new Date(e+400,t,n)-cn:new Date(e,t,n).valueOf()}function Mn(e,t,n){return e<100&&e>=0?Date.UTC(e+400,t,n)-cn:Date.UTC(e,t,n)}function pn(e,t){H(0,[e,e.length],0,t)}function un(e,t,n,o,a){var r;return null==e?Ve(this,o,a).year:(r=Ue(e,o,a),t>r&&(t=r),function(e,t,n,o,a){var r=He(e,t,n,o,a),c=Fe(r.year,0,r.dayOfYear);return this.year(c.getUTCFullYear()),this.month(c.getUTCMonth()),this.date(c.getUTCDate()),this}.call(this,e,t,n,o,a))}H(0,[\"gg\",2],0,function(){return this.weekYear()%100}),H(0,[\"GG\",2],0,function(){return this.isoWeekYear()%100}),pn(\"gggg\",\"weekYear\"),pn(\"ggggg\",\"weekYear\"),pn(\"GGGG\",\"isoWeekYear\"),pn(\"GGGGG\",\"isoWeekYear\"),X(\"weekYear\",\"gg\"),X(\"isoWeekYear\",\"GG\"),k(\"weekYear\",1),k(\"isoWeekYear\",1),le(\"G\",ae),le(\"g\",ae),le(\"GG\",J,Y),le(\"gg\",J,Y),le(\"GGGG\",te,K),le(\"gggg\",te,K),le(\"GGGGG\",ne,Q),le(\"ggggg\",ne,Q),be([\"gggg\",\"ggggg\",\"GGGG\",\"GGGGG\"],function(e,t,n,o){t[o.substr(0,2)]=O(e)}),be([\"gg\",\"GG\"],function(e,t,n,a){t[a]=o.parseTwoDigitYear(e)}),H(\"Q\",0,\"Qo\",\"quarter\"),X(\"quarter\",\"Q\"),k(\"quarter\",7),le(\"Q\",j),fe(\"Q\",function(e,t){t[_e]=3*(O(e)-1)}),H(\"D\",[\"DD\",2],\"Do\",\"date\"),X(\"date\",\"D\"),k(\"date\",9),le(\"D\",J),le(\"DD\",J,Y),le(\"Do\",function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient}),fe([\"D\",\"DD\"],Ae),fe(\"Do\",function(e,t){t[Ae]=O(e.match(J)[0])});var fn=Be(\"Date\",!0);H(\"DDD\",[\"DDDD\",3],\"DDDo\",\"dayOfYear\"),X(\"dayOfYear\",\"DDD\"),k(\"dayOfYear\",4),le(\"DDD\",ee),le(\"DDDD\",G),fe([\"DDD\",\"DDDD\"],function(e,t,n){n._dayOfYear=O(e)}),H(\"m\",[\"mm\",2],0,\"minute\"),X(\"minute\",\"m\"),k(\"minute\",14),le(\"m\",J),le(\"mm\",J,Y),fe([\"m\",\"mm\"],ze);var bn=Be(\"Minutes\",!1);H(\"s\",[\"ss\",2],0,\"second\"),X(\"second\",\"s\"),k(\"second\",15),le(\"s\",J),le(\"ss\",J,Y),fe([\"s\",\"ss\"],ge);var dn,hn=Be(\"Seconds\",!1);for(H(\"S\",0,0,function(){return~~(this.millisecond()/100)}),H(0,[\"SS\",2],0,function(){return~~(this.millisecond()/10)}),H(0,[\"SSS\",3],0,\"millisecond\"),H(0,[\"SSSS\",4],0,function(){return 10*this.millisecond()}),H(0,[\"SSSSS\",5],0,function(){return 100*this.millisecond()}),H(0,[\"SSSSSS\",6],0,function(){return 1e3*this.millisecond()}),H(0,[\"SSSSSSS\",7],0,function(){return 1e4*this.millisecond()}),H(0,[\"SSSSSSSS\",8],0,function(){return 1e5*this.millisecond()}),H(0,[\"SSSSSSSSS\",9],0,function(){return 1e6*this.millisecond()}),X(\"millisecond\",\"ms\"),k(\"millisecond\",16),le(\"S\",ee,j),le(\"SS\",ee,Y),le(\"SSS\",ee,G),dn=\"SSSS\";dn.length<=9;dn+=\"S\")le(dn,oe);function _n(e,t){t[Oe]=O(1e3*(\"0.\"+e))}for(dn=\"S\";dn.length<=9;dn+=\"S\")fe(dn,_n);var An=Be(\"Milliseconds\",!1);H(\"z\",0,0,\"zoneAbbr\"),H(\"zz\",0,0,\"zoneName\");var mn=m.prototype;function zn(e){return e}mn.add=Jt,mn.calendar=function(e,t){var n=e||St(),a=Ft(n,this).startOf(\"day\"),r=o.calendarFormat(this,a)||\"sameElse\",c=t&&(B(t[r])?t[r].call(this,n):t[r]);return this.format(c||this.localeData().calendar(r,this,St(n)))},mn.clone=function(){return new m(this)},mn.diff=function(e,t,n){var o,a,r;if(!this.isValid())return NaN;if(!(o=Ft(e,this)).isValid())return NaN;switch(a=6e4*(o.utcOffset()-this.utcOffset()),t=R(t)){case\"year\":r=$t(this,o)/12;break;case\"month\":r=$t(this,o);break;case\"quarter\":r=$t(this,o)/3;break;case\"second\":r=(this-o)/1e3;break;case\"minute\":r=(this-o)/6e4;break;case\"hour\":r=(this-o)/36e5;break;case\"day\":r=(this-o-a)/864e5;break;case\"week\":r=(this-o-a)/6048e5;break;default:r=this-o}return n?r:g(r)},mn.endOf=function(e){var t;if(void 0===(e=R(e))||\"millisecond\"===e||!this.isValid())return this;var n=this._isUTC?Mn:ln;switch(e){case\"year\":t=n(this.year()+1,0,1)-1;break;case\"quarter\":t=n(this.year(),this.month()-this.month()%3+3,1)-1;break;case\"month\":t=n(this.year(),this.month()+1,1)-1;break;case\"week\":t=n(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case\"isoWeek\":t=n(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case\"day\":case\"date\":t=n(this.year(),this.month(),this.date()+1)-1;break;case\"hour\":t=this._d.valueOf(),t+=rn-sn(t+(this._isUTC?0:this.utcOffset()*an),rn)-1;break;case\"minute\":t=this._d.valueOf(),t+=an-sn(t,an)-1;break;case\"second\":t=this._d.valueOf(),t+=on-sn(t,on)-1}return this._d.setTime(t),o.updateOffset(this,!0),this},mn.format=function(e){e||(e=this.isUtc()?o.defaultFormatUtc:o.defaultFormat);var t=V(this,e);return this.localeData().postformat(t)},mn.from=function(e,t){return this.isValid()&&(z(e)&&e.isValid()||St(e).isValid())?jt({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},mn.fromNow=function(e){return this.from(St(),e)},mn.to=function(e,t){return this.isValid()&&(z(e)&&e.isValid()||St(e).isValid())?jt({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},mn.toNow=function(e){return this.to(St(),e)},mn.get=function(e){return B(this[e=R(e)])?this[e]():this},mn.invalidAt=function(){return f(this).overflow},mn.isAfter=function(e,t){var n=z(e)?e:St(e);return!(!this.isValid()||!n.isValid())&&(\"millisecond\"===(t=R(t)||\"millisecond\")?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(t).valueOf())},mn.isBefore=function(e,t){var n=z(e)?e:St(e);return!(!this.isValid()||!n.isValid())&&(\"millisecond\"===(t=R(t)||\"millisecond\")?this.valueOf()<n.valueOf():this.clone().endOf(t).valueOf()<n.valueOf())},mn.isBetween=function(e,t,n,o){var a=z(e)?e:St(e),r=z(t)?t:St(t);return!!(this.isValid()&&a.isValid()&&r.isValid())&&((\"(\"===(o=o||\"()\")[0]?this.isAfter(a,n):!this.isBefore(a,n))&&(\")\"===o[1]?this.isBefore(r,n):!this.isAfter(r,n)))},mn.isSame=function(e,t){var n,o=z(e)?e:St(e);return!(!this.isValid()||!o.isValid())&&(\"millisecond\"===(t=R(t)||\"millisecond\")?this.valueOf()===o.valueOf():(n=o.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf()))},mn.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)},mn.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t)},mn.isValid=function(){return b(this)},mn.lang=tn,mn.locale=en,mn.localeData=nn,mn.max=Wt,mn.min=wt,mn.parsingFlags=function(){return p({},f(this))},mn.set=function(e,t){if(\"object\"===typeof e)for(var n=function(e){var t=[];for(var n in e)t.push({unit:n,priority:C[n]});return t.sort(function(e,t){return e.priority-t.priority}),t}(e=E(e)),o=0;o<n.length;o++)this[n[o].unit](e[n[o].unit]);else if(B(this[e=R(e)]))return this[e](t);return this},mn.startOf=function(e){var t;if(void 0===(e=R(e))||\"millisecond\"===e||!this.isValid())return this;var n=this._isUTC?Mn:ln;switch(e){case\"year\":t=n(this.year(),0,1);break;case\"quarter\":t=n(this.year(),this.month()-this.month()%3,1);break;case\"month\":t=n(this.year(),this.month(),1);break;case\"week\":t=n(this.year(),this.month(),this.date()-this.weekday());break;case\"isoWeek\":t=n(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case\"day\":case\"date\":t=n(this.year(),this.month(),this.date());break;case\"hour\":t=this._d.valueOf(),t-=sn(t+(this._isUTC?0:this.utcOffset()*an),rn);break;case\"minute\":t=this._d.valueOf(),t-=sn(t,an);break;case\"second\":t=this._d.valueOf(),t-=sn(t,on)}return this._d.setTime(t),o.updateOffset(this,!0),this},mn.subtract=Zt,mn.toArray=function(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]},mn.toObject=function(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}},mn.toDate=function(){return new Date(this.valueOf())},mn.toISOString=function(e){if(!this.isValid())return null;var t=!0!==e,n=t?this.clone().utc():this;return n.year()<0||n.year()>9999?V(n,t?\"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\":\"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ\"):B(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace(\"Z\",V(n,\"Z\")):V(n,t?\"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\":\"YYYY-MM-DD[T]HH:mm:ss.SSSZ\")},mn.inspect=function(){if(!this.isValid())return\"moment.invalid(/* \"+this._i+\" */)\";var e=\"moment\",t=\"\";this.isLocal()||(e=0===this.utcOffset()?\"moment.utc\":\"moment.parseZone\",t=\"Z\");var n=\"[\"+e+'(\"]',o=0<=this.year()&&this.year()<=9999?\"YYYY\":\"YYYYYY\",a=t+'[\")]';return this.format(n+o+\"-MM-DD[T]HH:mm:ss.SSS\"+a)},mn.toJSON=function(){return this.isValid()?this.toISOString():null},mn.toString=function(){return this.clone().locale(\"en\").format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\")},mn.unix=function(){return Math.floor(this.valueOf()/1e3)},mn.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},mn.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},mn.year=Te,mn.isLeapYear=function(){return Ne(this.year())},mn.weekYear=function(e){return un.call(this,e,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},mn.isoWeekYear=function(e){return un.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)},mn.quarter=mn.quarters=function(e){return null==e?Math.ceil((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)},mn.month=ke,mn.daysInMonth=function(){return We(this.year(),this.month())},mn.week=mn.weeks=function(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),\"d\")},mn.isoWeek=mn.isoWeeks=function(e){var t=Ve(this,1,4).week;return null==e?t:this.add(7*(e-t),\"d\")},mn.weeksInYear=function(){var e=this.localeData()._week;return Ue(this.year(),e.dow,e.doy)},mn.isoWeeksInYear=function(){return Ue(this.year(),1,4)},mn.date=fn,mn.day=mn.days=function(e){if(!this.isValid())return null!=e?this:NaN;var t=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=e?(e=function(e,t){return\"string\"!==typeof e?e:isNaN(e)?\"number\"===typeof(e=t.weekdaysParse(e))?e:null:parseInt(e,10)}(e,this.localeData()),this.add(e-t,\"d\")):t},mn.weekday=function(e){if(!this.isValid())return null!=e?this:NaN;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,\"d\")},mn.isoWeekday=function(e){if(!this.isValid())return null!=e?this:NaN;if(null!=e){var t=function(e,t){return\"string\"===typeof e?t.weekdaysParse(e)%7||7:isNaN(e)?null:e}(e,this.localeData());return this.day(this.day()%7?t:t-7)}return this.day()||7},mn.dayOfYear=function(e){var t=Math.round((this.clone().startOf(\"day\")-this.clone().startOf(\"year\"))/864e5)+1;return null==e?t:this.add(e-t,\"d\")},mn.hour=mn.hours=at,mn.minute=mn.minutes=bn,mn.second=mn.seconds=hn,mn.millisecond=mn.milliseconds=An,mn.utcOffset=function(e,t,n){var a,r=this._offset||0;if(!this.isValid())return null!=e?this:NaN;if(null!=e){if(\"string\"===typeof e){if(null===(e=Dt(ce,e)))return this}else Math.abs(e)<16&&!n&&(e*=60);return!this._isUTC&&t&&(a=It(this)),this._offset=e,this._isUTC=!0,null!=a&&this.add(a,\"m\"),r!==e&&(!t||this._changeInProgress?Qt(this,jt(e-r,\"m\"),1,!1):this._changeInProgress||(this._changeInProgress=!0,o.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?r:It(this)},mn.utc=function(e){return this.utcOffset(0,e)},mn.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(It(this),\"m\")),this},mn.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if(\"string\"===typeof this._i){var e=Dt(re,this._i);null!=e?this.utcOffset(e):this.utcOffset(0,!0)}return this},mn.hasAlignedHourOffset=function(e){return!!this.isValid()&&(e=e?St(e).utcOffset():0,(this.utcOffset()-e)%60===0)},mn.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},mn.isLocal=function(){return!!this.isValid()&&!this._isUTC},mn.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},mn.isUtc=Ht,mn.isUTC=Ht,mn.zoneAbbr=function(){return this._isUTC?\"UTC\":\"\"},mn.zoneName=function(){return this._isUTC?\"Coordinated Universal Time\":\"\"},mn.dates=v(\"dates accessor is deprecated. Use date instead.\",fn),mn.months=v(\"months accessor is deprecated. Use month instead\",ke),mn.years=v(\"years accessor is deprecated. Use year instead\",Te),mn.zone=v(\"moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/\",function(e,t){return null!=e?(\"string\"!==typeof e&&(e=-e),this.utcOffset(e,t),this):-this.utcOffset()}),mn.isDSTShifted=v(\"isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information\",function(){if(!c(this._isDSTShifted))return this._isDSTShifted;var e={};if(_(e,this),(e=Tt(e))._a){var t=e._isUTC?u(e._a):St(e._a);this._isDSTShifted=this.isValid()&&L(e._a,t.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted});var gn=w.prototype;function On(e,t,n,o){var a=ut(),r=u().set(o,t);return a[n](r,e)}function Ln(e,t,n){if(i(e)&&(t=e,e=void 0),e=e||\"\",null!=t)return On(e,t,n,\"month\");var o,a=[];for(o=0;o<12;o++)a[o]=On(e,o,n,\"month\");return a}function yn(e,t,n,o){\"boolean\"===typeof e?(i(t)&&(n=t,t=void 0),t=t||\"\"):(n=t=e,e=!1,i(t)&&(n=t,t=void 0),t=t||\"\");var a,r=ut(),c=e?r._week.dow:0;if(null!=n)return On(t,(n+c)%7,o,\"day\");var s=[];for(a=0;a<7;a++)s[a]=On(t,(a+c)%7,o,\"day\");return s}gn.calendar=function(e,t,n){var o=this._calendar[e]||this._calendar.sameElse;return B(o)?o.call(t,n):o},gn.longDateFormat=function(e){var t=this._longDateFormat[e],n=this._longDateFormat[e.toUpperCase()];return t||!n?t:(this._longDateFormat[e]=n.replace(/MMMM|MM|DD|dddd/g,function(e){return e.slice(1)}),this._longDateFormat[e])},gn.invalidDate=function(){return this._invalidDate},gn.ordinal=function(e){return this._ordinal.replace(\"%d\",e)},gn.preparse=zn,gn.postformat=zn,gn.relativeTime=function(e,t,n,o){var a=this._relativeTime[n];return B(a)?a(e,t,n,o):a.replace(/%d/i,e)},gn.pastFuture=function(e,t){var n=this._relativeTime[e>0?\"future\":\"past\"];return B(n)?n(t):n.replace(/%s/i,t)},gn.set=function(e){var t,n;for(n in e)B(t=e[n])?this[n]=t:this[\"_\"+n]=t;this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+\"|\"+/\\d{1,2}/.source)},gn.months=function(e,t){return e?a(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||Xe).test(t)?\"format\":\"standalone\"][e.month()]:a(this._months)?this._months:this._months.standalone},gn.monthsShort=function(e,t){return e?a(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[Xe.test(t)?\"format\":\"standalone\"][e.month()]:a(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},gn.monthsParse=function(e,t,n){var o,a,r;if(this._monthsParseExact)return function(e,t,n){var o,a,r,c=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],o=0;o<12;++o)r=u([2e3,o]),this._shortMonthsParse[o]=this.monthsShort(r,\"\").toLocaleLowerCase(),this._longMonthsParse[o]=this.months(r,\"\").toLocaleLowerCase();return n?\"MMM\"===t?-1!==(a=qe.call(this._shortMonthsParse,c))?a:null:-1!==(a=qe.call(this._longMonthsParse,c))?a:null:\"MMM\"===t?-1!==(a=qe.call(this._shortMonthsParse,c))?a:-1!==(a=qe.call(this._longMonthsParse,c))?a:null:-1!==(a=qe.call(this._longMonthsParse,c))?a:-1!==(a=qe.call(this._shortMonthsParse,c))?a:null}.call(this,e,t,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),o=0;o<12;o++){if(a=u([2e3,o]),n&&!this._longMonthsParse[o]&&(this._longMonthsParse[o]=new RegExp(\"^\"+this.months(a,\"\").replace(\".\",\"\")+\"$\",\"i\"),this._shortMonthsParse[o]=new RegExp(\"^\"+this.monthsShort(a,\"\").replace(\".\",\"\")+\"$\",\"i\")),n||this._monthsParse[o]||(r=\"^\"+this.months(a,\"\")+\"|^\"+this.monthsShort(a,\"\"),this._monthsParse[o]=new RegExp(r.replace(\".\",\"\"),\"i\")),n&&\"MMMM\"===t&&this._longMonthsParse[o].test(e))return o;if(n&&\"MMM\"===t&&this._shortMonthsParse[o].test(e))return o;if(!n&&this._monthsParse[o].test(e))return o}},gn.monthsRegex=function(e){return this._monthsParseExact?(M(this,\"_monthsRegex\")||De.call(this),e?this._monthsStrictRegex:this._monthsRegex):(M(this,\"_monthsRegex\")||(this._monthsRegex=Pe),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)},gn.monthsShortRegex=function(e){return this._monthsParseExact?(M(this,\"_monthsRegex\")||De.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(M(this,\"_monthsShortRegex\")||(this._monthsShortRegex=xe),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)},gn.week=function(e){return Ve(e,this._week.dow,this._week.doy).week},gn.firstDayOfYear=function(){return this._week.doy},gn.firstDayOfWeek=function(){return this._week.dow},gn.weekdays=function(e,t){var n=a(this._weekdays)?this._weekdays:this._weekdays[e&&!0!==e&&this._weekdays.isFormat.test(t)?\"format\":\"standalone\"];return!0===e?je(n,this._week.dow):e?n[e.day()]:n},gn.weekdaysMin=function(e){return!0===e?je(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin},gn.weekdaysShort=function(e){return!0===e?je(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort},gn.weekdaysParse=function(e,t,n){var o,a,r;if(this._weekdaysParseExact)return function(e,t,n){var o,a,r,c=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],o=0;o<7;++o)r=u([2e3,1]).day(o),this._minWeekdaysParse[o]=this.weekdaysMin(r,\"\").toLocaleLowerCase(),this._shortWeekdaysParse[o]=this.weekdaysShort(r,\"\").toLocaleLowerCase(),this._weekdaysParse[o]=this.weekdays(r,\"\").toLocaleLowerCase();return n?\"dddd\"===t?-1!==(a=qe.call(this._weekdaysParse,c))?a:null:\"ddd\"===t?-1!==(a=qe.call(this._shortWeekdaysParse,c))?a:null:-1!==(a=qe.call(this._minWeekdaysParse,c))?a:null:\"dddd\"===t?-1!==(a=qe.call(this._weekdaysParse,c))?a:-1!==(a=qe.call(this._shortWeekdaysParse,c))?a:-1!==(a=qe.call(this._minWeekdaysParse,c))?a:null:\"ddd\"===t?-1!==(a=qe.call(this._shortWeekdaysParse,c))?a:-1!==(a=qe.call(this._weekdaysParse,c))?a:-1!==(a=qe.call(this._minWeekdaysParse,c))?a:null:-1!==(a=qe.call(this._minWeekdaysParse,c))?a:-1!==(a=qe.call(this._weekdaysParse,c))?a:-1!==(a=qe.call(this._shortWeekdaysParse,c))?a:null}.call(this,e,t,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),o=0;o<7;o++){if(a=u([2e3,1]).day(o),n&&!this._fullWeekdaysParse[o]&&(this._fullWeekdaysParse[o]=new RegExp(\"^\"+this.weekdays(a,\"\").replace(\".\",\"\\\\.?\")+\"$\",\"i\"),this._shortWeekdaysParse[o]=new RegExp(\"^\"+this.weekdaysShort(a,\"\").replace(\".\",\"\\\\.?\")+\"$\",\"i\"),this._minWeekdaysParse[o]=new RegExp(\"^\"+this.weekdaysMin(a,\"\").replace(\".\",\"\\\\.?\")+\"$\",\"i\")),this._weekdaysParse[o]||(r=\"^\"+this.weekdays(a,\"\")+\"|^\"+this.weekdaysShort(a,\"\")+\"|^\"+this.weekdaysMin(a,\"\"),this._weekdaysParse[o]=new RegExp(r.replace(\".\",\"\"),\"i\")),n&&\"dddd\"===t&&this._fullWeekdaysParse[o].test(e))return o;if(n&&\"ddd\"===t&&this._shortWeekdaysParse[o].test(e))return o;if(n&&\"dd\"===t&&this._minWeekdaysParse[o].test(e))return o;if(!n&&this._weekdaysParse[o].test(e))return o}},gn.weekdaysRegex=function(e){return this._weekdaysParseExact?(M(this,\"_weekdaysRegex\")||$e.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(M(this,\"_weekdaysRegex\")||(this._weekdaysRegex=Qe),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)},gn.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(M(this,\"_weekdaysRegex\")||$e.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(M(this,\"_weekdaysShortRegex\")||(this._weekdaysShortRegex=Je),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},gn.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(M(this,\"_weekdaysRegex\")||$e.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(M(this,\"_weekdaysMinRegex\")||(this._weekdaysMinRegex=Ze),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},gn.isPM=function(e){return\"p\"===(e+\"\").toLowerCase().charAt(0)},gn.meridiem=function(e,t,n){return e>11?n?\"pm\":\"PM\":n?\"am\":\"AM\"},Mt(\"en\",{dayOfMonthOrdinalParse:/\\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10,n=1===O(e%100/10)?\"th\":1===t?\"st\":2===t?\"nd\":3===t?\"rd\":\"th\";return e+n}}),o.lang=v(\"moment.lang is deprecated. Use moment.locale instead.\",Mt),o.langData=v(\"moment.langData is deprecated. Use moment.localeData instead.\",ut);var vn=Math.abs;function Nn(e,t,n,o){var a=jt(t,n);return e._milliseconds+=o*a._milliseconds,e._days+=o*a._days,e._months+=o*a._months,e._bubble()}function qn(e){return e<0?Math.floor(e):Math.ceil(e)}function Tn(e){return 4800*e/146097}function Bn(e){return 146097*e/4800}function Sn(e){return function(){return this.as(e)}}var wn=Sn(\"ms\"),Wn=Sn(\"s\"),Xn=Sn(\"m\"),Rn=Sn(\"h\"),En=Sn(\"d\"),Cn=Sn(\"w\"),kn=Sn(\"M\"),xn=Sn(\"Q\"),Pn=Sn(\"y\");function Dn(e){return function(){return this.isValid()?this._data[e]:NaN}}var Fn=Dn(\"milliseconds\"),In=Dn(\"seconds\"),Hn=Dn(\"minutes\"),Vn=Dn(\"hours\"),Un=Dn(\"days\"),jn=Dn(\"months\"),Yn=Dn(\"years\"),Gn=Math.round,Kn={ss:44,s:45,m:45,h:22,d:26,M:11},Qn=Math.abs;function Jn(e){return(e>0)-(e<0)||+e}function Zn(){if(!this.isValid())return this.localeData().invalidDate();var e,t,n=Qn(this._milliseconds)/1e3,o=Qn(this._days),a=Qn(this._months);e=g(n/60),t=g(e/60),n%=60,e%=60;var r=g(a/12),c=a%=12,i=o,s=t,l=e,M=n?n.toFixed(3).replace(/\\.?0+$/,\"\"):\"\",p=this.asSeconds();if(!p)return\"P0D\";var u=p<0?\"-\":\"\",f=Jn(this._months)!==Jn(p)?\"-\":\"\",b=Jn(this._days)!==Jn(p)?\"-\":\"\",d=Jn(this._milliseconds)!==Jn(p)?\"-\":\"\";return u+\"P\"+(r?f+r+\"Y\":\"\")+(c?f+c+\"M\":\"\")+(i?b+i+\"D\":\"\")+(s||l||M?\"T\":\"\")+(s?d+s+\"H\":\"\")+(l?d+l+\"M\":\"\")+(M?d+M+\"S\":\"\")}var $n=Et.prototype;return $n.isValid=function(){return this._isValid},$n.abs=function(){var e=this._data;return this._milliseconds=vn(this._milliseconds),this._days=vn(this._days),this._months=vn(this._months),e.milliseconds=vn(e.milliseconds),e.seconds=vn(e.seconds),e.minutes=vn(e.minutes),e.hours=vn(e.hours),e.months=vn(e.months),e.years=vn(e.years),this},$n.add=function(e,t){return Nn(this,e,t,1)},$n.subtract=function(e,t){return Nn(this,e,t,-1)},$n.as=function(e){if(!this.isValid())return NaN;var t,n,o=this._milliseconds;if(\"month\"===(e=R(e))||\"quarter\"===e||\"year\"===e)switch(t=this._days+o/864e5,n=this._months+Tn(t),e){case\"month\":return n;case\"quarter\":return n/3;case\"year\":return n/12}else switch(t=this._days+Math.round(Bn(this._months)),e){case\"week\":return t/7+o/6048e5;case\"day\":return t+o/864e5;case\"hour\":return 24*t+o/36e5;case\"minute\":return 1440*t+o/6e4;case\"second\":return 86400*t+o/1e3;case\"millisecond\":return Math.floor(864e5*t)+o;default:throw new Error(\"Unknown unit \"+e)}},$n.asMilliseconds=wn,$n.asSeconds=Wn,$n.asMinutes=Xn,$n.asHours=Rn,$n.asDays=En,$n.asWeeks=Cn,$n.asMonths=kn,$n.asQuarters=xn,$n.asYears=Pn,$n.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*O(this._months/12):NaN},$n._bubble=function(){var e,t,n,o,a,r=this._milliseconds,c=this._days,i=this._months,s=this._data;return r>=0&&c>=0&&i>=0||r<=0&&c<=0&&i<=0||(r+=864e5*qn(Bn(i)+c),c=0,i=0),s.milliseconds=r%1e3,e=g(r/1e3),s.seconds=e%60,t=g(e/60),s.minutes=t%60,n=g(t/60),s.hours=n%24,c+=g(n/24),a=g(Tn(c)),i+=a,c-=qn(Bn(a)),o=g(i/12),i%=12,s.days=c,s.months=i,s.years=o,this},$n.clone=function(){return jt(this)},$n.get=function(e){return e=R(e),this.isValid()?this[e+\"s\"]():NaN},$n.milliseconds=Fn,$n.seconds=In,$n.minutes=Hn,$n.hours=Vn,$n.days=Un,$n.weeks=function(){return g(this.days()/7)},$n.months=jn,$n.years=Yn,$n.humanize=function(e){if(!this.isValid())return this.localeData().invalidDate();var t=this.localeData(),n=function(e,t,n){var o=jt(e).abs(),a=Gn(o.as(\"s\")),r=Gn(o.as(\"m\")),c=Gn(o.as(\"h\")),i=Gn(o.as(\"d\")),s=Gn(o.as(\"M\")),l=Gn(o.as(\"y\")),M=a<=Kn.ss&&[\"s\",a]||a<Kn.s&&[\"ss\",a]||r<=1&&[\"m\"]||r<Kn.m&&[\"mm\",r]||c<=1&&[\"h\"]||c<Kn.h&&[\"hh\",c]||i<=1&&[\"d\"]||i<Kn.d&&[\"dd\",i]||s<=1&&[\"M\"]||s<Kn.M&&[\"MM\",s]||l<=1&&[\"y\"]||[\"yy\",l];return M[2]=t,M[3]=+e>0,M[4]=n,function(e,t,n,o,a){return a.relativeTime(t||1,!!n,e,o)}.apply(null,M)}(this,!e,t);return e&&(n=t.pastFuture(+this,n)),t.postformat(n)},$n.toISOString=Zn,$n.toString=Zn,$n.toJSON=Zn,$n.locale=en,$n.localeData=nn,$n.toIsoString=v(\"toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)\",Zn),$n.lang=tn,H(\"X\",0,0,\"unix\"),H(\"x\",0,0,\"valueOf\"),le(\"x\",ae),le(\"X\",/[+-]?\\d+(\\.\\d{1,3})?/),fe(\"X\",function(e,t,n){n._d=new Date(1e3*parseFloat(e,10))}),fe(\"x\",function(e,t,n){n._d=new Date(O(e))}),o.version=\"2.24.0\",t=St,o.fn=mn,o.min=function(){return Xt(\"isBefore\",[].slice.call(arguments,0))},o.max=function(){return Xt(\"isAfter\",[].slice.call(arguments,0))},o.now=function(){return Date.now?Date.now():+new Date},o.utc=u,o.unix=function(e){return St(1e3*e)},o.months=function(e,t){return Ln(e,t,\"months\")},o.isDate=s,o.locale=Mt,o.invalid=d,o.duration=jt,o.isMoment=z,o.weekdays=function(e,t,n){return yn(e,t,n,\"weekdays\")},o.parseZone=function(){return St.apply(null,arguments).parseZone()},o.localeData=ut,o.isDuration=Ct,o.monthsShort=function(e,t){return Ln(e,t,\"monthsShort\")},o.weekdaysMin=function(e,t,n){return yn(e,t,n,\"weekdaysMin\")},o.defineLocale=pt,o.updateLocale=function(e,t){if(null!=t){var n,o,a=rt;null!=(o=lt(e))&&(a=o._config),t=S(a,t),(n=new w(t)).parentLocale=ct[e],ct[e]=n,Mt(e)}else null!=ct[e]&&(null!=ct[e].parentLocale?ct[e]=ct[e].parentLocale:null!=ct[e]&&delete ct[e]);return ct[e]},o.locales=function(){return N(ct)},o.weekdaysShort=function(e,t,n){return yn(e,t,n,\"weekdaysShort\")},o.normalizeUnits=R,o.relativeTimeRounding=function(e){return void 0===e?Gn:\"function\"===typeof e&&(Gn=e,!0)},o.relativeTimeThreshold=function(e,t){return void 0!==Kn[e]&&(void 0===t?Kn[e]:(Kn[e]=t,\"s\"===e&&(Kn.ss=t-1),!0))},o.calendarFormat=function(e,t){var n=e.diff(t,\"days\",!0);return n<-6?\"sameElse\":n<-1?\"lastWeek\":n<0?\"lastDay\":n<1?\"sameDay\":n<2?\"nextDay\":n<7?\"nextWeek\":\"sameElse\"},o.prototype=mn,o.HTML5_FMT={DATETIME_LOCAL:\"YYYY-MM-DDTHH:mm\",DATETIME_LOCAL_SECONDS:\"YYYY-MM-DDTHH:mm:ss\",DATETIME_LOCAL_MS:\"YYYY-MM-DDTHH:mm:ss.SSS\",DATE:\"YYYY-MM-DD\",TIME:\"HH:mm\",TIME_SECONDS:\"HH:mm:ss\",TIME_MS:\"HH:mm:ss.SSS\",WEEK:\"GGGG-[W]WW\",MONTH:\"YYYY-MM\"},o}()}).call(this,n(153)(e))},function(e,t,n){(e.exports=n(372)).tz.load(n(373))},function(e,t,n){var o=n(378)(\"socket.io-parser\"),a=n(381),r=n(382),c=n(340),i=n(341);function s(){}t.protocol=4,t.types=[\"CONNECT\",\"DISCONNECT\",\"EVENT\",\"ACK\",\"ERROR\",\"BINARY_EVENT\",\"BINARY_ACK\"],t.CONNECT=0,t.DISCONNECT=1,t.EVENT=2,t.ACK=3,t.ERROR=4,t.BINARY_EVENT=5,t.BINARY_ACK=6,t.Encoder=s,t.Decoder=p;var l=t.ERROR+'\"encode error\"';function M(e){var n=\"\"+e.type;if(t.BINARY_EVENT!==e.type&&t.BINARY_ACK!==e.type||(n+=e.attachments+\"-\"),e.nsp&&\"/\"!==e.nsp&&(n+=e.nsp+\",\"),null!=e.id&&(n+=e.id),null!=e.data){var a=function(e){try{return JSON.stringify(e)}catch(t){return!1}}(e.data);if(!1===a)return l;n+=a}return o(\"encoded %j as %s\",e,n),n}function p(){this.reconstructor=null}function u(e){this.reconPack=e,this.buffers=[]}function f(e){return{type:t.ERROR,data:\"parser error: \"+e}}s.prototype.encode=function(e,n){(o(\"encoding packet %j\",e),t.BINARY_EVENT===e.type||t.BINARY_ACK===e.type)?function(e,t){r.removeBlobs(e,function(e){var n=r.deconstructPacket(e),o=M(n.packet),a=n.buffers;a.unshift(o),t(a)})}(e,n):n([M(e)])},a(p.prototype),p.prototype.add=function(e){var n;if(\"string\"===typeof e)n=function(e){var n=0,a={type:Number(e.charAt(0))};if(null==t.types[a.type])return f(\"unknown packet type \"+a.type);if(t.BINARY_EVENT===a.type||t.BINARY_ACK===a.type){for(var r=\"\";\"-\"!==e.charAt(++n)&&(r+=e.charAt(n),n!=e.length););if(r!=Number(r)||\"-\"!==e.charAt(n))throw new Error(\"Illegal attachments\");a.attachments=Number(r)}if(\"/\"===e.charAt(n+1))for(a.nsp=\"\";++n;){var i=e.charAt(n);if(\",\"===i)break;if(a.nsp+=i,n===e.length)break}else a.nsp=\"/\";var s=e.charAt(n+1);if(\"\"!==s&&Number(s)==s){for(a.id=\"\";++n;){var i=e.charAt(n);if(null==i||Number(i)!=i){--n;break}if(a.id+=e.charAt(n),n===e.length)break}a.id=Number(a.id)}if(e.charAt(++n)){var l=function(e){try{return JSON.parse(e)}catch(t){return!1}}(e.substr(n)),M=!1!==l&&(a.type===t.ERROR||c(l));if(!M)return f(\"invalid payload\");a.data=l}return o(\"decoded %s as %j\",e,a),a}(e),t.BINARY_EVENT===n.type||t.BINARY_ACK===n.type?(this.reconstructor=new u(n),0===this.reconstructor.reconPack.attachments&&this.emit(\"decoded\",n)):this.emit(\"decoded\",n);else{if(!i(e)&&!e.base64)throw new Error(\"Unknown type: \"+e);if(!this.reconstructor)throw new Error(\"got binary data when not reconstructing a packet\");(n=this.reconstructor.takeBinaryData(e))&&(this.reconstructor=null,this.emit(\"decoded\",n))}},p.prototype.destroy=function(){this.reconstructor&&this.reconstructor.finishedReconstruction()},u.prototype.takeBinaryData=function(e){if(this.buffers.push(e),this.buffers.length===this.reconPack.attachments){var t=r.reconstructPacket(this.reconPack,this.buffers);return this.finishedReconstruction(),t}return null},u.prototype.finishedReconstruction=function(){this.reconPack=null,this.buffers=[]}},function(e,t,n){var o=n(385);e.exports=function(e){var t=e.xdomain,n=e.xscheme,a=e.enablesXDR;try{if(\"undefined\"!==typeof XMLHttpRequest&&(!t||o))return new XMLHttpRequest}catch(r){}try{if(\"undefined\"!==typeof XDomainRequest&&!n&&a)return new XDomainRequest}catch(r){}if(!t)try{return new(self[[\"Active\"].concat(\"Object\").join(\"X\")])(\"Microsoft.XMLHTTP\")}catch(r){}}},function(e,t,n){var o=n(300),a=n(315);function r(e){this.path=e.path,this.hostname=e.hostname,this.port=e.port,this.secure=e.secure,this.query=e.query,this.timestampParam=e.timestampParam,this.timestampRequests=e.timestampRequests,this.readyState=\"\",this.agent=e.agent||!1,this.socket=e.socket,this.enablesXDR=e.enablesXDR,this.pfx=e.pfx,this.key=e.key,this.passphrase=e.passphrase,this.cert=e.cert,this.ca=e.ca,this.ciphers=e.ciphers,this.rejectUnauthorized=e.rejectUnauthorized,this.forceNode=e.forceNode,this.isReactNative=e.isReactNative,this.extraHeaders=e.extraHeaders,this.localAddress=e.localAddress}e.exports=r,a(r.prototype),r.prototype.onError=function(e,t){var n=new Error(e);return n.type=\"TransportError\",n.description=t,this.emit(\"error\",n),this},r.prototype.open=function(){return\"closed\"!==this.readyState&&\"\"!==this.readyState||(this.readyState=\"opening\",this.doOpen()),this},r.prototype.close=function(){return\"opening\"!==this.readyState&&\"open\"!==this.readyState||(this.doClose(),this.onClose()),this},r.prototype.send=function(e){if(\"open\"!==this.readyState)throw new Error(\"Transport not open\");this.write(e)},r.prototype.onOpen=function(){this.readyState=\"open\",this.writable=!0,this.emit(\"open\")},r.prototype.onData=function(e){var t=o.decodePacket(e,this.socket.binaryType);this.onPacket(t)},r.prototype.onPacket=function(e){this.emit(\"packet\",e)},r.prototype.onClose=function(){this.readyState=\"closed\",this.emit(\"close\")}},function(e,t,n){function o(e){if(e)return function(e){for(var t in o.prototype)e[t]=o.prototype[t];return e}(e)}e.exports=o,o.prototype.on=o.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks[\"$\"+e]=this._callbacks[\"$\"+e]||[]).push(t),this},o.prototype.once=function(e,t){function n(){this.off(e,n),t.apply(this,arguments)}return n.fn=t,this.on(e,n),this},o.prototype.off=o.prototype.removeListener=o.prototype.removeAllListeners=o.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var n,o=this._callbacks[\"$\"+e];if(!o)return this;if(1==arguments.length)return delete this._callbacks[\"$\"+e],this;for(var a=0;a<o.length;a++)if((n=o[a])===t||n.fn===t){o.splice(a,1);break}return this},o.prototype.emit=function(e){this._callbacks=this._callbacks||{};var t=[].slice.call(arguments,1),n=this._callbacks[\"$\"+e];if(n)for(var o=0,a=(n=n.slice(0)).length;o<a;++o)n[o].apply(this,t);return this},o.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks[\"$\"+e]||[]},o.prototype.hasListeners=function(e){return!!this.listeners(e).length}},function(e,t,n){\"use strict\";var o=n(301).codes.ERR_STREAM_PREMATURE_CLOSE;function a(){}e.exports=function e(t,n,r){if(\"function\"===typeof n)return e(t,null,n);n||(n={}),r=function(e){var t=!1;return function(){if(!t){t=!0;for(var n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];e.apply(this,o)}}}(r||a);var c=n.readable||!1!==n.readable&&t.readable,i=n.writable||!1!==n.writable&&t.writable,s=function(){t.writable||M()},l=t._writableState&&t._writableState.finished,M=function(){i=!1,l=!0,c||r.call(t)},p=t._readableState&&t._readableState.endEmitted,u=function(){c=!1,p=!0,i||r.call(t)},f=function(e){r.call(t,e)},b=function(){var e;return c&&!p?(t._readableState&&t._readableState.ended||(e=new o),r.call(t,e)):i&&!l?(t._writableState&&t._writableState.ended||(e=new o),r.call(t,e)):void 0},d=function(){t.req.on(\"finish\",M)};return function(e){return e.setHeader&&\"function\"===typeof e.abort}(t)?(t.on(\"complete\",M),t.on(\"abort\",b),t.req?d():t.on(\"request\",d)):i&&!t._writableState&&(t.on(\"end\",s),t.on(\"close\",s)),t.on(\"end\",u),t.on(\"finish\",M),!1!==n.error&&t.on(\"error\",f),t.on(\"close\",b),function(){t.removeListener(\"complete\",M),t.removeListener(\"abort\",b),t.removeListener(\"request\",d),t.req&&t.req.removeListener(\"finish\",M),t.removeListener(\"end\",s),t.removeListener(\"close\",s),t.removeListener(\"finish\",M),t.removeListener(\"end\",u),t.removeListener(\"error\",f),t.removeListener(\"close\",b)}}},function(e,t,n){var o=n(298),a=(o.System,o.VbrMode,o.Float,o.ShortBlock,o.Util,o.Arrays,o.new_array_n,o.new_byte,o.new_double,o.new_float),r=(o.new_float_n,o.new_int),c=(o.new_int_n,o.assert,n(308));e.exports=function(){this.xr=a(576),this.l3_enc=r(576),this.scalefac=r(c.SFBMAX),this.xrpow_max=0,this.part2_3_length=0,this.big_values=0,this.count1=0,this.global_gain=0,this.scalefac_compress=0,this.block_type=0,this.mixed_block_flag=0,this.table_select=r(3),this.subblock_gain=r(4),this.region0_count=0,this.region1_count=0,this.preflag=0,this.scalefac_scale=0,this.count1table_select=0,this.part2_length=0,this.sfb_lmax=0,this.sfb_smin=0,this.psy_lmax=0,this.sfbmax=0,this.psymax=0,this.sfbdivide=0,this.width=r(c.SFBMAX),this.window=r(c.SFBMAX),this.count1bits=0,this.sfb_partition_table=null,this.slen=r(4),this.max_nonzero_coeff=0;var e=this;function t(e){return new Int32Array(e)}this.assign=function(n){var o;e.xr=(o=n.xr,new Float32Array(o)),e.l3_enc=t(n.l3_enc),e.scalefac=t(n.scalefac),e.xrpow_max=n.xrpow_max,e.part2_3_length=n.part2_3_length,e.big_values=n.big_values,e.count1=n.count1,e.global_gain=n.global_gain,e.scalefac_compress=n.scalefac_compress,e.block_type=n.block_type,e.mixed_block_flag=n.mixed_block_flag,e.table_select=t(n.table_select),e.subblock_gain=t(n.subblock_gain),e.region0_count=n.region0_count,e.region1_count=n.region1_count,e.preflag=n.preflag,e.scalefac_scale=n.scalefac_scale,e.count1table_select=n.count1table_select,e.part2_length=n.part2_length,e.sfb_lmax=n.sfb_lmax,e.sfb_smin=n.sfb_smin,e.psy_lmax=n.psy_lmax,e.sfbmax=n.sfbmax,e.psymax=n.psymax,e.sfbdivide=n.sfbdivide,e.width=t(n.width),e.window=t(n.window),e.count1bits=n.count1bits,e.sfb_partition_table=n.sfb_partition_table.slice(0),e.slen=t(n.slen),e.max_nonzero_coeff=n.max_nonzero_coeff}}},function(e,t){function n(e,t,n,o){this.xlen=e,this.linmax=t,this.table=n,this.hlen=o}var o={t1HB:[1,1,1,0],t2HB:[1,2,1,3,1,1,3,2,0],t3HB:[3,2,1,1,1,1,3,2,0],t5HB:[1,2,6,5,3,1,4,4,7,5,7,1,6,1,1,0],t6HB:[7,3,5,1,6,2,3,2,5,4,4,1,3,3,2,0],t7HB:[1,2,10,19,16,10,3,3,7,10,5,3,11,4,13,17,8,4,12,11,18,15,11,2,7,6,9,14,3,1,6,4,5,3,2,0],t8HB:[3,4,6,18,12,5,5,1,2,16,9,3,7,3,5,14,7,3,19,17,15,13,10,4,13,5,8,11,5,1,12,4,4,1,1,0],t9HB:[7,5,9,14,15,7,6,4,5,5,6,7,7,6,8,8,8,5,15,6,9,10,5,1,11,7,9,6,4,1,14,4,6,2,6,0],t10HB:[1,2,10,23,35,30,12,17,3,3,8,12,18,21,12,7,11,9,15,21,32,40,19,6,14,13,22,34,46,23,18,7,20,19,33,47,27,22,9,3,31,22,41,26,21,20,5,3,14,13,10,11,16,6,5,1,9,8,7,8,4,4,2,0],t11HB:[3,4,10,24,34,33,21,15,5,3,4,10,32,17,11,10,11,7,13,18,30,31,20,5,25,11,19,59,27,18,12,5,35,33,31,58,30,16,7,5,28,26,32,19,17,15,8,14,14,12,9,13,14,9,4,1,11,4,6,6,6,3,2,0],t12HB:[9,6,16,33,41,39,38,26,7,5,6,9,23,16,26,11,17,7,11,14,21,30,10,7,17,10,15,12,18,28,14,5,32,13,22,19,18,16,9,5,40,17,31,29,17,13,4,2,27,12,11,15,10,7,4,1,27,12,8,12,6,3,1,0],t13HB:[1,5,14,21,34,51,46,71,42,52,68,52,67,44,43,19,3,4,12,19,31,26,44,33,31,24,32,24,31,35,22,14,15,13,23,36,59,49,77,65,29,40,30,40,27,33,42,16,22,20,37,61,56,79,73,64,43,76,56,37,26,31,25,14,35,16,60,57,97,75,114,91,54,73,55,41,48,53,23,24,58,27,50,96,76,70,93,84,77,58,79,29,74,49,41,17,47,45,78,74,115,94,90,79,69,83,71,50,59,38,36,15,72,34,56,95,92,85,91,90,86,73,77,65,51,44,43,42,43,20,30,44,55,78,72,87,78,61,46,54,37,30,20,16,53,25,41,37,44,59,54,81,66,76,57,54,37,18,39,11,35,33,31,57,42,82,72,80,47,58,55,21,22,26,38,22,53,25,23,38,70,60,51,36,55,26,34,23,27,14,9,7,34,32,28,39,49,75,30,52,48,40,52,28,18,17,9,5,45,21,34,64,56,50,49,45,31,19,12,15,10,7,6,3,48,23,20,39,36,35,53,21,16,23,13,10,6,1,4,2,16,15,17,27,25,20,29,11,17,12,16,8,1,1,0,1],t15HB:[7,12,18,53,47,76,124,108,89,123,108,119,107,81,122,63,13,5,16,27,46,36,61,51,42,70,52,83,65,41,59,36,19,17,15,24,41,34,59,48,40,64,50,78,62,80,56,33,29,28,25,43,39,63,55,93,76,59,93,72,54,75,50,29,52,22,42,40,67,57,95,79,72,57,89,69,49,66,46,27,77,37,35,66,58,52,91,74,62,48,79,63,90,62,40,38,125,32,60,56,50,92,78,65,55,87,71,51,73,51,70,30,109,53,49,94,88,75,66,122,91,73,56,42,64,44,21,25,90,43,41,77,73,63,56,92,77,66,47,67,48,53,36,20,71,34,67,60,58,49,88,76,67,106,71,54,38,39,23,15,109,53,51,47,90,82,58,57,48,72,57,41,23,27,62,9,86,42,40,37,70,64,52,43,70,55,42,25,29,18,11,11,118,68,30,55,50,46,74,65,49,39,24,16,22,13,14,7,91,44,39,38,34,63,52,45,31,52,28,19,14,8,9,3,123,60,58,53,47,43,32,22,37,24,17,12,15,10,2,1,71,37,34,30,28,20,17,26,21,16,10,6,8,6,2,0],t16HB:[1,5,14,44,74,63,110,93,172,149,138,242,225,195,376,17,3,4,12,20,35,62,53,47,83,75,68,119,201,107,207,9,15,13,23,38,67,58,103,90,161,72,127,117,110,209,206,16,45,21,39,69,64,114,99,87,158,140,252,212,199,387,365,26,75,36,68,65,115,101,179,164,155,264,246,226,395,382,362,9,66,30,59,56,102,185,173,265,142,253,232,400,388,378,445,16,111,54,52,100,184,178,160,133,257,244,228,217,385,366,715,10,98,48,91,88,165,157,148,261,248,407,397,372,380,889,884,8,85,84,81,159,156,143,260,249,427,401,392,383,727,713,708,7,154,76,73,141,131,256,245,426,406,394,384,735,359,710,352,11,139,129,67,125,247,233,229,219,393,743,737,720,885,882,439,4,243,120,118,115,227,223,396,746,742,736,721,712,706,223,436,6,202,224,222,218,216,389,386,381,364,888,443,707,440,437,1728,4,747,211,210,208,370,379,734,723,714,1735,883,877,876,3459,865,2,377,369,102,187,726,722,358,711,709,866,1734,871,3458,870,434,0,12,10,7,11,10,17,11,9,13,12,10,7,5,3,1,3],t24HB:[15,13,46,80,146,262,248,434,426,669,653,649,621,517,1032,88,14,12,21,38,71,130,122,216,209,198,327,345,319,297,279,42,47,22,41,74,68,128,120,221,207,194,182,340,315,295,541,18,81,39,75,70,134,125,116,220,204,190,178,325,311,293,271,16,147,72,69,135,127,118,112,210,200,188,352,323,306,285,540,14,263,66,129,126,119,114,214,202,192,180,341,317,301,281,262,12,249,123,121,117,113,215,206,195,185,347,330,308,291,272,520,10,435,115,111,109,211,203,196,187,353,332,313,298,283,531,381,17,427,212,208,205,201,193,186,177,169,320,303,286,268,514,377,16,335,199,197,191,189,181,174,333,321,305,289,275,521,379,371,11,668,184,183,179,175,344,331,314,304,290,277,530,383,373,366,10,652,346,171,168,164,318,309,299,287,276,263,513,375,368,362,6,648,322,316,312,307,302,292,284,269,261,512,376,370,364,359,4,620,300,296,294,288,282,273,266,515,380,374,369,365,361,357,2,1033,280,278,274,267,264,259,382,378,372,367,363,360,358,356,0,43,20,19,17,15,13,11,9,7,6,4,7,5,3,1,3],t32HB:[1,10,8,20,12,20,16,32,14,12,24,0,28,16,24,16],t33HB:[15,28,26,48,22,40,36,64,14,24,20,32,12,16,8,0],t1l:[1,4,3,5],t2l:[1,4,7,4,5,7,6,7,8],t3l:[2,3,7,4,4,7,6,7,8],t5l:[1,4,7,8,4,5,8,9,7,8,9,10,8,8,9,10],t6l:[3,4,6,8,4,4,6,7,5,6,7,8,7,7,8,9],t7l:[1,4,7,9,9,10,4,6,8,9,9,10,7,7,9,10,10,11,8,9,10,11,11,11,8,9,10,11,11,12,9,10,11,12,12,12],t8l:[2,4,7,9,9,10,4,4,6,10,10,10,7,6,8,10,10,11,9,10,10,11,11,12,9,9,10,11,12,12,10,10,11,11,13,13],t9l:[3,4,6,7,9,10,4,5,6,7,8,10,5,6,7,8,9,10,7,7,8,9,9,10,8,8,9,9,10,11,9,9,10,10,11,11],t10l:[1,4,7,9,10,10,10,11,4,6,8,9,10,11,10,10,7,8,9,10,11,12,11,11,8,9,10,11,12,12,11,12,9,10,11,12,12,12,12,12,10,11,12,12,13,13,12,13,9,10,11,12,12,12,13,13,10,10,11,12,12,13,13,13],t11l:[2,4,6,8,9,10,9,10,4,5,6,8,10,10,9,10,6,7,8,9,10,11,10,10,8,8,9,11,10,12,10,11,9,10,10,11,11,12,11,12,9,10,11,12,12,13,12,13,9,9,9,10,11,12,12,12,9,9,10,11,12,12,12,12],t12l:[4,4,6,8,9,10,10,10,4,5,6,7,9,9,10,10,6,6,7,8,9,10,9,10,7,7,8,8,9,10,10,10,8,8,9,9,10,10,10,11,9,9,10,10,10,11,10,11,9,9,9,10,10,11,11,12,10,10,10,11,11,11,11,12],t13l:[1,5,7,8,9,10,10,11,10,11,12,12,13,13,14,14,4,6,8,9,10,10,11,11,11,11,12,12,13,14,14,14,7,8,9,10,11,11,12,12,11,12,12,13,13,14,15,15,8,9,10,11,11,12,12,12,12,13,13,13,13,14,15,15,9,9,11,11,12,12,13,13,12,13,13,14,14,15,15,16,10,10,11,12,12,12,13,13,13,13,14,13,15,15,16,16,10,11,12,12,13,13,13,13,13,14,14,14,15,15,16,16,11,11,12,13,13,13,14,14,14,14,15,15,15,16,18,18,10,10,11,12,12,13,13,14,14,14,14,15,15,16,17,17,11,11,12,12,13,13,13,15,14,15,15,16,16,16,18,17,11,12,12,13,13,14,14,15,14,15,16,15,16,17,18,19,12,12,12,13,14,14,14,14,15,15,15,16,17,17,17,18,12,13,13,14,14,15,14,15,16,16,17,17,17,18,18,18,13,13,14,15,15,15,16,16,16,16,16,17,18,17,18,18,14,14,14,15,15,15,17,16,16,19,17,17,17,19,18,18,13,14,15,16,16,16,17,16,17,17,18,18,21,20,21,18],t15l:[3,5,6,8,8,9,10,10,10,11,11,12,12,12,13,14,5,5,7,8,9,9,10,10,10,11,11,12,12,12,13,13,6,7,7,8,9,9,10,10,10,11,11,12,12,13,13,13,7,8,8,9,9,10,10,11,11,11,12,12,12,13,13,13,8,8,9,9,10,10,11,11,11,11,12,12,12,13,13,13,9,9,9,10,10,10,11,11,11,11,12,12,13,13,13,14,10,9,10,10,10,11,11,11,11,12,12,12,13,13,14,14,10,10,10,11,11,11,11,12,12,12,12,12,13,13,13,14,10,10,10,11,11,11,11,12,12,12,12,13,13,14,14,14,10,10,11,11,11,11,12,12,12,13,13,13,13,14,14,14,11,11,11,11,12,12,12,12,12,13,13,13,13,14,15,14,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,15,12,12,11,12,12,12,13,13,13,13,13,13,14,14,15,15,12,12,12,12,12,13,13,13,13,14,14,14,14,14,15,15,13,13,13,13,13,13,13,13,14,14,14,14,15,15,14,15,13,13,13,13,13,13,13,14,14,14,14,14,15,15,15,15],t16_5l:[1,5,7,9,10,10,11,11,12,12,12,13,13,13,14,11,4,6,8,9,10,11,11,11,12,12,12,13,14,13,14,11,7,8,9,10,11,11,12,12,13,12,13,13,13,14,14,12,9,9,10,11,11,12,12,12,13,13,14,14,14,15,15,13,10,10,11,11,12,12,13,13,13,14,14,14,15,15,15,12,10,10,11,11,12,13,13,14,13,14,14,15,15,15,16,13,11,11,11,12,13,13,13,13,14,14,14,14,15,15,16,13,11,11,12,12,13,13,13,14,14,15,15,15,15,17,17,13,11,12,12,13,13,13,14,14,15,15,15,15,16,16,16,13,12,12,12,13,13,14,14,15,15,15,15,16,15,16,15,14,12,13,12,13,14,14,14,14,15,16,16,16,17,17,16,13,13,13,13,13,14,14,15,16,16,16,16,16,16,15,16,14,13,14,14,14,14,15,15,15,15,17,16,16,16,16,18,14,15,14,14,14,15,15,16,16,16,18,17,17,17,19,17,14,14,15,13,14,16,16,15,16,16,17,18,17,19,17,16,14,11,11,11,12,12,13,13,13,14,14,14,14,14,14,14,12],t16l:[1,5,7,9,10,10,11,11,12,12,12,13,13,13,14,10,4,6,8,9,10,11,11,11,12,12,12,13,14,13,14,10,7,8,9,10,11,11,12,12,13,12,13,13,13,14,14,11,9,9,10,11,11,12,12,12,13,13,14,14,14,15,15,12,10,10,11,11,12,12,13,13,13,14,14,14,15,15,15,11,10,10,11,11,12,13,13,14,13,14,14,15,15,15,16,12,11,11,11,12,13,13,13,13,14,14,14,14,15,15,16,12,11,11,12,12,13,13,13,14,14,15,15,15,15,17,17,12,11,12,12,13,13,13,14,14,15,15,15,15,16,16,16,12,12,12,12,13,13,14,14,15,15,15,15,16,15,16,15,13,12,13,12,13,14,14,14,14,15,16,16,16,17,17,16,12,13,13,13,13,14,14,15,16,16,16,16,16,16,15,16,13,13,14,14,14,14,15,15,15,15,17,16,16,16,16,18,13,15,14,14,14,15,15,16,16,16,18,17,17,17,19,17,13,14,15,13,14,16,16,15,16,16,17,18,17,19,17,16,13,10,10,10,11,11,12,12,12,13,13,13,13,13,13,13,10],t24l:[4,5,7,8,9,10,10,11,11,12,12,12,12,12,13,10,5,6,7,8,9,10,10,11,11,11,12,12,12,12,12,10,7,7,8,9,9,10,10,11,11,11,11,12,12,12,13,9,8,8,9,9,10,10,10,11,11,11,11,12,12,12,12,9,9,9,9,10,10,10,10,11,11,11,12,12,12,12,13,9,10,9,10,10,10,10,11,11,11,11,12,12,12,12,12,9,10,10,10,10,10,11,11,11,11,12,12,12,12,12,13,9,11,10,10,10,11,11,11,11,12,12,12,12,12,13,13,10,11,11,11,11,11,11,11,11,11,12,12,12,12,13,13,10,11,11,11,11,11,11,11,12,12,12,12,12,13,13,13,10,12,11,11,11,11,12,12,12,12,12,12,13,13,13,13,10,12,12,11,11,11,12,12,12,12,12,12,13,13,13,13,10,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,10,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,10,13,12,12,12,12,12,12,13,13,13,13,13,13,13,13,10,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,6],t32l:[1,5,5,7,5,8,7,9,5,7,7,9,7,9,9,10],t33l:[4,5,5,6,5,6,6,7,5,6,6,7,6,7,7,8]};o.ht=[new n(0,0,null,null),new n(2,0,o.t1HB,o.t1l),new n(3,0,o.t2HB,o.t2l),new n(3,0,o.t3HB,o.t3l),new n(0,0,null,null),new n(4,0,o.t5HB,o.t5l),new n(4,0,o.t6HB,o.t6l),new n(6,0,o.t7HB,o.t7l),new n(6,0,o.t8HB,o.t8l),new n(6,0,o.t9HB,o.t9l),new n(8,0,o.t10HB,o.t10l),new n(8,0,o.t11HB,o.t11l),new n(8,0,o.t12HB,o.t12l),new n(16,0,o.t13HB,o.t13l),new n(0,0,null,o.t16_5l),new n(16,0,o.t15HB,o.t15l),new n(1,1,o.t16HB,o.t16l),new n(2,3,o.t16HB,o.t16l),new n(3,7,o.t16HB,o.t16l),new n(4,15,o.t16HB,o.t16l),new n(6,63,o.t16HB,o.t16l),new n(8,255,o.t16HB,o.t16l),new n(10,1023,o.t16HB,o.t16l),new n(13,8191,o.t16HB,o.t16l),new n(4,15,o.t24HB,o.t24l),new n(5,31,o.t24HB,o.t24l),new n(6,63,o.t24HB,o.t24l),new n(7,127,o.t24HB,o.t24l),new n(8,255,o.t24HB,o.t24l),new n(9,511,o.t24HB,o.t24l),new n(11,2047,o.t24HB,o.t24l),new n(13,8191,o.t24HB,o.t24l),new n(0,0,o.t32HB,o.t32l),new n(0,0,o.t33HB,o.t33l)],o.largetbl=[65540,327685,458759,589832,655369,655370,720906,720907,786443,786444,786444,851980,851980,851980,917517,655370,262149,393222,524295,589832,655369,720906,720906,720907,786443,786443,786444,851980,917516,851980,917516,655370,458759,524295,589832,655369,720905,720906,786442,786443,851979,786443,851979,851980,851980,917516,917517,720905,589832,589832,655369,720905,720906,786442,786442,786443,851979,851979,917515,917516,917516,983052,983052,786441,655369,655369,720905,720906,786442,786442,851978,851979,851979,917515,917516,917516,983052,983052,983053,720905,655370,655369,720906,720906,786442,851978,851979,917515,851979,917515,917516,983052,983052,983052,1048588,786441,720906,720906,720906,786442,851978,851979,851979,851979,917515,917516,917516,917516,983052,983052,1048589,786441,720907,720906,786442,786442,851979,851979,851979,917515,917516,983052,983052,983052,983052,1114125,1114125,786442,720907,786443,786443,851979,851979,851979,917515,917515,983051,983052,983052,983052,1048588,1048589,1048589,786442,786443,786443,786443,851979,851979,917515,917515,983052,983052,983052,983052,1048588,983053,1048589,983053,851978,786444,851979,786443,851979,917515,917516,917516,917516,983052,1048588,1048588,1048589,1114125,1114125,1048589,786442,851980,851980,851979,851979,917515,917516,983052,1048588,1048588,1048588,1048588,1048589,1048589,983053,1048589,851978,851980,917516,917516,917516,917516,983052,983052,983052,983052,1114124,1048589,1048589,1048589,1048589,1179661,851978,983052,917516,917516,917516,983052,983052,1048588,1048588,1048589,1179661,1114125,1114125,1114125,1245197,1114125,851978,917517,983052,851980,917516,1048588,1048588,983052,1048589,1048589,1114125,1179661,1114125,1245197,1114125,1048589,851978,655369,655369,655369,720905,720905,786441,786441,786441,851977,851977,851977,851978,851978,851978,851978,655366],o.table23=[65538,262147,458759,262148,327684,458759,393222,458759,524296],o.table56=[65539,262148,458758,524296,262148,327684,524294,589831,458757,524294,589831,655368,524295,524295,589832,655369],o.bitrate_table=[[0,8,16,24,32,40,48,56,64,80,96,112,128,144,160,-1],[0,32,40,48,56,64,80,96,112,128,160,192,224,256,320,-1],[0,8,16,24,32,40,48,56,64,-1,-1,-1,-1,-1,-1,-1]],o.samplerate_table=[[22050,24e3,16e3,-1],[44100,48e3,32e3,-1],[11025,12e3,8e3,-1]],o.scfsi_band=[0,6,11,16,21],e.exports=o},,,,,,,,,,,,,,,,,function(e,t,n){\"use strict\";function o(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}n.d(t,\"a\",function(){return o})},function(e,t,n){\"use strict\";function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function a(e,t,n){return t&&o(e.prototype,t),n&&o(e,n),e}n.d(t,\"a\",function(){return a})},function(e,t,n){\"use strict\";function o(e){return(o=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}n.d(t,\"a\",function(){return o})},function(e,t,n){var o=n(375),a=n(312),r=n(342),c=n(303)(\"socket.io-client\");e.exports=t=s;var i=t.managers={};function s(e,t){\"object\"===typeof e&&(t=e,e=void 0),t=t||{};var n,a=o(e),s=a.source,l=a.id,M=a.path,p=i[l]&&M in i[l].nsps;return t.forceNew||t[\"force new connection\"]||!1===t.multiplex||p?(c(\"ignoring socket cache for %s\",s),n=r(s,t)):(i[l]||(c(\"new io instance for %s\",s),i[l]=r(s,t)),n=i[l]),a.query&&!t.query&&(t.query=a.query),n.socket(a.path,t)}t.protocol=a.protocol,t.connect=s,t.Manager=n(342),t.Socket=n(348)},function(e,t){var n=/^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/,o=[\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"];e.exports=function(e){var t=e,a=e.indexOf(\"[\"),r=e.indexOf(\"]\");-1!=a&&-1!=r&&(e=e.substring(0,a)+e.substring(a,r).replace(/:/g,\";\")+e.substring(r,e.length));for(var c=n.exec(e||\"\"),i={},s=14;s--;)i[o[s]]=c[s]||\"\";return-1!=a&&-1!=r&&(i.source=t,i.host=i.host.substring(1,i.host.length-1).replace(/;/g,\":\"),i.authority=i.authority.replace(\"[\",\"\").replace(\"]\",\"\").replace(/;/g,\":\"),i.ipv6uri=!0),i}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return\"[object Array]\"==n.call(e)}},function(e,t,n){(function(t){e.exports=function(e){return n&&t.isBuffer(e)||o&&(e instanceof ArrayBuffer||a(e))};var n=\"function\"===typeof t&&\"function\"===typeof t.isBuffer,o=\"function\"===typeof ArrayBuffer,a=function(e){return\"function\"===typeof ArrayBuffer.isView?ArrayBuffer.isView(e):e.buffer instanceof ArrayBuffer}}).call(this,n(14).Buffer)},function(e,t,n){var o=n(383),a=n(348),r=n(349),c=n(312),i=n(350),s=n(351),l=n(303)(\"socket.io-client:manager\"),M=n(347),p=n(400),u=Object.prototype.hasOwnProperty;function f(e,t){if(!(this instanceof f))return new f(e,t);e&&\"object\"===typeof e&&(t=e,e=void 0),(t=t||{}).path=t.path||\"/socket.io\",this.nsps={},this.subs=[],this.opts=t,this.reconnection(!1!==t.reconnection),this.reconnectionAttempts(t.reconnectionAttempts||1/0),this.reconnectionDelay(t.reconnectionDelay||1e3),this.reconnectionDelayMax(t.reconnectionDelayMax||5e3),this.randomizationFactor(t.randomizationFactor||.5),this.backoff=new p({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(null==t.timeout?2e4:t.timeout),this.readyState=\"closed\",this.uri=e,this.connecting=[],this.lastPing=null,this.encoding=!1,this.packetBuffer=[];var n=t.parser||c;this.encoder=new n.Encoder,this.decoder=new n.Decoder,this.autoConnect=!1!==t.autoConnect,this.autoConnect&&this.open()}e.exports=f,f.prototype.emitAll=function(){for(var e in this.emit.apply(this,arguments),this.nsps)u.call(this.nsps,e)&&this.nsps[e].emit.apply(this.nsps[e],arguments)},f.prototype.updateSocketIds=function(){for(var e in this.nsps)u.call(this.nsps,e)&&(this.nsps[e].id=this.generateId(e))},f.prototype.generateId=function(e){return(\"/\"===e?\"\":e+\"#\")+this.engine.id},r(f.prototype),f.prototype.reconnection=function(e){return arguments.length?(this._reconnection=!!e,this):this._reconnection},f.prototype.reconnectionAttempts=function(e){return arguments.length?(this._reconnectionAttempts=e,this):this._reconnectionAttempts},f.prototype.reconnectionDelay=function(e){return arguments.length?(this._reconnectionDelay=e,this.backoff&&this.backoff.setMin(e),this):this._reconnectionDelay},f.prototype.randomizationFactor=function(e){return arguments.length?(this._randomizationFactor=e,this.backoff&&this.backoff.setJitter(e),this):this._randomizationFactor},f.prototype.reconnectionDelayMax=function(e){return arguments.length?(this._reconnectionDelayMax=e,this.backoff&&this.backoff.setMax(e),this):this._reconnectionDelayMax},f.prototype.timeout=function(e){return arguments.length?(this._timeout=e,this):this._timeout},f.prototype.maybeReconnectOnOpen=function(){!this.reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()},f.prototype.open=f.prototype.connect=function(e,t){if(l(\"readyState %s\",this.readyState),~this.readyState.indexOf(\"open\"))return this;l(\"opening %s\",this.uri),this.engine=o(this.uri,this.opts);var n=this.engine,a=this;this.readyState=\"opening\",this.skipReconnect=!1;var r=i(n,\"open\",function(){a.onopen(),e&&e()}),c=i(n,\"error\",function(t){if(l(\"connect_error\"),a.cleanup(),a.readyState=\"closed\",a.emitAll(\"connect_error\",t),e){var n=new Error(\"Connection error\");n.data=t,e(n)}else a.maybeReconnectOnOpen()});if(!1!==this._timeout){var s=this._timeout;l(\"connect attempt will timeout after %d\",s);var M=setTimeout(function(){l(\"connect attempt timed out after %d\",s),r.destroy(),n.close(),n.emit(\"error\",\"timeout\"),a.emitAll(\"connect_timeout\",s)},s);this.subs.push({destroy:function(){clearTimeout(M)}})}return this.subs.push(r),this.subs.push(c),this},f.prototype.onopen=function(){l(\"open\"),this.cleanup(),this.readyState=\"open\",this.emit(\"open\");var e=this.engine;this.subs.push(i(e,\"data\",s(this,\"ondata\"))),this.subs.push(i(e,\"ping\",s(this,\"onping\"))),this.subs.push(i(e,\"pong\",s(this,\"onpong\"))),this.subs.push(i(e,\"error\",s(this,\"onerror\"))),this.subs.push(i(e,\"close\",s(this,\"onclose\"))),this.subs.push(i(this.decoder,\"decoded\",s(this,\"ondecoded\")))},f.prototype.onping=function(){this.lastPing=new Date,this.emitAll(\"ping\")},f.prototype.onpong=function(){this.emitAll(\"pong\",new Date-this.lastPing)},f.prototype.ondata=function(e){this.decoder.add(e)},f.prototype.ondecoded=function(e){this.emit(\"packet\",e)},f.prototype.onerror=function(e){l(\"error\",e),this.emitAll(\"error\",e)},f.prototype.socket=function(e,t){var n=this.nsps[e];if(!n){n=new a(this,e,t),this.nsps[e]=n;var o=this;n.on(\"connecting\",r),n.on(\"connect\",function(){n.id=o.generateId(e)}),this.autoConnect&&r()}function r(){~M(o.connecting,n)||o.connecting.push(n)}return n},f.prototype.destroy=function(e){var t=M(this.connecting,e);~t&&this.connecting.splice(t,1),this.connecting.length||this.close()},f.prototype.packet=function(e){l(\"writing packet %j\",e);var t=this;e.query&&0===e.type&&(e.nsp+=\"?\"+e.query),t.encoding?t.packetBuffer.push(e):(t.encoding=!0,this.encoder.encode(e,function(n){for(var o=0;o<n.length;o++)t.engine.write(n[o],e.options);t.encoding=!1,t.processPacketQueue()}))},f.prototype.processPacketQueue=function(){if(this.packetBuffer.length>0&&!this.encoding){var e=this.packetBuffer.shift();this.packet(e)}},f.prototype.cleanup=function(){l(\"cleanup\");for(var e=this.subs.length,t=0;t<e;t++){this.subs.shift().destroy()}this.packetBuffer=[],this.encoding=!1,this.lastPing=null,this.decoder.destroy()},f.prototype.close=f.prototype.disconnect=function(){l(\"disconnect\"),this.skipReconnect=!0,this.reconnecting=!1,\"opening\"===this.readyState&&this.cleanup(),this.backoff.reset(),this.readyState=\"closed\",this.engine&&this.engine.close()},f.prototype.onclose=function(e){l(\"onclose\"),this.cleanup(),this.backoff.reset(),this.readyState=\"closed\",this.emit(\"close\",e),this._reconnection&&!this.skipReconnect&&this.reconnect()},f.prototype.reconnect=function(){if(this.reconnecting||this.skipReconnect)return this;var e=this;if(this.backoff.attempts>=this._reconnectionAttempts)l(\"reconnect failed\"),this.backoff.reset(),this.emitAll(\"reconnect_failed\"),this.reconnecting=!1;else{var t=this.backoff.duration();l(\"will wait %dms before reconnect attempt\",t),this.reconnecting=!0;var n=setTimeout(function(){e.skipReconnect||(l(\"attempting reconnect\"),e.emitAll(\"reconnect_attempt\",e.backoff.attempts),e.emitAll(\"reconnecting\",e.backoff.attempts),e.skipReconnect||e.open(function(t){t?(l(\"reconnect attempt error\"),e.reconnecting=!1,e.reconnect(),e.emitAll(\"reconnect_error\",t.data)):(l(\"reconnect success\"),e.onreconnect())}))},t);this.subs.push({destroy:function(){clearTimeout(n)}})}},f.prototype.onreconnect=function(){var e=this.backoff.attempts;this.reconnecting=!1,this.backoff.reset(),this.updateSocketIds(),this.emitAll(\"reconnect\",e)}},function(e,t,n){var o=n(313),a=n(386),r=n(396),c=n(397);t.polling=function(e){var t=!1,n=!1,c=!1!==e.jsonp;if(\"undefined\"!==typeof location){var i=\"https:\"===location.protocol,s=location.port;s||(s=i?443:80),t=e.hostname!==location.hostname||s!==e.port,n=e.secure!==i}if(e.xdomain=t,e.xscheme=n,\"open\"in new o(e)&&!e.forceJSONP)return new a(e);if(!c)throw new Error(\"JSONP disabled\");return new r(e)},t.websocket=c},function(e,t,n){var o=n(314),a=n(304),r=n(300),c=n(305),i=n(346),s=n(306)(\"engine.io-client:polling\");e.exports=M;var l=null!=new(n(313))({xdomain:!1}).responseType;function M(e){var t=e&&e.forceBase64;l&&!t||(this.supportsBinary=!1),o.call(this,e)}c(M,o),M.prototype.name=\"polling\",M.prototype.doOpen=function(){this.poll()},M.prototype.pause=function(e){var t=this;function n(){s(\"paused\"),t.readyState=\"paused\",e()}if(this.readyState=\"pausing\",this.polling||!this.writable){var o=0;this.polling&&(s(\"we are currently polling - waiting to pause\"),o++,this.once(\"pollComplete\",function(){s(\"pre-pause polling complete\"),--o||n()})),this.writable||(s(\"we are currently writing - waiting to pause\"),o++,this.once(\"drain\",function(){s(\"pre-pause writing complete\"),--o||n()}))}else n()},M.prototype.poll=function(){s(\"polling\"),this.polling=!0,this.doPoll(),this.emit(\"poll\")},M.prototype.onData=function(e){var t=this;s(\"polling got data %s\",e);r.decodePayload(e,this.socket.binaryType,function(e,n,o){if(\"opening\"===t.readyState&&t.onOpen(),\"close\"===e.type)return t.onClose(),!1;t.onPacket(e)}),\"closed\"!==this.readyState&&(this.polling=!1,this.emit(\"pollComplete\"),\"open\"===this.readyState?this.poll():s('ignoring poll - transport state \"%s\"',this.readyState))},M.prototype.doClose=function(){var e=this;function t(){s(\"writing close packet\"),e.write([{type:\"close\"}])}\"open\"===this.readyState?(s(\"transport open - closing\"),t()):(s(\"transport not open - deferring close\"),this.once(\"open\",t))},M.prototype.write=function(e){var t=this;this.writable=!1;var n=function(){t.writable=!0,t.emit(\"drain\")};r.encodePayload(e,this.supportsBinary,function(e){t.doWrite(e,n)})},M.prototype.uri=function(){var e=this.query||{},t=this.secure?\"https\":\"http\",n=\"\";return!1!==this.timestampRequests&&(e[this.timestampParam]=i()),this.supportsBinary||e.sid||(e.b64=1),e=a.encode(e),this.port&&(\"https\"===t&&443!==Number(this.port)||\"http\"===t&&80!==Number(this.port))&&(n=\":\"+this.port),e.length&&(e=\"?\"+e),t+\"://\"+(-1!==this.hostname.indexOf(\":\")?\"[\"+this.hostname+\"]\":this.hostname)+n+this.path+e}},function(e,t,n){(function(t){var o=n(388),a=Object.prototype.toString,r=\"function\"===typeof Blob||\"undefined\"!==typeof Blob&&\"[object BlobConstructor]\"===a.call(Blob),c=\"function\"===typeof File||\"undefined\"!==typeof File&&\"[object FileConstructor]\"===a.call(File);e.exports=function e(n){if(!n||\"object\"!==typeof n)return!1;if(o(n)){for(var a=0,i=n.length;a<i;a++)if(e(n[a]))return!0;return!1}if(\"function\"===typeof t&&t.isBuffer&&t.isBuffer(n)||\"function\"===typeof ArrayBuffer&&n instanceof ArrayBuffer||r&&n instanceof Blob||c&&n instanceof File)return!0;if(n.toJSON&&\"function\"===typeof n.toJSON&&1===arguments.length)return e(n.toJSON(),!0);for(var s in n)if(Object.prototype.hasOwnProperty.call(n,s)&&e(n[s]))return!0;return!1}}).call(this,n(14).Buffer)},function(e,t,n){\"use strict\";var o,a=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_\".split(\"\"),r=64,c={},i=0,s=0;function l(e){var t=\"\";do{t=a[e%r]+t,e=Math.floor(e/r)}while(e>0);return t}function M(){var e=l(+new Date);return e!==o?(i=0,o=e):e+\".\"+l(i++)}for(;s<r;s++)c[a[s]]=s;M.encode=l,M.decode=function(e){var t=0;for(s=0;s<e.length;s++)t=t*r+c[e.charAt(s)];return t},e.exports=M},function(e,t){var n=[].indexOf;e.exports=function(e,t){if(n)return e.indexOf(t);for(var o=0;o<e.length;++o)if(e[o]===t)return o;return-1}},function(e,t,n){var o=n(312),a=n(349),r=n(399),c=n(350),i=n(351),s=n(303)(\"socket.io-client:socket\"),l=n(304),M=n(345);e.exports=f;var p={connect:1,connect_error:1,connect_timeout:1,connecting:1,disconnect:1,error:1,reconnect:1,reconnect_attempt:1,reconnect_failed:1,reconnect_error:1,reconnecting:1,ping:1,pong:1},u=a.prototype.emit;function f(e,t,n){this.io=e,this.nsp=t,this.json=this,this.ids=0,this.acks={},this.receiveBuffer=[],this.sendBuffer=[],this.connected=!1,this.disconnected=!0,this.flags={},n&&n.query&&(this.query=n.query),this.io.autoConnect&&this.open()}a(f.prototype),f.prototype.subEvents=function(){if(!this.subs){var e=this.io;this.subs=[c(e,\"open\",i(this,\"onopen\")),c(e,\"packet\",i(this,\"onpacket\")),c(e,\"close\",i(this,\"onclose\"))]}},f.prototype.open=f.prototype.connect=function(){return this.connected?this:(this.subEvents(),this.io.open(),\"open\"===this.io.readyState&&this.onopen(),this.emit(\"connecting\"),this)},f.prototype.send=function(){var e=r(arguments);return e.unshift(\"message\"),this.emit.apply(this,e),this},f.prototype.emit=function(e){if(p.hasOwnProperty(e))return u.apply(this,arguments),this;var t=r(arguments),n={type:(void 0!==this.flags.binary?this.flags.binary:M(t))?o.BINARY_EVENT:o.EVENT,data:t,options:{}};return n.options.compress=!this.flags||!1!==this.flags.compress,\"function\"===typeof t[t.length-1]&&(s(\"emitting packet with ack id %d\",this.ids),this.acks[this.ids]=t.pop(),n.id=this.ids++),this.connected?this.packet(n):this.sendBuffer.push(n),this.flags={},this},f.prototype.packet=function(e){e.nsp=this.nsp,this.io.packet(e)},f.prototype.onopen=function(){if(s(\"transport is open - connecting\"),\"/\"!==this.nsp)if(this.query){var e=\"object\"===typeof this.query?l.encode(this.query):this.query;s(\"sending connect packet with query %s\",e),this.packet({type:o.CONNECT,query:e})}else this.packet({type:o.CONNECT})},f.prototype.onclose=function(e){s(\"close (%s)\",e),this.connected=!1,this.disconnected=!0,delete this.id,this.emit(\"disconnect\",e)},f.prototype.onpacket=function(e){var t=e.nsp===this.nsp,n=e.type===o.ERROR&&\"/\"===e.nsp;if(t||n)switch(e.type){case o.CONNECT:this.onconnect();break;case o.EVENT:case o.BINARY_EVENT:this.onevent(e);break;case o.ACK:case o.BINARY_ACK:this.onack(e);break;case o.DISCONNECT:this.ondisconnect();break;case o.ERROR:this.emit(\"error\",e.data)}},f.prototype.onevent=function(e){var t=e.data||[];s(\"emitting event %j\",t),null!=e.id&&(s(\"attaching ack callback to event\"),t.push(this.ack(e.id))),this.connected?u.apply(this,t):this.receiveBuffer.push(t)},f.prototype.ack=function(e){var t=this,n=!1;return function(){if(!n){n=!0;var a=r(arguments);s(\"sending ack %j\",a),t.packet({type:M(a)?o.BINARY_ACK:o.ACK,id:e,data:a})}}},f.prototype.onack=function(e){var t=this.acks[e.id];\"function\"===typeof t?(s(\"calling ack %s with %j\",e.id,e.data),t.apply(this,e.data),delete this.acks[e.id]):s(\"bad ack %s\",e.id)},f.prototype.onconnect=function(){this.connected=!0,this.disconnected=!1,this.emit(\"connect\"),this.emitBuffered()},f.prototype.emitBuffered=function(){var e;for(e=0;e<this.receiveBuffer.length;e++)u.apply(this,this.receiveBuffer[e]);for(this.receiveBuffer=[],e=0;e<this.sendBuffer.length;e++)this.packet(this.sendBuffer[e]);this.sendBuffer=[]},f.prototype.ondisconnect=function(){s(\"server disconnect (%s)\",this.nsp),this.destroy(),this.onclose(\"io server disconnect\")},f.prototype.destroy=function(){if(this.subs){for(var e=0;e<this.subs.length;e++)this.subs[e].destroy();this.subs=null}this.io.destroy(this)},f.prototype.close=f.prototype.disconnect=function(){return this.connected&&(s(\"performing disconnect (%s)\",this.nsp),this.packet({type:o.DISCONNECT})),this.destroy(),this.connected&&this.onclose(\"io client disconnect\"),this},f.prototype.compress=function(e){return this.flags.compress=e,this},f.prototype.binary=function(e){return this.flags.binary=e,this}},function(e,t,n){function o(e){if(e)return function(e){for(var t in o.prototype)e[t]=o.prototype[t];return e}(e)}e.exports=o,o.prototype.on=o.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks[\"$\"+e]=this._callbacks[\"$\"+e]||[]).push(t),this},o.prototype.once=function(e,t){function n(){this.off(e,n),t.apply(this,arguments)}return n.fn=t,this.on(e,n),this},o.prototype.off=o.prototype.removeListener=o.prototype.removeAllListeners=o.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var n,o=this._callbacks[\"$\"+e];if(!o)return this;if(1==arguments.length)return delete this._callbacks[\"$\"+e],this;for(var a=0;a<o.length;a++)if((n=o[a])===t||n.fn===t){o.splice(a,1);break}return this},o.prototype.emit=function(e){this._callbacks=this._callbacks||{};var t=[].slice.call(arguments,1),n=this._callbacks[\"$\"+e];if(n)for(var o=0,a=(n=n.slice(0)).length;o<a;++o)n[o].apply(this,t);return this},o.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks[\"$\"+e]||[]},o.prototype.hasListeners=function(e){return!!this.listeners(e).length}},function(e,t){e.exports=function(e,t,n){return e.on(t,n),{destroy:function(){e.removeListener(t,n)}}}},function(e,t){var n=[].slice;e.exports=function(e,t){if(\"string\"==typeof t&&(t=e[t]),\"function\"!=typeof t)throw new Error(\"bind() requires a function\");var o=n.call(arguments,2);return function(){return t.apply(e,o.concat(n.call(arguments)))}}},function(e,t,n){\"use strict\";(function(t,o){var a;e.exports=y,y.ReadableState=L;n(65).EventEmitter;var r=function(e,t){return e.listeners(t).length},c=n(353),i=n(14).Buffer,s=t.Uint8Array||function(){};var l,M=n(403);l=M&&M.debuglog?M.debuglog(\"stream\"):function(){};var p,u,f=n(404),b=n(354),d=n(355).getHighWaterMark,h=n(301).codes,_=h.ERR_INVALID_ARG_TYPE,A=h.ERR_STREAM_PUSH_AFTER_EOF,m=h.ERR_METHOD_NOT_IMPLEMENTED,z=h.ERR_STREAM_UNSHIFT_AFTER_END_EVENT,g=n(406).emitExperimentalWarning;n(8)(y,c);var O=[\"error\",\"close\",\"destroy\",\"pause\",\"resume\"];function L(e,t,o){a=a||n(302),e=e||{},\"boolean\"!==typeof o&&(o=t instanceof a),this.objectMode=!!e.objectMode,o&&(this.objectMode=this.objectMode||!!e.readableObjectMode),this.highWaterMark=d(this,e,\"readableHighWaterMark\",o),this.buffer=new f,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==e.emitClose,this.destroyed=!1,this.defaultEncoding=e.defaultEncoding||\"utf8\",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,e.encoding&&(p||(p=n(66).StringDecoder),this.decoder=new p(e.encoding),this.encoding=e.encoding)}function y(e){if(a=a||n(302),!(this instanceof y))return new y(e);var t=this instanceof a;this._readableState=new L(e,this,t),this.readable=!0,e&&(\"function\"===typeof e.read&&(this._read=e.read),\"function\"===typeof e.destroy&&(this._destroy=e.destroy)),c.call(this)}function v(e,t,n,o,a){l(\"readableAddChunk\",t);var r,c=e._readableState;if(null===t)c.reading=!1,function(e,t){if(t.ended)return;if(t.decoder){var n=t.decoder.end();n&&n.length&&(t.buffer.push(n),t.length+=t.objectMode?1:n.length)}t.ended=!0,t.sync?B(e):(t.needReadable=!1,t.emittedReadable||(t.emittedReadable=!0,S(e)))}(e,c);else if(a||(r=function(e,t){var n;o=t,i.isBuffer(o)||o instanceof s||\"string\"===typeof t||void 0===t||e.objectMode||(n=new _(\"chunk\",[\"string\",\"Buffer\",\"Uint8Array\"],t));var o;return n}(c,t)),r)e.emit(\"error\",r);else if(c.objectMode||t&&t.length>0)if(\"string\"===typeof t||c.objectMode||Object.getPrototypeOf(t)===i.prototype||(t=function(e){return i.from(e)}(t)),o)c.endEmitted?e.emit(\"error\",new z):N(e,c,t,!0);else if(c.ended)e.emit(\"error\",new A);else{if(c.destroyed)return!1;c.reading=!1,c.decoder&&!n?(t=c.decoder.write(t),c.objectMode||0!==t.length?N(e,c,t,!1):w(e,c)):N(e,c,t,!1)}else o||(c.reading=!1,w(e,c));return!c.ended&&(c.length<c.highWaterMark||0===c.length)}function N(e,t,n,o){t.flowing&&0===t.length&&!t.sync?(t.awaitDrain=0,e.emit(\"data\",n)):(t.length+=t.objectMode?1:n.length,o?t.buffer.unshift(n):t.buffer.push(n),t.needReadable&&B(e)),w(e,t)}Object.defineProperty(y.prototype,\"destroyed\",{enumerable:!1,get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),y.prototype.destroy=b.destroy,y.prototype._undestroy=b.undestroy,y.prototype._destroy=function(e,t){t(e)},y.prototype.push=function(e,t){var n,o=this._readableState;return o.objectMode?n=!0:\"string\"===typeof e&&((t=t||o.defaultEncoding)!==o.encoding&&(e=i.from(e,t),t=\"\"),n=!0),v(this,e,t,!1,n)},y.prototype.unshift=function(e){return v(this,e,null,!0,!1)},y.prototype.isPaused=function(){return!1===this._readableState.flowing},y.prototype.setEncoding=function(e){return p||(p=n(66).StringDecoder),this._readableState.decoder=new p(e),this._readableState.encoding=this._readableState.decoder.encoding,this};var q=8388608;function T(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!==e?t.flowing&&t.length?t.buffer.head.data.length:t.length:(e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=q?e=q:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0))}function B(e){var t=e._readableState;t.needReadable=!1,t.emittedReadable||(l(\"emitReadable\",t.flowing),t.emittedReadable=!0,o.nextTick(S,e))}function S(e){var t=e._readableState;l(\"emitReadable_\",t.destroyed,t.length,t.ended),t.destroyed||!t.length&&!t.ended||e.emit(\"readable\"),t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark,C(e)}function w(e,t){t.readingMore||(t.readingMore=!0,o.nextTick(W,e,t))}function W(e,t){for(;!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&0===t.length);){var n=t.length;if(l(\"maybeReadMore read 0\"),e.read(0),n===t.length)break}t.readingMore=!1}function X(e){var t=e._readableState;t.readableListening=e.listenerCount(\"readable\")>0,t.resumeScheduled&&!t.paused?t.flowing=!0:e.listenerCount(\"data\")>0&&e.resume()}function R(e){l(\"readable nexttick read 0\"),e.read(0)}function E(e,t){l(\"resume\",t.reading),t.reading||e.read(0),t.resumeScheduled=!1,e.emit(\"resume\"),C(e),t.flowing&&!t.reading&&e.read(0)}function C(e){var t=e._readableState;for(l(\"flow\",t.flowing);t.flowing&&null!==e.read(););}function k(e,t){return 0===t.length?null:(t.objectMode?n=t.buffer.shift():!e||e>=t.length?(n=t.decoder?t.buffer.join(\"\"):1===t.buffer.length?t.buffer.first():t.buffer.concat(t.length),t.buffer.clear()):n=t.buffer.consume(e,t.decoder),n);var n}function x(e){var t=e._readableState;l(\"endReadable\",t.endEmitted),t.endEmitted||(t.ended=!0,o.nextTick(P,t,e))}function P(e,t){l(\"endReadableNT\",e.endEmitted,e.length),e.endEmitted||0!==e.length||(e.endEmitted=!0,t.readable=!1,t.emit(\"end\"))}function D(e,t){for(var n=0,o=e.length;n<o;n++)if(e[n]===t)return n;return-1}y.prototype.read=function(e){l(\"read\",e),e=parseInt(e,10);var t=this._readableState,n=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&((0!==t.highWaterMark?t.length>=t.highWaterMark:t.length>0)||t.ended))return l(\"read: emitReadable\",t.length,t.ended),0===t.length&&t.ended?x(this):B(this),null;if(0===(e=T(e,t))&&t.ended)return 0===t.length&&x(this),null;var o,a=t.needReadable;return l(\"need readable\",a),(0===t.length||t.length-e<t.highWaterMark)&&l(\"length less than watermark\",a=!0),t.ended||t.reading?l(\"reading or ended\",a=!1):a&&(l(\"do read\"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,t.reading||(e=T(n,t))),null===(o=e>0?k(e,t):null)?(t.needReadable=!0,e=0):(t.length-=e,t.awaitDrain=0),0===t.length&&(t.ended||(t.needReadable=!0),n!==e&&t.ended&&x(this)),null!==o&&this.emit(\"data\",o),o},y.prototype._read=function(e){this.emit(\"error\",new m(\"_read()\"))},y.prototype.pipe=function(e,t){var n=this,a=this._readableState;switch(a.pipesCount){case 0:a.pipes=e;break;case 1:a.pipes=[a.pipes,e];break;default:a.pipes.push(e)}a.pipesCount+=1,l(\"pipe count=%d opts=%j\",a.pipesCount,t);var c=(!t||!1!==t.end)&&e!==o.stdout&&e!==o.stderr?s:h;function i(t,o){l(\"onunpipe\"),t===n&&o&&!1===o.hasUnpiped&&(o.hasUnpiped=!0,l(\"cleanup\"),e.removeListener(\"close\",b),e.removeListener(\"finish\",d),e.removeListener(\"drain\",M),e.removeListener(\"error\",f),e.removeListener(\"unpipe\",i),n.removeListener(\"end\",s),n.removeListener(\"end\",h),n.removeListener(\"data\",u),p=!0,!a.awaitDrain||e._writableState&&!e._writableState.needDrain||M())}function s(){l(\"onend\"),e.end()}a.endEmitted?o.nextTick(c):n.once(\"end\",c),e.on(\"unpipe\",i);var M=function(e){return function(){var t=e._readableState;l(\"pipeOnDrain\",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&r(e,\"data\")&&(t.flowing=!0,C(e))}}(n);e.on(\"drain\",M);var p=!1;function u(t){l(\"ondata\");var o=e.write(t);l(\"dest.write\",o),!1===o&&((1===a.pipesCount&&a.pipes===e||a.pipesCount>1&&-1!==D(a.pipes,e))&&!p&&(l(\"false write response, pause\",a.awaitDrain),a.awaitDrain++),n.pause())}function f(t){l(\"onerror\",t),h(),e.removeListener(\"error\",f),0===r(e,\"error\")&&e.emit(\"error\",t)}function b(){e.removeListener(\"finish\",d),h()}function d(){l(\"onfinish\"),e.removeListener(\"close\",b),h()}function h(){l(\"unpipe\"),n.unpipe(e)}return n.on(\"data\",u),function(e,t,n){if(\"function\"===typeof e.prependListener)return e.prependListener(t,n);e._events&&e._events[t]?Array.isArray(e._events[t])?e._events[t].unshift(n):e._events[t]=[n,e._events[t]]:e.on(t,n)}(e,\"error\",f),e.once(\"close\",b),e.once(\"finish\",d),e.emit(\"pipe\",n),a.flowing||(l(\"pipe resume\"),n.resume()),e},y.prototype.unpipe=function(e){var t=this._readableState,n={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes?this:(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit(\"unpipe\",this,n),this);if(!e){var o=t.pipes,a=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var r=0;r<a;r++)o[r].emit(\"unpipe\",this,{hasUnpiped:!1});return this}var c=D(t.pipes,e);return-1===c?this:(t.pipes.splice(c,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit(\"unpipe\",this,n),this)},y.prototype.on=function(e,t){var n=c.prototype.on.call(this,e,t),a=this._readableState;return\"data\"===e?(a.readableListening=this.listenerCount(\"readable\")>0,!1!==a.flowing&&this.resume()):\"readable\"===e&&(a.endEmitted||a.readableListening||(a.readableListening=a.needReadable=!0,a.flowing=!1,a.emittedReadable=!1,l(\"on readable\",a.length,a.reading),a.length?B(this):a.reading||o.nextTick(R,this))),n},y.prototype.addListener=y.prototype.on,y.prototype.removeListener=function(e,t){var n=c.prototype.removeListener.call(this,e,t);return\"readable\"===e&&o.nextTick(X,this),n},y.prototype.removeAllListeners=function(e){var t=c.prototype.removeAllListeners.apply(this,arguments);return\"readable\"!==e&&void 0!==e||o.nextTick(X,this),t},y.prototype.resume=function(){var e=this._readableState;return e.flowing||(l(\"resume\"),e.flowing=!e.readableListening,function(e,t){t.resumeScheduled||(t.resumeScheduled=!0,o.nextTick(E,e,t))}(this,e)),e.paused=!1,this},y.prototype.pause=function(){return l(\"call pause flowing=%j\",this._readableState.flowing),!1!==this._readableState.flowing&&(l(\"pause\"),this._readableState.flowing=!1,this.emit(\"pause\")),this._readableState.paused=!0,this},y.prototype.wrap=function(e){var t=this,n=this._readableState,o=!1;for(var a in e.on(\"end\",function(){if(l(\"wrapped end\"),n.decoder&&!n.ended){var e=n.decoder.end();e&&e.length&&t.push(e)}t.push(null)}),e.on(\"data\",function(a){(l(\"wrapped data\"),n.decoder&&(a=n.decoder.write(a)),!n.objectMode||null!==a&&void 0!==a)&&((n.objectMode||a&&a.length)&&(t.push(a)||(o=!0,e.pause())))}),e)void 0===this[a]&&\"function\"===typeof e[a]&&(this[a]=function(t){return function(){return e[t].apply(e,arguments)}}(a));for(var r=0;r<O.length;r++)e.on(O[r],this.emit.bind(this,O[r]));return this._read=function(t){l(\"wrapped _read\",t),o&&(o=!1,e.resume())},this},\"function\"===typeof Symbol&&(y.prototype[Symbol.asyncIterator]=function(){return g(\"Readable[Symbol.asyncIterator]\"),void 0===u&&(u=n(407)),u(this)}),Object.defineProperty(y.prototype,\"readableHighWaterMark\",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(y.prototype,\"readableBuffer\",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(y.prototype,\"readableFlowing\",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(e){this._readableState&&(this._readableState.flowing=e)}}),y._fromList=k,Object.defineProperty(y.prototype,\"readableLength\",{enumerable:!1,get:function(){return this._readableState.length}})}).call(this,n(23),n(18))},function(e,t,n){e.exports=n(65).EventEmitter},function(e,t,n){\"use strict\";(function(t){function n(e,t){a(e,t),o(e)}function o(e){e._writableState&&!e._writableState.emitClose||e._readableState&&!e._readableState.emitClose||e.emit(\"close\")}function a(e,t){e.emit(\"error\",t)}e.exports={destroy:function(e,r){var c=this,i=this._readableState&&this._readableState.destroyed,s=this._writableState&&this._writableState.destroyed;return i||s?(r?r(e):!e||this._writableState&&this._writableState.errorEmitted||t.nextTick(a,this,e),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(e||null,function(e){!r&&e?(t.nextTick(n,c,e),c._writableState&&(c._writableState.errorEmitted=!0)):r?(t.nextTick(o,c),r(e)):t.nextTick(o,c)}),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}}}).call(this,n(18))},function(e,t,n){\"use strict\";var o=n(301).codes.ERR_INVALID_OPT_VALUE;e.exports={getHighWaterMark:function(e,t,n,a){var r=function(e,t,n){return null!=e.highWaterMark?e.highWaterMark:t?e[n]:null}(t,a,n);if(null!=r){if(!isFinite(r)||Math.floor(r)!==r||r<0)throw new o(a?n:\"highWaterMark\",r);return Math.floor(r)}return e.objectMode?16:16384}}},function(e,t,n){\"use strict\";(function(t,o){function a(e){var t=this;this.next=null,this.entry=null,this.finish=function(){!function(e,t,n){var o=e.entry;e.entry=null;for(;o;){var a=o.callback;t.pendingcb--,a(n),o=o.next}t.corkedRequestsFree.next=e}(t,e)}}var r;e.exports=y,y.WritableState=L;var c={deprecate:n(152)},i=n(353),s=n(14).Buffer,l=t.Uint8Array||function(){};var M,p=n(354),u=n(355).getHighWaterMark,f=n(301).codes,b=f.ERR_INVALID_ARG_TYPE,d=f.ERR_METHOD_NOT_IMPLEMENTED,h=f.ERR_MULTIPLE_CALLBACK,_=f.ERR_STREAM_CANNOT_PIPE,A=f.ERR_STREAM_DESTROYED,m=f.ERR_STREAM_NULL_VALUES,z=f.ERR_STREAM_WRITE_AFTER_END,g=f.ERR_UNKNOWN_ENCODING;function O(){}function L(e,t,c){r=r||n(302),e=e||{},\"boolean\"!==typeof c&&(c=t instanceof r),this.objectMode=!!e.objectMode,c&&(this.objectMode=this.objectMode||!!e.writableObjectMode),this.highWaterMark=u(this,e,\"writableHighWaterMark\",c),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var i=!1===e.decodeStrings;this.decodeStrings=!i,this.defaultEncoding=e.defaultEncoding||\"utf8\",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,t){var n=e._writableState,a=n.sync,r=n.writecb;if(\"function\"!==typeof r)throw new h;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(n),t)!function(e,t,n,a,r){--t.pendingcb,n?(o.nextTick(r,a),o.nextTick(S,e,t),e._writableState.errorEmitted=!0,e.emit(\"error\",a)):(r(a),e._writableState.errorEmitted=!0,e.emit(\"error\",a),S(e,t))}(e,n,a,t,r);else{var c=T(n)||e.destroyed;c||n.corked||n.bufferProcessing||!n.bufferedRequest||q(e,n),a?o.nextTick(N,e,n,c,r):N(e,n,c,r)}}(t,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==e.emitClose,this.bufferedRequestCount=0,this.corkedRequestsFree=new a(this)}function y(e){var t=this instanceof(r=r||n(302));if(!t&&!M.call(y,this))return new y(e);this._writableState=new L(e,this,t),this.writable=!0,e&&(\"function\"===typeof e.write&&(this._write=e.write),\"function\"===typeof e.writev&&(this._writev=e.writev),\"function\"===typeof e.destroy&&(this._destroy=e.destroy),\"function\"===typeof e.final&&(this._final=e.final)),i.call(this)}function v(e,t,n,o,a,r,c){t.writelen=o,t.writecb=c,t.writing=!0,t.sync=!0,t.destroyed?t.onwrite(new A(\"write\")):n?e._writev(a,t.onwrite):e._write(a,r,t.onwrite),t.sync=!1}function N(e,t,n,o){n||function(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit(\"drain\"))}(e,t),t.pendingcb--,o(),S(e,t)}function q(e,t){t.bufferProcessing=!0;var n=t.bufferedRequest;if(e._writev&&n&&n.next){var o=t.bufferedRequestCount,r=new Array(o),c=t.corkedRequestsFree;c.entry=n;for(var i=0,s=!0;n;)r[i]=n,n.isBuf||(s=!1),n=n.next,i+=1;r.allBuffers=s,v(e,t,!0,t.length,r,\"\",c.finish),t.pendingcb++,t.lastBufferedRequest=null,c.next?(t.corkedRequestsFree=c.next,c.next=null):t.corkedRequestsFree=new a(t),t.bufferedRequestCount=0}else{for(;n;){var l=n.chunk,M=n.encoding,p=n.callback;if(v(e,t,!1,t.objectMode?1:l.length,l,M,p),n=n.next,t.bufferedRequestCount--,t.writing)break}null===n&&(t.lastBufferedRequest=null)}t.bufferedRequest=n,t.bufferProcessing=!1}function T(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function B(e,t){e._final(function(n){t.pendingcb--,n&&e.emit(\"error\",n),t.prefinished=!0,e.emit(\"prefinish\"),S(e,t)})}function S(e,t){var n=T(t);return n&&(!function(e,t){t.prefinished||t.finalCalled||(\"function\"!==typeof e._final||t.destroyed?(t.prefinished=!0,e.emit(\"prefinish\")):(t.pendingcb++,t.finalCalled=!0,o.nextTick(B,e,t)))}(e,t),0===t.pendingcb&&(t.finished=!0,e.emit(\"finish\"))),n}n(8)(y,i),L.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(L.prototype,\"buffer\",{get:c.deprecate(function(){return this.getBuffer()},\"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.\",\"DEP0003\")})}catch(e){}}(),\"function\"===typeof Symbol&&Symbol.hasInstance&&\"function\"===typeof Function.prototype[Symbol.hasInstance]?(M=Function.prototype[Symbol.hasInstance],Object.defineProperty(y,Symbol.hasInstance,{value:function(e){return!!M.call(this,e)||this===y&&(e&&e._writableState instanceof L)}})):M=function(e){return e instanceof this},y.prototype.pipe=function(){this.emit(\"error\",new _)},y.prototype.write=function(e,t,n){var a,r=this._writableState,c=!1,i=!r.objectMode&&(a=e,s.isBuffer(a)||a instanceof l);return i&&!s.isBuffer(e)&&(e=function(e){return s.from(e)}(e)),\"function\"===typeof t&&(n=t,t=null),i?t=\"buffer\":t||(t=r.defaultEncoding),\"function\"!==typeof n&&(n=O),r.ending?function(e,t){var n=new z;e.emit(\"error\",n),o.nextTick(t,n)}(this,n):(i||function(e,t,n,a){var r;return null===n?r=new m:\"string\"===typeof n||t.objectMode||(r=new b(\"chunk\",[\"string\",\"Buffer\"],n)),!r||(e.emit(\"error\",r),o.nextTick(a,r),!1)}(this,r,e,n))&&(r.pendingcb++,c=function(e,t,n,o,a,r){if(!n){var c=function(e,t,n){e.objectMode||!1===e.decodeStrings||\"string\"!==typeof t||(t=s.from(t,n));return t}(t,o,a);o!==c&&(n=!0,a=\"buffer\",o=c)}var i=t.objectMode?1:o.length;t.length+=i;var l=t.length<t.highWaterMark;l||(t.needDrain=!0);if(t.writing||t.corked){var M=t.lastBufferedRequest;t.lastBufferedRequest={chunk:o,encoding:a,isBuf:n,callback:r,next:null},M?M.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else v(e,t,!1,i,o,a,r);return l}(this,r,i,e,t,n)),c},y.prototype.cork=function(){this._writableState.corked++},y.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.bufferProcessing||!e.bufferedRequest||q(this,e))},y.prototype.setDefaultEncoding=function(e){if(\"string\"===typeof e&&(e=e.toLowerCase()),!([\"hex\",\"utf8\",\"utf-8\",\"ascii\",\"binary\",\"base64\",\"ucs2\",\"ucs-2\",\"utf16le\",\"utf-16le\",\"raw\"].indexOf((e+\"\").toLowerCase())>-1))throw new g(e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(y.prototype,\"writableBuffer\",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(y.prototype,\"writableHighWaterMark\",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),y.prototype._write=function(e,t,n){n(new d(\"_write()\"))},y.prototype._writev=null,y.prototype.end=function(e,t,n){var a=this._writableState;return\"function\"===typeof e?(n=e,e=null,t=null):\"function\"===typeof t&&(n=t,t=null),null!==e&&void 0!==e&&this.write(e,t),a.corked&&(a.corked=1,this.uncork()),a.ending||function(e,t,n){t.ending=!0,S(e,t),n&&(t.finished?o.nextTick(n):e.once(\"finish\",n));t.ended=!0,e.writable=!1}(this,a,n),this},Object.defineProperty(y.prototype,\"writableLength\",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(y.prototype,\"destroyed\",{enumerable:!1,get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),y.prototype.destroy=p.destroy,y.prototype._undestroy=p.undestroy,y.prototype._destroy=function(e,t){t(e)}}).call(this,n(23),n(18))},function(e,t,n){\"use strict\";e.exports=M;var o=n(301).codes,a=o.ERR_METHOD_NOT_IMPLEMENTED,r=o.ERR_MULTIPLE_CALLBACK,c=o.ERR_TRANSFORM_ALREADY_TRANSFORMING,i=o.ERR_TRANSFORM_WITH_LENGTH_0,s=n(302);function l(e,t){var n=this._transformState;n.transforming=!1;var o=n.writecb;if(null===o)return this.emit(\"error\",new r);n.writechunk=null,n.writecb=null,null!=t&&this.push(t),o(e);var a=this._readableState;a.reading=!1,(a.needReadable||a.length<a.highWaterMark)&&this._read(a.highWaterMark)}function M(e){if(!(this instanceof M))return new M(e);s.call(this,e),this._transformState={afterTransform:l.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&(\"function\"===typeof e.transform&&(this._transform=e.transform),\"function\"===typeof e.flush&&(this._flush=e.flush)),this.on(\"prefinish\",p)}function p(){var e=this;\"function\"!==typeof this._flush||this._readableState.destroyed?u(this,null,null):this._flush(function(t,n){u(e,t,n)})}function u(e,t,n){if(t)return e.emit(\"error\",t);if(null!=n&&e.push(n),e._writableState.length)throw new i;if(e._transformState.transforming)throw new c;return e.push(null)}n(8)(M,s),M.prototype.push=function(e,t){return this._transformState.needTransform=!1,s.prototype.push.call(this,e,t)},M.prototype._transform=function(e,t,n){n(new a(\"_transform()\"))},M.prototype._write=function(e,t,n){var o=this._transformState;if(o.writecb=n,o.writechunk=e,o.writeencoding=t,!o.transforming){var a=this._readableState;(o.needTransform||a.needReadable||a.length<a.highWaterMark)&&this._read(a.highWaterMark)}},M.prototype._read=function(e){var t=this._transformState;null===t.writechunk||t.transforming?t.needTransform=!0:(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform))},M.prototype._destroy=function(e,t){s.prototype._destroy.call(this,e,function(e){t(e)})}},function(e,t,n){var o=n(299),a=n(298),r=a.System,c=(a.VbrMode,a.Float,a.ShortBlock,a.Util,a.Arrays,a.new_array_n,a.new_byte,a.new_double,a.new_float),i=a.new_float_n;a.new_int,a.new_int_n,a.assert;e.exports=function(){this.l=c(o.SBMAX_l),this.s=i([o.SBMAX_s,3]);var e=this;this.assign=function(t){r.arraycopy(t.l,0,e.l,0,o.SBMAX_l);for(var n=0;n<o.SBMAX_s;n++)for(var a=0;a<3;a++)e.s[n][a]=t.s[n][a]}}},function(e,t){function n(e){var t=e;this.ordinal=function(){return t}}n.STEREO=new n(0),n.JOINT_STEREO=new n(1),n.DUAL_CHANNEL=new n(2),n.MONO=new n(3),n.NOT_SET=new n(4),e.exports=n},function(e,t,n){var o=n(298),a=o.System,r=(o.VbrMode,o.Float,o.ShortBlock,o.Util,o.Arrays,o.new_array_n,o.new_byte,o.new_double,o.new_float,o.new_float_n,o.new_int),c=(o.new_int_n,o.assert,n(299));e.exports=function(e,t,n,o){this.l=r(1+c.SBMAX_l),this.s=r(1+c.SBMAX_s),this.psfb21=r(1+c.PSFB21),this.psfb12=r(1+c.PSFB12);var i=this.l,s=this.s;4==arguments.length&&(this.arrL=arguments[0],this.arrS=arguments[1],this.arr21=arguments[2],this.arr12=arguments[3],a.arraycopy(this.arrL,0,i,0,Math.min(this.arrL.length,this.l.length)),a.arraycopy(this.arrS,0,s,0,Math.min(this.arrS.length,this.s.length)),a.arraycopy(this.arr21,0,this.psfb21,0,Math.min(this.arr21.length,this.psfb21.length)),a.arraycopy(this.arr12,0,this.psfb12,0,Math.min(this.arr12.length,this.psfb12.length)))}},function(e,t,n){var o=n(298),a=o.System,r=(o.VbrMode,o.Float,o.ShortBlock,o.Util,o.Arrays);o.new_array_n,o.new_byte,o.new_double,o.new_float,o.new_float_n,o.new_int,o.new_int_n,o.assert;function c(){var e=64.82,t=(c.YULE_ORDER,.95),n=(c.MAX_SAMP_FREQ,c.RMS_WINDOW_TIME_NUMERATOR),o=c.RMS_WINDOW_TIME_DENOMINATOR,i=(c.MAX_SAMPLES_PER_WINDOW,[[.038575994352,-3.84664617118067,-.02160367184185,7.81501653005538,-.00123395316851,-11.34170355132042,-9291677959e-14,13.05504219327545,-.01655260341619,-12.28759895145294,.02161526843274,9.4829380631979,-.02074045215285,-5.87257861775999,.00594298065125,2.75465861874613,.00306428023191,-.86984376593551,.00012025322027,.13919314567432,.00288463683916],[.0541865640643,-3.47845948550071,-.02911007808948,6.36317777566148,-.00848709379851,-8.54751527471874,-.00851165645469,9.4769360780128,-.00834990904936,-8.81498681370155,.02245293253339,6.85401540936998,-.02596338512915,-4.39470996079559,.01624864962975,2.19611684890774,-.00240879051584,-.75104302451432,.00674613682247,.13149317958808,-.00187763777362],[.15457299681924,-2.37898834973084,-.09331049056315,2.84868151156327,-.06247880153653,-2.64577170229825,.02163541888798,2.23697657451713,-.05588393329856,-1.67148153367602,.04781476674921,1.00595954808547,.00222312597743,-.45953458054983,.03174092540049,.16378164858596,-.01390589421898,-.05032077717131,.00651420667831,.0234789740702,-.00881362733839],[.30296907319327,-1.61273165137247,-.22613988682123,1.0797749225997,-.08587323730772,-.2565625775407,.03282930172664,-.1627671912044,-.00915702933434,-.22638893773906,-.02364141202522,.39120800788284,-.00584456039913,-.22138138954925,.06276101321749,.04500235387352,-828086748e-14,.02005851806501,.00205861885564,.00302439095741,-.02950134983287],[.33642304856132,-1.49858979367799,-.2557224142557,.87350271418188,-.11828570177555,.12205022308084,.11921148675203,-.80774944671438,-.07834489609479,.47854794562326,-.0046997791438,-.12453458140019,-.0058950022444,-.04067510197014,.05724228140351,.08333755284107,.00832043980773,-.04237348025746,-.0163538138454,.02977207319925,-.0176017656815],[.4491525660845,-.62820619233671,-.14351757464547,.29661783706366,-.22784394429749,-.372563729424,-.01419140100551,.00213767857124,.04078262797139,-.42029820170918,-.12398163381748,.22199650564824,.04097565135648,.00613424350682,.10478503600251,.06747620744683,-.01863887810927,.05784820375801,-.03193428438915,.03222754072173,.00541907748707],[.56619470757641,-1.04800335126349,-.75464456939302,.29156311971249,.1624213774223,-.26806001042947,.16744243493672,.00819999645858,-.18901604199609,.45054734505008,.3093178284183,-.33032403314006,-.27562961986224,.0673936833311,.00647310677246,-.04784254229033,.08647503780351,.01639907836189,-.0378898455484,.01807364323573,-.00588215443421],[.58100494960553,-.51035327095184,-.53174909058578,-.31863563325245,-.14289799034253,-.20256413484477,.17520704835522,.1472815413433,.02377945217615,.38952639978999,.15558449135573,-.23313271880868,-.25344790059353,-.05246019024463,.01628462406333,-.02505961724053,.06920467763959,.02442357316099,-.03721611395801,.01818801111503,-.00749618797172],[.53648789255105,-.2504987195602,-.42163034350696,-.43193942311114,-.00275953611929,-.03424681017675,.04267842219415,-.04678328784242,-.10214864179676,.26408300200955,.14590772289388,.15113130533216,-.02459864859345,-.17556493366449,-.11202315195388,-.18823009262115,-.04060034127,.05477720428674,.0478866554818,.0470440968812,-.02217936801134]]),s=[[.98621192462708,-1.97223372919527,-1.97242384925416,.97261396931306,.98621192462708],[.98500175787242,-1.96977855582618,-1.97000351574484,.9702284756635,.98500175787242],[.97938932735214,-1.95835380975398,-1.95877865470428,.95920349965459,.97938932735214],[.97531843204928,-1.95002759149878,-1.95063686409857,.95124613669835,.97531843204928],[.97316523498161,-1.94561023566527,-1.94633046996323,.94705070426118,.97316523498161],[.96454515552826,-1.92783286977036,-1.92909031105652,.93034775234268,.96454515552826],[.96009142950541,-1.91858953033784,-1.92018285901082,.92177618768381,.96009142950541],[.95856916599601,-1.9154210807478,-1.91713833199203,.91885558323625,.95856916599601],[.94597685600279,-1.88903307939452,-1.89195371200558,.89487434461664,.94597685600279]];function l(e,t,n,o,a,r){for(;0!=a--;)n[o]=1e-10+e[t+0]*r[0]-n[o-1]*r[1]+e[t-1]*r[2]-n[o-2]*r[3]+e[t-2]*r[4]-n[o-3]*r[5]+e[t-3]*r[6]-n[o-4]*r[7]+e[t-4]*r[8]-n[o-5]*r[9]+e[t-5]*r[10]-n[o-6]*r[11]+e[t-6]*r[12]-n[o-7]*r[13]+e[t-7]*r[14]-n[o-8]*r[15]+e[t-8]*r[16]-n[o-9]*r[17]+e[t-9]*r[18]-n[o-10]*r[19]+e[t-10]*r[20],++o,++t}function M(e,t,n,o,a,r){for(;0!=a--;)n[o]=e[t+0]*r[0]-n[o-1]*r[1]+e[t-1]*r[2]-n[o-2]*r[3]+e[t-2]*r[4],++o,++t}function p(e){return e*e}this.InitGainAnalysis=function(e,t){return function(e,t){for(var a=0;a<MAX_ORDER;a++)e.linprebuf[a]=e.lstepbuf[a]=e.loutbuf[a]=e.rinprebuf[a]=e.rstepbuf[a]=e.routbuf[a]=0;switch(0|t){case 48e3:e.reqindex=0;break;case 44100:e.reqindex=1;break;case 32e3:e.reqindex=2;break;case 24e3:e.reqindex=3;break;case 22050:e.reqindex=4;break;case 16e3:e.reqindex=5;break;case 12e3:e.reqindex=6;break;case 11025:e.reqindex=7;break;case 8e3:e.reqindex=8;break;default:return INIT_GAIN_ANALYSIS_ERROR}return e.sampleWindow=0|(t*n+o-1)/o,e.lsum=0,e.rsum=0,e.totsamp=0,r.ill(e.A,0),INIT_GAIN_ANALYSIS_OK}(e,t)!=INIT_GAIN_ANALYSIS_OK?INIT_GAIN_ANALYSIS_ERROR:(e.linpre=MAX_ORDER,e.rinpre=MAX_ORDER,e.lstep=MAX_ORDER,e.rstep=MAX_ORDER,e.lout=MAX_ORDER,e.rout=MAX_ORDER,r.fill(e.B,0),INIT_GAIN_ANALYSIS_OK)},this.AnalyzeSamples=function(e,t,n,o,r,u,f){var b,d,h,_,A,m,z;if(0==u)return GAIN_ANALYSIS_OK;switch(z=0,A=u,f){case 1:o=t,r=n;break;case 2:break;default:return GAIN_ANALYSIS_ERROR}for(u<MAX_ORDER?(a.arraycopy(t,n,e.linprebuf,MAX_ORDER,u),a.arraycopy(o,r,e.rinprebuf,MAX_ORDER,u)):(a.arraycopy(t,n,e.linprebuf,MAX_ORDER,MAX_ORDER),a.arraycopy(o,r,e.rinprebuf,MAX_ORDER,MAX_ORDER));A>0;){m=A>e.sampleWindow-e.totsamp?e.sampleWindow-e.totsamp:A,z<MAX_ORDER?(b=e.linpre+z,d=e.linprebuf,h=e.rinpre+z,_=e.rinprebuf,m>MAX_ORDER-z&&(m=MAX_ORDER-z)):(b=n+z,d=t,h=r+z,_=o),l(d,b,e.lstepbuf,e.lstep+e.totsamp,m,i[e.reqindex]),l(_,h,e.rstepbuf,e.rstep+e.totsamp,m,i[e.reqindex]),M(e.lstepbuf,e.lstep+e.totsamp,e.loutbuf,e.lout+e.totsamp,m,s[e.reqindex]),M(e.rstepbuf,e.rstep+e.totsamp,e.routbuf,e.rout+e.totsamp,m,s[e.reqindex]),b=e.lout+e.totsamp,d=e.loutbuf,h=e.rout+e.totsamp,_=e.routbuf;for(var g=m%8;0!=g--;)e.lsum+=p(d[b++]),e.rsum+=p(_[h++]);for(g=m/8;0!=g--;)e.lsum+=p(d[b+0])+p(d[b+1])+p(d[b+2])+p(d[b+3])+p(d[b+4])+p(d[b+5])+p(d[b+6])+p(d[b+7]),b+=8,e.rsum+=p(_[h+0])+p(_[h+1])+p(_[h+2])+p(_[h+3])+p(_[h+4])+p(_[h+5])+p(_[h+6])+p(_[h+7]),h+=8;if(A-=m,z+=m,e.totsamp+=m,e.totsamp==e.sampleWindow){var O=10*c.STEPS_per_dB*Math.log10((e.lsum+e.rsum)/e.totsamp*.5+1e-37),L=O<=0?0:0|O;L>=e.A.length&&(L=e.A.length-1),e.A[L]++,e.lsum=e.rsum=0,a.arraycopy(e.loutbuf,e.totsamp,e.loutbuf,0,MAX_ORDER),a.arraycopy(e.routbuf,e.totsamp,e.routbuf,0,MAX_ORDER),a.arraycopy(e.lstepbuf,e.totsamp,e.lstepbuf,0,MAX_ORDER),a.arraycopy(e.rstepbuf,e.totsamp,e.rstepbuf,0,MAX_ORDER),e.totsamp=0}if(e.totsamp>e.sampleWindow)return GAIN_ANALYSIS_ERROR}return u<MAX_ORDER?(a.arraycopy(e.linprebuf,u,e.linprebuf,0,MAX_ORDER-u),a.arraycopy(e.rinprebuf,u,e.rinprebuf,0,MAX_ORDER-u),a.arraycopy(t,n,e.linprebuf,MAX_ORDER-u,u),a.arraycopy(o,r,e.rinprebuf,MAX_ORDER-u,u)):(a.arraycopy(t,n+u-MAX_ORDER,e.linprebuf,0,MAX_ORDER),a.arraycopy(o,r+u-MAX_ORDER,e.rinprebuf,0,MAX_ORDER)),GAIN_ANALYSIS_OK},this.GetTitleGain=function(n){for(var o=function(n,o){var a,r=0;for(a=0;a<o;a++)r+=n[a];if(0==r)return GAIN_NOT_ENOUGH_SAMPLES;var i=0|Math.ceil(r*(1-t));for(a=o;a-- >0&&!((i-=n[a])<=0););return e-a/c.STEPS_per_dB}(n.A,n.A.length),a=0;a<n.A.length;a++)n.B[a]+=n.A[a],n.A[a]=0;for(a=0;a<MAX_ORDER;a++)n.linprebuf[a]=n.lstepbuf[a]=n.loutbuf[a]=n.rinprebuf[a]=n.rstepbuf[a]=n.routbuf[a]=0;return n.totsamp=0,n.lsum=n.rsum=0,o}}c.STEPS_per_dB=100,c.MAX_dB=120,c.GAIN_NOT_ENOUGH_SAMPLES=-24601,c.GAIN_ANALYSIS_ERROR=0,c.GAIN_ANALYSIS_OK=1,c.INIT_GAIN_ANALYSIS_ERROR=0,c.INIT_GAIN_ANALYSIS_OK=1,c.YULE_ORDER=10,c.MAX_ORDER=c.YULE_ORDER,c.MAX_SAMP_FREQ=48e3,c.RMS_WINDOW_TIME_NUMERATOR=1,c.RMS_WINDOW_TIME_DENOMINATOR=20,c.MAX_SAMPLES_PER_WINDOW=c.MAX_SAMP_FREQ*c.RMS_WINDOW_TIME_NUMERATOR/c.RMS_WINDOW_TIME_DENOMINATOR+1,e.exports=c},function(e,t){e.exports=function(e){this.bits=e}},function(e,t,n){var o=n(298),a=o.System,r=(o.VbrMode,o.Float,o.ShortBlock,o.Util,o.Arrays),c=(o.new_array_n,o.new_byte),i=(o.new_double,o.new_float,o.new_float_n),s=o.new_int,l=(o.new_int_n,o.assert),M=n(364),p=n(318),u=n(299),f=n(307);function b(){var e=this,t=32773,n=32,o=null,b=null,d=null,h=null;this.setModules=function(e,t,n,a){o=e,b=t,d=n,h=a};var _=null,A=0,m=0,z=0;function g(e){a.arraycopy(e.header[e.w_ptr].buf,0,_,m,e.sideinfo_len),m+=e.sideinfo_len,A+=8*e.sideinfo_len,e.w_ptr=e.w_ptr+1&f.MAX_HEADER_BUF-1}function O(e,t,o){for(l(o<n-2);o>0;){var a;0==z&&(z=8,l(++m<Lame.LAME_MAXMP3BUFFER),l(e.header[e.w_ptr].write_timing>=A),e.header[e.w_ptr].write_timing==A&&g(e),_[m]=0),a=Math.min(o,z),z-=a,l((o-=a)<n),l(z<n),_[m]|=t>>o<<z,A+=a}}function L(e,t,o){for(l(o<n-2);o>0;){var a;0==z&&(z=8,l(++m<Lame.LAME_MAXMP3BUFFER),_[m]=0),a=Math.min(o,z),z-=a,l((o-=a)<n),l(z<n),_[m]|=t>>o<<z,A+=a}}function y(e,t){var n,o=e.internal_flags;if(l(t>=0),t>=8&&(O(o,76,8),t-=8),t>=8&&(O(o,65,8),t-=8),t>=8&&(O(o,77,8),t-=8),t>=8&&(O(o,69,8),t-=8),t>=32){var a=d.getLameShortVersion();if(t>=32)for(n=0;n<a.length&&t>=8;++n)t-=8,O(o,a.charAt(n),8)}for(;t>=1;t-=1)O(o,o.ancillary_flag,1),o.ancillary_flag^=e.disable_reservoir?0:1;l(0==t)}function v(e,t,o){for(var a=e.header[e.h_ptr].ptr;o>0;){var r=Math.min(o,8-(7&a));l((o-=r)<n),e.header[e.h_ptr].buf[a>>3]|=t>>o<<8-(7&a)-r,a+=r}e.header[e.h_ptr].ptr=a}function N(e,n){e<<=8;for(var o=0;o<8;o++)0!=(65536&((n<<=1)^(e<<=1)))&&(n^=t);return n}function q(e,t){var n,o=p.ht[t.count1table_select+32],a=0,r=t.big_values,c=t.big_values;for(l(t.count1table_select<2),n=(t.count1-t.big_values)/4;n>0;--n){var i,s=0,M=0;0!=(i=t.l3_enc[r+0])&&(M+=8,t.xr[c+0]<0&&s++,l(i<=1)),0!=(i=t.l3_enc[r+1])&&(M+=4,s*=2,t.xr[c+1]<0&&s++,l(i<=1)),0!=(i=t.l3_enc[r+2])&&(M+=2,s*=2,t.xr[c+2]<0&&s++,l(i<=1)),0!=(i=t.l3_enc[r+3])&&(M++,s*=2,t.xr[c+3]<0&&s++,l(i<=1)),r+=4,c+=4,O(e,s+o.table[M],o.hlen[M]),a+=o.hlen[M]}return a}function T(e,t,o,a,r){var c=p.ht[t],i=0;if(l(t<32),0==t)return i;for(var s=o;s<a;s+=2){var M=0,u=0,f=c.xlen,b=c.xlen,d=0,h=r.l3_enc[s],_=r.l3_enc[s+1];if(0!=h&&(r.xr[s]<0&&d++,M--),t>15){if(h>14){var A=h-15;l(A<=c.linmax),d|=A<<1,u=f,h=15}if(_>14){var m=_-15;l(m<=c.linmax),d<<=f,d|=m,u+=f,_=15}b=16}0!=_&&(d<<=1,r.xr[s+1]<0&&d++,M--),l((h|_)<16),h=h*b+_,u-=M,M+=c.hlen[h],l(M<=n),l(u<=n),O(e,c.table[h],M),O(e,d,u),i+=M+u}return i}function B(e,t){var n=3*e.scalefac_band.s[3];n>t.big_values&&(n=t.big_values);var o=T(e,t.table_select[0],0,n,t);return o+=T(e,t.table_select[1],n,t.big_values,t)}function S(e,t){var n,o,a,r;n=t.big_values,l(0<=n&&n<=576);var c=t.region0_count+1;return l(0<=c),l(c<e.scalefac_band.l.length),a=e.scalefac_band.l[c],c+=t.region1_count+1,l(0<=c),l(c<e.scalefac_band.l.length),a>n&&(a=n),(r=e.scalefac_band.l[c])>n&&(r=n),o=T(e,t.table_select[0],0,a,t),o+=T(e,t.table_select[1],a,r,t),o+=T(e,t.table_select[2],r,n,t)}function w(){this.total=0}function W(t,n){var o,r,c,i,s,l=t.internal_flags;return s=l.w_ptr,-1==(i=l.h_ptr-1)&&(i=f.MAX_HEADER_BUF-1),o=l.header[i].write_timing-A,n.total=o,o>=0&&(r=1+i-s,i<s&&(r=1+i-s+f.MAX_HEADER_BUF),o-=8*r*l.sideinfo_len),o+=c=e.getframebits(t),n.total+=c,n.total%8!=0?n.total=1+n.total/8:n.total=n.total/8,n.total+=m+1,o<0&&a.err.println(\"strange error flushing buffer ... \\n\"),o}this.getframebits=function(e){var t,n=e.internal_flags;return t=0!=n.bitrate_index?p.bitrate_table[e.version][n.bitrate_index]:e.brate,l(8<=t&&t<=640),8*(0|72e3*(e.version+1)*t/e.out_samplerate+n.padding)},this.CRC_writeheader=function(e,t){var n=65535;n=N(255&t[2],n),n=N(255&t[3],n);for(var o=6;o<e.sideinfo_len;o++)n=N(255&t[o],n);t[4]=byte(n>>8),t[5]=byte(255&n)},this.flush_bitstream=function(e){var t,n,a=e.internal_flags,r=a.h_ptr-1;if(-1==r&&(r=f.MAX_HEADER_BUF-1),t=a.l3_side,!((n=W(e,new w))<0)){if(y(e,n),l(a.header[r].write_timing+this.getframebits(e)==A),a.ResvSize=0,t.main_data_begin=0,a.findReplayGain){var c=o.GetTitleGain(a.rgdata);l(NEQ(c,GainAnalysis.GAIN_NOT_ENOUGH_SAMPLES)),a.RadioGain=0|Math.floor(10*c+.5)}a.findPeakSample&&(a.noclipGainChange=0|Math.ceil(20*Math.log10(a.PeakSample/32767)*10),a.noclipGainChange>0&&(EQ(e.scale,1)||EQ(e.scale,0))?a.noclipScale=Math.floor(32767/a.PeakSample*100)/100:a.noclipScale=-1)}},this.add_dummy_byte=function(e,t,n){for(var o,a=e.internal_flags;n-- >0;)for(L(0,t,8),o=0;o<f.MAX_HEADER_BUF;++o)a.header[o].write_timing+=8},this.format_bitstream=function(e){var t,n=e.internal_flags;t=n.l3_side;var o=this.getframebits(e);y(e,t.resvDrain_pre),function(e,t){var n,o,c,i=e.internal_flags;if(n=i.l3_side,i.header[i.h_ptr].ptr=0,r.fill(i.header[i.h_ptr].buf,0,i.sideinfo_len,0),e.out_samplerate<16e3?v(i,4094,12):v(i,4095,12),v(i,e.version,1),v(i,1,2),v(i,e.error_protection?0:1,1),v(i,i.bitrate_index,4),v(i,i.samplerate_index,2),v(i,i.padding,1),v(i,e.extension,1),v(i,e.mode.ordinal(),2),v(i,i.mode_ext,2),v(i,e.copyright,1),v(i,e.original,1),v(i,e.emphasis,2),e.error_protection&&v(i,0,16),1==e.version){for(l(n.main_data_begin>=0),v(i,n.main_data_begin,9),2==i.channels_out?v(i,n.private_bits,3):v(i,n.private_bits,5),c=0;c<i.channels_out;c++){var s;for(s=0;s<4;s++)v(i,n.scfsi[c][s],1)}for(o=0;o<2;o++)for(c=0;c<i.channels_out;c++)v(i,(M=n.tt[o][c]).part2_3_length+M.part2_length,12),v(i,M.big_values/2,9),v(i,M.global_gain,8),v(i,M.scalefac_compress,4),M.block_type!=u.NORM_TYPE?(v(i,1,1),v(i,M.block_type,2),v(i,M.mixed_block_flag,1),14==M.table_select[0]&&(M.table_select[0]=16),v(i,M.table_select[0],5),14==M.table_select[1]&&(M.table_select[1]=16),v(i,M.table_select[1],5),v(i,M.subblock_gain[0],3),v(i,M.subblock_gain[1],3),v(i,M.subblock_gain[2],3)):(v(i,0,1),14==M.table_select[0]&&(M.table_select[0]=16),v(i,M.table_select[0],5),14==M.table_select[1]&&(M.table_select[1]=16),v(i,M.table_select[1],5),14==M.table_select[2]&&(M.table_select[2]=16),v(i,M.table_select[2],5),l(0<=M.region0_count&&M.region0_count<16),l(0<=M.region1_count&&M.region1_count<8),v(i,M.region0_count,4),v(i,M.region1_count,3)),v(i,M.preflag,1),v(i,M.scalefac_scale,1),v(i,M.count1table_select,1)}else for(l(n.main_data_begin>=0),v(i,n.main_data_begin,8),v(i,n.private_bits,i.channels_out),o=0,c=0;c<i.channels_out;c++){var M;v(i,(M=n.tt[o][c]).part2_3_length+M.part2_length,12),v(i,M.big_values/2,9),v(i,M.global_gain,8),v(i,M.scalefac_compress,9),M.block_type!=u.NORM_TYPE?(v(i,1,1),v(i,M.block_type,2),v(i,M.mixed_block_flag,1),14==M.table_select[0]&&(M.table_select[0]=16),v(i,M.table_select[0],5),14==M.table_select[1]&&(M.table_select[1]=16),v(i,M.table_select[1],5),v(i,M.subblock_gain[0],3),v(i,M.subblock_gain[1],3),v(i,M.subblock_gain[2],3)):(v(i,0,1),14==M.table_select[0]&&(M.table_select[0]=16),v(i,M.table_select[0],5),14==M.table_select[1]&&(M.table_select[1]=16),v(i,M.table_select[1],5),14==M.table_select[2]&&(M.table_select[2]=16),v(i,M.table_select[2],5),l(0<=M.region0_count&&M.region0_count<16),l(0<=M.region1_count&&M.region1_count<8),v(i,M.region0_count,4),v(i,M.region1_count,3)),v(i,M.scalefac_scale,1),v(i,M.count1table_select,1)}e.error_protection&&CRC_writeheader(i,i.header[i.h_ptr].buf);var p=i.h_ptr;l(i.header[p].ptr==8*i.sideinfo_len),i.h_ptr=p+1&f.MAX_HEADER_BUF-1,i.header[i.h_ptr].write_timing=i.header[p].write_timing+t,i.h_ptr==i.w_ptr&&a.err.println(\"Error: MAX_HEADER_BUF too small in bitstream.c \\n\")}(e,o);var c=8*n.sideinfo_len;if(c+=function(e){var t,n,o,a,r=0,c=e.internal_flags,i=c.l3_side;if(1==e.version)for(t=0;t<2;t++)for(n=0;n<c.channels_out;n++){var s=i.tt[t][n],p=M.slen1_tab[s.scalefac_compress],f=M.slen2_tab[s.scalefac_compress];for(a=0,o=0;o<s.sfbdivide;o++)-1!=s.scalefac[o]&&(O(c,s.scalefac[o],p),a+=p);for(;o<s.sfbmax;o++)-1!=s.scalefac[o]&&(O(c,s.scalefac[o],f),a+=f);l(a==s.part2_length),s.block_type==u.SHORT_TYPE?a+=B(c,s):a+=S(c,s),a+=q(c,s),l(a==s.part2_3_length+s.part2_length),r+=a}else for(t=0,n=0;n<c.channels_out;n++){s=i.tt[t][n];var b,d,h=0;if(l(null!=s.sfb_partition_table),a=0,o=0,d=0,s.block_type==u.SHORT_TYPE){for(;d<4;d++){var _=s.sfb_partition_table[d]/3,A=s.slen[d];for(b=0;b<_;b++,o++)O(c,Math.max(s.scalefac[3*o+0],0),A),O(c,Math.max(s.scalefac[3*o+1],0),A),O(c,Math.max(s.scalefac[3*o+2],0),A),h+=3*A}a+=B(c,s)}else{for(;d<4;d++)for(_=s.sfb_partition_table[d],A=s.slen[d],b=0;b<_;b++,o++)O(c,Math.max(s.scalefac[o],0),A),h+=A;a+=S(c,s)}a+=q(c,s),l(a==s.part2_3_length),l(h==s.part2_length),r+=h+a}return r}(e),y(e,t.resvDrain_post),c+=t.resvDrain_post,t.main_data_begin+=(o-c)/8,W(e,new w)!=n.ResvSize&&a.err.println(\"Internal buffer inconsistency. flushbits <> ResvSize\"),8*t.main_data_begin!=n.ResvSize&&(a.err.printf(\"bit reservoir error: \\nl3_side.main_data_begin: %d \\nResvoir size:             %d \\nresv drain (post)         %d \\nresv drain (pre)          %d \\nheader and sideinfo:      %d \\ndata bits:                %d \\ntotal bits:               %d (remainder: %d) \\nbitsperframe:             %d \\n\",8*t.main_data_begin,n.ResvSize,t.resvDrain_post,t.resvDrain_pre,8*n.sideinfo_len,c-t.resvDrain_post-8*n.sideinfo_len,c,c%8,o),a.err.println(\"This is a fatal error.  It has several possible causes:\"),a.err.println(\"90%%  LAME compiled with buggy version of gcc using advanced optimizations\"),a.err.println(\" 9%%  Your system is overclocked\"),a.err.println(\" 1%%  bug in LAME encoding library\"),n.ResvSize=8*t.main_data_begin),l(A%8==0),A>1e9){var i;for(i=0;i<f.MAX_HEADER_BUF;++i)n.header[i].write_timing-=A;A=0}return 0},this.copy_buffer=function(e,t,n,r,c){var M=m+1;if(M<=0)return 0;if(0!=r&&M>r)return-1;if(a.arraycopy(_,0,t,n,M),m=-1,z=0,0!=c){var p=s(1);if(p[0]=e.nMusicCRC,h.updateMusicCRC(p,t,n,M),e.nMusicCRC=p[0],M>0&&(e.VBR_seek_table.nBytesWritten+=M),e.decode_on_the_fly)for(var u,f=i([2,1152]),d=M,A=-1;0!=A;)if(A=b.hip_decode1_unclipped(e.hip,t,n,d,f[0],f[1]),d=0,-1==A&&(A=0),A>0){if(l(A<=1152),e.findPeakSample){for(u=0;u<A;u++)f[0][u]>e.PeakSample?e.PeakSample=f[0][u]:-f[0][u]>e.PeakSample&&(e.PeakSample=-f[0][u]);if(e.channels_out>1)for(u=0;u<A;u++)f[1][u]>e.PeakSample?e.PeakSample=f[1][u]:-f[1][u]>e.PeakSample&&(e.PeakSample=-f[1][u])}if(e.findReplayGain&&o.AnalyzeSamples(e.rgdata,f[0],0,f[1],0,A,e.channels_out)==GainAnalysis.GAIN_ANALYSIS_ERROR)return-6}}return M},this.init_bit_stream_w=function(e){_=c(Lame.LAME_MAXMP3BUFFER),e.h_ptr=e.w_ptr=0,e.header[e.h_ptr].write_timing=0,m=-1,z=0,A=0}}b.EQ=function(e,t){return Math.abs(e)>Math.abs(t)?Math.abs(e-t)<=1e-6*Math.abs(e):Math.abs(e-t)<=1e-6*Math.abs(t)},b.NEQ=function(e,t){return!b.EQ(e,t)},e.exports=b},function(e,t,n){var o=n(298),a=o.System,r=(o.VbrMode,o.Float,o.ShortBlock,o.Util,o.Arrays),c=(o.new_array_n,o.new_byte,o.new_double,o.new_float,o.new_float_n,o.new_int),i=(o.new_int_n,o.assert),s=n(299),l=n(318),M=n(317),p=n(365);e.exports=function e(){var t=null;function n(e){this.bits=0|e}this.qupvt=null,this.setModules=function(e){this.qupvt=e,t=e};var o=[[0,0],[0,0],[0,0],[0,0],[0,0],[0,1],[1,1],[1,1],[1,2],[2,2],[2,3],[2,3],[3,4],[3,4],[3,4],[4,5],[4,5],[4,6],[5,6],[5,6],[5,7],[6,7],[6,7]];function u(e,t,n,o,a,r){var c=.5946/t;for(i(e>0),e>>=1;0!=e--;)a[r++]=c>n[o++]?0:1,a[r++]=c>n[o++]?0:1}function f(e,n,o,a,r,c){i(e>0);var s=(e>>=1)%2;for(e>>=1;0!=e--;){var l,M,p,u,f,b,d,h;l=o[a++]*n,M=o[a++]*n,f=0|l,p=o[a++]*n,b=0|M,u=o[a++]*n,d=0|p,l+=t.adj43[f],h=0|u,M+=t.adj43[b],r[c++]=0|l,p+=t.adj43[d],r[c++]=0|M,u+=t.adj43[h],r[c++]=0|p,r[c++]=0|u}0!=s&&(f=0|(l=o[a++]*n),b=0|(M=o[a++]*n),l+=t.adj43[f],M+=t.adj43[b],r[c++]=0|l,r[c++]=0|M)}var b=[1,2,5,7,7,10,10,13,13,13,13,13,13,13,13];function d(e,t,n,o){var a=function(e,t,n){var o=0,a=0;do{var r=e[t++],c=e[t++];o<r&&(o=r),a<c&&(a=c)}while(t<n);return o<a&&(o=a),o}(e,t,n);switch(a){case 0:return a;case 1:return function(e,t,n,o){var a=0,r=l.ht[1].hlen;do{var c=2*e[t+0]+e[t+1];t+=2,a+=r[c]}while(t<n);return o.bits+=a,1}(e,t,n,o);case 2:case 3:return function(e,t,n,o,a){var r,c,i=0,s=l.ht[o].xlen;c=2==o?l.table23:l.table56;do{var M=e[t+0]*s+e[t+1];t+=2,i+=c[M]}while(t<n);return r=65535&i,(i>>=16)>r&&(i=r,o++),a.bits+=i,o}(e,t,n,b[a-1],o);case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:return function(e,t,n,o,a){var r=0,c=0,i=0,s=l.ht[o].xlen,M=l.ht[o].hlen,p=l.ht[o+1].hlen,u=l.ht[o+2].hlen;do{var f=e[t+0]*s+e[t+1];t+=2,r+=M[f],c+=p[f],i+=u[f]}while(t<n);var b=o;return r>c&&(r=c,b++),r>i&&(r=i,b=o+2),a.bits+=r,b}(e,t,n,b[a-1],o);default:if(a>p.IXMAX_VAL)return o.bits=p.LARGE_BITS,-1;var r,c;for(a-=15,r=24;r<32&&!(l.ht[r].linmax>=a);r++);for(c=r-8;c<24&&!(l.ht[c].linmax>=a);c++);return function(e,t,n,o,a,r){var c,i=65536*l.ht[o].xlen+l.ht[a].xlen,s=0;do{var M=e[t++],p=e[t++];0!=M&&(M>14&&(M=15,s+=i),M*=16),0!=p&&(p>14&&(p=15,s+=i),M+=p),s+=l.largetbl[M]}while(t<n);return c=65535&s,(s>>=16)>c&&(s=c,o=a),r.bits+=s,o}(e,t,n,c,r,o)}}function h(e,t,o,a,r,c,i,l){for(var M=t.big_values,p=2;p<s.SBMAX_l+1;p++){var u=e.scalefac_band.l[p];if(u>=M)break;var f=r[p-2]+t.count1bits;if(o.part2_3_length<=f)break;var b=new n(f),h=d(a,u,M,b);f=b.bits,o.part2_3_length<=f||(o.assign(t),o.part2_3_length=f,o.region0_count=c[p-2],o.region1_count=p-2-c[p-2],o.table_select[0]=i[p-2],o.table_select[1]=l[p-2],o.table_select[2]=h)}}this.noquant_count_bits=function(e,t,o){var a=t.l3_enc,r=Math.min(576,t.max_nonzero_coeff+2>>1<<1);for(null!=o&&(o.sfb_count1=0);r>1&&0==(a[r-1]|a[r-2]);r-=2);t.count1=r;for(var c=0,M=0;r>3;r-=4){var p;if((2147483647&(a[r-1]|a[r-2]|a[r-3]|a[r-4]))>1)break;p=2*(2*(2*a[r-4]+a[r-3])+a[r-2])+a[r-1],c+=l.t32l[p],M+=l.t33l[p]}var u=c;if(t.count1table_select=0,c>M&&(u=M,t.count1table_select=1),t.count1bits=u,t.big_values=r,0==r)return u;if(t.block_type==s.SHORT_TYPE)(c=3*e.scalefac_band.s[3])>t.big_values&&(c=t.big_values),M=t.big_values;else if(t.block_type==s.NORM_TYPE){if(i(r<=576),c=t.region0_count=e.bv_scf[r-2],M=t.region1_count=e.bv_scf[r-1],i(c+M+2<s.SBPSY_l),M=e.scalefac_band.l[c+M+2],c=e.scalefac_band.l[c+1],M<r){var f=new n(u);t.table_select[2]=d(a,M,r,f),u=f.bits}}else t.region0_count=7,t.region1_count=s.SBMAX_l-1-7-1,(c=e.scalefac_band.l[8])>(M=r)&&(c=M);if(c=Math.min(c,r),M=Math.min(M,r),i(c>=0),i(M>=0),0<c&&(f=new n(u),t.table_select[0]=d(a,0,c,f),u=f.bits),c<M&&(f=new n(u),t.table_select[1]=d(a,c,M,f),u=f.bits),2==e.use_best_huffman&&(t.part2_3_length=u,best_huffman_divide(e,t),u=t.part2_3_length),null!=o&&t.block_type==s.NORM_TYPE){for(var b=0;e.scalefac_band.l[b]<t.big_values;)b++;o.sfb_count1=b}return u},this.count_bits=function(e,n,o,a){var c=o.l3_enc,l=p.IXMAX_VAL/t.IPOW20(o.global_gain);if(o.xrpow_max>l)return p.LARGE_BITS;if(function(e,n,o,a,c){var l,M,p,b=0,d=0,h=0,_=0,A=n,m=0,z=A,g=0,O=e,L=0;for(p=null!=c&&a.global_gain==c.global_gain,M=a.block_type==s.SHORT_TYPE?38:21,l=0;l<=M;l++){var y=-1;if((p||a.block_type==s.NORM_TYPE)&&(y=a.global_gain-(a.scalefac[l]+(0!=a.preflag?t.pretab[l]:0)<<a.scalefac_scale+1)-8*a.subblock_gain[a.window[l]]),i(a.width[l]>=0),p&&c.step[l]==y)0!=d&&(f(d,o,O,L,z,g),d=0),0!=h&&(u(h,o,O,L,z,g),h=0);else{var v,N=a.width[l];if(b+a.width[l]>a.max_nonzero_coeff&&(v=a.max_nonzero_coeff-b+1,r.fill(n,a.max_nonzero_coeff,576,0),(N=v)<0&&(N=0),l=M+1),0==d&&0==h&&(z=A,g=m,O=e,L=_),null!=c&&c.sfb_count1>0&&l>=c.sfb_count1&&c.step[l]>0&&y>=c.step[l]?(0!=d&&(f(d,o,O,L,z,g),d=0,z=A,g=m,O=e,L=_),h+=N):(0!=h&&(u(h,o,O,L,z,g),h=0,z=A,g=m,O=e,L=_),d+=N),N<=0){0!=h&&(u(h,o,O,L,z,g),h=0),0!=d&&(f(d,o,O,L,z,g),d=0);break}}l<=M&&(m+=a.width[l],_+=a.width[l],b+=a.width[l])}0!=d&&(f(d,o,O,L,z,g),d=0),0!=h&&(u(h,o,O,L,z,g),h=0)}(n,c,t.IPOW20(o.global_gain),o,a),0!=(2&e.substep_shaping))for(var M=0,b=o.global_gain+o.scalefac_scale,d=.634521682242439/t.IPOW20(b),h=0;h<o.sfbmax;h++){var _,A=o.width[h];if(i(A>=0),0==e.pseudohalf[h])M+=A;else for(_=M,M+=A;_<M;++_)c[_]=n[_]>=d?c[_]:0}return this.noquant_count_bits(e,o,a)},this.best_huffman_divide=function(e,t){var o=new M,a=t.l3_enc,r=c(23),u=c(23),f=c(23),b=c(23);if(t.block_type!=s.SHORT_TYPE||1!=e.mode_gr){o.assign(t),t.block_type==s.NORM_TYPE&&(function(e,t,o,a,r,c,i){for(var s=t.big_values,l=0;l<=22;l++)a[l]=p.LARGE_BITS;for(l=0;l<16;l++){var M=e.scalefac_band.l[l+1];if(M>=s)break;var u=0,f=new n(u),b=d(o,0,M,f);u=f.bits;for(var h=0;h<8;h++){var _=e.scalefac_band.l[l+h+2];if(_>=s)break;var A=u,m=d(o,M,_,f=new n(A));A=f.bits,a[l+h]>A&&(a[l+h]=A,r[l+h]=l,c[l+h]=b,i[l+h]=m)}}}(e,t,a,r,u,f,b),h(e,o,t,a,r,u,f,b));var _=o.big_values;if(!(0==_||(a[_-2]|a[_-1])>1)&&!((_=t.count1+2)>576)){o.assign(t),o.count1=_;var A=0,m=0;for(i(_<=576);_>o.big_values;_-=4){var z=2*(2*(2*a[_-4]+a[_-3])+a[_-2])+a[_-1];A+=l.t32l[z],m+=l.t33l[z]}if(o.big_values=_,o.count1table_select=0,A>m&&(A=m,o.count1table_select=1),o.count1bits=A,o.block_type==s.NORM_TYPE)h(e,o,t,a,r,u,f,b);else{if(o.part2_3_length=A,(A=e.scalefac_band.l[8])>_&&(A=_),A>0){var g=new n(o.part2_3_length);o.table_select[0]=d(a,0,A,g),o.part2_3_length=g.bits}_>A&&(g=new n(o.part2_3_length),o.table_select[1]=d(a,A,_,g),o.part2_3_length=g.bits),t.part2_3_length>o.part2_3_length&&t.assign(o)}}}};var _=[1,1,1,1,8,2,2,2,4,4,4,8,8,8,16,16],A=[1,2,4,8,1,2,4,8,2,4,8,2,4,8,4,8],m=[0,0,0,0,3,1,1,1,2,2,2,3,3,3,4,4],z=[0,1,2,3,0,1,2,3,1,2,3,1,2,3,2,3];e.slen1_tab=m,e.slen2_tab=z,this.best_scalefac_store=function(e,n,o,a){var r,c,M,p,u=a.tt[n][o],f=0;for(M=0,r=0;r<u.sfbmax;r++){var b=u.width[r];for(i(b>=0),M+=b,p=-b;p<0&&0==u.l3_enc[p+M];p++);0==p&&(u.scalefac[r]=f=-2)}if(0==u.scalefac_scale&&0==u.preflag){var d=0;for(r=0;r<u.sfbmax;r++)u.scalefac[r]>0&&(d|=u.scalefac[r]);if(0==(1&d)&&0!=d){for(r=0;r<u.sfbmax;r++)u.scalefac[r]>0&&(u.scalefac[r]>>=1);u.scalefac_scale=f=1}}if(0==u.preflag&&u.block_type!=s.SHORT_TYPE&&2==e.mode_gr){for(r=11;r<s.SBPSY_l&&!(u.scalefac[r]<t.pretab[r]&&-2!=u.scalefac[r]);r++);if(r==s.SBPSY_l){for(r=11;r<s.SBPSY_l;r++)u.scalefac[r]>0&&(u.scalefac[r]-=t.pretab[r]);u.preflag=f=1}}for(c=0;c<4;c++)a.scfsi[o][c]=0;for(2==e.mode_gr&&1==n&&a.tt[0][o].block_type!=s.SHORT_TYPE&&a.tt[1][o].block_type!=s.SHORT_TYPE&&(function(e,t){for(var n,o=t.tt[1][e],a=t.tt[0][e],r=0;r<l.scfsi_band.length-1;r++){for(n=l.scfsi_band[r];n<l.scfsi_band[r+1]&&!(a.scalefac[n]!=o.scalefac[n]&&o.scalefac[n]>=0);n++);if(n==l.scfsi_band[r+1]){for(n=l.scfsi_band[r];n<l.scfsi_band[r+1];n++)o.scalefac[n]=-1;t.scfsi[e][r]=1}}var c=0,i=0;for(n=0;n<11;n++)-1!=o.scalefac[n]&&(i++,c<o.scalefac[n]&&(c=o.scalefac[n]));for(var M=0,p=0;n<s.SBPSY_l;n++)-1!=o.scalefac[n]&&(p++,M<o.scalefac[n]&&(M=o.scalefac[n]));for(r=0;r<16;r++)if(c<_[r]&&M<A[r]){var u=m[r]*i+z[r]*p;o.part2_length>u&&(o.part2_length=u,o.scalefac_compress=r)}}(o,a),f=0),r=0;r<u.sfbmax;r++)-2==u.scalefac[r]&&(u.scalefac[r]=0);0!=f&&(2==e.mode_gr?this.scale_bitcount(u):this.scale_bitcount_lsf(e,u))};var g=[0,18,36,54,54,36,54,72,54,72,90,72,90,108,108,126],O=[0,18,36,54,51,35,53,71,52,70,88,69,87,105,104,122],L=[0,10,20,30,33,21,31,41,32,42,52,43,53,63,64,74];this.scale_bitcount=function(e){var n,o,a,r=0,c=0,l=e.scalefac;if(i(function(e,t){for(var n=0;n<t;++n)if(e[n]<0)return!1;return!0}(l,e.sfbmax)),e.block_type==s.SHORT_TYPE)a=g,0!=e.mixed_block_flag&&(a=O);else if(a=L,0==e.preflag){for(o=11;o<s.SBPSY_l&&!(l[o]<t.pretab[o]);o++);if(o==s.SBPSY_l)for(e.preflag=1,o=11;o<s.SBPSY_l;o++)l[o]-=t.pretab[o]}for(o=0;o<e.sfbdivide;o++)r<l[o]&&(r=l[o]);for(;o<e.sfbmax;o++)c<l[o]&&(c=l[o]);for(e.part2_length=p.LARGE_BITS,n=0;n<16;n++)r<_[n]&&c<A[n]&&e.part2_length>a[n]&&(e.part2_length=a[n],e.scalefac_compress=n);return e.part2_length==p.LARGE_BITS};var y=[[15,15,7,7],[15,15,7,0],[7,3,0,0],[15,31,31,0],[7,7,7,0],[3,3,0,0]];this.scale_bitcount_lsf=function(e,n){var o,r,l,M,p,u,f,b,d=c(4),h=n.scalefac;for(o=0!=n.preflag?2:0,f=0;f<4;f++)d[f]=0;if(n.block_type==s.SHORT_TYPE){r=1;var _=t.nr_of_sfb_block[o][r];for(b=0,l=0;l<4;l++)for(M=_[l]/3,f=0;f<M;f++,b++)for(p=0;p<3;p++)h[3*b+p]>d[l]&&(d[l]=h[3*b+p])}else for(r=0,_=t.nr_of_sfb_block[o][r],b=0,l=0;l<4;l++)for(M=_[l],f=0;f<M;f++,b++)h[b]>d[l]&&(d[l]=h[b]);for(u=!1,l=0;l<4;l++)d[l]>y[o][l]&&(u=!0);if(!u){var A,m,z,g;for(n.sfb_partition_table=t.nr_of_sfb_block[o][r],l=0;l<4;l++)n.slen[l]=v[d[l]];switch(A=n.slen[0],m=n.slen[1],z=n.slen[2],g=n.slen[3],o){case 0:n.scalefac_compress=(5*A+m<<4)+(z<<2)+g;break;case 1:n.scalefac_compress=400+(5*A+m<<2)+z;break;case 2:n.scalefac_compress=500+3*A+m;break;default:a.err.printf(\"intensity stereo not implemented yet\\n\")}}if(!u)for(i(null!=n.sfb_partition_table),n.part2_length=0,l=0;l<4;l++)n.part2_length+=n.slen[l]*n.sfb_partition_table[l];return u};var v=[0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];this.huffman_init=function(e){for(var t=2;t<=576;t+=2){for(var n,a=0;e.scalefac_band.l[++a]<t;);for(n=o[a][0];e.scalefac_band.l[n+1]>t;)n--;for(n<0&&(n=o[a][0]),e.bv_scf[t-2]=n,n=o[a][1];e.scalefac_band.l[n+e.bv_scf[t-2]+2]>t;)n--;n<0&&(n=o[a][1]),e.bv_scf[t-1]=n}}}},function(e,t,n){var o=n(360),a=n(298),r=(a.System,a.VbrMode),c=a.Float,i=(a.ShortBlock,a.Util),s=(a.Arrays,a.new_array_n,a.new_byte,a.new_double,a.new_float),l=(a.new_float_n,a.new_int),M=(a.new_int_n,a.assert),p=n(299),u=n(362),f=n(307);function b(){var e=null,t=null,n=null;this.setModules=function(o,a,r){e=o,t=a,n=r},this.IPOW20=function(e){return M(0<=e&&e<b.Q_MAX),z[e]};var a=b.IXMAX_VAL+2,d=b.Q_MAX,h=b.Q_MAX2,_=(b.LARGE_BITS,100);this.nr_of_sfb_block=[[[6,5,5,5],[9,9,9,9],[6,9,9,9]],[[6,5,7,3],[9,9,12,6],[6,9,12,6]],[[11,10,0,0],[18,18,0,0],[15,18,0,0]],[[7,7,7,0],[12,12,12,0],[6,15,12,0]],[[6,6,6,3],[12,9,9,6],[6,12,9,6]],[[8,8,5,0],[15,12,9,0],[6,18,9,0]]];var A=[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,3,3,3,2,0];this.pretab=A,this.sfBandIndex=[new o([0,6,12,18,24,30,36,44,54,66,80,96,116,140,168,200,238,284,336,396,464,522,576],[0,4,8,12,18,24,32,42,56,74,100,132,174,192],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]),new o([0,6,12,18,24,30,36,44,54,66,80,96,114,136,162,194,232,278,332,394,464,540,576],[0,4,8,12,18,26,36,48,62,80,104,136,180,192],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]),new o([0,6,12,18,24,30,36,44,54,66,80,96,116,140,168,200,238,284,336,396,464,522,576],[0,4,8,12,18,26,36,48,62,80,104,134,174,192],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]),new o([0,4,8,12,16,20,24,30,36,44,52,62,74,90,110,134,162,196,238,288,342,418,576],[0,4,8,12,16,22,30,40,52,66,84,106,136,192],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]),new o([0,4,8,12,16,20,24,30,36,42,50,60,72,88,106,128,156,190,230,276,330,384,576],[0,4,8,12,16,22,28,38,50,64,80,100,126,192],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]),new o([0,4,8,12,16,20,24,30,36,44,54,66,82,102,126,156,194,240,296,364,448,550,576],[0,4,8,12,16,22,30,42,58,78,104,138,180,192],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]),new o([0,6,12,18,24,30,36,44,54,66,80,96,116,140,168,200,238,284,336,396,464,522,576],[0,4,8,12,18,26,36,48,62,80,104,134,174,192],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]),new o([0,6,12,18,24,30,36,44,54,66,80,96,116,140,168,200,238,284,336,396,464,522,576],[0,4,8,12,18,26,36,48,62,80,104,134,174,192],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0]),new o([0,12,24,36,48,60,72,88,108,132,160,192,232,280,336,400,476,566,568,570,572,574,576],[0,8,16,24,36,52,72,96,124,160,162,164,166,192],[0,0,0,0,0,0,0],[0,0,0,0,0,0,0])];var m=s(d+h+1),z=s(d),g=s(a),O=s(a);function L(e,t){var o=n.ATHformula(t,e);return o-=_,o=Math.pow(10,o/10+e.ATHlower)}function y(e){this.s=e}this.adj43=O,this.iteration_init=function(t){var n,o=t.internal_flags,r=o.l3_side;if(0==o.iteration_init_init){for(o.iteration_init_init=1,r.main_data_begin=0,function(e){for(var t=e.internal_flags.ATH.l,n=e.internal_flags.ATH.psfb21,o=e.internal_flags.ATH.s,a=e.internal_flags.ATH.psfb12,r=e.internal_flags,i=e.out_samplerate,s=0;s<p.SBMAX_l;s++){var l=r.scalefac_band.l[s],M=r.scalefac_band.l[s+1];t[s]=c.MAX_VALUE;for(var u=l;u<M;u++){var f=L(e,u*i/1152);t[s]=Math.min(t[s],f)}}for(s=0;s<p.PSFB21;s++)for(l=r.scalefac_band.psfb21[s],M=r.scalefac_band.psfb21[s+1],n[s]=c.MAX_VALUE,u=l;u<M;u++)f=L(e,u*i/1152),n[s]=Math.min(n[s],f);for(s=0;s<p.SBMAX_s;s++){for(l=r.scalefac_band.s[s],M=r.scalefac_band.s[s+1],o[s]=c.MAX_VALUE,u=l;u<M;u++)f=L(e,u*i/384),o[s]=Math.min(o[s],f);o[s]*=r.scalefac_band.s[s+1]-r.scalefac_band.s[s]}for(s=0;s<p.PSFB12;s++){for(l=r.scalefac_band.psfb12[s],M=r.scalefac_band.psfb12[s+1],a[s]=c.MAX_VALUE,u=l;u<M;u++)f=L(e,u*i/384),a[s]=Math.min(a[s],f);a[s]*=r.scalefac_band.s[13]-r.scalefac_band.s[12]}if(e.noATH){for(s=0;s<p.SBMAX_l;s++)t[s]=1e-20;for(s=0;s<p.PSFB21;s++)n[s]=1e-20;for(s=0;s<p.SBMAX_s;s++)o[s]=1e-20;for(s=0;s<p.PSFB12;s++)a[s]=1e-20}r.ATH.floor=10*Math.log10(L(e,-1))}(t),g[0]=0,n=1;n<a;n++)g[n]=Math.pow(n,4/3);for(n=0;n<a-1;n++)O[n]=n+1-Math.pow(.5*(g[n]+g[n+1]),.75);for(O[n]=.5,n=0;n<d;n++)z[n]=Math.pow(2,-.1875*(n-210));for(n=0;n<=d+h;n++)m[n]=Math.pow(2,.25*(n-210-h));var i,s,l,M;for(e.huffman_init(o),(n=t.exp_nspsytune>>2&63)>=32&&(n-=64),i=Math.pow(10,n/4/10),(n=t.exp_nspsytune>>8&63)>=32&&(n-=64),s=Math.pow(10,n/4/10),(n=t.exp_nspsytune>>14&63)>=32&&(n-=64),l=Math.pow(10,n/4/10),(n=t.exp_nspsytune>>20&63)>=32&&(n-=64),M=l*Math.pow(10,n/4/10),n=0;n<p.SBMAX_l;n++){u=n<=6?i:n<=13?s:n<=20?l:M,o.nsPsy.longfact[n]=u}for(n=0;n<p.SBMAX_s;n++){var u;u=n<=5?i:n<=10?s:n<=11?l:M,o.nsPsy.shortfact[n]=u}}},this.on_pe=function(e,n,o,a,r,c){var i,s,p=e.internal_flags,b=0,d=l(2),h=new u(b),_=t.ResvMaxBits(e,a,h,c),A=(b=h.bits)+_;for(A>f.MAX_BITS_PER_GRANULE&&(A=f.MAX_BITS_PER_GRANULE),i=0,s=0;s<p.channels_out;++s)o[s]=Math.min(f.MAX_BITS_PER_CHANNEL,b/p.channels_out),d[s]=0|o[s]*n[r][s]/700-o[s],d[s]>3*a/4&&(d[s]=3*a/4),d[s]<0&&(d[s]=0),d[s]+o[s]>f.MAX_BITS_PER_CHANNEL&&(d[s]=Math.max(0,f.MAX_BITS_PER_CHANNEL-o[s])),i+=d[s];if(i>_)for(s=0;s<p.channels_out;++s)d[s]=_*d[s]/i;for(s=0;s<p.channels_out;++s)o[s]+=d[s],_-=d[s];for(i=0,s=0;s<p.channels_out;++s)i+=o[s];if(i>f.MAX_BITS_PER_GRANULE){var m=0;for(s=0;s<p.channels_out;++s)o[s]*=f.MAX_BITS_PER_GRANULE,o[s]/=i,m+=o[s];M(m<=f.MAX_BITS_PER_GRANULE)}return A},this.reduce_side=function(e,t,n,o){M(o<=f.MAX_BITS_PER_GRANULE),M(e[0]+e[1]<=f.MAX_BITS_PER_GRANULE);var a=.33*(.5-t)/.5;a<0&&(a=0),a>.5&&(a=.5);var r=0|.5*a*(e[0]+e[1]);r>f.MAX_BITS_PER_CHANNEL-e[0]&&(r=f.MAX_BITS_PER_CHANNEL-e[0]),r<0&&(r=0),e[1]>=125&&(e[1]-r>125?(e[0]<n&&(e[0]+=r),e[1]-=r):(e[0]+=e[1]-125,e[1]=125)),(r=e[0]+e[1])>o&&(e[0]=o*e[0]/r,e[1]=o*e[1]/r),M(e[0]<=f.MAX_BITS_PER_CHANNEL),M(e[1]<=f.MAX_BITS_PER_CHANNEL),M(e[0]+e[1]<=f.MAX_BITS_PER_GRANULE)},this.athAdjust=function(e,t,n){var o=90.30873362,a=i.FAST_LOG10_X(t,10),r=e*e,c=0;return a-=n,r>1e-20&&(c=1+i.FAST_LOG10_X(r,10/o)),c<0&&(c=0),a*=c,a+=n+o-94.82444863,Math.pow(10,.1*a)},this.calc_xmin=function(e,t,n,o){var a,c=0,i=e.internal_flags,s=0,l=0,M=i.ATH,u=n.xr,f=e.VBR==r.vbr_mtrh?1:0,b=i.masking_lower;for(e.VBR!=r.vbr_mtrh&&e.VBR!=r.vbr_mt||(b=1),a=0;a<n.psy_lmax;a++){O=(g=e.VBR==r.vbr_rh||e.VBR==r.vbr_mtrh?athAdjust(M.adjust,M.l[a],M.floor):M.adjust*M.l[a])/(A=n.width[a]),L=2.220446049250313e-16,q=A>>1,N=0;do{N+=T=u[s]*u[s],L+=T<O?T:O,N+=B=u[++s]*u[s],L+=B<O?B:O,s++}while(--q>0);if(N>g&&l++,a==p.SBPSY_l)L<(v=g*i.nsPsy.longfact[a])&&(L=v);if(0!=f&&(g=L),!e.ATHonly)if((y=t.en.l[a])>0)v=N*t.thm.l[a]*b/y,0!=f&&(v*=i.nsPsy.longfact[a]),g<v&&(g=v);o[c++]=0!=f?g:g*i.nsPsy.longfact[a]}var d=575;if(n.block_type!=p.SHORT_TYPE)for(var h=576;0!=h--&&BitStream.EQ(u[h],0);)d=h;n.max_nonzero_coeff=d;for(var _=n.sfb_smin;a<n.psymax;_++,a+=3){var A,m,z;for(z=e.VBR==r.vbr_rh||e.VBR==r.vbr_mtrh?athAdjust(M.adjust,M.s[_],M.floor):M.adjust*M.s[_],A=n.width[a],m=0;m<3;m++){var g,O,L,y,v,N=0,q=A>>1;O=z/A,L=2.220446049250313e-16;do{var T,B;N+=T=u[s]*u[s],L+=T<O?T:O,N+=B=u[++s]*u[s],L+=B<O?B:O,s++}while(--q>0);if(N>z&&l++,_==p.SBPSY_s)L<(v=z*i.nsPsy.shortfact[_])&&(L=v);if(g=0!=f?L:z,!e.ATHonly&&!e.ATHshort)if((y=t.en.s[_][m])>0)v=N*t.thm.s[_][m]*b/y,0!=f&&(v*=i.nsPsy.shortfact[_]),g<v&&(g=v);o[c++]=0!=f?g:g*i.nsPsy.shortfact[_]}e.useTemporal&&(o[c-3]>o[c-3+1]&&(o[c-3+1]+=(o[c-3]-o[c-3+1])*i.decay),o[c-3+1]>o[c-3+2]&&(o[c-3+2]+=(o[c-3+1]-o[c-3+2])*i.decay))}return l},this.calc_noise_core=function(e,t,n,o){var a=0,r=t.s,c=e.l3_enc;if(r>e.count1)for(;0!=n--;){l=e.xr[r],r++,a+=l*l,l=e.xr[r],r++,a+=l*l}else if(r>e.big_values){var i=s(2);for(i[0]=0,i[1]=o;0!=n--;){l=Math.abs(e.xr[r])-i[c[r]],r++,a+=l*l,l=Math.abs(e.xr[r])-i[c[r]],r++,a+=l*l}}else for(;0!=n--;){var l;l=Math.abs(e.xr[r])-g[c[r]]*o,r++,a+=l*l,l=Math.abs(e.xr[r])-g[c[r]]*o,r++,a+=l*l}return t.s=r,a},this.calc_noise=function(e,t,n,o,a){var r,c,s,l=0,p=0,u=0,f=0,d=0,h=-20,_=0,z=e.scalefac,g=0;for(o.over_SSD=0,r=0;r<e.psymax;r++){var O,L=e.global_gain-(z[g++]+(0!=e.preflag?A[r]:0)<<e.scalefac_scale+1)-8*e.subblock_gain[e.window[r]],v=0;if(null!=a&&a.step[r]==L)v=a.noise[r],_+=e.width[r],n[l++]=v/t[p++],v=a.noise_log[r];else{var N,q=(M(0<=(s=L)+b.Q_MAX2&&s<b.Q_MAX),m[s+b.Q_MAX2]);if(c=e.width[r]>>1,_+e.width[r]>e.max_nonzero_coeff)c=(N=e.max_nonzero_coeff-_+1)>0?N>>1:0;var T=new y(_);v=this.calc_noise_core(e,T,c,q),_=T.s,null!=a&&(a.step[r]=L,a.noise[r]=v),v=n[l++]=v/t[p++],v=i.FAST_LOG10(Math.max(v,1e-20)),null!=a&&(a.noise_log[r]=v)}if(null!=a&&(a.global_gain=e.global_gain),d+=v,v>0)O=Math.max(0|10*v+.5,1),o.over_SSD+=O*O,u++,f+=v;h=Math.max(h,v)}return o.over_count=u,o.tot_noise=d,o.over_noise=f,o.max_noise=h,u},this.set_pinfo=function(e,t,n,o,a){var r,c,i,l,u,f=e.internal_flags,b=0==t.scalefac_scale?.5:1,d=t.scalefac,h=s(L3Side.SFBMAX),_=s(L3Side.SFBMAX),m=new CalcNoiseResult;calc_xmin(e,n,t,h),calc_noise(t,h,_,m,null);var z=0;for(c=t.sfb_lmax,t.block_type!=p.SHORT_TYPE&&0==t.mixed_block_flag&&(c=22),r=0;r<c;r++){var g=f.scalefac_band.l[r],O=(L=f.scalefac_band.l[r+1])-g;for(l=0;z<L;z++)l+=t.xr[z]*t.xr[z];l/=O,u=1e15,f.pinfo.en[o][a][r]=u*l,f.pinfo.xfsf[o][a][r]=u*h[r]*_[r]/O,n.en.l[r]>0&&!e.ATHonly?l/=n.en.l[r]:l=0,f.pinfo.thr[o][a][r]=u*Math.max(l*n.thm.l[r],f.ATH.l[r]),f.pinfo.LAMEsfb[o][a][r]=0,0!=t.preflag&&r>=11&&(f.pinfo.LAMEsfb[o][a][r]=-b*A[r]),r<p.SBPSY_l&&(M(d[r]>=0),f.pinfo.LAMEsfb[o][a][r]-=b*d[r])}if(t.block_type==p.SHORT_TYPE)for(c=r,r=t.sfb_smin;r<p.SBMAX_s;r++){g=f.scalefac_band.s[r],O=(L=f.scalefac_band.s[r+1])-g;for(var L,y=0;y<3;y++){for(l=0,i=g;i<L;i++)l+=t.xr[z]*t.xr[z],z++;l=Math.max(l/O,1e-20),u=1e15,f.pinfo.en_s[o][a][3*r+y]=u*l,f.pinfo.xfsf_s[o][a][3*r+y]=u*h[c]*_[c]/O,n.en.s[r][y]>0?l/=n.en.s[r][y]:l=0,(e.ATHonly||e.ATHshort)&&(l=0),f.pinfo.thr_s[o][a][3*r+y]=u*Math.max(l*n.thm.s[r][y],f.ATH.s[r]),f.pinfo.LAMEsfb_s[o][a][3*r+y]=-2*t.subblock_gain[y],r<p.SBPSY_s&&(f.pinfo.LAMEsfb_s[o][a][3*r+y]-=b*d[c]),c++}}f.pinfo.LAMEqss[o][a]=t.global_gain,f.pinfo.LAMEmainbits[o][a]=t.part2_3_length+t.part2_length,f.pinfo.LAMEsfbits[o][a]=t.part2_length,f.pinfo.over[o][a]=m.over_count,f.pinfo.max_noise[o][a]=10*m.max_noise,f.pinfo.over_noise[o][a]=10*m.over_noise,f.pinfo.tot_noise[o][a]=10*m.tot_noise,f.pinfo.over_SSD[o][a]=m.over_SSD}}b.Q_MAX=257,b.Q_MAX2=116,b.LARGE_BITS=1e5,b.IXMAX_VAL=8206,e.exports=b},,,,,function(e,t,n){\"use strict\";function o(e){return(o=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function a(e){return(a=\"function\"===typeof Symbol&&\"symbol\"===o(Symbol.iterator)?function(e){return o(e)}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":o(e)})(e)}function r(e,t){return!t||\"object\"!==a(t)&&\"function\"!==typeof t?function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e):t}n.d(t,\"a\",function(){return r})},function(e,t,n){\"use strict\";function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){if(\"function\"!==typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}n.d(t,\"a\",function(){return a})},function(e,t,n){var o,a,r;!function(c,i){\"use strict\";e.exports?e.exports=i(n(310)):(a=[n(310)],void 0===(r=\"function\"===typeof(o=i)?o.apply(t,a):o)||(e.exports=r))}(0,function(e){\"use strict\";var t,n={},o={},a={},r={};e&&\"string\"===typeof e.version||q(\"Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/\");var c=e.version.split(\".\"),i=+c[0],s=+c[1];function l(e){return e>96?e-87:e>64?e-29:e-48}function M(e){var t=0,n=e.split(\".\"),o=n[0],a=n[1]||\"\",r=1,c=0,i=1;for(45===e.charCodeAt(0)&&(t=1,i=-1);t<o.length;t++)c=60*c+l(o.charCodeAt(t));for(t=0;t<a.length;t++)r/=60,c+=l(a.charCodeAt(t))*r;return c*i}function p(e){for(var t=0;t<e.length;t++)e[t]=M(e[t])}function u(e,t){var n,o=[];for(n=0;n<t.length;n++)o[n]=e[t[n]];return o}function f(e){var t=e.split(\"|\"),n=t[2].split(\" \"),o=t[3].split(\"\"),a=t[4].split(\" \");return p(n),p(o),p(a),function(e,t){for(var n=0;n<t;n++)e[n]=Math.round((e[n-1]||0)+6e4*e[n]);e[t-1]=1/0}(a,o.length),{name:t[0],abbrs:u(t[1].split(\" \"),o),offsets:u(n,o),untils:a,population:0|t[5]}}function b(e){e&&this._set(f(e))}function d(e){var t=e.toTimeString(),n=t.match(/\\([a-z ]+\\)/i);\"GMT\"===(n=n&&n[0]?(n=n[0].match(/[A-Z]/g))?n.join(\"\"):void 0:(n=t.match(/[A-Z]{3,5}/g))?n[0]:void 0)&&(n=void 0),this.at=+e,this.abbr=n,this.offset=e.getTimezoneOffset()}function h(e){this.zone=e,this.offsetScore=0,this.abbrScore=0}function _(e,t){for(var n,o;o=6e4*((t.at-e.at)/12e4|0);)(n=new d(new Date(e.at+o))).offset===e.offset?e=n:t=n;return e}function A(e,t){return e.offsetScore!==t.offsetScore?e.offsetScore-t.offsetScore:e.abbrScore!==t.abbrScore?e.abbrScore-t.abbrScore:e.zone.population!==t.zone.population?t.zone.population-e.zone.population:t.zone.name.localeCompare(e.zone.name)}function m(e,t){var n,o;for(p(t),n=0;n<t.length;n++)o=t[n],r[o]=r[o]||{},r[o][e]=!0}function z(e){var t,n,o,c=e.length,i={},s=[];for(t=0;t<c;t++)for(n in o=r[e[t].offset]||{})o.hasOwnProperty(n)&&(i[n]=!0);for(t in i)i.hasOwnProperty(t)&&s.push(a[t]);return s}function g(){try{var e=Intl.DateTimeFormat().resolvedOptions().timeZone;if(e&&e.length>3){var t=a[O(e)];if(t)return t;q(\"Moment Timezone found \"+e+\" from the Intl api, but did not have that data loaded.\")}}catch(M){}var n,o,r,c=function(){var e,t,n,o=(new Date).getFullYear()-2,a=new d(new Date(o,0,1)),r=[a];for(n=1;n<48;n++)(t=new d(new Date(o,n,1))).offset!==a.offset&&(e=_(a,t),r.push(e),r.push(new d(new Date(e.at+6e4)))),a=t;for(n=0;n<4;n++)r.push(new d(new Date(o+n,0,1))),r.push(new d(new Date(o+n,6,1)));return r}(),i=c.length,s=z(c),l=[];for(o=0;o<s.length;o++){for(n=new h(y(s[o]),i),r=0;r<i;r++)n.scoreOffsetAt(c[r]);l.push(n)}return l.sort(A),l.length>0?l[0].zone.name:void 0}function O(e){return(e||\"\").toLowerCase().replace(/\\//g,\"_\")}function L(e){var t,o,r,c;for(\"string\"===typeof e&&(e=[e]),t=0;t<e.length;t++)c=O(o=(r=e[t].split(\"|\"))[0]),n[c]=e[t],a[c]=o,m(c,r[2].split(\" \"))}function y(e,t){e=O(e);var r,c=n[e];return c instanceof b?c:\"string\"===typeof c?(c=new b(c),n[e]=c,c):o[e]&&t!==y&&(r=y(o[e],y))?((c=n[e]=new b)._set(r),c.name=a[e],c):null}function v(e){var t,n,r,c;for(\"string\"===typeof e&&(e=[e]),t=0;t<e.length;t++)r=O((n=e[t].split(\"|\"))[0]),c=O(n[1]),o[r]=c,a[r]=n[0],o[c]=r,a[c]=n[1]}function N(e){var t=\"X\"===e._f||\"x\"===e._f;return!(!e._a||void 0!==e._tzm||t)}function q(e){\"undefined\"!==typeof console&&\"function\"===typeof console.error&&console.error(e)}function T(t){var n=Array.prototype.slice.call(arguments,0,-1),o=arguments[arguments.length-1],a=y(o),r=e.utc.apply(null,n);return a&&!e.isMoment(t)&&N(r)&&r.add(a.parse(r),\"minutes\"),r.tz(o),r}(i<2||2===i&&s<6)&&q(\"Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js \"+e.version+\". See momentjs.com\"),b.prototype={_set:function(e){this.name=e.name,this.abbrs=e.abbrs,this.untils=e.untils,this.offsets=e.offsets,this.population=e.population},_index:function(e){var t,n=+e,o=this.untils;for(t=0;t<o.length;t++)if(n<o[t])return t},parse:function(e){var t,n,o,a,r=+e,c=this.offsets,i=this.untils,s=i.length-1;for(a=0;a<s;a++)if(t=c[a],n=c[a+1],o=c[a?a-1:a],t<n&&T.moveAmbiguousForward?t=n:t>o&&T.moveInvalidForward&&(t=o),r<i[a]-6e4*t)return c[a];return c[s]},abbr:function(e){return this.abbrs[this._index(e)]},offset:function(e){return q(\"zone.offset has been deprecated in favor of zone.utcOffset\"),this.offsets[this._index(e)]},utcOffset:function(e){return this.offsets[this._index(e)]}},h.prototype.scoreOffsetAt=function(e){this.offsetScore+=Math.abs(this.zone.utcOffset(e.at)-e.offset),this.zone.abbr(e.at).replace(/[^A-Z]/g,\"\")!==e.abbr&&this.abbrScore++},T.version=\"0.5.26\",T.dataVersion=\"\",T._zones=n,T._links=o,T._names=a,T.add=L,T.link=v,T.load=function(e){L(e.zones),v(e.links),T.dataVersion=e.version},T.zone=y,T.zoneExists=function e(t){return e.didShowError||(e.didShowError=!0,q(\"moment.tz.zoneExists('\"+t+\"') has been deprecated in favor of !moment.tz.zone('\"+t+\"')\")),!!y(t)},T.guess=function(e){return t&&!e||(t=g()),t},T.names=function(){var e,t=[];for(e in a)a.hasOwnProperty(e)&&(n[e]||n[o[e]])&&a[e]&&t.push(a[e]);return t.sort()},T.Zone=b,T.unpack=f,T.unpackBase60=M,T.needsOffset=N,T.moveInvalidForward=!0,T.moveAmbiguousForward=!1;var B,S=e.fn;function w(e){return function(){return this._z?this._z.abbr(this):e.call(this)}}function W(e){return function(){return this._z=null,e.apply(this,arguments)}}e.tz=T,e.defaultZone=null,e.updateOffset=function(t,n){var o,a=e.defaultZone;if(void 0===t._z&&(a&&N(t)&&!t._isUTC&&(t._d=e.utc(t._a)._d,t.utc().add(a.parse(t),\"minutes\")),t._z=a),t._z)if(o=t._z.utcOffset(t),Math.abs(o)<16&&(o/=60),void 0!==t.utcOffset){var r=t._z;t.utcOffset(-o,n),t._z=r}else t.zone(o,n)},S.tz=function(t,n){if(t){if(\"string\"!==typeof t)throw new Error(\"Time zone name must be a string, got \"+t+\" [\"+typeof t+\"]\");return this._z=y(t),this._z?e.updateOffset(this,n):q(\"Moment Timezone has no data for \"+t+\". See http://momentjs.com/timezone/docs/#/data-loading/.\"),this}if(this._z)return this._z.name},S.zoneName=w(S.zoneName),S.zoneAbbr=w(S.zoneAbbr),S.utc=W(S.utc),S.local=W(S.local),S.utcOffset=(B=S.utcOffset,function(){return arguments.length>0&&(this._z=null),B.apply(this,arguments)}),e.tz.setDefault=function(t){return(i<2||2===i&&s<9)&&q(\"Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js \"+e.version+\".\"),e.defaultZone=t?y(t):null,e};var X=e.momentProperties;return\"[object Array]\"===Object.prototype.toString.call(X)?(X.push(\"_z\"),X.push(\"_a\")):X&&(X._z=null),e})},function(e){e.exports={version:\"2019b\",zones:[\"Africa/Abidjan|LMT GMT|g.8 0|01|-2ldXH.Q|48e5\",\"Africa/Accra|LMT GMT +0020|.Q 0 -k|012121212121212121212121212121212121212121212121|-26BbX.8 6tzX.8 MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE|41e5\",\"Africa/Nairobi|LMT EAT +0230 +0245|-2r.g -30 -2u -2J|01231|-1F3Cr.g 3Dzr.g okMu MFXJ|47e5\",\"Africa/Algiers|PMT WET WEST CET CEST|-9.l 0 -10 -10 -20|0121212121212121343431312123431213|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 DA0 Imo0 rd0 De0 9Xz0 1fb0 1ap0 16K0 2yo0 mEp0 hwL0 jxA0 11A0 dDd0 17b0 11B0 1cN0 2Dy0 1cN0 1fB0 1cL0|26e5\",\"Africa/Lagos|LMT WAT|-d.A -10|01|-22y0d.A|17e6\",\"Africa/Bissau|LMT -01 GMT|12.k 10 0|012|-2ldX0 2xoo0|39e4\",\"Africa/Maputo|LMT CAT|-2a.k -20|01|-2GJea.k|26e5\",\"Africa/Cairo|EET EEST|-20 -30|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1bIO0 vb0 1ip0 11z0 1iN0 1nz0 12p0 1pz0 10N0 1pz0 16p0 1jz0 s3d0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1WL0 rd0 1Rz0 wp0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1qL0 Xd0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1ny0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 WL0 1qN0 Rb0 1wp0 On0 1zd0 Lz0 1EN0 Fb0 c10 8n0 8Nd0 gL0 e10 mn0|15e6\",\"Africa/Casablanca|LMT +00 +01|u.k 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2gMnt.E 130Lt.E rb0 Dd0 dVb0 b6p0 TX0 EoB0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4mn0 SyN0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0|32e5\",\"Africa/Ceuta|WET WEST CET CEST|0 -10 -10 -20|010101010101010101010232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-25KN0 11z0 drd0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1y7o0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4VB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|85e3\",\"Africa/El_Aaiun|LMT -01 +00 +01|Q.M 10 0 -10|012323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1rDz7.c 1GVA7.c 6L0 AL0 1Nd0 XX0 1Cp0 pz0 1cBB0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0|20e4\",\"Africa/Johannesburg|SAST SAST SAST|-1u -20 -30|012121|-2GJdu 1Ajdu 1cL0 1cN0 1cL0|84e5\",\"Africa/Juba|LMT CAT CAST EAT|-26.s -20 -30 -30|01212121212121212121212121212121213|-1yW26.s 1zK06.s 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0\",\"Africa/Khartoum|LMT CAT CAST EAT|-2a.8 -20 -30 -30|012121212121212121212121212121212131|-1yW2a.8 1zK0a.8 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 HjL0|51e5\",\"Africa/Monrovia|MMT MMT GMT|H.8 I.u 0|012|-23Lzg.Q 28G01.m|11e5\",\"Africa/Ndjamena|LMT WAT WAST|-10.c -10 -20|0121|-2le10.c 2J3c0.c Wn0|13e5\",\"Africa/Sao_Tome|LMT GMT WAT|A.J 0 -10|0121|-2le00 4i6N0 2q00\",\"Africa/Tripoli|LMT CET CEST EET|-Q.I -10 -20 -20|012121213121212121212121213123123|-21JcQ.I 1hnBQ.I vx0 4iP0 xx0 4eN0 Bb0 7ip0 U0n0 A10 1db0 1cN0 1db0 1dd0 1db0 1eN0 1bb0 1e10 1cL0 1c10 1db0 1dd0 1db0 1cN0 1db0 1q10 fAn0 1ep0 1db0 AKq0 TA0 1o00|11e5\",\"Africa/Tunis|PMT CET CEST|-9.l -10 -20|0121212121212121212121212121212121|-2nco9.l 18pa9.l 1qM0 DA0 3Tc0 11B0 1ze0 WM0 7z0 3d0 14L0 1cN0 1f90 1ar0 16J0 1gXB0 WM0 1rA0 11c0 nwo0 Ko0 1cM0 1cM0 1rA0 10M0 zuM0 10N0 1aN0 1qM0 WM0 1qM0 11A0 1o00|20e5\",\"Africa/Windhoek|+0130 SAST SAST CAT WAT|-1u -20 -30 -20 -10|01213434343434343434343434343434343434343434343434343|-2GJdu 1Ajdu 1cL0 1SqL0 9Io0 16P0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|32e4\",\"America/Adak|NST NWT NPT BST BDT AHST HST HDT|b0 a0 a0 b0 a0 a0 a0 90|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|326\",\"America/Anchorage|AST AWT APT AHST AHDT YST AKST AKDT|a0 90 90 a0 90 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T00 8wX0 iA0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|30e4\",\"America/Port_of_Spain|LMT AST|46.4 40|01|-2kNvR.U|43e3\",\"America/Araguaina|LMT -03 -02|3c.M 30 20|0121212121212121212121212121212121212121212121212121|-2glwL.c HdKL.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 ny10 Lz0|14e4\",\"America/Argentina/Buenos_Aires|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 A4p0 uL0 1qN0 WL0\",\"America/Argentina/Catamarca|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 7B0 8zb0 uL0\",\"America/Argentina/Cordoba|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0 1qN0 WL0\",\"America/Argentina/Jujuy|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1ze0 TX0 1ld0 WK0 1wp0 TX0 A4p0 uL0\",\"America/Argentina/La_Rioja|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0\",\"America/Argentina/Mendoza|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232312121321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1u20 SL0 1vd0 Tb0 1wp0 TW0 ri10 Op0 7TX0 uL0\",\"America/Argentina/Rio_Gallegos|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0\",\"America/Argentina/Salta|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0\",\"America/Argentina/San_Juan|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rld0 m10 8lb0 uL0\",\"America/Argentina/San_Luis|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121212321212|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 XX0 1q20 SL0 AN0 vDb0 m10 8lb0 8L0 jd0 1qN0 WL0 1qN0\",\"America/Argentina/Tucuman|CMT -04 -03 -02|4g.M 40 30 20|0121212121212121212121212121212121212121212323232313232123232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 4N0 8BX0 uL0 1qN0 WL0\",\"America/Argentina/Ushuaia|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rkN0 8p0 8zb0 uL0\",\"America/Curacao|LMT -0430 AST|4z.L 4u 40|012|-2kV7o.d 28KLS.d|15e4\",\"America/Asuncion|AMT -04 -03|3O.E 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-1x589.k 1DKM9.k 3CL0 3Dd0 10L0 1pB0 10n0 1pB0 10n0 1pB0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1lB0 14n0 1dd0 1cL0 1fd0 WL0 1rd0 1aL0 1dB0 Xz0 1qp0 Xb0 1qN0 10L0 1rB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 WN0 1qL0 11B0 1nX0 1ip0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 TX0 1tB0 19X0 1a10 1fz0 1a10 1fz0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0|28e5\",\"America/Atikokan|CST CDT CWT CPT EST|60 50 50 50 50|0101234|-25TQ0 1in0 Rnb0 3je0 8x30 iw0|28e2\",\"America/Bahia_Banderas|LMT MST CST PST MDT CDT|71 70 60 80 60 50|0121212131414141414141414141414141414152525252525252525252525252525252525252525252525252525252|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nW0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|84e3\",\"America/Bahia|LMT -03 -02|2y.4 30 20|01212121212121212121212121212121212121212121212121212121212121|-2glxp.U HdLp.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 l5B0 Rb0|27e5\",\"America/Barbados|LMT BMT AST ADT|3W.t 3W.t 40 30|01232323232|-1Q0I1.v jsM0 1ODC1.v IL0 1ip0 17b0 1ip0 17b0 1ld0 13b0|28e4\",\"America/Belem|LMT -03 -02|3d.U 30 20|012121212121212121212121212121|-2glwK.4 HdKK.4 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|20e5\",\"America/Belize|LMT CST -0530 CDT|5Q.M 60 5u 50|01212121212121212121212121212121212121212121212121213131|-2kBu7.c fPA7.c Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1f0Mu qn0 lxB0 mn0|57e3\",\"America/Blanc-Sablon|AST ADT AWT APT|40 30 30 30|010230|-25TS0 1in0 UGp0 8x50 iu0|11e2\",\"America/Boa_Vista|LMT -04 -03|42.E 40 30|0121212121212121212121212121212121|-2glvV.k HdKV.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 smp0 WL0 1tB0 2L0|62e2\",\"America/Bogota|BMT -05 -04|4U.g 50 40|0121|-2eb73.I 38yo3.I 2en0|90e5\",\"America/Boise|PST PDT MST MWT MPT MDT|80 70 70 60 60 60|0101023425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-261q0 1nX0 11B0 1nX0 8C10 JCL0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 Dd0 1Kn0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e4\",\"America/Cambridge_Bay|-00 MST MWT MPT MDDT MDT CST CDT EST|0 70 60 60 50 60 60 50 50|0123141515151515151515151515151515151515151515678651515151515151515151515151515151515151515151515151515151515151515151515151|-21Jc0 RO90 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11A0 1nX0 2K0 WQ0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e2\",\"America/Campo_Grande|LMT -04 -03|3C.s 40 30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwl.w HdLl.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|77e4\",\"America/Cancun|LMT CST EST EDT CDT|5L.4 60 50 40 50|0123232341414141414141414141414141414141412|-1UQG0 2q2o0 yLB0 1lb0 14p0 1lb0 14p0 Lz0 xB0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 Dd0|63e4\",\"America/Caracas|CMT -0430 -04|4r.E 4u 40|01212|-2kV7w.k 28KM2.k 1IwOu kqo0|29e5\",\"America/Cayenne|LMT -04 -03|3t.k 40 30|012|-2mrwu.E 2gWou.E|58e3\",\"America/Panama|CMT EST|5j.A 50|01|-2uduE.o|15e5\",\"America/Chicago|CST CDT EST CWT CPT|60 50 50 50 50|01010101010101010101010101010101010102010101010103401010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 1wp0 TX0 WN0 1qL0 1cN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 11B0 1Hz0 14p0 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|92e5\",\"America/Chihuahua|LMT MST CST CDT MDT|74.k 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|81e4\",\"America/Costa_Rica|SJMT CST CDT|5A.d 60 50|0121212121|-1Xd6n.L 2lu0n.L Db0 1Kp0 Db0 pRB0 15b0 1kp0 mL0|12e5\",\"America/Creston|MST PST|70 80|010|-29DR0 43B0|53e2\",\"America/Cuiaba|LMT -04 -03|3I.k 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwf.E HdLf.E 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 4a10 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|54e4\",\"America/Danmarkshavn|LMT -03 -02 GMT|1e.E 30 20 0|01212121212121212121212121212121213|-2a5WJ.k 2z5fJ.k 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 DC0|8\",\"America/Dawson_Creek|PST PDT PWT PPT MST|80 70 70 70 70|0102301010101010101010101010101010101010101010101010101014|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 ML0|12e3\",\"America/Dawson|YST YDT YWT YPT YDDT PST PDT|90 80 80 80 70 80 70|0101023040565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 jrA0 fNd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|13e2\",\"America/Denver|MST MDT MWT MPT|70 60 60 60|01010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 11B0 1qL0 WN0 mn0 Ord0 8x20 ix0 LCN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e5\",\"America/Detroit|LMT CST EST EWT EPT EDT|5w.b 60 50 40 40 40|012342525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2Cgir.N peqr.N 156L0 8x40 iv0 6fd0 11z0 XQp0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e5\",\"America/Edmonton|LMT MST MDT MWT MPT|7x.Q 70 60 60 60|01212121212121341212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2yd4q.8 shdq.8 1in0 17d0 hz0 2dB0 1fz0 1a10 11z0 1qN0 WL0 1qN0 11z0 IGN0 8x20 ix0 3NB0 11z0 LFB0 1cL0 3Cp0 1cL0 66N0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|10e5\",\"America/Eirunepe|LMT -05 -04|4D.s 50 40|0121212121212121212121212121212121|-2glvk.w HdLk.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0 yTd0 d5X0|31e3\",\"America/El_Salvador|LMT CST CDT|5U.M 60 50|012121|-1XiG3.c 2Fvc3.c WL0 1qN0 WL0|11e5\",\"America/Tijuana|LMT MST PST PDT PWT PPT|7M.4 70 80 70 70 70|012123245232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQE0 4PX0 8mM0 8lc0 SN0 1cL0 pHB0 83r0 zI0 5O10 1Rz0 cOO0 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|20e5\",\"America/Fort_Nelson|PST PDT PWT PPT MST|80 70 70 70 70|01023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010104|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|39e2\",\"America/Fort_Wayne|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010101023010101010101010101040454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 QI10 Db0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 5Tz0 1o10 qLb0 1cL0 1cN0 1cL0 1qhd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"America/Fortaleza|LMT -03 -02|2y 30 20|0121212121212121212121212121212121212121|-2glxq HdLq 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 5z0 2mN0 On0|34e5\",\"America/Glace_Bay|LMT AST ADT AWT APT|3X.M 40 30 30 30|012134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsI0.c CwO0.c 1in0 UGp0 8x50 iu0 iq10 11z0 Jg10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3\",\"America/Godthab|LMT -03 -02|3q.U 30 20|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5Ux.4 2z5dx.4 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e3\",\"America/Goose_Bay|NST NDT NST NDT NWT NPT AST ADT ADDT|3u.Q 2u.Q 3u 2u 2u 2u 40 30 20|010232323232323245232323232323232323232323232323232323232326767676767676767676767676767676767676767676768676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-25TSt.8 1in0 DXb0 2HbX.8 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 S10 g0u 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|76e2\",\"America/Grand_Turk|KMT EST EDT AST|57.a 50 40 40|01212121212121212121212121212121212121212121212121212121212121212121212121232121212121212121212121212121212121212121|-2l1uQ.O 2HHBQ.O 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 5Ip0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e2\",\"America/Guatemala|LMT CST CDT|62.4 60 50|0121212121|-24KhV.U 2efXV.U An0 mtd0 Nz0 ifB0 17b0 zDB0 11z0|13e5\",\"America/Guayaquil|QMT -05 -04|5e 50 40|0121|-1yVSK 2uILK rz0|27e5\",\"America/Guyana|LMT -0345 -03 -04|3Q.E 3J 30 40|0123|-2dvU7.k 2r6LQ.k Bxbf|80e4\",\"America/Halifax|LMT AST ADT AWT APT|4e.o 40 30 30 30|0121212121212121212121212121212121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsHJ.A xzzJ.A 1db0 3I30 1in0 3HX0 IL0 1E10 ML0 1yN0 Pb0 1Bd0 Mn0 1Bd0 Rz0 1w10 Xb0 1w10 LX0 1w10 Xb0 1w10 Lz0 1C10 Jz0 1E10 OL0 1yN0 Un0 1qp0 Xb0 1qp0 11X0 1w10 Lz0 1HB0 LX0 1C10 FX0 1w10 Xb0 1qp0 Xb0 1BB0 LX0 1td0 Xb0 1qp0 Xb0 Rf0 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 6i10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|39e4\",\"America/Havana|HMT CST CDT|5t.A 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Meuu.o 72zu.o ML0 sld0 An0 1Nd0 Db0 1Nd0 An0 6Ep0 An0 1Nd0 An0 JDd0 Mn0 1Ap0 On0 1fd0 11X0 1qN0 WL0 1wp0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 14n0 1ld0 14L0 1kN0 15b0 1kp0 1cL0 1cN0 1fz0 1a10 1fz0 1fB0 11z0 14p0 1nX0 11B0 1nX0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 1a10 1in0 1a10 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 17c0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 11A0 6i00 Rc0 1wo0 U00 1tA0 Rc0 1wo0 U00 1wo0 U00 1zc0 U00 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0|21e5\",\"America/Hermosillo|LMT MST CST PST MDT|7n.Q 70 60 80 60|0121212131414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0|64e4\",\"America/Indiana/Knox|CST CDT CWT CPT EST|60 50 50 50 50|0101023010101010101010101010101010101040101010101010101010101010101010101010101010101010141010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 3Cn0 8wp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 z8o0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"America/Indiana/Marengo|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010104545454545414545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 dyN0 11z0 6fd0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1e6p0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"America/Indiana/Petersburg|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010104010101010101010101010141014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 3Fb0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 19co0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"America/Indiana/Tell_City|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"America/Indiana/Vevay|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010102304545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 kPB0 Awn0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1lnd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"America/Indiana/Vincennes|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"America/Indiana/Winamac|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010101010454541054545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1za0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"America/Inuvik|-00 PST PDDT MST MDT|0 80 60 70 60|0121343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-FnA0 tWU0 1fA0 wPe0 2pz0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|35e2\",\"America/Iqaluit|-00 EWT EPT EST EDDT EDT CST CDT|0 40 40 50 30 40 60 50|01234353535353535353535353535353535353535353567353535353535353535353535353535353535353535353535353535353535353535353535353|-16K00 7nX0 iv0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|67e2\",\"America/Jamaica|KMT EST EDT|57.a 50 40|0121212121212121212121|-2l1uQ.O 2uM1Q.O 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0|94e4\",\"America/Juneau|PST PWT PPT PDT YDT YST AKST AKDT|80 70 70 70 80 90 90 80|01203030303030303030303030403030356767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cM0 1cM0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|33e3\",\"America/Kentucky/Louisville|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101010102301010101010101010101010101454545454545414545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 3Fd0 Nb0 LPd0 11z0 RB0 8x30 iw0 Bb0 10N0 2bB0 8in0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 xz0 gso0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"America/Kentucky/Monticello|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 SWp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"America/La_Paz|CMT BST -04|4w.A 3w.A 40|012|-1x37r.o 13b0|19e5\",\"America/Lima|LMT -05 -04|58.A 50 40|0121212121212121|-2tyGP.o 1bDzP.o zX0 1aN0 1cL0 1cN0 1cL0 1PrB0 zX0 1O10 zX0 6Gp0 zX0 98p0 zX0|11e6\",\"America/Los_Angeles|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 5Wp1 1VaX 3dA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e6\",\"America/Maceio|LMT -03 -02|2m.Q 30 20|012121212121212121212121212121212121212121|-2glxB.8 HdLB.8 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 8Q10 WL0 1tB0 5z0 2mN0 On0|93e4\",\"America/Managua|MMT CST EST CDT|5J.c 60 50 50|0121313121213131|-1quie.M 1yAMe.M 4mn0 9Up0 Dz0 1K10 Dz0 s3F0 1KH0 DB0 9In0 k8p0 19X0 1o30 11y0|22e5\",\"America/Manaus|LMT -04 -03|40.4 40 30|01212121212121212121212121212121|-2glvX.U HdKX.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0|19e5\",\"America/Martinique|FFMT AST ADT|44.k 40 30|0121|-2mPTT.E 2LPbT.E 19X0|39e4\",\"America/Matamoros|LMT CST CDT|6E 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|45e4\",\"America/Mazatlan|LMT MST CST PST MDT|75.E 70 60 80 60|0121212131414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|44e4\",\"America/Menominee|CST CDT CWT CPT EST|60 50 50 50 50|01010230101041010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 LCN0 1fz0 6410 9Jb0 1cM0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|85e2\",\"America/Merida|LMT CST EST CDT|5W.s 60 50 50|0121313131313131313131313131313131313131313131313131313131313131313131313131313131313131|-1UQG0 2q2o0 2hz0 wu30 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|11e5\",\"America/Metlakatla|PST PWT PPT PDT AKST AKDT|80 70 70 70 90 80|01203030303030303030303030303030304545450454545454545454545454545454545454545454|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1hU10 Rd0 1zb0 Op0 1zb0 Op0 1zb0 uM0 jB0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2\",\"America/Mexico_City|LMT MST CST CDT CWT|6A.A 70 60 50 50|012121232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 gEn0 TX0 3xd0 Jb0 6zB0 SL0 e5d0 17b0 1Pff0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|20e6\",\"America/Miquelon|LMT AST -03 -02|3I.E 40 30 20|012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2mKkf.k 2LTAf.k gQ10 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|61e2\",\"America/Moncton|EST AST ADT AWT APT|50 40 30 30 30|012121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsH0 CwN0 1in0 zAo0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1K10 Lz0 1zB0 NX0 1u10 Wn0 S20 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14n1 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 ReX 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|64e3\",\"America/Monterrey|LMT CST CDT|6F.g 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|41e5\",\"America/Montevideo|LMT MMT -04 -03 -0330 -0230 -02 -0130|3I.P 3I.P 40 30 3u 2u 20 1u|012343434343434343434343435353636353636375363636363636363636363636363636363636363636363|-2tRUf.9 sVc0 8jcf.9 1db0 1dcu 1cLu 1dcu 1cLu ircu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu WLu 1fAu 1cLu 1o0u 11zu NAu 3jXu zXu Dq0u 19Xu pcu jz0 cm10 19X0 6tB0 1fbu 3o0u jX0 4vB0 xz0 3Cp0 mmu 1a10 IMu Db0 4c10 uL0 1Nd0 An0 1SN0 uL0 mp0 28L0 iPB0 un0 1SN0 xz0 1zd0 Lz0 1zd0 Rb0 1zd0 On0 1wp0 Rb0 s8p0 1fB0 1ip0 11z0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 11z0|17e5\",\"America/Toronto|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101012301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 11Wu 1nzu 1fD0 WJ0 1wr0 Nb0 1Ap0 On0 1zd0 On0 1wp0 TX0 1tB0 TX0 1tB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 4kM0 8x40 iv0 1o10 11z0 1nX0 11z0 1o10 11z0 1o10 1qL0 11D0 1nX0 11B0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e5\",\"America/Nassau|LMT EST EDT|59.u 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2kNuO.u 26XdO.u 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|24e4\",\"America/New_York|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 11B0 1qL0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6\",\"America/Nipigon|EST EDT EWT EPT|50 40 40 40|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 Rnb0 3je0 8x40 iv0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|16e2\",\"America/Nome|NST NWT NPT BST BDT YST AKST AKDT|b0 a0 a0 b0 a0 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cl0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|38e2\",\"America/Noronha|LMT -02 -01|29.E 20 10|0121212121212121212121212121212121212121|-2glxO.k HdKO.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|30e2\",\"America/North_Dakota/Beulah|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"America/North_Dakota/Center|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"America/North_Dakota/New_Salem|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"America/Ojinaga|LMT MST CST CDT MDT|6V.E 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e3\",\"America/Pangnirtung|-00 AST AWT APT ADDT ADT EDT EST CST CDT|0 40 30 30 20 30 40 50 60 50|012314151515151515151515151515151515167676767689767676767676767676767676767676767676767676767676767676767676767676767676767|-1XiM0 PnG0 8x50 iu0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1o00 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2\",\"America/Paramaribo|LMT PMT PMT -0330 -03|3E.E 3E.Q 3E.A 3u 30|01234|-2nDUj.k Wqo0.c qanX.I 1yVXN.o|24e4\",\"America/Phoenix|MST MDT MWT|70 60 60|01010202010|-261r0 1nX0 11B0 1nX0 SgN0 4Al1 Ap0 1db0 SWqX 1cL0|42e5\",\"America/Port-au-Prince|PPMT EST EDT|4N 50 40|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-28RHb 2FnMb 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14q0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 i6n0 1nX0 11B0 1nX0 d430 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5\",\"America/Rio_Branco|LMT -05 -04|4v.c 50 40|01212121212121212121212121212121|-2glvs.M HdLs.M 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0 d5X0|31e4\",\"America/Porto_Velho|LMT -04 -03|4f.A 40 30|012121212121212121212121212121|-2glvI.o HdKI.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|37e4\",\"America/Puerto_Rico|AST AWT APT|40 30 30|0120|-17lU0 7XT0 iu0|24e5\",\"America/Punta_Arenas|SMT -05 -04 -03|4G.K 50 40 30|0102021212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 blz0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0\",\"America/Rainy_River|CST CDT CWT CPT|60 50 50 50|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TQ0 1in0 Rnb0 3je0 8x30 iw0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|842\",\"America/Rankin_Inlet|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313131313131313131313131313131313131313131313131313131313131313131|-vDc0 keu0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e2\",\"America/Recife|LMT -03 -02|2j.A 30 20|0121212121212121212121212121212121212121|-2glxE.o HdLE.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|33e5\",\"America/Regina|LMT MST MDT MWT MPT CST|6W.A 70 60 60 60 60|012121212121212121212121341212121212121212121212121215|-2AD51.o uHe1.o 1in0 s2L0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 66N0 1cL0 1cN0 19X0 1fB0 1cL0 1fB0 1cL0 1cN0 1cL0 M30 8x20 ix0 1ip0 1cL0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 3NB0 1cL0 1cN0|19e4\",\"America/Resolute|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313431313131313131313131313131313131313131313131313131313131313131|-SnA0 GWS0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|229\",\"America/Santarem|LMT -04 -03|3C.M 40 30|0121212121212121212121212121212|-2glwl.c HdLl.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0|21e4\",\"America/Santiago|SMT -05 -04 -03|4G.K 50 40 30|010202121212121212321232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 9Bz0 jb0 1oN0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|62e5\",\"America/Santo_Domingo|SDMT EST EDT -0430 AST|4E 50 40 4u 40|01213131313131414|-1ttjk 1lJMk Mn0 6sp0 Lbu 1Cou yLu 1RAu wLu 1QMu xzu 1Q0u xXu 1PAu 13jB0 e00|29e5\",\"America/Sao_Paulo|LMT -03 -02|36.s 30 20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwR.w HdKR.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 pTd0 PX0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|20e6\",\"America/Scoresbysund|LMT -02 -01 +00|1r.Q 20 10 0|0121323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2a5Ww.8 2z5ew.8 1a00 1cK0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|452\",\"America/Sitka|PST PWT PPT PDT YST AKST AKDT|80 70 70 70 90 90 80|01203030303030303030303030303030345656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|90e2\",\"America/St_Johns|NST NDT NST NDT NWT NPT NDDT|3u.Q 2u.Q 3u 2u 2u 2u 1u|01010101010101010101010101010101010102323232323232324523232323232323232323232323232323232323232323232323232323232323232323232323232323232326232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28oit.8 14L0 1nB0 1in0 1gm0 Dz0 1JB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1fB0 19X0 1fB0 19X0 10O0 eKX.8 19X0 1iq0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4\",\"America/Swift_Current|LMT MST MDT MWT MPT CST|7b.k 70 60 60 60 60|012134121212121212121215|-2AD4M.E uHdM.E 1in0 UGp0 8x20 ix0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 isN0 1cL0 3Cp0 1cL0 1cN0 11z0 1qN0 WL0 pMp0|16e3\",\"America/Tegucigalpa|LMT CST CDT|5M.Q 60 50|01212121|-1WGGb.8 2ETcb.8 WL0 1qN0 WL0 GRd0 AL0|11e5\",\"America/Thule|LMT AST ADT|4z.8 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5To.Q 31NBo.Q 1cL0 1cN0 1cL0 1fB0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|656\",\"America/Thunder_Bay|CST EST EWT EPT EDT|60 50 40 40 40|0123141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-2q5S0 1iaN0 8x40 iv0 XNB0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4\",\"America/Vancouver|PST PDT PWT PPT|80 70 70 70|0102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TO0 1in0 UGp0 8x10 iy0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5\",\"America/Whitehorse|YST YDT YWT YPT YDDT PST PDT|90 80 80 80 70 80 70|0101023040565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 3NA0 vrd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e3\",\"America/Winnipeg|CST CDT CWT CPT|60 50 50 50|010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aIi0 WL0 3ND0 1in0 Jap0 Rb0 aCN0 8x30 iw0 1tB0 11z0 1ip0 11z0 1o10 11z0 1o10 11z0 1rd0 10L0 1op0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 1cL0 1cN0 11z0 6i10 WL0 6i10 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|66e4\",\"America/Yakutat|YST YWT YPT YDT AKST AKDT|90 80 80 80 90 80|01203030303030303030303030303030304545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-17T10 8x00 iz0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cn0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|642\",\"America/Yellowknife|-00 MST MWT MPT MDDT MDT|0 70 60 60 50 60|012314151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151|-1pdA0 hix0 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3\",\"Antarctica/Casey|-00 +08 +11|0 -80 -b0|01212121|-2q00 1DjS0 T90 40P0 KL0 blz0 3m10|10\",\"Antarctica/Davis|-00 +07 +05|0 -70 -50|01012121|-vyo0 iXt0 alj0 1D7v0 VB0 3Wn0 KN0|70\",\"Antarctica/DumontDUrville|-00 +10|0 -a0|0101|-U0o0 cfq0 bFm0|80\",\"Antarctica/Macquarie|AEST AEDT -00 +11|-a0 -b0 0 -b0|0102010101010101010101010101010101010101010101010101010101010101010101010101010101010101013|-29E80 19X0 4SL0 1ayy0 Lvs0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0|1\",\"Antarctica/Mawson|-00 +06 +05|0 -60 -50|012|-CEo0 2fyk0|60\",\"Pacific/Auckland|NZMT NZST NZST NZDT|-bu -cu -c0 -d0|01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1GCVu Lz0 1tB0 11zu 1o0u 11zu 1o0u 11zu 1o0u 14nu 1lcu 14nu 1lcu 1lbu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1qLu WMu 1qLu 11Au 1n1bu IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|14e5\",\"Antarctica/Palmer|-00 -03 -04 -02|0 30 40 20|0121212121213121212121212121212121212121212121212121212121212121212121212121212121|-cao0 nD0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 jsN0 14N0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|40\",\"Antarctica/Rothera|-00 -03|0 30|01|gOo0|130\",\"Antarctica/Syowa|-00 +03|0 -30|01|-vs00|20\",\"Antarctica/Troll|-00 +00 +02|0 0 -20|01212121212121212121212121212121212121212121212121212121212121212121|1puo0 hd0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|40\",\"Antarctica/Vostok|-00 +06|0 -60|01|-tjA0|25\",\"Europe/Oslo|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2awM0 Qm0 W6o0 5pf0 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 wJc0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1qM0 WM0 zpc0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e4\",\"Asia/Riyadh|LMT +03|-36.Q -30|01|-TvD6.Q|57e5\",\"Asia/Almaty|LMT +05 +06 +07|-57.M -50 -60 -70|012323232323232323232321232323232323232323232323232|-1Pc57.M eUo7.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|15e5\",\"Asia/Amman|LMT EET EEST|-2n.I -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1yW2n.I 1HiMn.I KL0 1oN0 11b0 1oN0 11b0 1pd0 1dz0 1cp0 11b0 1op0 11b0 fO10 1db0 1e10 1cL0 1cN0 1cL0 1cN0 1fz0 1pd0 10n0 1ld0 14n0 1hB0 15b0 1ip0 19X0 1cN0 1cL0 1cN0 17b0 1ld0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1So0 y00 1fc0 1dc0 1co0 1dc0 1cM0 1cM0 1cM0 1o00 11A0 1lc0 17c0 1cM0 1cM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|25e5\",\"Asia/Anadyr|LMT +12 +13 +14 +11|-bN.U -c0 -d0 -e0 -b0|01232121212121212121214121212121212121212121212121212121212141|-1PcbN.U eUnN.U 23CL0 1db0 2q10 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|13e3\",\"Asia/Aqtau|LMT +04 +05 +06|-3l.4 -40 -50 -60|012323232323232323232123232312121212121212121212|-1Pc3l.4 eUnl.4 24PX0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|15e4\",\"Asia/Aqtobe|LMT +04 +05 +06|-3M.E -40 -50 -60|0123232323232323232321232323232323232323232323232|-1Pc3M.E eUnM.E 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|27e4\",\"Asia/Ashgabat|LMT +04 +05 +06|-3R.w -40 -50 -60|0123232323232323232323212|-1Pc3R.w eUnR.w 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0|41e4\",\"Asia/Atyrau|LMT +03 +05 +06 +04|-3r.I -30 -50 -60 -40|01232323232323232323242323232323232324242424242|-1Pc3r.I eUor.I 24PW0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 2sp0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0\",\"Asia/Baghdad|BMT +03 +04|-2V.A -30 -40|012121212121212121212121212121212121212121212121212121|-26BeV.A 2ACnV.A 11b0 1cp0 1dz0 1dd0 1db0 1cN0 1cp0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1de0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0|66e5\",\"Asia/Qatar|LMT +04 +03|-3q.8 -40 -30|012|-21Jfq.8 27BXq.8|96e4\",\"Asia/Baku|LMT +03 +04 +05|-3j.o -30 -40 -50|01232323232323232323232123232323232323232323232323232323232323232|-1Pc3j.o 1jUoj.o WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 9Je0 1o00 11z0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e5\",\"Asia/Bangkok|BMT +07|-6G.4 -70|01|-218SG.4|15e6\",\"Asia/Barnaul|LMT +06 +07 +08|-5z -60 -70 -80|0123232323232323232323212323232321212121212121212121212121212121212|-21S5z pCnz 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 p90 LE0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0\",\"Asia/Beirut|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-21aq0 1on0 1410 1db0 19B0 1in0 1ip0 WL0 1lQp0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 q6N0 En0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1op0 11b0 dA10 17b0 1iN0 17b0 1iN0 17b0 1iN0 17b0 1vB0 SL0 1mp0 13z0 1iN0 17b0 1iN0 17b0 1jd0 12n0 1a10 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0|22e5\",\"Asia/Bishkek|LMT +05 +06 +07|-4W.o -50 -60 -70|012323232323232323232321212121212121212121212121212|-1Pc4W.o eUnW.o 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2e00 1tX0 17b0 1ip0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1cPu 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0|87e4\",\"Asia/Brunei|LMT +0730 +08|-7D.E -7u -80|012|-1KITD.E gDc9.E|42e4\",\"Asia/Kolkata|MMT IST +0630|-5l.a -5u -6u|012121|-2zOtl.a 1r2LP.a 1un0 HB0 7zX0|15e6\",\"Asia/Chita|LMT +08 +09 +10|-7x.Q -80 -90 -a0|012323232323232323232321232323232323232323232323232323232323232312|-21Q7x.Q pAnx.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3re0|33e4\",\"Asia/Choibalsan|LMT +07 +08 +10 +09|-7C -70 -80 -a0 -90|0123434343434343434343434343434343434343434343424242|-2APHC 2UkoC cKn0 1da0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 3Db0 h1f0 1cJ0 1cP0 1cJ0|38e3\",\"Asia/Shanghai|CST CDT|-80 -90|010101010101010101010101010|-1c2w0 Rz0 11d0 1wL0 A10 8HX0 1G10 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 aL0 1tU30 Rb0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0|23e6\",\"Asia/Colombo|MMT +0530 +06 +0630|-5j.w -5u -60 -6u|01231321|-2zOtj.w 1rFbN.w 1zzu 7Apu 23dz0 11zu n3cu|22e5\",\"Asia/Dhaka|HMT +0630 +0530 +06 +07|-5R.k -6u -5u -60 -70|0121343|-18LFR.k 1unn.k HB0 m6n0 2kxbu 1i00|16e6\",\"Asia/Damascus|LMT EET EEST|-2p.c -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-21Jep.c Hep.c 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1xRB0 11X0 1oN0 10L0 1pB0 11b0 1oN0 10L0 1mp0 13X0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 Nb0 1AN0 Nb0 bcp0 19X0 1gp0 19X0 3ld0 1xX0 Vd0 1Bz0 Sp0 1vX0 10p0 1dz0 1cN0 1cL0 1db0 1db0 1g10 1an0 1ap0 1db0 1fd0 1db0 1cN0 1db0 1dd0 1db0 1cp0 1dz0 1c10 1dX0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 19z0 1fB0 1qL0 11B0 1on0 Wp0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0|26e5\",\"Asia/Dili|LMT +08 +09|-8m.k -80 -90|01212|-2le8m.k 1dnXm.k 1nfA0 Xld0|19e4\",\"Asia/Dubai|LMT +04|-3F.c -40|01|-21JfF.c|39e5\",\"Asia/Dushanbe|LMT +05 +06 +07|-4z.c -50 -60 -70|012323232323232323232321|-1Pc4z.c eUnz.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2hB0|76e4\",\"Asia/Famagusta|LMT EET EEST +03|-2f.M -20 -30 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212312121212121212121212121212121212121212121|-1Vc2f.M 2a3cf.M 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\"Asia/Gaza|EET EEST IST IDT|-20 -30 -20 -30|0101010101010101010101010101010123232323232323232323232323232320101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 11z0 1o10 14o0 1lA1 SKX 1xd1 MKX 1AN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0|18e5\",\"Asia/Hebron|EET EEST IST IDT|-20 -30 -20 -30|010101010101010101010101010101012323232323232323232323232323232010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 12L0 1mN0 14o0 1lc0 Tb0 1xd1 MKX bB0 cn0 1cN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0|25e4\",\"Asia/Ho_Chi_Minh|LMT PLMT +07 +08 +09|-76.E -76.u -70 -80 -90|0123423232|-2yC76.E bK00.a 1h7b6.u 5lz0 18o0 3Oq0 k5b0 aW00 BAM0|90e5\",\"Asia/Hong_Kong|LMT HKT HKST HKT JST|-7A.G -80 -90 -8u -90|0123412121212121212121212121212121212121212121212121212121212121212121|-2CFH0 1taO0 Hc0 xUu 9tBu 11z0 1tDu Rc0 1wo0 11A0 1cM0 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1nX0 U10 1tz0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|73e5\",\"Asia/Hovd|LMT +06 +07 +08|-66.A -60 -70 -80|012323232323232323232323232323232323232323232323232|-2APG6.A 2Uko6.A cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|81e3\",\"Asia/Irkutsk|IMT +07 +08 +09|-6V.5 -70 -80 -90|01232323232323232323232123232323232323232323232323232323232323232|-21zGV.5 pjXV.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4\",\"Europe/Istanbul|IMT EET EEST +04 +03|-1U.U -20 -30 -40 -30|012121212121212121212121212121212121212121212121212121234343434342121212121212121212121212121212121212121212121212121212121212124|-2ogNU.U dzzU.U 11b0 8tB0 1on0 1410 1db0 19B0 1in0 3Rd0 Un0 1oN0 11b0 zSp0 CL0 mN0 1Vz0 1gN0 1pz0 5Rd0 1fz0 1yp0 ML0 1kp0 17b0 1ip0 17b0 1fB0 19X0 1jB0 18L0 1ip0 17z0 qdd0 xX0 3S10 Tz0 dA10 11z0 1o10 11z0 1qN0 11z0 1ze0 11B0 WM0 1qO0 WI0 1nX0 1rB0 10L0 11B0 1in0 17d0 1in0 2pX0 19E0 1fU0 16Q0 1iI0 16Q0 1iI0 1Vd0 pb0 3Kp0 14o0 1de0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1a00 1fA0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WO0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 Xc0 1qo0 WM0 1qM0 11A0 1o00 1200 1nA0 11A0 1tA0 U00 15w0|13e6\",\"Asia/Jakarta|BMT +0720 +0730 +09 +08 WIB|-77.c -7k -7u -90 -80 -70|01232425|-1Q0Tk luM0 mPzO 8vWu 6kpu 4PXu xhcu|31e6\",\"Asia/Jayapura|LMT +09 +0930 WIT|-9m.M -90 -9u -90|0123|-1uu9m.M sMMm.M L4nu|26e4\",\"Asia/Jerusalem|JMT IST IDT IDDT|-2k.E -20 -30 -40|012121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-26Bek.E SyMk.E 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 3LB0 Em0 or0 1cn0 1dB0 16n0 10O0 1ja0 1tC0 14o0 1cM0 1a00 11A0 1Na0 An0 1MP0 AJ0 1Kp0 LC0 1oo0 Wl0 EQN0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 1hB0 1dX0 1ep0 1aL0 1eN0 17X0 1nf0 11z0 1tB0 19W0 1e10 17b0 1ep0 1gL0 18N0 1fz0 1eN0 17b0 1gq0 1gn0 19d0 1dz0 1c10 17X0 1hB0 1gn0 19d0 1dz0 1c10 17X0 1kp0 1dz0 1c10 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0|81e4\",\"Asia/Kabul|+04 +0430|-40 -4u|01|-10Qs0|46e5\",\"Asia/Kamchatka|LMT +11 +12 +13|-ay.A -b0 -c0 -d0|012323232323232323232321232323232323232323232323232323232323212|-1SLKy.A ivXy.A 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|18e4\",\"Asia/Karachi|LMT +0530 +0630 +05 PKT PKST|-4s.c -5u -6u -50 -50 -60|012134545454|-2xoss.c 1qOKW.c 7zX0 eup0 LqMu 1fy00 1cL0 dK10 11b0 1610 1jX0|24e6\",\"Asia/Urumqi|LMT +06|-5O.k -60|01|-1GgtO.k|32e5\",\"Asia/Kathmandu|LMT +0530 +0545|-5F.g -5u -5J|012|-21JhF.g 2EGMb.g|12e5\",\"Asia/Khandyga|LMT +08 +09 +10 +11|-92.d -80 -90 -a0 -b0|0123232323232323232323212323232323232323232323232343434343434343432|-21Q92.d pAp2.d 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 qK0 yN0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|66e2\",\"Asia/Krasnoyarsk|LMT +06 +07 +08|-6b.q -60 -70 -80|01232323232323232323232123232323232323232323232323232323232323232|-21Hib.q prAb.q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|10e5\",\"Asia/Kuala_Lumpur|SMT +07 +0720 +0730 +09 +08|-6T.p -70 -7k -7u -90 -80|0123435|-2Bg6T.p 17anT.p l5XE 17bO 8Fyu 1so1u|71e5\",\"Asia/Kuching|LMT +0730 +08 +0820 +09|-7l.k -7u -80 -8k -90|0123232323232323242|-1KITl.k gDbP.k 6ynu AnE 1O0k AnE 1NAk AnE 1NAk AnE 1NAk AnE 1O0k AnE 1NAk AnE pAk 8Fz0|13e4\",\"Asia/Macau|LMT CST +09 +10 CDT|-7y.a -80 -90 -a0 -90|012323214141414141414141414141414141414141414141414141414141414141414141|-2CFHy.a 1uqKy.a PX0 1kn0 15B0 11b0 4Qq0 1oM0 11c0 1ko0 1u00 11A0 1cM0 11c0 1o00 11A0 1o00 11A0 1oo0 1400 1o00 11A0 1o00 U00 1tA0 U00 1wo0 Rc0 1wru U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cK0 1cO0 1cK0 1cO0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|57e4\",\"Asia/Magadan|LMT +10 +11 +12|-a3.c -a0 -b0 -c0|012323232323232323232321232323232323232323232323232323232323232312|-1Pca3.c eUo3.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Cq0|95e3\",\"Asia/Makassar|LMT MMT +08 +09 WITA|-7V.A -7V.A -80 -90 -80|01234|-21JjV.A vfc0 myLV.A 8ML0|15e5\",\"Asia/Manila|PST PDT JST|-80 -90 -90|010201010|-1kJI0 AL0 cK10 65X0 mXB0 vX0 VK10 1db0|24e6\",\"Asia/Nicosia|LMT EET EEST|-2d.s -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Vc2d.s 2a3cd.s 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|32e4\",\"Asia/Novokuznetsk|LMT +06 +07 +08|-5M.M -60 -70 -80|012323232323232323232321232323232323232323232323232323232323212|-1PctM.M eULM.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|55e4\",\"Asia/Novosibirsk|LMT +06 +07 +08|-5v.E -60 -70 -80|0123232323232323232323212323212121212121212121212121212121212121212|-21Qnv.E pAFv.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 ml0 Os0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 4eN0|15e5\",\"Asia/Omsk|LMT +05 +06 +07|-4R.u -50 -60 -70|01232323232323232323232123232323232323232323232323232323232323232|-224sR.u pMLR.u 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|12e5\",\"Asia/Oral|LMT +03 +05 +06 +04|-3p.o -30 -50 -60 -40|01232323232323232424242424242424242424242424242|-1Pc3p.o eUop.o 23CK0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 1cM0 IM0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|27e4\",\"Asia/Pontianak|LMT PMT +0730 +09 +08 WITA WIB|-7h.k -7h.k -7u -90 -80 -80 -70|012324256|-2ua7h.k XE00 munL.k 8Rau 6kpu 4PXu xhcu Wqnu|23e4\",\"Asia/Pyongyang|LMT KST JST KST|-8n -8u -90 -90|012313|-2um8n 97XR 1lTzu 2Onc0 6BA0|29e5\",\"Asia/Qostanay|LMT +04 +05 +06|-4e.s -40 -50 -60|012323232323232323232123232323232323232323232323|-1Pc4e.s eUoe.s 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0\",\"Asia/Qyzylorda|LMT +04 +05 +06|-4l.Q -40 -50 -60|01232323232323232323232323232323232323232323232|-1Pc4l.Q eUol.Q 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 3ao0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 zQl0|73e4\",\"Asia/Rangoon|RMT +0630 +09|-6o.L -6u -90|0121|-21Jio.L SmnS.L 7j9u|48e5\",\"Asia/Sakhalin|LMT +09 +11 +12 +10|-9u.M -90 -b0 -c0 -a0|01232323232323232323232423232323232424242424242424242424242424242|-2AGVu.M 1BoMu.M 1qFa0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 2pB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|58e4\",\"Asia/Samarkand|LMT +04 +05 +06|-4r.R -40 -50 -60|01232323232323232323232|-1Pc4r.R eUor.R 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0|36e4\",\"Asia/Seoul|LMT KST JST KST KDT KDT|-8r.Q -8u -90 -90 -9u -a0|0123141414141414135353|-2um8r.Q 97XV.Q 1m1zu kKo0 2I0u OL0 1FB0 Rb0 1qN0 TX0 1tB0 TX0 1tB0 TX0 1tB0 TX0 2ap0 12FBu 11A0 1o00 11A0|23e6\",\"Asia/Srednekolymsk|LMT +10 +11 +12|-ae.Q -a0 -b0 -c0|01232323232323232323232123232323232323232323232323232323232323232|-1Pcae.Q eUoe.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|35e2\",\"Asia/Taipei|CST JST CDT|-80 -90 -90|01020202020202020202020202020202020202020|-1iw80 joM0 1yo0 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 10N0 1BX0 10p0 1pz0 10p0 1pz0 10p0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1BB0 ML0 1Bd0 ML0 uq10 1db0 1cN0 1db0 97B0 AL0|74e5\",\"Asia/Tashkent|LMT +05 +06 +07|-4B.b -50 -60 -70|012323232323232323232321|-1Pc4B.b eUnB.b 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0|23e5\",\"Asia/Tbilisi|TBMT +03 +04 +05|-2X.b -30 -40 -50|0123232323232323232323212121232323232323232323212|-1Pc2X.b 1jUnX.b WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cK0 1cL0 1cN0 1cL0 1cN0 2pz0 1cL0 1fB0 3Nz0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 An0 Os0 WM0|11e5\",\"Asia/Tehran|LMT TMT +0330 +04 +05 +0430|-3p.I -3p.I -3u -40 -50 -4u|01234325252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2btDp.I 1d3c0 1huLT.I TXu 1pz0 sN0 vAu 1cL0 1dB0 1en0 pNB0 UL0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 64p0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0|14e6\",\"Asia/Thimphu|LMT +0530 +06|-5W.A -5u -60|012|-Su5W.A 1BGMs.A|79e3\",\"Asia/Tokyo|JST JDT|-90 -a0|010101010|-QJJ0 Rb0 1ld0 14n0 1zd0 On0 1zd0 On0|38e6\",\"Asia/Tomsk|LMT +06 +07 +08|-5D.P -60 -70 -80|0123232323232323232323212323232323232323232323212121212121212121212|-21NhD.P pxzD.P 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 co0 1bB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Qp0|10e5\",\"Asia/Ulaanbaatar|LMT +07 +08 +09|-77.w -70 -80 -90|012323232323232323232323232323232323232323232323232|-2APH7.w 2Uko7.w cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|12e5\",\"Asia/Ust-Nera|LMT +08 +09 +12 +11 +10|-9w.S -80 -90 -c0 -b0 -a0|012343434343434343434345434343434343434343434343434343434343434345|-21Q9w.S pApw.S 23CL0 1d90 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|65e2\",\"Asia/Vladivostok|LMT +09 +10 +11|-8L.v -90 -a0 -b0|01232323232323232323232123232323232323232323232323232323232323232|-1SJIL.v itXL.v 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4\",\"Asia/Yakutsk|LMT +08 +09 +10|-8C.W -80 -90 -a0|01232323232323232323232123232323232323232323232323232323232323232|-21Q8C.W pAoC.W 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|28e4\",\"Asia/Yekaterinburg|LMT PMT +04 +05 +06|-42.x -3J.5 -40 -50 -60|012343434343434343434343234343434343434343434343434343434343434343|-2ag42.x 7mQh.s qBvJ.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|14e5\",\"Asia/Yerevan|LMT +03 +04 +05|-2W -30 -40 -50|0123232323232323232323212121212323232323232323232323232323232|-1Pc2W 1jUnW WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 4RX0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|13e5\",\"Atlantic/Azores|HMT -02 -01 +00 WET|1S.w 20 10 0 0|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121232323232323232323232323232323234323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2ldW0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|25e4\",\"Atlantic/Bermuda|LMT AST ADT|4j.i 40 30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1BnRE.G 1LTbE.G 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e3\",\"Atlantic/Canary|LMT -01 WET WEST|11.A 10 0 -10|01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UtaW.o XPAW.o 1lAK0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4\",\"Atlantic/Cape_Verde|LMT -02 -01|1y.4 20 10|01212|-2ldW0 1eEo0 7zX0 1djf0|50e4\",\"Atlantic/Faroe|LMT WET WEST|r.4 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2uSnw.U 2Wgow.U 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|49e3\",\"Atlantic/Madeira|FMT -01 +00 +01 WET WEST|17.A 10 0 -10 0 -10|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2ldX0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e4\",\"Atlantic/Reykjavik|LMT -01 +00 GMT|1s 10 0 0|012121212121212121212121212121212121212121212121212121212121212121213|-2uWmw mfaw 1Bd0 ML0 1LB0 Cn0 1LB0 3fX0 C10 HrX0 1cO0 LB0 1EL0 LA0 1C00 Oo0 1wo0 Rc0 1wo0 Rc0 1wo0 Rc0 1zc0 Oo0 1zc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0|12e4\",\"Atlantic/South_Georgia|-02|20|0||30\",\"Atlantic/Stanley|SMT -04 -03 -02|3P.o 40 30 20|012121212121212323212121212121212121212121212121212121212121212121212|-2kJw8.A 12bA8.A 19X0 1fB0 19X0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 Cn0 1Cc10 WL0 1qL0 U10 1tz0 2mN0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 U10 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qN0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 U10 1tz0 U10 1tz0 U10|21e2\",\"Australia/Sydney|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|40e5\",\"Australia/Adelaide|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 WM0 1qM0 Rc0 1zc0 U00 1tA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|11e5\",\"Australia/Brisbane|AEST AEDT|-a0 -b0|01010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0|20e5\",\"Australia/Broken_Hill|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|18e3\",\"Australia/Currie|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|746\",\"Australia/Darwin|ACST ACDT|-9u -au|010101010|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0|12e4\",\"Australia/Eucla|+0845 +0945|-8J -9J|0101010101010101010|-293kI xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|368\",\"Australia/Hobart|AEST AEDT|-a0 -b0|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 VfB0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|21e4\",\"Australia/Lord_Howe|AEST +1030 +1130 +11|-a0 -au -bu -b0|0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313|raC0 1zdu Rb0 1zd0 On0 1zd0 On0 1zd0 On0 1zd0 TXu 1qMu WLu 1tAu WLu 1tAu TXu 1tAu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 11Au 1nXu 1qMu 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu 11zu 1o0u WLu 1qMu 14nu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu|347\",\"Australia/Lindeman|AEST AEDT|-a0 -b0|010101010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0|10\",\"Australia/Melbourne|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1qM0 11A0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|39e5\",\"Australia/Perth|AWST AWDT|-80 -90|0101010101010101010|-293jX xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|18e5\",\"CET|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\"Pacific/Easter|EMT -07 -06 -05|7h.s 70 60 50|012121212121212121212121212123232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1uSgG.w 1s4IG.w WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 2pA0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|30e2\",\"CST6CDT|CST CDT CWT CPT|60 50 50 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"EET|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\"Europe/Dublin|DMT IST GMT BST IST|p.l -y.D 0 -10 -10|01232323232324242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242|-2ax9y.D Rc0 1fzy.D 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 g600 14o0 1wo0 17c0 1io0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5\",\"EST|EST|50|0|\",\"EST5EDT|EST EDT EWT EPT|50 40 40 40|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 SgN0 8x40 iv0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"Etc/GMT-0|GMT|0|0|\",\"Etc/GMT-1|+01|-10|0|\",\"Pacific/Port_Moresby|+10|-a0|0||25e4\",\"Etc/GMT-11|+11|-b0|0|\",\"Pacific/Tarawa|+12|-c0|0||29e3\",\"Etc/GMT-13|+13|-d0|0|\",\"Etc/GMT-14|+14|-e0|0|\",\"Etc/GMT-2|+02|-20|0|\",\"Etc/GMT-3|+03|-30|0|\",\"Etc/GMT-4|+04|-40|0|\",\"Etc/GMT-5|+05|-50|0|\",\"Etc/GMT-6|+06|-60|0|\",\"Indian/Christmas|+07|-70|0||21e2\",\"Etc/GMT-8|+08|-80|0|\",\"Pacific/Palau|+09|-90|0||21e3\",\"Etc/GMT+1|-01|10|0|\",\"Etc/GMT+10|-10|a0|0|\",\"Etc/GMT+11|-11|b0|0|\",\"Etc/GMT+12|-12|c0|0|\",\"Etc/GMT+3|-03|30|0|\",\"Etc/GMT+4|-04|40|0|\",\"Etc/GMT+5|-05|50|0|\",\"Etc/GMT+6|-06|60|0|\",\"Etc/GMT+7|-07|70|0|\",\"Etc/GMT+8|-08|80|0|\",\"Etc/GMT+9|-09|90|0|\",\"Etc/UTC|UTC|0|0|\",\"Europe/Amsterdam|AMT NST +0120 +0020 CEST CET|-j.w -1j.w -1k -k -20 -10|010101010101010101010101010101010101010101012323234545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545|-2aFcj.w 11b0 1iP0 11A0 1io0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1co0 1io0 1yo0 Pc0 1a00 1fA0 1Bc0 Mo0 1tc0 Uo0 1tA0 U00 1uo0 W00 1s00 VA0 1so0 Vc0 1sM0 UM0 1wo0 Rc0 1u00 Wo0 1rA0 W00 1s00 VA0 1sM0 UM0 1w00 fV0 BCX.w 1tA0 U00 1u00 Wo0 1sm0 601k WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|16e5\",\"Europe/Andorra|WET CET CEST|0 -10 -20|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-UBA0 1xIN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|79e3\",\"Europe/Astrakhan|LMT +03 +04 +05|-3c.c -30 -40 -50|012323232323232323212121212121212121212121212121212121212121212|-1Pcrc.c eUMc.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|10e5\",\"Europe/Athens|AMT EET EEST CEST CET|-1y.Q -20 -30 -20 -10|012123434121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a61x.Q CNbx.Q mn0 kU10 9b0 3Es0 Xa0 1fb0 1dd0 k3X0 Nz0 SCp0 1vc0 SO0 1cM0 1a00 1ao0 1fc0 1a10 1fG0 1cg0 1dX0 1bX0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|35e5\",\"Europe/London|GMT BST BDST|0 -10 -20|0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|10e6\",\"Europe/Belgrade|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19RC0 3IP0 WM0 1fA0 1cM0 1cM0 1rc0 Qo0 1vmo0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5\",\"Europe/Berlin|CET CEST CEMT|-10 -20 -30|01010101010101210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 kL0 Nc0 m10 WM0 1ao0 1cp0 dX0 jz0 Dd0 1io0 17c0 1fA0 1a00 1ehA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e5\",\"Europe/Prague|CET CEST GMT|-10 -20 0|01010101010101010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 1qM0 11c0 mp0 xA0 mn0 17c0 1io0 17c0 1fc0 1ao0 1bNc0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|13e5\",\"Europe/Brussels|WET CET CEST WEST|0 -10 -20 -10|0121212103030303030303030303030303030303030303030303212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ehc0 3zX0 11c0 1iO0 11A0 1o00 11A0 my0 Ic0 1qM0 Rc0 1EM0 UM0 1u00 10o0 1io0 1io0 17c0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a30 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 y00 5Wn0 WM0 1fA0 1cM0 16M0 1iM0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|21e5\",\"Europe/Bucharest|BMT EET EEST|-1I.o -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1xApI.o 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Axc0 On0 1fA0 1a10 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|19e5\",\"Europe/Budapest|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1ip0 17b0 1op0 1tb0 Q2m0 3Ne0 WM0 1fA0 1cM0 1cM0 1oJ0 1dc0 1030 1fA0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1iM0 1fA0 8Ha0 Rb0 1wN0 Rb0 1BB0 Lz0 1C20 LB0 SNX0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5\",\"Europe/Zurich|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19Lc0 11A0 1o00 11A0 1xG10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e4\",\"Europe/Chisinau|CMT BMT EET EEST CEST CET MSK MSD|-1T -1I.o -20 -30 -20 -10 -30 -40|012323232323232323234545467676767676767676767323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-26jdT wGMa.A 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 27A0 2en0 39g0 WM0 1fA0 1cM0 V90 1t7z0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 gL0 WO0 1cM0 1cM0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11D0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|67e4\",\"Europe/Copenhagen|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 Tz0 VuO0 60q0 WM0 1fA0 1cM0 1cM0 1cM0 S00 1HA0 Nc0 1C00 Dc0 1Nc0 Ao0 1h5A0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5\",\"Europe/Gibraltar|GMT BST BDST CET CEST|0 -10 -20 -10 -20|010101010101010101010101010101010101010101010101012121212121010121010101010101010101034343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 10Jz0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|30e3\",\"Europe/Helsinki|HMT EET EEST|-1D.N -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1WuND.N OULD.N 1dA0 1xGq0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5\",\"Europe/Kaliningrad|CET CEST CET CEST MSK MSD EEST EET +03|-10 -20 -20 -30 -30 -40 -30 -20 -30|0101010101010232454545454545454546767676767676767676767676767676767676767676787|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 Am0 Lb0 1en0 op0 1pNz0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|44e4\",\"Europe/Kiev|KMT EET MSK CEST CET MSD EEST|-22.4 -20 -30 -20 -10 -40 -30|0123434252525252525252525256161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc22.4 eUo2.4 rnz0 2Hg0 WM0 1fA0 da0 1v4m0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 Db0 3220 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|34e5\",\"Europe/Kirov|LMT +03 +04 +05|-3i.M -30 -40 -50|01232323232323232321212121212121212121212121212121212121212121|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|48e4\",\"Europe/Lisbon|LMT WET WEST WEMT CET CEST|A.J 0 -10 -20 -10 -20|012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121214121212121212121212121212121212124545454212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2le00 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 pvy0 1cM0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e5\",\"Europe/Luxembourg|LMT CET CEST WET WEST WEST WET|-o.A -10 -20 0 -10 -20 -10|0121212134343434343434343434343434343434343434343434565651212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2DG0o.A t6mo.A TB0 1nX0 Up0 1o20 11A0 rW0 CM0 1qP0 R90 1EO0 UK0 1u20 10m0 1ip0 1in0 17e0 19W0 1fB0 1db0 1cp0 1in0 17d0 1fz0 1a10 1in0 1a10 1in0 17f0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 vA0 60L0 WM0 1fA0 1cM0 17c0 1io0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4\",\"Europe/Madrid|WET WEST WEMT CET CEST|0 -10 -20 -10 -20|010101010101010101210343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-25Td0 19B0 1cL0 1dd0 b1z0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1in0 17d0 iIn0 Hd0 1cL0 bb0 1200 2s20 14n0 5aL0 Mp0 1vz0 17d0 1in0 17d0 1in0 17d0 1in0 17d0 6hX0 11B0 XHX0 1a10 1fz0 1a10 19X0 1cN0 1fz0 1a10 1fC0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e5\",\"Europe/Malta|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1co0 17c0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1co0 1cM0 1lA0 Xc0 1qq0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1iN0 19z0 1fB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4\",\"Europe/Minsk|MMT EET MSK CEST CET MSD EEST +03|-1O -20 -30 -20 -10 -40 -30 -30|01234343252525252525252525261616161616161616161616161616161616161617|-1Pc1O eUnO qNX0 3gQ0 WM0 1fA0 1cM0 Al0 1tsn0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fc0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0|19e5\",\"Europe/Monaco|PMT WET WEST WEMT CET CEST|-9.l 0 -10 -20 -10 -20|01212121212121212121212121212121212121212121212121232323232345454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 2RV0 11z0 11B0 1ze0 WM0 1fA0 1cM0 1fa0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e3\",\"Europe/Moscow|MMT MMT MST MDST MSD MSK +05 EET EEST MSK|-2u.h -2v.j -3v.j -4v.j -40 -30 -50 -20 -30 -40|012132345464575454545454545454545458754545454545454545454545454545454545454595|-2ag2u.h 2pyW.W 1bA0 11X0 GN0 1Hb0 c4v.j ik0 3DA0 dz0 15A0 c10 2q10 iM10 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|16e6\",\"Europe/Paris|PMT WET WEST CEST CET WEMT|-9.l 0 -10 -20 -10 -20|0121212121212121212121212121212121212121212121212123434352543434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-2nco8.l cNb8.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 Ik0 5M30 WM0 1fA0 1cM0 Vx0 hB0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e6\",\"Europe/Riga|RMT LST EET MSK CEST CET MSD EEST|-1A.y -2A.y -20 -30 -20 -10 -40 -30|010102345454536363636363636363727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272|-25TzA.y 11A0 1iM0 ko0 gWm0 yDXA.y 2bX0 3fE0 WM0 1fA0 1cM0 1cM0 4m0 1sLy0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1o00 11A0 1o00 11A0 1qM0 3oo0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|64e4\",\"Europe/Rome|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1cM0 16M0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1C00 LA0 1zc0 Oo0 1C00 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1zc0 Oo0 1fC0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|39e5\",\"Europe/Samara|LMT +03 +04 +05|-3k.k -30 -40 -50|0123232323232323232121232323232323232323232323232323232323212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2y10 14m0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|12e5\",\"Europe/Saratov|LMT +03 +04 +05|-34.i -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 5810\",\"Europe/Simferopol|SMT EET MSK CEST CET MSD EEST MSK|-2g -20 -30 -20 -10 -40 -30 -40|012343432525252525252525252161616525252616161616161616161616161616161616172|-1Pc2g eUog rEn0 2qs0 WM0 1fA0 1cM0 3V0 1u0L0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 4eL0 1cL0 1cN0 1cL0 1cN0 dX0 WL0 1cN0 1cL0 1fB0 1o30 11B0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11z0 1nW0|33e4\",\"Europe/Sofia|EET CET CEST EEST|-20 -10 -20 -30|01212103030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030|-168L0 WM0 1fA0 1cM0 1cM0 1cN0 1mKH0 1dd0 1fb0 1ap0 1fb0 1a20 1fy0 1a30 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5\",\"Europe/Stockholm|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 TB0 2yDe0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|15e5\",\"Europe/Tallinn|TMT CET CEST EET MSK MSD EEST|-1D -10 -20 -20 -30 -40 -30|012103421212454545454545454546363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363|-26oND teD 11A0 1Ta0 4rXl KSLD 2FX0 2Jg0 WM0 1fA0 1cM0 18J0 1sTX0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o10 11A0 1qM0 5QM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e4\",\"Europe/Tirane|LMT CET CEST|-1j.k -10 -20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glBj.k 14pcj.k 5LC0 WM0 4M0 1fCK0 10n0 1op0 11z0 1pd0 11z0 1qN0 WL0 1qp0 Xb0 1qp0 Xb0 1qp0 11z0 1lB0 11z0 1qN0 11z0 1iN0 16n0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4\",\"Europe/Ulyanovsk|LMT +03 +04 +05 +02|-3d.A -30 -40 -50 -20|01232323232323232321214121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|13e5\",\"Europe/Uzhgorod|CET CEST MSK MSD EET EEST|-10 -20 -30 -40 -20 -30|010101023232323232323232320454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-1cqL0 6i00 WM0 1fA0 1cM0 1ml0 1Cp0 1r3W0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 1Nf0 2pw0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e4\",\"Europe/Vienna|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 3KM0 14o0 LA00 6i00 WM0 1fA0 1cM0 1cM0 1cM0 400 2qM0 1a00 1cM0 1cM0 1io0 17c0 1gHa0 19X0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|18e5\",\"Europe/Vilnius|WMT KMT CET EET MSK CEST MSD EEST|-1o -1z.A -10 -20 -30 -20 -40 -30|012324525254646464646464646473737373737373737352537373737373737373737373737373737373737373737373737373737373737373737373|-293do 6ILM.o 1Ooz.A zz0 Mfd0 29W0 3is0 WM0 1fA0 1cM0 LV0 1tgL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11B0 1o00 11A0 1qM0 8io0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4\",\"Europe/Volgograd|LMT +03 +04 +05|-2V.E -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-21IqV.E psLV.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 9Jd0|10e5\",\"Europe/Warsaw|WMT CET CEST EET EEST|-1o -10 -20 -20 -30|012121234312121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ctdo 1LXo 11d0 1iO0 11A0 1o00 11A0 1on0 11A0 6zy0 HWP0 5IM0 WM0 1fA0 1cM0 1dz0 1mL0 1en0 15B0 1aq0 1nA0 11A0 1io0 17c0 1fA0 1a00 iDX0 LA0 1cM0 1cM0 1C00 Oo0 1cM0 1cM0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1C00 LA0 uso0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5\",\"Europe/Zaporozhye|+0220 EET MSK CEST CET MSD EEST|-2k -20 -30 -20 -10 -40 -30|01234342525252525252525252526161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc2k eUok rdb0 2RE0 WM0 1fA0 8m0 1v9a0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cK0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|77e4\",\"HST|HST|a0|0|\",\"Indian/Chagos|LMT +05 +06|-4N.E -50 -60|012|-2xosN.E 3AGLN.E|30e2\",\"Indian/Cocos|+0630|-6u|0||596\",\"Indian/Kerguelen|-00 +05|0 -50|01|-MG00|130\",\"Indian/Mahe|LMT +04|-3F.M -40|01|-2yO3F.M|79e3\",\"Indian/Maldives|MMT +05|-4S -50|01|-olgS|35e4\",\"Indian/Mauritius|LMT +04 +05|-3O -40 -50|012121|-2xorO 34unO 14L0 12kr0 11z0|15e4\",\"Indian/Reunion|LMT +04|-3F.Q -40|01|-2mDDF.Q|84e4\",\"Pacific/Kwajalein|+11 +10 +09 -12 +12|-b0 -a0 -90 c0 -c0|012034|-1kln0 akp0 6Up0 12ry0 Wan0|14e3\",\"MET|MET MEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\"MST|MST|70|0|\",\"MST7MDT|MST MDT MWT MPT|70 60 60 60|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"Pacific/Chatham|+1215 +1245 +1345|-cf -cJ -dJ|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-WqAf 1adef IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|600\",\"Pacific/Apia|LMT -1130 -11 -10 +14 +13|bq.U bu b0 a0 -e0 -d0|01232345454545454545454545454545454545454545454545454545454|-2nDMx.4 1yW03.4 2rRbu 1ff0 1a00 CI0 AQ0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|37e3\",\"Pacific/Bougainville|+10 +09 +11|-a0 -90 -b0|0102|-16Wy0 7CN0 2MQp0|18e4\",\"Pacific/Chuuk|+10 +09|-a0 -90|01010|-2ewy0 axB0 RVX0 axd0|49e3\",\"Pacific/Efate|LMT +11 +12|-bd.g -b0 -c0|0121212121212121212121|-2l9nd.g 2Szcd.g 1cL0 1oN0 10L0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 Lz0 1Nd0 An0|66e3\",\"Pacific/Enderbury|-12 -11 +13|c0 b0 -d0|012|nIc0 B7X0|1\",\"Pacific/Fakaofo|-11 +13|b0 -d0|01|1Gfn0|483\",\"Pacific/Fiji|LMT +12 +13|-bT.I -c0 -d0|0121212121212121212121212121212121212121212121212121212121212121|-2bUzT.I 3m8NT.I LA0 1EM0 IM0 nJc0 LA0 1o00 Rc0 1wo0 Ao0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0|88e4\",\"Pacific/Galapagos|LMT -05 -06|5W.o 50 60|01212|-1yVS1.A 2dTz1.A gNd0 rz0|25e3\",\"Pacific/Gambier|LMT -09|8X.M 90|01|-2jof0.c|125\",\"Pacific/Guadalcanal|LMT +11|-aD.M -b0|01|-2joyD.M|11e4\",\"Pacific/Guam|GST +09 GDT ChST|-a0 -90 -b0 -a0|01020202020202020203|-18jK0 6pB0 AhB0 3QL0 g2p0 3p91 WOX rX0 1zd0 Rb0 1wp0 Rb0 5xd0 rX0 5sN0 zb1 1C0X On0 ULb0|17e4\",\"Pacific/Honolulu|HST HDT HWT HPT HST|au 9u 9u 9u a0|0102304|-1thLu 8x0 lef0 8wWu iAu 46p0|37e4\",\"Pacific/Kiritimati|-1040 -10 +14|aE a0 -e0|012|nIaE B7Xk|51e2\",\"Pacific/Kosrae|+11 +09 +10 +12|-b0 -90 -a0 -c0|01021030|-2ewz0 axC0 HBy0 akp0 axd0 WOK0 1bdz0|66e2\",\"Pacific/Majuro|+11 +09 +10 +12|-b0 -90 -a0 -c0|0102103|-2ewz0 axC0 HBy0 akp0 6RB0 12um0|28e3\",\"Pacific/Marquesas|LMT -0930|9i 9u|01|-2joeG|86e2\",\"Pacific/Pago_Pago|LMT SST|bm.M b0|01|-2nDMB.c|37e2\",\"Pacific/Nauru|LMT +1130 +09 +12|-b7.E -bu -90 -c0|01213|-1Xdn7.E QCnB.E 7mqu 1lnbu|10e3\",\"Pacific/Niue|-1120 -1130 -11|bk bu b0|012|-KfME 17y0a|12e2\",\"Pacific/Norfolk|+1112 +1130 +1230 +11|-bc -bu -cu -b0|01213|-Kgbc W01G On0 1COp0|25e4\",\"Pacific/Noumea|LMT +11 +12|-b5.M -b0 -c0|01212121|-2l9n5.M 2EqM5.M xX0 1PB0 yn0 HeP0 Ao0|98e3\",\"Pacific/Pitcairn|-0830 -08|8u 80|01|18Vku|56\",\"Pacific/Pohnpei|+11 +09 +10|-b0 -90 -a0|010210|-2ewz0 axC0 HBy0 akp0 axd0|34e3\",\"Pacific/Rarotonga|-1030 -0930 -10|au 9u a0|012121212121212121212121212|lyWu IL0 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu|13e3\",\"Pacific/Tahiti|LMT -10|9W.g a0|01|-2joe1.I|18e4\",\"Pacific/Tongatapu|+1220 +13 +14|-ck -d0 -e0|0121212121|-1aB0k 2n5dk 15A0 1wo0 xz0 1Q10 xz0 zWN0 s00|75e3\",\"PST8PDT|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\"WET|WET WEST|0 -10|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\"],links:[\"Africa/Abidjan|Africa/Bamako\",\"Africa/Abidjan|Africa/Banjul\",\"Africa/Abidjan|Africa/Conakry\",\"Africa/Abidjan|Africa/Dakar\",\"Africa/Abidjan|Africa/Freetown\",\"Africa/Abidjan|Africa/Lome\",\"Africa/Abidjan|Africa/Nouakchott\",\"Africa/Abidjan|Africa/Ouagadougou\",\"Africa/Abidjan|Africa/Timbuktu\",\"Africa/Abidjan|Atlantic/St_Helena\",\"Africa/Cairo|Egypt\",\"Africa/Johannesburg|Africa/Maseru\",\"Africa/Johannesburg|Africa/Mbabane\",\"Africa/Lagos|Africa/Bangui\",\"Africa/Lagos|Africa/Brazzaville\",\"Africa/Lagos|Africa/Douala\",\"Africa/Lagos|Africa/Kinshasa\",\"Africa/Lagos|Africa/Libreville\",\"Africa/Lagos|Africa/Luanda\",\"Africa/Lagos|Africa/Malabo\",\"Africa/Lagos|Africa/Niamey\",\"Africa/Lagos|Africa/Porto-Novo\",\"Africa/Maputo|Africa/Blantyre\",\"Africa/Maputo|Africa/Bujumbura\",\"Africa/Maputo|Africa/Gaborone\",\"Africa/Maputo|Africa/Harare\",\"Africa/Maputo|Africa/Kigali\",\"Africa/Maputo|Africa/Lubumbashi\",\"Africa/Maputo|Africa/Lusaka\",\"Africa/Nairobi|Africa/Addis_Ababa\",\"Africa/Nairobi|Africa/Asmara\",\"Africa/Nairobi|Africa/Asmera\",\"Africa/Nairobi|Africa/Dar_es_Salaam\",\"Africa/Nairobi|Africa/Djibouti\",\"Africa/Nairobi|Africa/Kampala\",\"Africa/Nairobi|Africa/Mogadishu\",\"Africa/Nairobi|Indian/Antananarivo\",\"Africa/Nairobi|Indian/Comoro\",\"Africa/Nairobi|Indian/Mayotte\",\"Africa/Tripoli|Libya\",\"America/Adak|America/Atka\",\"America/Adak|US/Aleutian\",\"America/Anchorage|US/Alaska\",\"America/Argentina/Buenos_Aires|America/Buenos_Aires\",\"America/Argentina/Catamarca|America/Argentina/ComodRivadavia\",\"America/Argentina/Catamarca|America/Catamarca\",\"America/Argentina/Cordoba|America/Cordoba\",\"America/Argentina/Cordoba|America/Rosario\",\"America/Argentina/Jujuy|America/Jujuy\",\"America/Argentina/Mendoza|America/Mendoza\",\"America/Atikokan|America/Coral_Harbour\",\"America/Chicago|US/Central\",\"America/Curacao|America/Aruba\",\"America/Curacao|America/Kralendijk\",\"America/Curacao|America/Lower_Princes\",\"America/Denver|America/Shiprock\",\"America/Denver|Navajo\",\"America/Denver|US/Mountain\",\"America/Detroit|US/Michigan\",\"America/Edmonton|Canada/Mountain\",\"America/Fort_Wayne|America/Indiana/Indianapolis\",\"America/Fort_Wayne|America/Indianapolis\",\"America/Fort_Wayne|US/East-Indiana\",\"America/Halifax|Canada/Atlantic\",\"America/Havana|Cuba\",\"America/Indiana/Knox|America/Knox_IN\",\"America/Indiana/Knox|US/Indiana-Starke\",\"America/Jamaica|Jamaica\",\"America/Kentucky/Louisville|America/Louisville\",\"America/Los_Angeles|US/Pacific\",\"America/Los_Angeles|US/Pacific-New\",\"America/Manaus|Brazil/West\",\"America/Mazatlan|Mexico/BajaSur\",\"America/Mexico_City|Mexico/General\",\"America/New_York|US/Eastern\",\"America/Noronha|Brazil/DeNoronha\",\"America/Panama|America/Cayman\",\"America/Phoenix|US/Arizona\",\"America/Port_of_Spain|America/Anguilla\",\"America/Port_of_Spain|America/Antigua\",\"America/Port_of_Spain|America/Dominica\",\"America/Port_of_Spain|America/Grenada\",\"America/Port_of_Spain|America/Guadeloupe\",\"America/Port_of_Spain|America/Marigot\",\"America/Port_of_Spain|America/Montserrat\",\"America/Port_of_Spain|America/St_Barthelemy\",\"America/Port_of_Spain|America/St_Kitts\",\"America/Port_of_Spain|America/St_Lucia\",\"America/Port_of_Spain|America/St_Thomas\",\"America/Port_of_Spain|America/St_Vincent\",\"America/Port_of_Spain|America/Tortola\",\"America/Port_of_Spain|America/Virgin\",\"America/Regina|Canada/Saskatchewan\",\"America/Rio_Branco|America/Porto_Acre\",\"America/Rio_Branco|Brazil/Acre\",\"America/Santiago|Chile/Continental\",\"America/Sao_Paulo|Brazil/East\",\"America/St_Johns|Canada/Newfoundland\",\"America/Tijuana|America/Ensenada\",\"America/Tijuana|America/Santa_Isabel\",\"America/Tijuana|Mexico/BajaNorte\",\"America/Toronto|America/Montreal\",\"America/Toronto|Canada/Eastern\",\"America/Vancouver|Canada/Pacific\",\"America/Whitehorse|Canada/Yukon\",\"America/Winnipeg|Canada/Central\",\"Asia/Ashgabat|Asia/Ashkhabad\",\"Asia/Bangkok|Asia/Phnom_Penh\",\"Asia/Bangkok|Asia/Vientiane\",\"Asia/Dhaka|Asia/Dacca\",\"Asia/Dubai|Asia/Muscat\",\"Asia/Ho_Chi_Minh|Asia/Saigon\",\"Asia/Hong_Kong|Hongkong\",\"Asia/Jerusalem|Asia/Tel_Aviv\",\"Asia/Jerusalem|Israel\",\"Asia/Kathmandu|Asia/Katmandu\",\"Asia/Kolkata|Asia/Calcutta\",\"Asia/Kuala_Lumpur|Asia/Singapore\",\"Asia/Kuala_Lumpur|Singapore\",\"Asia/Macau|Asia/Macao\",\"Asia/Makassar|Asia/Ujung_Pandang\",\"Asia/Nicosia|Europe/Nicosia\",\"Asia/Qatar|Asia/Bahrain\",\"Asia/Rangoon|Asia/Yangon\",\"Asia/Riyadh|Asia/Aden\",\"Asia/Riyadh|Asia/Kuwait\",\"Asia/Seoul|ROK\",\"Asia/Shanghai|Asia/Chongqing\",\"Asia/Shanghai|Asia/Chungking\",\"Asia/Shanghai|Asia/Harbin\",\"Asia/Shanghai|PRC\",\"Asia/Taipei|ROC\",\"Asia/Tehran|Iran\",\"Asia/Thimphu|Asia/Thimbu\",\"Asia/Tokyo|Japan\",\"Asia/Ulaanbaatar|Asia/Ulan_Bator\",\"Asia/Urumqi|Asia/Kashgar\",\"Atlantic/Faroe|Atlantic/Faeroe\",\"Atlantic/Reykjavik|Iceland\",\"Atlantic/South_Georgia|Etc/GMT+2\",\"Australia/Adelaide|Australia/South\",\"Australia/Brisbane|Australia/Queensland\",\"Australia/Broken_Hill|Australia/Yancowinna\",\"Australia/Darwin|Australia/North\",\"Australia/Hobart|Australia/Tasmania\",\"Australia/Lord_Howe|Australia/LHI\",\"Australia/Melbourne|Australia/Victoria\",\"Australia/Perth|Australia/West\",\"Australia/Sydney|Australia/ACT\",\"Australia/Sydney|Australia/Canberra\",\"Australia/Sydney|Australia/NSW\",\"Etc/GMT-0|Etc/GMT\",\"Etc/GMT-0|Etc/GMT+0\",\"Etc/GMT-0|Etc/GMT0\",\"Etc/GMT-0|Etc/Greenwich\",\"Etc/GMT-0|GMT\",\"Etc/GMT-0|GMT+0\",\"Etc/GMT-0|GMT-0\",\"Etc/GMT-0|GMT0\",\"Etc/GMT-0|Greenwich\",\"Etc/UTC|Etc/UCT\",\"Etc/UTC|Etc/Universal\",\"Etc/UTC|Etc/Zulu\",\"Etc/UTC|UCT\",\"Etc/UTC|UTC\",\"Etc/UTC|Universal\",\"Etc/UTC|Zulu\",\"Europe/Belgrade|Europe/Ljubljana\",\"Europe/Belgrade|Europe/Podgorica\",\"Europe/Belgrade|Europe/Sarajevo\",\"Europe/Belgrade|Europe/Skopje\",\"Europe/Belgrade|Europe/Zagreb\",\"Europe/Chisinau|Europe/Tiraspol\",\"Europe/Dublin|Eire\",\"Europe/Helsinki|Europe/Mariehamn\",\"Europe/Istanbul|Asia/Istanbul\",\"Europe/Istanbul|Turkey\",\"Europe/Lisbon|Portugal\",\"Europe/London|Europe/Belfast\",\"Europe/London|Europe/Guernsey\",\"Europe/London|Europe/Isle_of_Man\",\"Europe/London|Europe/Jersey\",\"Europe/London|GB\",\"Europe/London|GB-Eire\",\"Europe/Moscow|W-SU\",\"Europe/Oslo|Arctic/Longyearbyen\",\"Europe/Oslo|Atlantic/Jan_Mayen\",\"Europe/Prague|Europe/Bratislava\",\"Europe/Rome|Europe/San_Marino\",\"Europe/Rome|Europe/Vatican\",\"Europe/Warsaw|Poland\",\"Europe/Zurich|Europe/Busingen\",\"Europe/Zurich|Europe/Vaduz\",\"Indian/Christmas|Etc/GMT-7\",\"Pacific/Auckland|Antarctica/McMurdo\",\"Pacific/Auckland|Antarctica/South_Pole\",\"Pacific/Auckland|NZ\",\"Pacific/Chatham|NZ-CHAT\",\"Pacific/Chuuk|Pacific/Truk\",\"Pacific/Chuuk|Pacific/Yap\",\"Pacific/Easter|Chile/EasterIsland\",\"Pacific/Guam|Pacific/Saipan\",\"Pacific/Honolulu|Pacific/Johnston\",\"Pacific/Honolulu|US/Hawaii\",\"Pacific/Kwajalein|Kwajalein\",\"Pacific/Pago_Pago|Pacific/Midway\",\"Pacific/Pago_Pago|Pacific/Samoa\",\"Pacific/Pago_Pago|US/Samoa\",\"Pacific/Palau|Etc/GMT-9\",\"Pacific/Pohnpei|Pacific/Ponape\",\"Pacific/Port_Moresby|Etc/GMT-10\",\"Pacific/Tarawa|Etc/GMT-12\",\"Pacific/Tarawa|Pacific/Funafuti\",\"Pacific/Tarawa|Pacific/Wake\",\"Pacific/Tarawa|Pacific/Wallis\"]}},,function(e,t,n){var o=n(339),a=n(303)(\"socket.io-client:url\");e.exports=function(e,t){var n=e;t=t||\"undefined\"!==typeof location&&location,null==e&&(e=t.protocol+\"//\"+t.host);\"string\"===typeof e&&(\"/\"===e.charAt(0)&&(e=\"/\"===e.charAt(1)?t.protocol+e:t.host+e),/^(https?|wss?):\\/\\//.test(e)||(a(\"protocol-less url %s\",e),e=\"undefined\"!==typeof t?t.protocol+\"//\"+e:\"https://\"+e),a(\"parse %s\",e),n=o(e));n.port||(/^(http|ws)$/.test(n.protocol)?n.port=\"80\":/^(http|ws)s$/.test(n.protocol)&&(n.port=\"443\"));n.path=n.path||\"/\";var r=-1!==n.host.indexOf(\":\")?\"[\"+n.host+\"]\":n.host;return n.id=n.protocol+\"://\"+r+\":\"+n.port,n.href=n.protocol+\"://\"+r+(t&&t.port===n.port?\"\":\":\"+n.port),n}},function(e,t,n){function o(e){var n;function o(){if(o.enabled){var e=o,a=+new Date,r=a-(n||a);e.diff=r,e.prev=n,e.curr=a,n=a;for(var c=new Array(arguments.length),i=0;i<c.length;i++)c[i]=arguments[i];c[0]=t.coerce(c[0]),\"string\"!==typeof c[0]&&c.unshift(\"%O\");var s=0;c[0]=c[0].replace(/%([a-zA-Z%])/g,function(n,o){if(\"%%\"===n)return n;s++;var a=t.formatters[o];if(\"function\"===typeof a){var r=c[s];n=a.call(e,r),c.splice(s,1),s--}return n}),t.formatArgs.call(e,c),(o.log||t.log||console.log.bind(console)).apply(e,c)}}return o.namespace=e,o.enabled=t.enabled(e),o.useColors=t.useColors(),o.color=function(e){var n,o=0;for(n in e)o=(o<<5)-o+e.charCodeAt(n),o|=0;return t.colors[Math.abs(o)%t.colors.length]}(e),o.destroy=a,\"function\"===typeof t.init&&t.init(o),t.instances.push(o),o}function a(){var e=t.instances.indexOf(this);return-1!==e&&(t.instances.splice(e,1),!0)}(t=e.exports=o.debug=o.default=o).coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){t.enable(\"\")},t.enable=function(e){var n;t.save(e),t.names=[],t.skips=[];var o=(\"string\"===typeof e?e:\"\").split(/[\\s,]+/),a=o.length;for(n=0;n<a;n++)o[n]&&(\"-\"===(e=o[n].replace(/\\*/g,\".*?\"))[0]?t.skips.push(new RegExp(\"^\"+e.substr(1)+\"$\")):t.names.push(new RegExp(\"^\"+e+\"$\")));for(n=0;n<t.instances.length;n++){var r=t.instances[n];r.enabled=t.enabled(r.namespace)}},t.enabled=function(e){if(\"*\"===e[e.length-1])return!0;var n,o;for(n=0,o=t.skips.length;n<o;n++)if(t.skips[n].test(e))return!1;for(n=0,o=t.names.length;n<o;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(377),t.instances=[],t.names=[],t.skips=[],t.formatters={}},function(e,t){var n=1e3,o=60*n,a=60*o,r=24*a,c=365.25*r;function i(e,t,n){if(!(e<t))return e<1.5*t?Math.floor(e/t)+\" \"+n:Math.ceil(e/t)+\" \"+n+\"s\"}e.exports=function(e,t){t=t||{};var s,l=typeof e;if(\"string\"===l&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(!t)return;var i=parseFloat(t[1]);switch((t[2]||\"ms\").toLowerCase()){case\"years\":case\"year\":case\"yrs\":case\"yr\":case\"y\":return i*c;case\"days\":case\"day\":case\"d\":return i*r;case\"hours\":case\"hour\":case\"hrs\":case\"hr\":case\"h\":return i*a;case\"minutes\":case\"minute\":case\"mins\":case\"min\":case\"m\":return i*o;case\"seconds\":case\"second\":case\"secs\":case\"sec\":case\"s\":return i*n;case\"milliseconds\":case\"millisecond\":case\"msecs\":case\"msec\":case\"ms\":return i;default:return}}(e);if(\"number\"===l&&!1===isNaN(e))return t.long?i(s=e,r,\"day\")||i(s,a,\"hour\")||i(s,o,\"minute\")||i(s,n,\"second\")||s+\" ms\":function(e){if(e>=r)return Math.round(e/r)+\"d\";if(e>=a)return Math.round(e/a)+\"h\";if(e>=o)return Math.round(e/o)+\"m\";if(e>=n)return Math.round(e/n)+\"s\";return e+\"ms\"}(e);throw new Error(\"val is not a non-empty string or a valid number. val=\"+JSON.stringify(e))}},function(e,t,n){(function(o){function a(){var e;try{e=t.storage.debug}catch(n){}return!e&&\"undefined\"!==typeof o&&\"env\"in o&&(e=Object({NODE_ENV:\"production\",PUBLIC_URL:\"\"}).DEBUG),e}(t=e.exports=n(379)).log=function(){return\"object\"===typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},t.formatArgs=function(e){var n=this.useColors;if(e[0]=(n?\"%c\":\"\")+this.namespace+(n?\" %c\":\" \")+e[0]+(n?\"%c \":\" \")+\"+\"+t.humanize(this.diff),!n)return;var o=\"color: \"+this.color;e.splice(1,0,o,\"color: inherit\");var a=0,r=0;e[0].replace(/%[a-zA-Z%]/g,function(e){\"%%\"!==e&&(a++,\"%c\"===e&&(r=a))}),e.splice(r,0,o)},t.save=function(e){try{null==e?t.storage.removeItem(\"debug\"):t.storage.debug=e}catch(n){}},t.load=a,t.useColors=function(){if(\"undefined\"!==typeof window&&window.process&&\"renderer\"===window.process.type)return!0;if(\"undefined\"!==typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/))return!1;return\"undefined\"!==typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||\"undefined\"!==typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||\"undefined\"!==typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&parseInt(RegExp.$1,10)>=31||\"undefined\"!==typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/)},t.storage=\"undefined\"!=typeof chrome&&\"undefined\"!=typeof chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),t.colors=[\"#0000CC\",\"#0000FF\",\"#0033CC\",\"#0033FF\",\"#0066CC\",\"#0066FF\",\"#0099CC\",\"#0099FF\",\"#00CC00\",\"#00CC33\",\"#00CC66\",\"#00CC99\",\"#00CCCC\",\"#00CCFF\",\"#3300CC\",\"#3300FF\",\"#3333CC\",\"#3333FF\",\"#3366CC\",\"#3366FF\",\"#3399CC\",\"#3399FF\",\"#33CC00\",\"#33CC33\",\"#33CC66\",\"#33CC99\",\"#33CCCC\",\"#33CCFF\",\"#6600CC\",\"#6600FF\",\"#6633CC\",\"#6633FF\",\"#66CC00\",\"#66CC33\",\"#9900CC\",\"#9900FF\",\"#9933CC\",\"#9933FF\",\"#99CC00\",\"#99CC33\",\"#CC0000\",\"#CC0033\",\"#CC0066\",\"#CC0099\",\"#CC00CC\",\"#CC00FF\",\"#CC3300\",\"#CC3333\",\"#CC3366\",\"#CC3399\",\"#CC33CC\",\"#CC33FF\",\"#CC6600\",\"#CC6633\",\"#CC9900\",\"#CC9933\",\"#CCCC00\",\"#CCCC33\",\"#FF0000\",\"#FF0033\",\"#FF0066\",\"#FF0099\",\"#FF00CC\",\"#FF00FF\",\"#FF3300\",\"#FF3333\",\"#FF3366\",\"#FF3399\",\"#FF33CC\",\"#FF33FF\",\"#FF6600\",\"#FF6633\",\"#FF9900\",\"#FF9933\",\"#FFCC00\",\"#FFCC33\"],t.formatters.j=function(e){try{return JSON.stringify(e)}catch(t){return\"[UnexpectedJSONParseError]: \"+t.message}},t.enable(a())}).call(this,n(18))},function(e,t,n){function o(e){var n;function o(){if(o.enabled){var e=o,a=+new Date,r=a-(n||a);e.diff=r,e.prev=n,e.curr=a,n=a;for(var c=new Array(arguments.length),i=0;i<c.length;i++)c[i]=arguments[i];c[0]=t.coerce(c[0]),\"string\"!==typeof c[0]&&c.unshift(\"%O\");var s=0;c[0]=c[0].replace(/%([a-zA-Z%])/g,function(n,o){if(\"%%\"===n)return n;s++;var a=t.formatters[o];if(\"function\"===typeof a){var r=c[s];n=a.call(e,r),c.splice(s,1),s--}return n}),t.formatArgs.call(e,c),(o.log||t.log||console.log.bind(console)).apply(e,c)}}return o.namespace=e,o.enabled=t.enabled(e),o.useColors=t.useColors(),o.color=function(e){var n,o=0;for(n in e)o=(o<<5)-o+e.charCodeAt(n),o|=0;return t.colors[Math.abs(o)%t.colors.length]}(e),o.destroy=a,\"function\"===typeof t.init&&t.init(o),t.instances.push(o),o}function a(){var e=t.instances.indexOf(this);return-1!==e&&(t.instances.splice(e,1),!0)}(t=e.exports=o.debug=o.default=o).coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){t.enable(\"\")},t.enable=function(e){var n;t.save(e),t.names=[],t.skips=[];var o=(\"string\"===typeof e?e:\"\").split(/[\\s,]+/),a=o.length;for(n=0;n<a;n++)o[n]&&(\"-\"===(e=o[n].replace(/\\*/g,\".*?\"))[0]?t.skips.push(new RegExp(\"^\"+e.substr(1)+\"$\")):t.names.push(new RegExp(\"^\"+e+\"$\")));for(n=0;n<t.instances.length;n++){var r=t.instances[n];r.enabled=t.enabled(r.namespace)}},t.enabled=function(e){if(\"*\"===e[e.length-1])return!0;var n,o;for(n=0,o=t.skips.length;n<o;n++)if(t.skips[n].test(e))return!1;for(n=0,o=t.names.length;n<o;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(380),t.instances=[],t.names=[],t.skips=[],t.formatters={}},function(e,t){var n=1e3,o=60*n,a=60*o,r=24*a,c=365.25*r;function i(e,t,n){if(!(e<t))return e<1.5*t?Math.floor(e/t)+\" \"+n:Math.ceil(e/t)+\" \"+n+\"s\"}e.exports=function(e,t){t=t||{};var s,l=typeof e;if(\"string\"===l&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(!t)return;var i=parseFloat(t[1]);switch((t[2]||\"ms\").toLowerCase()){case\"years\":case\"year\":case\"yrs\":case\"yr\":case\"y\":return i*c;case\"days\":case\"day\":case\"d\":return i*r;case\"hours\":case\"hour\":case\"hrs\":case\"hr\":case\"h\":return i*a;case\"minutes\":case\"minute\":case\"mins\":case\"min\":case\"m\":return i*o;case\"seconds\":case\"second\":case\"secs\":case\"sec\":case\"s\":return i*n;case\"milliseconds\":case\"millisecond\":case\"msecs\":case\"msec\":case\"ms\":return i;default:return}}(e);if(\"number\"===l&&!1===isNaN(e))return t.long?i(s=e,r,\"day\")||i(s,a,\"hour\")||i(s,o,\"minute\")||i(s,n,\"second\")||s+\" ms\":function(e){if(e>=r)return Math.round(e/r)+\"d\";if(e>=a)return Math.round(e/a)+\"h\";if(e>=o)return Math.round(e/o)+\"m\";if(e>=n)return Math.round(e/n)+\"s\";return e+\"ms\"}(e);throw new Error(\"val is not a non-empty string or a valid number. val=\"+JSON.stringify(e))}},function(e,t,n){function o(e){if(e)return function(e){for(var t in o.prototype)e[t]=o.prototype[t];return e}(e)}e.exports=o,o.prototype.on=o.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks[\"$\"+e]=this._callbacks[\"$\"+e]||[]).push(t),this},o.prototype.once=function(e,t){function n(){this.off(e,n),t.apply(this,arguments)}return n.fn=t,this.on(e,n),this},o.prototype.off=o.prototype.removeListener=o.prototype.removeAllListeners=o.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var n,o=this._callbacks[\"$\"+e];if(!o)return this;if(1==arguments.length)return delete this._callbacks[\"$\"+e],this;for(var a=0;a<o.length;a++)if((n=o[a])===t||n.fn===t){o.splice(a,1);break}return this},o.prototype.emit=function(e){this._callbacks=this._callbacks||{};var t=[].slice.call(arguments,1),n=this._callbacks[\"$\"+e];if(n)for(var o=0,a=(n=n.slice(0)).length;o<a;++o)n[o].apply(this,t);return this},o.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks[\"$\"+e]||[]},o.prototype.hasListeners=function(e){return!!this.listeners(e).length}},function(e,t,n){var o=n(340),a=n(341),r=Object.prototype.toString,c=\"function\"===typeof Blob||\"undefined\"!==typeof Blob&&\"[object BlobConstructor]\"===r.call(Blob),i=\"function\"===typeof File||\"undefined\"!==typeof File&&\"[object FileConstructor]\"===r.call(File);t.deconstructPacket=function(e){var t=[],n=e.data,r=e;return r.data=function e(t,n){if(!t)return t;if(a(t)){var r={_placeholder:!0,num:n.length};return n.push(t),r}if(o(t)){for(var c=new Array(t.length),i=0;i<t.length;i++)c[i]=e(t[i],n);return c}if(\"object\"===typeof t&&!(t instanceof Date)){var c={};for(var s in t)c[s]=e(t[s],n);return c}return t}(n,t),r.attachments=t.length,{packet:r,buffers:t}},t.reconstructPacket=function(e,t){return e.data=function e(t,n){if(!t)return t;if(t&&t._placeholder)return n[t.num];if(o(t))for(var a=0;a<t.length;a++)t[a]=e(t[a],n);else if(\"object\"===typeof t)for(var r in t)t[r]=e(t[r],n);return t}(e.data,t),e.attachments=void 0,e},t.removeBlobs=function(e,t){var n=0,r=e;!function e(s,l,M){if(!s)return s;if(c&&s instanceof Blob||i&&s instanceof File){n++;var p=new FileReader;p.onload=function(){M?M[l]=this.result:r=this.result,--n||t(r)},p.readAsArrayBuffer(s)}else if(o(s))for(var u=0;u<s.length;u++)e(s[u],u,s);else if(\"object\"===typeof s&&!a(s))for(var f in s)e(s[f],f,s)}(r),n||t(r)}},function(e,t,n){e.exports=n(384),e.exports.parser=n(300)},function(e,t,n){var o=n(343),a=n(315),r=n(306)(\"engine.io-client:socket\"),c=n(347),i=n(300),s=n(339),l=n(304);function M(e,t){if(!(this instanceof M))return new M(e,t);t=t||{},e&&\"object\"===typeof e&&(t=e,e=null),e?(e=s(e),t.hostname=e.host,t.secure=\"https\"===e.protocol||\"wss\"===e.protocol,t.port=e.port,e.query&&(t.query=e.query)):t.host&&(t.hostname=s(t.host).host),this.secure=null!=t.secure?t.secure:\"undefined\"!==typeof location&&\"https:\"===location.protocol,t.hostname&&!t.port&&(t.port=this.secure?\"443\":\"80\"),this.agent=t.agent||!1,this.hostname=t.hostname||(\"undefined\"!==typeof location?location.hostname:\"localhost\"),this.port=t.port||(\"undefined\"!==typeof location&&location.port?location.port:this.secure?443:80),this.query=t.query||{},\"string\"===typeof this.query&&(this.query=l.decode(this.query)),this.upgrade=!1!==t.upgrade,this.path=(t.path||\"/engine.io\").replace(/\\/$/,\"\")+\"/\",this.forceJSONP=!!t.forceJSONP,this.jsonp=!1!==t.jsonp,this.forceBase64=!!t.forceBase64,this.enablesXDR=!!t.enablesXDR,this.timestampParam=t.timestampParam||\"t\",this.timestampRequests=t.timestampRequests,this.transports=t.transports||[\"polling\",\"websocket\"],this.transportOptions=t.transportOptions||{},this.readyState=\"\",this.writeBuffer=[],this.prevBufferLen=0,this.policyPort=t.policyPort||843,this.rememberUpgrade=t.rememberUpgrade||!1,this.binaryType=null,this.onlyBinaryUpgrades=t.onlyBinaryUpgrades,this.perMessageDeflate=!1!==t.perMessageDeflate&&(t.perMessageDeflate||{}),!0===this.perMessageDeflate&&(this.perMessageDeflate={}),this.perMessageDeflate&&null==this.perMessageDeflate.threshold&&(this.perMessageDeflate.threshold=1024),this.pfx=t.pfx||null,this.key=t.key||null,this.passphrase=t.passphrase||null,this.cert=t.cert||null,this.ca=t.ca||null,this.ciphers=t.ciphers||null,this.rejectUnauthorized=void 0===t.rejectUnauthorized||t.rejectUnauthorized,this.forceNode=!!t.forceNode,this.isReactNative=\"undefined\"!==typeof navigator&&\"string\"===typeof navigator.product&&\"reactnative\"===navigator.product.toLowerCase(),(\"undefined\"===typeof self||this.isReactNative)&&(t.extraHeaders&&Object.keys(t.extraHeaders).length>0&&(this.extraHeaders=t.extraHeaders),t.localAddress&&(this.localAddress=t.localAddress)),this.id=null,this.upgrades=null,this.pingInterval=null,this.pingTimeout=null,this.pingIntervalTimer=null,this.pingTimeoutTimer=null,this.open()}e.exports=M,M.priorWebsocketSuccess=!1,a(M.prototype),M.protocol=i.protocol,M.Socket=M,M.Transport=n(314),M.transports=n(343),M.parser=n(300),M.prototype.createTransport=function(e){r('creating transport \"%s\"',e);var t=function(e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}(this.query);t.EIO=i.protocol,t.transport=e;var n=this.transportOptions[e]||{};return this.id&&(t.sid=this.id),new o[e]({query:t,socket:this,agent:n.agent||this.agent,hostname:n.hostname||this.hostname,port:n.port||this.port,secure:n.secure||this.secure,path:n.path||this.path,forceJSONP:n.forceJSONP||this.forceJSONP,jsonp:n.jsonp||this.jsonp,forceBase64:n.forceBase64||this.forceBase64,enablesXDR:n.enablesXDR||this.enablesXDR,timestampRequests:n.timestampRequests||this.timestampRequests,timestampParam:n.timestampParam||this.timestampParam,policyPort:n.policyPort||this.policyPort,pfx:n.pfx||this.pfx,key:n.key||this.key,passphrase:n.passphrase||this.passphrase,cert:n.cert||this.cert,ca:n.ca||this.ca,ciphers:n.ciphers||this.ciphers,rejectUnauthorized:n.rejectUnauthorized||this.rejectUnauthorized,perMessageDeflate:n.perMessageDeflate||this.perMessageDeflate,extraHeaders:n.extraHeaders||this.extraHeaders,forceNode:n.forceNode||this.forceNode,localAddress:n.localAddress||this.localAddress,requestTimeout:n.requestTimeout||this.requestTimeout,protocols:n.protocols||void 0,isReactNative:this.isReactNative})},M.prototype.open=function(){var e;if(this.rememberUpgrade&&M.priorWebsocketSuccess&&-1!==this.transports.indexOf(\"websocket\"))e=\"websocket\";else{if(0===this.transports.length){var t=this;return void setTimeout(function(){t.emit(\"error\",\"No transports available\")},0)}e=this.transports[0]}this.readyState=\"opening\";try{e=this.createTransport(e)}catch(n){return this.transports.shift(),void this.open()}e.open(),this.setTransport(e)},M.prototype.setTransport=function(e){r(\"setting transport %s\",e.name);var t=this;this.transport&&(r(\"clearing existing transport %s\",this.transport.name),this.transport.removeAllListeners()),this.transport=e,e.on(\"drain\",function(){t.onDrain()}).on(\"packet\",function(e){t.onPacket(e)}).on(\"error\",function(e){t.onError(e)}).on(\"close\",function(){t.onClose(\"transport close\")})},M.prototype.probe=function(e){r('probing transport \"%s\"',e);var t=this.createTransport(e,{probe:1}),n=!1,o=this;function a(){if(o.onlyBinaryUpgrades){var a=!this.supportsBinary&&o.transport.supportsBinary;n=n||a}n||(r('probe transport \"%s\" opened',e),t.send([{type:\"ping\",data:\"probe\"}]),t.once(\"packet\",function(a){if(!n)if(\"pong\"===a.type&&\"probe\"===a.data){if(r('probe transport \"%s\" pong',e),o.upgrading=!0,o.emit(\"upgrading\",t),!t)return;M.priorWebsocketSuccess=\"websocket\"===t.name,r('pausing current transport \"%s\"',o.transport.name),o.transport.pause(function(){n||\"closed\"!==o.readyState&&(r(\"changing transport and sending upgrade packet\"),u(),o.setTransport(t),t.send([{type:\"upgrade\"}]),o.emit(\"upgrade\",t),t=null,o.upgrading=!1,o.flush())})}else{r('probe transport \"%s\" failed',e);var c=new Error(\"probe error\");c.transport=t.name,o.emit(\"upgradeError\",c)}}))}function c(){n||(n=!0,u(),t.close(),t=null)}function i(n){var a=new Error(\"probe error: \"+n);a.transport=t.name,c(),r('probe transport \"%s\" failed because of error: %s',e,n),o.emit(\"upgradeError\",a)}function s(){i(\"transport closed\")}function l(){i(\"socket closed\")}function p(e){t&&e.name!==t.name&&(r('\"%s\" works - aborting \"%s\"',e.name,t.name),c())}function u(){t.removeListener(\"open\",a),t.removeListener(\"error\",i),t.removeListener(\"close\",s),o.removeListener(\"close\",l),o.removeListener(\"upgrading\",p)}M.priorWebsocketSuccess=!1,t.once(\"open\",a),t.once(\"error\",i),t.once(\"close\",s),this.once(\"close\",l),this.once(\"upgrading\",p),t.open()},M.prototype.onOpen=function(){if(r(\"socket open\"),this.readyState=\"open\",M.priorWebsocketSuccess=\"websocket\"===this.transport.name,this.emit(\"open\"),this.flush(),\"open\"===this.readyState&&this.upgrade&&this.transport.pause){r(\"starting upgrade probes\");for(var e=0,t=this.upgrades.length;e<t;e++)this.probe(this.upgrades[e])}},M.prototype.onPacket=function(e){if(\"opening\"===this.readyState||\"open\"===this.readyState||\"closing\"===this.readyState)switch(r('socket receive: type \"%s\", data \"%s\"',e.type,e.data),this.emit(\"packet\",e),this.emit(\"heartbeat\"),e.type){case\"open\":this.onHandshake(JSON.parse(e.data));break;case\"pong\":this.setPing(),this.emit(\"pong\");break;case\"error\":var t=new Error(\"server error\");t.code=e.data,this.onError(t);break;case\"message\":this.emit(\"data\",e.data),this.emit(\"message\",e.data)}else r('packet received with socket readyState \"%s\"',this.readyState)},M.prototype.onHandshake=function(e){this.emit(\"handshake\",e),this.id=e.sid,this.transport.query.sid=e.sid,this.upgrades=this.filterUpgrades(e.upgrades),this.pingInterval=e.pingInterval,this.pingTimeout=e.pingTimeout,this.onOpen(),\"closed\"!==this.readyState&&(this.setPing(),this.removeListener(\"heartbeat\",this.onHeartbeat),this.on(\"heartbeat\",this.onHeartbeat))},M.prototype.onHeartbeat=function(e){clearTimeout(this.pingTimeoutTimer);var t=this;t.pingTimeoutTimer=setTimeout(function(){\"closed\"!==t.readyState&&t.onClose(\"ping timeout\")},e||t.pingInterval+t.pingTimeout)},M.prototype.setPing=function(){var e=this;clearTimeout(e.pingIntervalTimer),e.pingIntervalTimer=setTimeout(function(){r(\"writing ping packet - expecting pong within %sms\",e.pingTimeout),e.ping(),e.onHeartbeat(e.pingTimeout)},e.pingInterval)},M.prototype.ping=function(){var e=this;this.sendPacket(\"ping\",function(){e.emit(\"ping\")})},M.prototype.onDrain=function(){this.writeBuffer.splice(0,this.prevBufferLen),this.prevBufferLen=0,0===this.writeBuffer.length?this.emit(\"drain\"):this.flush()},M.prototype.flush=function(){\"closed\"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length&&(r(\"flushing %d packets in socket\",this.writeBuffer.length),this.transport.send(this.writeBuffer),this.prevBufferLen=this.writeBuffer.length,this.emit(\"flush\"))},M.prototype.write=M.prototype.send=function(e,t,n){return this.sendPacket(\"message\",e,t,n),this},M.prototype.sendPacket=function(e,t,n,o){if(\"function\"===typeof t&&(o=t,t=void 0),\"function\"===typeof n&&(o=n,n=null),\"closing\"!==this.readyState&&\"closed\"!==this.readyState){(n=n||{}).compress=!1!==n.compress;var a={type:e,data:t,options:n};this.emit(\"packetCreate\",a),this.writeBuffer.push(a),o&&this.once(\"flush\",o),this.flush()}},M.prototype.close=function(){if(\"opening\"===this.readyState||\"open\"===this.readyState){this.readyState=\"closing\";var e=this;this.writeBuffer.length?this.once(\"drain\",function(){this.upgrading?o():t()}):this.upgrading?o():t()}function t(){e.onClose(\"forced close\"),r(\"socket closing - telling transport to close\"),e.transport.close()}function n(){e.removeListener(\"upgrade\",n),e.removeListener(\"upgradeError\",n),t()}function o(){e.once(\"upgrade\",n),e.once(\"upgradeError\",n)}return this},M.prototype.onError=function(e){r(\"socket error %j\",e),M.priorWebsocketSuccess=!1,this.emit(\"error\",e),this.onClose(\"transport error\",e)},M.prototype.onClose=function(e,t){if(\"opening\"===this.readyState||\"open\"===this.readyState||\"closing\"===this.readyState){r('socket close with reason: \"%s\"',e);clearTimeout(this.pingIntervalTimer),clearTimeout(this.pingTimeoutTimer),this.transport.removeAllListeners(\"close\"),this.transport.close(),this.transport.removeAllListeners(),this.readyState=\"closed\",this.id=null,this.emit(\"close\",e,t),this.writeBuffer=[],this.prevBufferLen=0}},M.prototype.filterUpgrades=function(e){for(var t=[],n=0,o=e.length;n<o;n++)~c(this.transports,e[n])&&t.push(e[n]);return t}},function(e,t){try{e.exports=\"undefined\"!==typeof XMLHttpRequest&&\"withCredentials\"in new XMLHttpRequest}catch(n){e.exports=!1}},function(e,t,n){var o=n(313),a=n(344),r=n(315),c=n(305),i=n(306)(\"engine.io-client:polling-xhr\");function s(){}function l(e){if(a.call(this,e),this.requestTimeout=e.requestTimeout,this.extraHeaders=e.extraHeaders,\"undefined\"!==typeof location){var t=\"https:\"===location.protocol,n=location.port;n||(n=t?443:80),this.xd=\"undefined\"!==typeof location&&e.hostname!==location.hostname||n!==e.port,this.xs=e.secure!==t}}function M(e){this.method=e.method||\"GET\",this.uri=e.uri,this.xd=!!e.xd,this.xs=!!e.xs,this.async=!1!==e.async,this.data=void 0!==e.data?e.data:null,this.agent=e.agent,this.isBinary=e.isBinary,this.supportsBinary=e.supportsBinary,this.enablesXDR=e.enablesXDR,this.requestTimeout=e.requestTimeout,this.pfx=e.pfx,this.key=e.key,this.passphrase=e.passphrase,this.cert=e.cert,this.ca=e.ca,this.ciphers=e.ciphers,this.rejectUnauthorized=e.rejectUnauthorized,this.extraHeaders=e.extraHeaders,this.create()}if(e.exports=l,e.exports.Request=M,c(l,a),l.prototype.supportsBinary=!0,l.prototype.request=function(e){return(e=e||{}).uri=this.uri(),e.xd=this.xd,e.xs=this.xs,e.agent=this.agent||!1,e.supportsBinary=this.supportsBinary,e.enablesXDR=this.enablesXDR,e.pfx=this.pfx,e.key=this.key,e.passphrase=this.passphrase,e.cert=this.cert,e.ca=this.ca,e.ciphers=this.ciphers,e.rejectUnauthorized=this.rejectUnauthorized,e.requestTimeout=this.requestTimeout,e.extraHeaders=this.extraHeaders,new M(e)},l.prototype.doWrite=function(e,t){var n=\"string\"!==typeof e&&void 0!==e,o=this.request({method:\"POST\",data:e,isBinary:n}),a=this;o.on(\"success\",t),o.on(\"error\",function(e){a.onError(\"xhr post error\",e)}),this.sendXhr=o},l.prototype.doPoll=function(){i(\"xhr poll\");var e=this.request(),t=this;e.on(\"data\",function(e){t.onData(e)}),e.on(\"error\",function(e){t.onError(\"xhr poll error\",e)}),this.pollXhr=e},r(M.prototype),M.prototype.create=function(){var e={agent:this.agent,xdomain:this.xd,xscheme:this.xs,enablesXDR:this.enablesXDR};e.pfx=this.pfx,e.key=this.key,e.passphrase=this.passphrase,e.cert=this.cert,e.ca=this.ca,e.ciphers=this.ciphers,e.rejectUnauthorized=this.rejectUnauthorized;var t=this.xhr=new o(e),n=this;try{i(\"xhr open %s: %s\",this.method,this.uri),t.open(this.method,this.uri,this.async);try{if(this.extraHeaders)for(var a in t.setDisableHeaderCheck&&t.setDisableHeaderCheck(!0),this.extraHeaders)this.extraHeaders.hasOwnProperty(a)&&t.setRequestHeader(a,this.extraHeaders[a])}catch(r){}if(\"POST\"===this.method)try{this.isBinary?t.setRequestHeader(\"Content-type\",\"application/octet-stream\"):t.setRequestHeader(\"Content-type\",\"text/plain;charset=UTF-8\")}catch(r){}try{t.setRequestHeader(\"Accept\",\"*/*\")}catch(r){}\"withCredentials\"in t&&(t.withCredentials=!0),this.requestTimeout&&(t.timeout=this.requestTimeout),this.hasXDR()?(t.onload=function(){n.onLoad()},t.onerror=function(){n.onError(t.responseText)}):t.onreadystatechange=function(){if(2===t.readyState)try{var e=t.getResponseHeader(\"Content-Type\");n.supportsBinary&&\"application/octet-stream\"===e&&(t.responseType=\"arraybuffer\")}catch(r){}4===t.readyState&&(200===t.status||1223===t.status?n.onLoad():setTimeout(function(){n.onError(t.status)},0))},i(\"xhr data %s\",this.data),t.send(this.data)}catch(r){return void setTimeout(function(){n.onError(r)},0)}\"undefined\"!==typeof document&&(this.index=M.requestsCount++,M.requests[this.index]=this)},M.prototype.onSuccess=function(){this.emit(\"success\"),this.cleanup()},M.prototype.onData=function(e){this.emit(\"data\",e),this.onSuccess()},M.prototype.onError=function(e){this.emit(\"error\",e),this.cleanup(!0)},M.prototype.cleanup=function(e){if(\"undefined\"!==typeof this.xhr&&null!==this.xhr){if(this.hasXDR()?this.xhr.onload=this.xhr.onerror=s:this.xhr.onreadystatechange=s,e)try{this.xhr.abort()}catch(t){}\"undefined\"!==typeof document&&delete M.requests[this.index],this.xhr=null}},M.prototype.onLoad=function(){var e;try{var t;try{t=this.xhr.getResponseHeader(\"Content-Type\")}catch(n){}e=\"application/octet-stream\"===t&&this.xhr.response||this.xhr.responseText}catch(n){this.onError(n)}null!=e&&this.onData(e)},M.prototype.hasXDR=function(){return\"undefined\"!==typeof XDomainRequest&&!this.xs&&this.enablesXDR},M.prototype.abort=function(){this.cleanup()},M.requestsCount=0,M.requests={},\"undefined\"!==typeof document)if(\"function\"===typeof attachEvent)attachEvent(\"onunload\",u);else if(\"function\"===typeof addEventListener){var p=\"onpagehide\"in self?\"pagehide\":\"unload\";addEventListener(p,u,!1)}function u(){for(var e in M.requests)M.requests.hasOwnProperty(e)&&M.requests[e].abort()}},function(e,t){e.exports=Object.keys||function(e){var t=[],n=Object.prototype.hasOwnProperty;for(var o in e)n.call(e,o)&&t.push(o);return t}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return\"[object Array]\"==n.call(e)}},function(e,t){e.exports=function(e,t,n){var o=e.byteLength;if(t=t||0,n=n||o,e.slice)return e.slice(t,n);if(t<0&&(t+=o),n<0&&(n+=o),n>o&&(n=o),t>=o||t>=n||0===o)return new ArrayBuffer(0);for(var a=new Uint8Array(e),r=new Uint8Array(n-t),c=t,i=0;c<n;c++,i++)r[i]=a[c];return r.buffer}},function(e,t){function n(){}e.exports=function(e,t,o){var a=!1;return o=o||n,r.count=e,0===e?t():r;function r(e,n){if(r.count<=0)throw new Error(\"after called too many times\");--r.count,e?(a=!0,t(e),t=o):0!==r.count||a||t(null,n)}}},function(e,t){var n,o,a,r=String.fromCharCode;function c(e){for(var t,n,o=[],a=0,r=e.length;a<r;)(t=e.charCodeAt(a++))>=55296&&t<=56319&&a<r?56320==(64512&(n=e.charCodeAt(a++)))?o.push(((1023&t)<<10)+(1023&n)+65536):(o.push(t),a--):o.push(t);return o}function i(e,t){if(e>=55296&&e<=57343){if(t)throw Error(\"Lone surrogate U+\"+e.toString(16).toUpperCase()+\" is not a scalar value\");return!1}return!0}function s(e,t){return r(e>>t&63|128)}function l(e,t){if(0==(4294967168&e))return r(e);var n=\"\";return 0==(4294965248&e)?n=r(e>>6&31|192):0==(4294901760&e)?(i(e,t)||(e=65533),n=r(e>>12&15|224),n+=s(e,6)):0==(4292870144&e)&&(n=r(e>>18&7|240),n+=s(e,12),n+=s(e,6)),n+=r(63&e|128)}function M(){if(a>=o)throw Error(\"Invalid byte index\");var e=255&n[a];if(a++,128==(192&e))return 63&e;throw Error(\"Invalid continuation byte\")}function p(e){var t,r;if(a>o)throw Error(\"Invalid byte index\");if(a==o)return!1;if(t=255&n[a],a++,0==(128&t))return t;if(192==(224&t)){if((r=(31&t)<<6|M())>=128)return r;throw Error(\"Invalid continuation byte\")}if(224==(240&t)){if((r=(15&t)<<12|M()<<6|M())>=2048)return i(r,e)?r:65533;throw Error(\"Invalid continuation byte\")}if(240==(248&t)&&(r=(7&t)<<18|M()<<12|M()<<6|M())>=65536&&r<=1114111)return r;throw Error(\"Invalid UTF-8 detected\")}e.exports={version:\"2.1.2\",encode:function(e,t){for(var n=!1!==(t=t||{}).strict,o=c(e),a=o.length,r=-1,i=\"\";++r<a;)i+=l(o[r],n);return i},decode:function(e,t){var i=!1!==(t=t||{}).strict;n=c(e),o=n.length,a=0;for(var s,l=[];!1!==(s=p(i));)l.push(s);return function(e){for(var t,n=e.length,o=-1,a=\"\";++o<n;)(t=e[o])>65535&&(a+=r((t-=65536)>>>10&1023|55296),t=56320|1023&t),a+=r(t);return a}(l)}}},function(e,t){!function(){\"use strict\";for(var e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",n=new Uint8Array(256),o=0;o<e.length;o++)n[e.charCodeAt(o)]=o;t.encode=function(t){var n,o=new Uint8Array(t),a=o.length,r=\"\";for(n=0;n<a;n+=3)r+=e[o[n]>>2],r+=e[(3&o[n])<<4|o[n+1]>>4],r+=e[(15&o[n+1])<<2|o[n+2]>>6],r+=e[63&o[n+2]];return a%3===2?r=r.substring(0,r.length-1)+\"=\":a%3===1&&(r=r.substring(0,r.length-2)+\"==\"),r},t.decode=function(e){var t,o,a,r,c,i=.75*e.length,s=e.length,l=0;\"=\"===e[e.length-1]&&(i--,\"=\"===e[e.length-2]&&i--);var M=new ArrayBuffer(i),p=new Uint8Array(M);for(t=0;t<s;t+=4)o=n[e.charCodeAt(t)],a=n[e.charCodeAt(t+1)],r=n[e.charCodeAt(t+2)],c=n[e.charCodeAt(t+3)],p[l++]=o<<2|a>>4,p[l++]=(15&a)<<4|r>>2,p[l++]=(3&r)<<6|63&c;return M}}()},function(e,t){var n=\"undefined\"!==typeof n?n:\"undefined\"!==typeof WebKitBlobBuilder?WebKitBlobBuilder:\"undefined\"!==typeof MSBlobBuilder?MSBlobBuilder:\"undefined\"!==typeof MozBlobBuilder&&MozBlobBuilder,o=function(){try{return 2===new Blob([\"hi\"]).size}catch(e){return!1}}(),a=o&&function(){try{return 2===new Blob([new Uint8Array([1,2])]).size}catch(e){return!1}}(),r=n&&n.prototype.append&&n.prototype.getBlob;function c(e){return e.map(function(e){if(e.buffer instanceof ArrayBuffer){var t=e.buffer;if(e.byteLength!==t.byteLength){var n=new Uint8Array(e.byteLength);n.set(new Uint8Array(t,e.byteOffset,e.byteLength)),t=n.buffer}return t}return e})}function i(e,t){t=t||{};var o=new n;return c(e).forEach(function(e){o.append(e)}),t.type?o.getBlob(t.type):o.getBlob()}function s(e,t){return new Blob(c(e),t||{})}\"undefined\"!==typeof Blob&&(i.prototype=Blob.prototype,s.prototype=Blob.prototype),e.exports=o?a?Blob:s:r?i:void 0},function(e,t,n){function o(e){var n;function o(){if(o.enabled){var e=o,a=+new Date,r=a-(n||a);e.diff=r,e.prev=n,e.curr=a,n=a;for(var c=new Array(arguments.length),i=0;i<c.length;i++)c[i]=arguments[i];c[0]=t.coerce(c[0]),\"string\"!==typeof c[0]&&c.unshift(\"%O\");var s=0;c[0]=c[0].replace(/%([a-zA-Z%])/g,function(n,o){if(\"%%\"===n)return n;s++;var a=t.formatters[o];if(\"function\"===typeof a){var r=c[s];n=a.call(e,r),c.splice(s,1),s--}return n}),t.formatArgs.call(e,c),(o.log||t.log||console.log.bind(console)).apply(e,c)}}return o.namespace=e,o.enabled=t.enabled(e),o.useColors=t.useColors(),o.color=function(e){var n,o=0;for(n in e)o=(o<<5)-o+e.charCodeAt(n),o|=0;return t.colors[Math.abs(o)%t.colors.length]}(e),o.destroy=a,\"function\"===typeof t.init&&t.init(o),t.instances.push(o),o}function a(){var e=t.instances.indexOf(this);return-1!==e&&(t.instances.splice(e,1),!0)}(t=e.exports=o.debug=o.default=o).coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){t.enable(\"\")},t.enable=function(e){var n;t.save(e),t.names=[],t.skips=[];var o=(\"string\"===typeof e?e:\"\").split(/[\\s,]+/),a=o.length;for(n=0;n<a;n++)o[n]&&(\"-\"===(e=o[n].replace(/\\*/g,\".*?\"))[0]?t.skips.push(new RegExp(\"^\"+e.substr(1)+\"$\")):t.names.push(new RegExp(\"^\"+e+\"$\")));for(n=0;n<t.instances.length;n++){var r=t.instances[n];r.enabled=t.enabled(r.namespace)}},t.enabled=function(e){if(\"*\"===e[e.length-1])return!0;var n,o;for(n=0,o=t.skips.length;n<o;n++)if(t.skips[n].test(e))return!1;for(n=0,o=t.names.length;n<o;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(395),t.instances=[],t.names=[],t.skips=[],t.formatters={}},function(e,t){var n=1e3,o=60*n,a=60*o,r=24*a,c=365.25*r;function i(e,t,n){if(!(e<t))return e<1.5*t?Math.floor(e/t)+\" \"+n:Math.ceil(e/t)+\" \"+n+\"s\"}e.exports=function(e,t){t=t||{};var s,l=typeof e;if(\"string\"===l&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(!t)return;var i=parseFloat(t[1]);switch((t[2]||\"ms\").toLowerCase()){case\"years\":case\"year\":case\"yrs\":case\"yr\":case\"y\":return i*c;case\"days\":case\"day\":case\"d\":return i*r;case\"hours\":case\"hour\":case\"hrs\":case\"hr\":case\"h\":return i*a;case\"minutes\":case\"minute\":case\"mins\":case\"min\":case\"m\":return i*o;case\"seconds\":case\"second\":case\"secs\":case\"sec\":case\"s\":return i*n;case\"milliseconds\":case\"millisecond\":case\"msecs\":case\"msec\":case\"ms\":return i;default:return}}(e);if(\"number\"===l&&!1===isNaN(e))return t.long?i(s=e,r,\"day\")||i(s,a,\"hour\")||i(s,o,\"minute\")||i(s,n,\"second\")||s+\" ms\":function(e){if(e>=r)return Math.round(e/r)+\"d\";if(e>=a)return Math.round(e/a)+\"h\";if(e>=o)return Math.round(e/o)+\"m\";if(e>=n)return Math.round(e/n)+\"s\";return e+\"ms\"}(e);throw new Error(\"val is not a non-empty string or a valid number. val=\"+JSON.stringify(e))}},function(e,t,n){(function(t){var o=n(344),a=n(305);e.exports=M;var r,c=/\\n/g,i=/\\\\n/g;function s(){}function l(){return\"undefined\"!==typeof self?self:\"undefined\"!==typeof window?window:\"undefined\"!==typeof t?t:{}}function M(e){if(o.call(this,e),this.query=this.query||{},!r){var t=l();r=t.___eio=t.___eio||[]}this.index=r.length;var n=this;r.push(function(e){n.onData(e)}),this.query.j=this.index,\"function\"===typeof addEventListener&&addEventListener(\"beforeunload\",function(){n.script&&(n.script.onerror=s)},!1)}a(M,o),M.prototype.supportsBinary=!1,M.prototype.doClose=function(){this.script&&(this.script.parentNode.removeChild(this.script),this.script=null),this.form&&(this.form.parentNode.removeChild(this.form),this.form=null,this.iframe=null),o.prototype.doClose.call(this)},M.prototype.doPoll=function(){var e=this,t=document.createElement(\"script\");this.script&&(this.script.parentNode.removeChild(this.script),this.script=null),t.async=!0,t.src=this.uri(),t.onerror=function(t){e.onError(\"jsonp poll error\",t)};var n=document.getElementsByTagName(\"script\")[0];n?n.parentNode.insertBefore(t,n):(document.head||document.body).appendChild(t),this.script=t,\"undefined\"!==typeof navigator&&/gecko/i.test(navigator.userAgent)&&setTimeout(function(){var e=document.createElement(\"iframe\");document.body.appendChild(e),document.body.removeChild(e)},100)},M.prototype.doWrite=function(e,t){var n=this;if(!this.form){var o,a=document.createElement(\"form\"),r=document.createElement(\"textarea\"),s=this.iframeId=\"eio_iframe_\"+this.index;a.className=\"socketio\",a.style.position=\"absolute\",a.style.top=\"-1000px\",a.style.left=\"-1000px\",a.target=s,a.method=\"POST\",a.setAttribute(\"accept-charset\",\"utf-8\"),r.name=\"d\",a.appendChild(r),document.body.appendChild(a),this.form=a,this.area=r}function l(){M(),t()}function M(){if(n.iframe)try{n.form.removeChild(n.iframe)}catch(t){n.onError(\"jsonp polling iframe removal error\",t)}try{var e='<iframe src=\"javascript:0\" name=\"'+n.iframeId+'\">';o=document.createElement(e)}catch(t){(o=document.createElement(\"iframe\")).name=n.iframeId,o.src=\"javascript:0\"}o.id=n.iframeId,n.form.appendChild(o),n.iframe=o}this.form.action=this.uri(),M(),e=e.replace(i,\"\\\\\\n\"),this.area.value=e.replace(c,\"\\\\n\");try{this.form.submit()}catch(p){}this.iframe.attachEvent?this.iframe.onreadystatechange=function(){\"complete\"===n.iframe.readyState&&l()}:this.iframe.onload=l}}).call(this,n(23))},function(e,t,n){(function(t){var o,a,r=n(314),c=n(300),i=n(304),s=n(305),l=n(346),M=n(306)(\"engine.io-client:websocket\");if(\"undefined\"!==typeof WebSocket)o=WebSocket;else if(\"undefined\"!==typeof self)o=self.WebSocket||self.MozWebSocket;else try{a=n(398)}catch(f){}var p=o||a;function u(e){e&&e.forceBase64&&(this.supportsBinary=!1),this.perMessageDeflate=e.perMessageDeflate,this.usingBrowserWebSocket=o&&!e.forceNode,this.protocols=e.protocols,this.usingBrowserWebSocket||(p=a),r.call(this,e)}e.exports=u,s(u,r),u.prototype.name=\"websocket\",u.prototype.supportsBinary=!0,u.prototype.doOpen=function(){if(this.check()){var e=this.uri(),t=this.protocols,n={agent:this.agent,perMessageDeflate:this.perMessageDeflate};n.pfx=this.pfx,n.key=this.key,n.passphrase=this.passphrase,n.cert=this.cert,n.ca=this.ca,n.ciphers=this.ciphers,n.rejectUnauthorized=this.rejectUnauthorized,this.extraHeaders&&(n.headers=this.extraHeaders),this.localAddress&&(n.localAddress=this.localAddress);try{this.ws=this.usingBrowserWebSocket&&!this.isReactNative?t?new p(e,t):new p(e):new p(e,t,n)}catch(o){return this.emit(\"error\",o)}void 0===this.ws.binaryType&&(this.supportsBinary=!1),this.ws.supports&&this.ws.supports.binary?(this.supportsBinary=!0,this.ws.binaryType=\"nodebuffer\"):this.ws.binaryType=\"arraybuffer\",this.addEventListeners()}},u.prototype.addEventListeners=function(){var e=this;this.ws.onopen=function(){e.onOpen()},this.ws.onclose=function(){e.onClose()},this.ws.onmessage=function(t){e.onData(t.data)},this.ws.onerror=function(t){e.onError(\"websocket error\",t)}},u.prototype.write=function(e){var n=this;this.writable=!1;for(var o=e.length,a=0,r=o;a<r;a++)!function(e){c.encodePacket(e,n.supportsBinary,function(a){if(!n.usingBrowserWebSocket){var r={};if(e.options&&(r.compress=e.options.compress),n.perMessageDeflate)(\"string\"===typeof a?t.byteLength(a):a.length)<n.perMessageDeflate.threshold&&(r.compress=!1)}try{n.usingBrowserWebSocket?n.ws.send(a):n.ws.send(a,r)}catch(f){M(\"websocket closed before onclose event\")}--o||i()})}(e[a]);function i(){n.emit(\"flush\"),setTimeout(function(){n.writable=!0,n.emit(\"drain\")},0)}},u.prototype.onClose=function(){r.prototype.onClose.call(this)},u.prototype.doClose=function(){\"undefined\"!==typeof this.ws&&this.ws.close()},u.prototype.uri=function(){var e=this.query||{},t=this.secure?\"wss\":\"ws\",n=\"\";return this.port&&(\"wss\"===t&&443!==Number(this.port)||\"ws\"===t&&80!==Number(this.port))&&(n=\":\"+this.port),this.timestampRequests&&(e[this.timestampParam]=l()),this.supportsBinary||(e.b64=1),(e=i.encode(e)).length&&(e=\"?\"+e),t+\"://\"+(-1!==this.hostname.indexOf(\":\")?\"[\"+this.hostname+\"]\":this.hostname)+n+this.path+e},u.prototype.check=function(){return!!p&&!(\"__initialize\"in p&&this.name===u.prototype.name)}}).call(this,n(14).Buffer)},,function(e,t){e.exports=function(e,t){for(var n=[],o=(t=t||0)||0;o<e.length;o++)n[o-t]=e[o];return n}},function(e,t){function n(e){e=e||{},this.ms=e.min||100,this.max=e.max||1e4,this.factor=e.factor||2,this.jitter=e.jitter>0&&e.jitter<=1?e.jitter:0,this.attempts=0}e.exports=n,n.prototype.duration=function(){var e=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var t=Math.random(),n=Math.floor(t*this.jitter*e);e=0==(1&Math.floor(10*t))?e-n:e+n}return 0|Math.min(e,this.max)},n.prototype.reset=function(){this.attempts=0},n.prototype.setMin=function(e){this.ms=e},n.prototype.setMax=function(e){this.max=e},n.prototype.setJitter=function(e){this.jitter=e}},function(e,t,n){\"use strict\";(function(t){var o=n(402),a=n(50),r=n(410);function c(e){if(\"undefined\"!==typeof MediaStream&&e instanceof MediaStream){var n=e;(e=arguments[1]||{}).stream=n}e=e||{};var a=\"undefined\"===typeof window.AudioContext?4096:null;a=e.bufferSize||a;o.call(this,e);var c=this,i=!0;function s(t){i&&c.push(e.objectMode?t.inputBuffer:r(t.inputBuffer.getChannelData(0).buffer))}var l,M=window.AudioContext||window.webkitAudioContext,p=this.context=e.context||new M,u=p.createScriptProcessor(a,1,1);u.connect(p.destination),this.setStream=function(e){this.stream=e,(l=p.createMediaStreamSource(e)).connect(u),u.onaudioprocess=s},e.stream&&this.setStream(n),this.stop=function(){if(\"closed\"!==p.state){try{this.stream.getTracks()[0].stop()}catch(e){}u.disconnect(),l&&l.disconnect();try{p.close()}catch(e){}i=!1,c.push(null),c.emit(\"close\")}},t.nextTick(function(){c.emit(\"format\",{channels:1,bitDepth:32,sampleRate:p.sampleRate,signed:!0,float:!0})})}a.inherits(c,o),c.prototype._read=function(){},c.toRaw=function(e){return new Float32Array(e.buffer)},e.exports=c}).call(this,n(18))},function(e,t,n){(t=e.exports=n(352)).Stream=t,t.Readable=t,t.Writable=n(356),t.Duplex=n(302),t.Transform=n(357),t.PassThrough=n(408),t.finished=n(316),t.pipeline=n(409)},,function(e,t,n){\"use strict\";function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var a=n(14).Buffer,r=n(405).inspect,c=r&&r.custom||\"inspect\";e.exports=function(){function e(){this.head=null,this.tail=null,this.length=0}var t=e.prototype;return t.push=function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length},t.unshift=function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length},t.shift=function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}},t.clear=function(){this.head=this.tail=null,this.length=0},t.join=function(e){if(0===this.length)return\"\";for(var t=this.head,n=\"\"+t.data;t=t.next;)n+=e+t.data;return n},t.concat=function(e){if(0===this.length)return a.alloc(0);for(var t,n,o,r=a.allocUnsafe(e>>>0),c=this.head,i=0;c;)t=c.data,n=r,o=i,a.prototype.copy.call(t,n,o),i+=c.data.length,c=c.next;return r},t.consume=function(e,t){var n;return e<this.head.data.length?(n=this.head.data.slice(0,e),this.head.data=this.head.data.slice(e)):n=e===this.head.data.length?this.shift():t?this._getString(e):this._getBuffer(e),n},t.first=function(){return this.head.data},t._getString=function(e){var t=this.head,n=1,o=t.data;for(e-=o.length;t=t.next;){var a=t.data,r=e>a.length?a.length:e;if(r===a.length?o+=a:o+=a.slice(0,e),0===(e-=r)){r===a.length?(++n,t.next?this.head=t.next:this.head=this.tail=null):(this.head=t,t.data=a.slice(r));break}++n}return this.length-=n,o},t._getBuffer=function(e){var t=a.allocUnsafe(e),n=this.head,o=1;for(n.data.copy(t),e-=n.data.length;n=n.next;){var r=n.data,c=e>r.length?r.length:e;if(r.copy(t,t.length-e,0,c),0===(e-=c)){c===r.length?(++o,n.next?this.head=n.next:this.head=this.tail=null):(this.head=n,n.data=r.slice(c));break}++o}return this.length-=o,t},t[c]=function(e,t){return r(this,function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);\"function\"===typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),a.forEach(function(t){o(e,t,n[t])})}return e}({},t,{depth:0,customInspect:!1}))},e}()},,function(e,t,n){\"use strict\";(function(t){var n=new Set;e.exports.emitExperimentalWarning=t.emitWarning?function(e){if(!n.has(e)){var o=e+\" is an experimental feature. This feature could change at any time\";n.add(e),t.emitWarning(o,\"ExperimentalWarning\")}}:function(){}}).call(this,n(18))},function(e,t,n){\"use strict\";(function(t){var o;function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var r=n(316),c=Symbol(\"lastResolve\"),i=Symbol(\"lastReject\"),s=Symbol(\"error\"),l=Symbol(\"ended\"),M=Symbol(\"lastPromise\"),p=Symbol(\"handlePromise\"),u=Symbol(\"stream\");function f(e,t){return{value:e,done:t}}function b(e){var t=e[c];if(null!==t){var n=e[u].read();null!==n&&(e[M]=null,e[c]=null,e[i]=null,t(f(n,!1)))}}var d=Object.getPrototypeOf(function(){}),h=Object.setPrototypeOf((a(o={get stream(){return this[u]},next:function(){var e=this,n=this[s];if(null!==n)return Promise.reject(n);if(this[l])return Promise.resolve(f(void 0,!0));if(this[u].destroyed)return new Promise(function(n,o){t.nextTick(function(){e[s]?o(e[s]):n(f(void 0,!0))})});var o,a=this[M];if(a)o=new Promise(function(e,t){return function(n,o){e.then(function(){t[l]?n(f(void 0,!0)):t[p](n,o)},o)}}(a,this));else{var r=this[u].read();if(null!==r)return Promise.resolve(f(r,!1));o=new Promise(this[p])}return this[M]=o,o}},Symbol.asyncIterator,function(){return this}),a(o,\"return\",function(){var e=this;return new Promise(function(t,n){e[u].destroy(null,function(e){e?n(e):t(f(void 0,!0))})})}),o),d);e.exports=function(e){var n,o=Object.create(h,(a(n={},u,{value:e,writable:!0}),a(n,c,{value:null,writable:!0}),a(n,i,{value:null,writable:!0}),a(n,s,{value:null,writable:!0}),a(n,l,{value:e._readableState.endEmitted,writable:!0}),a(n,p,{value:function(e,t){var n=o[u].read();n?(o[M]=null,o[c]=null,o[i]=null,e(f(n,!1))):(o[c]=e,o[i]=t)},writable:!0}),n));return o[M]=null,r(e,function(e){if(e&&\"ERR_STREAM_PREMATURE_CLOSE\"!==e.code){var t=o[i];return null!==t&&(o[M]=null,o[c]=null,o[i]=null,t(e)),void(o[s]=e)}var n=o[c];null!==n&&(o[M]=null,o[c]=null,o[i]=null,n(f(void 0,!0))),o[l]=!0}),e.on(\"readable\",function(e){t.nextTick(b,e)}.bind(null,o)),o}}).call(this,n(18))},function(e,t,n){\"use strict\";e.exports=a;var o=n(357);function a(e){if(!(this instanceof a))return new a(e);o.call(this,e)}n(8)(a,o),a.prototype._transform=function(e,t,n){n(null,e)}},function(e,t,n){\"use strict\";var o;var a=n(301).codes,r=a.ERR_MISSING_ARGS,c=a.ERR_STREAM_DESTROYED;function i(e){if(e)throw e}function s(e){e()}function l(e,t){return e.pipe(t)}e.exports=function(){for(var e=arguments.length,t=new Array(e),a=0;a<e;a++)t[a]=arguments[a];var M,p=function(e){return e.length?\"function\"!==typeof e[e.length-1]?i:e.pop():i}(t);if(Array.isArray(t[0])&&(t=t[0]),t.length<2)throw new r(\"streams\");var u=t.map(function(e,a){var r=a<t.length-1;return function(e,t,a,r){r=function(e){var t=!1;return function(){t||(t=!0,e.apply(void 0,arguments))}}(r);var i=!1;e.on(\"close\",function(){i=!0}),void 0===o&&(o=n(316)),o(e,{readable:t,writable:a},function(e){if(e)return r(e);i=!0,r()});var s=!1;return function(t){if(!i&&!s)return s=!0,function(e){return e.setHeader&&\"function\"===typeof e.abort}(e)?e.abort():\"function\"===typeof e.destroy?e.destroy():void r(t||new c(\"pipe\"))}}(e,r,a>0,function(e){M||(M=e),e&&u.forEach(s),r||(u.forEach(s),p(M))})});return t.reduce(l)}},function(e,t,n){(function(t){var n=Object.prototype.toString,o=\"function\"===typeof t.alloc&&\"function\"===typeof t.allocUnsafe&&\"function\"===typeof t.from;e.exports=function(e,a,r){if(\"number\"===typeof e)throw new TypeError('\"value\" argument must not be a number');return c=e,\"ArrayBuffer\"===n.call(c).slice(8,-1)?function(e,n,a){n>>>=0;var r=e.byteLength-n;if(r<0)throw new RangeError(\"'offset' is out of bounds\");if(void 0===a)a=r;else if((a>>>=0)>r)throw new RangeError(\"'length' is out of bounds\");return o?t.from(e.slice(n,n+a)):new t(new Uint8Array(e.slice(n,n+a)))}(e,a,r):\"string\"===typeof e?function(e,n){if(\"string\"===typeof n&&\"\"!==n||(n=\"utf8\"),!t.isEncoding(n))throw new TypeError('\"encoding\" must be a valid string encoding');return o?t.from(e,n):new t(e,n)}(e,a):o?t.from(e):new t(e);var c}}).call(this,n(14).Buffer)},function(e,t,n){var o=n(298),a=(o.System,o.VbrMode,o.Float,o.ShortBlock,o.Util,o.Arrays,o.new_array_n,o.new_byte),r=(o.new_double,o.new_float,o.new_float_n,o.new_int,o.new_int_n,o.assert);Lame=n(412),Presets=n(424),GainAnalysis=n(361),QuantizePVT=n(365),Quantize=n(425),Takehiro=n(364),Reservoir=n(429),MPEGMode=n(359),BitStream=n(363);n(299);var c=n(430),i=n(431);function s(){this.setModules=function(e,t){e,t}}function l(){this.setModules=function(e,t,n){e,t,n}}function M(){}function p(){this.setModules=function(e,t){e,t}}function u(){this.dataOffset=0,this.dataLen=0,this.channels=0,this.sampleRate=0}function f(e){return e.charCodeAt(0)<<24|e.charCodeAt(1)<<16|e.charCodeAt(2)<<8|e.charCodeAt(3)}u.RIFF=f(\"RIFF\"),u.WAVE=f(\"WAVE\"),u.fmt_=f(\"fmt \"),u.data=f(\"data\"),u.readHeader=function(e){var t=new u,n=e.getUint32(0,!1);if(u.RIFF==n){e.getUint32(4,!0);if(u.WAVE==e.getUint32(8,!1)&&u.fmt_==e.getUint32(12,!1)){var o=e.getUint32(16,!0),a=20;switch(o){case 16:case 18:t.channels=e.getUint16(a+2,!0),t.sampleRate=e.getUint32(a+4,!0);break;default:throw\"extended fmt chunk not implemented\"}a+=o;for(var r=u.data,c=0;r!=n&&(n=e.getUint32(a,!1),c=e.getUint32(a+4,!0),r!=n);)a+=c+8;return t.dataLen=c,t.dataOffset=a+8,t}}},e.exports.Mp3Encoder=function(e,t,n){3!=arguments.length&&(console.error(\"WARN: Mp3Encoder(channels, samplerate, kbps) not specified\"),e=1,t=44100,n=128);var o=new Lame,u=new s,f=new GainAnalysis,b=new BitStream,d=new Presets,h=new QuantizePVT,_=new Quantize,A=new i,m=new c,z=new p,g=new Reservoir,O=new Takehiro,L=new l,y=new M;o.setModules(f,b,d,h,_,A,m,z,y),b.setModules(f,y,m,A),z.setModules(b,m),d.setModules(o),_.setModules(b,g,h,O),h.setModules(O,g,o.enc.psy),g.setModules(b),O.setModules(h),A.setModules(o,b,m),u.setModules(L,y),L.setModules(m,z,d);var v=o.lame_init();v.num_channels=e,v.in_samplerate=t,v.brate=n,v.mode=MPEGMode.STEREO,v.quality=3,v.bWriteVbrTag=!1,v.disable_reservoir=!0,v.write_id3tag_automatic=!1;var N=o.lame_init_params(v);r(0==N);var q=1152,T=0|1.25*q+7200,B=a(T);this.encodeBuffer=function(t,n){1==e&&(n=t),r(t.length==n.length),t.length>q&&(q=t.length,B=a(T=0|1.25*q+7200));var c=o.lame_encode_buffer(v,t,n,t.length,B,0,T);return new Int8Array(B.subarray(0,c))},this.flush=function(){var e=o.lame_encode_flush(v,B,0,T);return new Int8Array(B.subarray(0,e))}},e.exports.WavHeader=u},function(e,t,n){var o=n(298),a=o.System,r=o.VbrMode,c=(o.Float,o.ShortBlock),i=(o.Util,o.Arrays,o.new_array_n,o.new_byte,o.new_double,o.new_float),s=(o.new_float_n,o.new_int,o.new_int_n),l=o.new_short_n,M=o.assert,p=n(413),u=n(417),f=n(307),b=n(421),d=n(422),h=n(423),_=n(363),A=n(318),m=n(299);e.exports=function e(){var t=this;e.V9=410,e.V8=420,e.V7=430,e.V6=440,e.V5=450,e.V4=460,e.V3=470,e.V2=480,e.V1=490,e.V0=500,e.R3MIX=1e3,e.STANDARD=1001,e.EXTREME=1002,e.INSANE=1003,e.STANDARD_FAST=1004,e.EXTREME_FAST=1005,e.MEDIUM=1006,e.MEDIUM_FAST=1007;var n,o,z,g,O;e.LAME_MAXMP3BUFFER=147456;var L,y,v,N=new p;function q(){this.mask_adjust=0,this.mask_adjust_short=0,this.bo_l_weight=i(m.SBMAX_l),this.bo_s_weight=i(m.SBMAX_s)}function T(){this.lowerlimit=0}function B(e,t){this.lowpass=t}this.enc=new m,this.setModules=function(e,t,a,r,c,i,s,l,M){n=e,o=t,z=a,g=r,O=c,L=i,y=l,v=M,this.enc.setModules(o,N,g,L)};var S=4294479419;function w(e){return e>1?0:e<=0?1:Math.cos(Math.PI/2*e)}function W(e,t){switch(e){case 44100:return t.version=1,0;case 48e3:return t.version=1,1;case 32e3:return t.version=1,2;case 22050:return t.version=0,0;case 24e3:return t.version=0,1;case 16e3:return t.version=0,2;case 11025:return t.version=0,0;case 12e3:return t.version=0,1;case 8e3:return t.version=0,2;default:return t.version=0,-1}}function X(e,t,n){n<16e3&&(t=2);for(var o=A.bitrate_table[t][1],a=2;a<=14;a++)A.bitrate_table[t][a]>0&&Math.abs(A.bitrate_table[t][a]-e)<Math.abs(o-e)&&(o=A.bitrate_table[t][a]);return o}function R(e,t,n){n<16e3&&(t=2);for(var o=0;o<=14;o++)if(A.bitrate_table[t][o]>0&&A.bitrate_table[t][o]==e)return o;return-1}function E(e,n){var o=[new B(8,2e3),new B(16,3700),new B(24,3900),new B(32,5500),new B(40,7e3),new B(48,7500),new B(56,1e4),new B(64,11e3),new B(80,13500),new B(96,15100),new B(112,15600),new B(128,17e3),new B(160,17500),new B(192,18600),new B(224,19400),new B(256,19700),new B(320,20500)],a=t.nearestBitrateFullIndex(n);e.lowerlimit=o[a].lowpass}function C(e){var t=m.BLKSIZE+e.framesize-m.FFTOFFSET;return t=Math.max(t,512+e.framesize-32),M(f.MFSIZE>=t),t}function k(e,n,o,a,r,c){var i=t.enc.lame_encode_mp3_frame(e,n,o,a,r,c);return e.frameNum++,i}function x(){this.n_in=0,this.n_out=0}function P(){this.num_used=0}function D(e,t,n){var o=Math.PI*t;(e/=n)<0&&(e=0),e>1&&(e=1);var a=e-.5,r=.42-.5*Math.cos(2*e*Math.PI)+.08*Math.cos(4*e*Math.PI);return Math.abs(a)<1e-9?o/Math.PI:r*Math.sin(n*o*a)/(Math.PI*n*a)}function F(e,t,n,o,a,r,c,s,l){var p,u,b=e.internal_flags,d=0,h=e.out_samplerate/function e(t,n){return 0!=n?e(n,t%n):t}(e.out_samplerate,e.in_samplerate);h>f.BPC&&(h=f.BPC);var _=Math.abs(b.resample_ratio-Math.floor(.5+b.resample_ratio))<1e-4?1:0,A=1/b.resample_ratio;A>1&&(A=1);var m=31;0==m%2&&--m;var z=(m+=_)+1;if(0==b.fill_buffer_resample_init){for(b.inbuf_old[0]=i(z),b.inbuf_old[1]=i(z),p=0;p<=2*h;++p)b.blackfilt[p]=i(z);for(b.itime[0]=0,b.itime[1]=0,d=0;d<=2*h;d++){var g=0,O=(d-h)/(2*h);for(p=0;p<=m;p++)g+=b.blackfilt[d][p]=D(p-O,A,m);for(p=0;p<=m;p++)b.blackfilt[d][p]/=g}b.fill_buffer_resample_init=1}var L=b.inbuf_old[l];for(u=0;u<o;u++){var y,v;if(y=u*b.resample_ratio,m+(d=0|Math.floor(y-b.itime[l]))-m/2>=c)break;O=y-b.itime[l]-(d+m%2*.5),M(Math.abs(O)<=.501),v=0|Math.floor(2*O*h+h+.5);var N=0;for(p=0;p<=m;++p){var q=p+d-m/2;M(q<c),M(q+z>=0),N+=(q<0?L[z+q]:a[r+q])*b.blackfilt[v][p]}t[n+u]=N}if(s.num_used=Math.min(c,m+d-m/2),b.itime[l]+=s.num_used-u*b.resample_ratio,s.num_used>=z)for(p=0;p<z;p++)L[p]=a[r+s.num_used+p-z];else{var T=z-s.num_used;for(p=0;p<T;++p)L[p]=L[p+s.num_used];for(d=0;p<z;++p,++d)L[p]=a[r+d];M(d==s.num_used)}return u}function I(e,t,n,o,a,r){var c=e.internal_flags;if(c.resample_ratio<.9999||c.resample_ratio>1.0001)for(var i=0;i<c.channels_out;i++){var s=new P;r.n_out=F(e,t[i],c.mf_size,e.framesize,n[i],o,a,s,i),r.n_in=s.num_used}else{r.n_out=Math.min(e.framesize,a),r.n_in=r.n_out;for(var l=0;l<r.n_out;++l)t[0][c.mf_size+l]=n[0][o+l],2==c.channels_out&&(t[1][c.mf_size+l]=n[1][o+l])}}this.lame_init=function(){var e=new u;return 0!=function(e){var t;return e.class_id=S,t=e.internal_flags=new f,e.mode=MPEGMode.NOT_SET,e.original=1,e.in_samplerate=44100,e.num_channels=2,e.num_samples=-1,e.bWriteVbrTag=!0,e.quality=-1,e.short_blocks=null,t.subblock_gain=-1,e.lowpassfreq=0,e.highpassfreq=0,e.lowpasswidth=-1,e.highpasswidth=-1,e.VBR=r.vbr_off,e.VBR_q=4,e.ATHcurve=-1,e.VBR_mean_bitrate_kbps=128,e.VBR_min_bitrate_kbps=0,e.VBR_max_bitrate_kbps=0,e.VBR_hard_min=0,t.VBR_min_bitrate=1,t.VBR_max_bitrate=13,e.quant_comp=-1,e.quant_comp_short=-1,e.msfix=-1,t.resample_ratio=1,t.OldValue[0]=180,t.OldValue[1]=180,t.CurrentStep[0]=4,t.CurrentStep[1]=4,t.masking_lower=1,t.nsPsy.attackthre=-1,t.nsPsy.attackthre_s=-1,e.scale=-1,e.athaa_type=-1,e.ATHtype=-1,e.athaa_loudapprox=-1,e.athaa_sensitivity=0,e.useTemporal=null,e.interChRatio=-1,t.mf_samples_to_encode=m.ENCDELAY+m.POSTDELAY,e.encoder_padding=0,t.mf_size=m.ENCDELAY-m.MDCTDELAY,e.findReplayGain=!1,e.decode_on_the_fly=!1,t.decode_on_the_fly=!1,t.findReplayGain=!1,t.findPeakSample=!1,t.RadioGain=0,t.AudiophileGain=0,t.noclipGainChange=0,t.noclipScale=-1,e.preset=0,e.write_id3tag_automatic=!0,0}(e)?null:(e.lame_allocated_gfp=1,e)},this.nearestBitrateFullIndex=function(e){var t=[8,16,24,32,40,48,56,64,80,96,112,128,160,192,224,256,320],n=0,o=0,a=0,r=0;r=t[16],a=16,o=t[16],n=16;for(var c=0;c<16;c++)if(Math.max(e,t[c+1])!=e){r=t[c+1],a=c+1,o=t[c],n=c;break}return r-e>e-o?n:a},this.lame_init_params=function(e){var t=e.internal_flags;if(t.Class_ID=0,null==t.ATH&&(t.ATH=new b),null==t.PSY&&(t.PSY=new q),null==t.rgdata&&(t.rgdata=new d),t.channels_in=e.num_channels,1==t.channels_in&&(e.mode=MPEGMode.MONO),t.channels_out=e.mode==MPEGMode.MONO?1:2,t.mode_ext=m.MPG_MD_MS_LR,e.mode==MPEGMode.MONO&&(e.force_ms=!1),e.VBR==r.vbr_off&&128!=e.VBR_mean_bitrate_kbps&&0==e.brate&&(e.brate=e.VBR_mean_bitrate_kbps),e.VBR==r.vbr_off||e.VBR==r.vbr_mtrh||e.VBR==r.vbr_mt||(e.free_format=!1),e.VBR==r.vbr_off&&0==e.brate&&_.EQ(e.compression_ratio,0)&&(e.compression_ratio=11.025),e.VBR==r.vbr_off&&e.compression_ratio>0&&(0==e.out_samplerate&&(e.out_samplerate=map2MP3Frequency(int(.97*e.in_samplerate))),e.brate=0|16*e.out_samplerate*t.channels_out/(1e3*e.compression_ratio),t.samplerate_index=W(e.out_samplerate,e),e.free_format||(e.brate=X(e.brate,e.version,e.out_samplerate))),0!=e.out_samplerate&&(e.out_samplerate<16e3?(e.VBR_mean_bitrate_kbps=Math.max(e.VBR_mean_bitrate_kbps,8),e.VBR_mean_bitrate_kbps=Math.min(e.VBR_mean_bitrate_kbps,64)):e.out_samplerate<32e3?(e.VBR_mean_bitrate_kbps=Math.max(e.VBR_mean_bitrate_kbps,8),e.VBR_mean_bitrate_kbps=Math.min(e.VBR_mean_bitrate_kbps,160)):(e.VBR_mean_bitrate_kbps=Math.max(e.VBR_mean_bitrate_kbps,32),e.VBR_mean_bitrate_kbps=Math.min(e.VBR_mean_bitrate_kbps,320))),0==e.lowpassfreq){var i=16e3;switch(e.VBR){case r.vbr_off:E(l=new T,e.brate),i=l.lowerlimit;break;case r.vbr_abr:var l;E(l=new T,e.VBR_mean_bitrate_kbps),i=l.lowerlimit;break;case r.vbr_rh:var u=[19500,19e3,18600,18e3,17500,16e3,15600,14900,12500,1e4,3950];if(0<=e.VBR_q&&e.VBR_q<=9){var f=u[e.VBR_q],B=u[e.VBR_q+1],C=e.VBR_q_frac;i=linear_int(f,B,C)}else i=19500;break;default:u=[19500,19e3,18500,18e3,17500,16500,15500,14500,12500,9500,3950],0<=e.VBR_q&&e.VBR_q<=9?(f=u[e.VBR_q],B=u[e.VBR_q+1],C=e.VBR_q_frac,i=linear_int(f,B,C)):i=19500}e.mode!=MPEGMode.MONO||e.VBR!=r.vbr_off&&e.VBR!=r.vbr_abr||(i*=1.5),e.lowpassfreq=0|i}if(0==e.out_samplerate&&(2*e.lowpassfreq>e.in_samplerate&&(e.lowpassfreq=e.in_samplerate/2),e.out_samplerate=function(e,t){var n=44100;return t>=48e3?n=48e3:t>=44100?n=44100:t>=32e3?n=32e3:t>=24e3?n=24e3:t>=22050?n=22050:t>=16e3?n=16e3:t>=12e3?n=12e3:t>=11025?n=11025:t>=8e3&&(n=8e3),-1==e?n:(e<=15960&&(n=44100),e<=15250&&(n=32e3),e<=11220&&(n=24e3),e<=9970&&(n=22050),e<=7230&&(n=16e3),e<=5420&&(n=12e3),e<=4510&&(n=11025),e<=3970&&(n=8e3),t<n?t>44100?48e3:t>32e3?44100:t>24e3?32e3:t>22050?24e3:t>16e3?22050:t>12e3?16e3:t>11025?12e3:t>8e3?11025:8e3:n)}(0|e.lowpassfreq,e.in_samplerate)),e.lowpassfreq=Math.min(20500,e.lowpassfreq),e.lowpassfreq=Math.min(e.out_samplerate/2,e.lowpassfreq),e.VBR==r.vbr_off&&(e.compression_ratio=16*e.out_samplerate*t.channels_out/(1e3*e.brate)),e.VBR==r.vbr_abr&&(e.compression_ratio=16*e.out_samplerate*t.channels_out/(1e3*e.VBR_mean_bitrate_kbps)),e.bWriteVbrTag||(e.findReplayGain=!1,e.decode_on_the_fly=!1,t.findPeakSample=!1),t.findReplayGain=e.findReplayGain,t.decode_on_the_fly=e.decode_on_the_fly,t.decode_on_the_fly&&(t.findPeakSample=!0),t.findReplayGain&&n.InitGainAnalysis(t.rgdata,e.out_samplerate)==GainAnalysis.INIT_GAIN_ANALYSIS_ERROR)return e.internal_flags=null,-6;switch(t.decode_on_the_fly&&!e.decode_only&&(null!=t.hip&&v.hip_decode_exit(t.hip),t.hip=v.hip_decode_init()),t.mode_gr=e.out_samplerate<=24e3?1:2,e.framesize=576*t.mode_gr,e.encoder_delay=m.ENCDELAY,t.resample_ratio=e.in_samplerate/e.out_samplerate,e.VBR){case r.vbr_mt:case r.vbr_rh:case r.vbr_mtrh:e.compression_ratio=[5.7,6.5,7.3,8.2,10,11.9,13,14,15,16.5][e.VBR_q];break;case r.vbr_abr:e.compression_ratio=16*e.out_samplerate*t.channels_out/(1e3*e.VBR_mean_bitrate_kbps);break;default:e.compression_ratio=16*e.out_samplerate*t.channels_out/(1e3*e.brate)}if(e.mode==MPEGMode.NOT_SET&&(e.mode=MPEGMode.JOINT_STEREO),e.highpassfreq>0?(t.highpass1=2*e.highpassfreq,e.highpasswidth>=0?t.highpass2=2*(e.highpassfreq+e.highpasswidth):t.highpass2=2*e.highpassfreq,t.highpass1/=e.out_samplerate,t.highpass2/=e.out_samplerate):(t.highpass1=0,t.highpass2=0),e.lowpassfreq>0?(t.lowpass2=2*e.lowpassfreq,e.lowpasswidth>=0?(t.lowpass1=2*(e.lowpassfreq-e.lowpasswidth),t.lowpass1<0&&(t.lowpass1=0)):t.lowpass1=2*e.lowpassfreq,t.lowpass1/=e.out_samplerate,t.lowpass2/=e.out_samplerate):(t.lowpass1=0,t.lowpass2=0),function(e){var t=e.internal_flags,n=32,o=-1;if(t.lowpass1>0){for(var r=999,c=0;c<=31;c++)(M=c/31)>=t.lowpass2&&(n=Math.min(n,c)),t.lowpass1<M&&M<t.lowpass2&&(r=Math.min(r,c));t.lowpass1=999==r?(n-.75)/31:(r-.75)/31,t.lowpass2=n/31}if(t.highpass2>0&&t.highpass2<.75/31*.9&&(t.highpass1=0,t.highpass2=0,a.err.println(\"Warning: highpass filter disabled.  highpass frequency too small\\n\")),t.highpass2>0){var i=-1;for(c=0;c<=31;c++)(M=c/31)<=t.highpass1&&(o=Math.max(o,c)),t.highpass1<M&&M<t.highpass2&&(i=Math.max(i,c));t.highpass1=o/31,t.highpass2=-1==i?(o+.75)/31:(i+.75)/31}for(c=0;c<32;c++){var s,l,M=c/31;s=t.highpass2>t.highpass1?w((t.highpass2-M)/(t.highpass2-t.highpass1+1e-20)):1,l=t.lowpass2>t.lowpass1?w((M-t.lowpass1)/(t.lowpass2-t.lowpass1+1e-20)):1,t.amp_filter[c]=s*l}}(e),t.samplerate_index=W(e.out_samplerate,e),t.samplerate_index<0)return e.internal_flags=null,-1;if(e.VBR==r.vbr_off){if(e.free_format)t.bitrate_index=0;else if(e.brate=X(e.brate,e.version,e.out_samplerate),t.bitrate_index=R(e.brate,e.version,e.out_samplerate),t.bitrate_index<=0)return e.internal_flags=null,-1}else t.bitrate_index=1;e.analysis&&(e.bWriteVbrTag=!1),null!=t.pinfo&&(e.bWriteVbrTag=!1),o.init_bit_stream_w(t);for(var k,x=t.samplerate_index+3*e.version+6*(e.out_samplerate<16e3?1:0),P=0;P<m.SBMAX_l+1;P++)t.scalefac_band.l[P]=g.sfBandIndex[x].l[P];for(P=0;P<m.PSFB21+1;P++){var D=(t.scalefac_band.l[22]-t.scalefac_band.l[21])/m.PSFB21,F=t.scalefac_band.l[21]+P*D;t.scalefac_band.psfb21[P]=F}for(t.scalefac_band.psfb21[m.PSFB21]=576,P=0;P<m.SBMAX_s+1;P++)t.scalefac_band.s[P]=g.sfBandIndex[x].s[P];for(P=0;P<m.PSFB12+1;P++)D=(t.scalefac_band.s[13]-t.scalefac_band.s[12])/m.PSFB12,F=t.scalefac_band.s[12]+P*D,t.scalefac_band.psfb12[P]=F;for(t.scalefac_band.psfb12[m.PSFB12]=192,1==e.version?t.sideinfo_len=1==t.channels_out?21:36:t.sideinfo_len=1==t.channels_out?13:21,e.error_protection&&(t.sideinfo_len+=2),function(e){var t=e.internal_flags;e.frameNum=0,e.write_id3tag_automatic&&y.id3tag_write_v2(e),t.bitrate_stereoMode_Hist=s([16,5]),t.bitrate_blockType_Hist=s([16,6]),t.PeakSample=0,e.bWriteVbrTag&&L.InitVbrTag(e)}(e),t.Class_ID=S,k=0;k<19;k++)t.nsPsy.pefirbuf[k]=700*t.mode_gr*t.channels_out;switch(-1==e.ATHtype&&(e.ATHtype=4),M(e.VBR_q<=9),M(e.VBR_q>=0),e.VBR){case r.vbr_mt:e.VBR=r.vbr_mtrh;case r.vbr_mtrh:null==e.useTemporal&&(e.useTemporal=!1),z.apply_preset(e,500-10*e.VBR_q,0),e.quality<0&&(e.quality=LAME_DEFAULT_QUALITY),e.quality<5&&(e.quality=0),e.quality>5&&(e.quality=5),t.PSY.mask_adjust=e.maskingadjust,t.PSY.mask_adjust_short=e.maskingadjust_short,e.experimentalY?t.sfb21_extra=!1:t.sfb21_extra=e.out_samplerate>44e3,t.iteration_loop=new VBRNewIterationLoop(O);break;case r.vbr_rh:z.apply_preset(e,500-10*e.VBR_q,0),t.PSY.mask_adjust=e.maskingadjust,t.PSY.mask_adjust_short=e.maskingadjust_short,e.experimentalY?t.sfb21_extra=!1:t.sfb21_extra=e.out_samplerate>44e3,e.quality>6&&(e.quality=6),e.quality<0&&(e.quality=LAME_DEFAULT_QUALITY),t.iteration_loop=new VBROldIterationLoop(O);break;default:var I;t.sfb21_extra=!1,e.quality<0&&(e.quality=LAME_DEFAULT_QUALITY),(I=e.VBR)==r.vbr_off&&(e.VBR_mean_bitrate_kbps=e.brate),z.apply_preset(e,e.VBR_mean_bitrate_kbps,0),e.VBR=I,t.PSY.mask_adjust=e.maskingadjust,t.PSY.mask_adjust_short=e.maskingadjust_short,I==r.vbr_off?t.iteration_loop=new h(O):t.iteration_loop=new ABRIterationLoop(O)}if(M(e.scale>=0),e.VBR!=r.vbr_off){if(t.VBR_min_bitrate=1,t.VBR_max_bitrate=14,e.out_samplerate<16e3&&(t.VBR_max_bitrate=8),0!=e.VBR_min_bitrate_kbps&&(e.VBR_min_bitrate_kbps=X(e.VBR_min_bitrate_kbps,e.version,e.out_samplerate),t.VBR_min_bitrate=R(e.VBR_min_bitrate_kbps,e.version,e.out_samplerate),t.VBR_min_bitrate<0))return-1;if(0!=e.VBR_max_bitrate_kbps&&(e.VBR_max_bitrate_kbps=X(e.VBR_max_bitrate_kbps,e.version,e.out_samplerate),t.VBR_max_bitrate=R(e.VBR_max_bitrate_kbps,e.version,e.out_samplerate),t.VBR_max_bitrate<0))return-1;e.VBR_min_bitrate_kbps=A.bitrate_table[e.version][t.VBR_min_bitrate],e.VBR_max_bitrate_kbps=A.bitrate_table[e.version][t.VBR_max_bitrate],e.VBR_mean_bitrate_kbps=Math.min(A.bitrate_table[e.version][t.VBR_max_bitrate],e.VBR_mean_bitrate_kbps),e.VBR_mean_bitrate_kbps=Math.max(A.bitrate_table[e.version][t.VBR_min_bitrate],e.VBR_mean_bitrate_kbps)}return e.tune&&(t.PSY.mask_adjust+=e.tune_value_a,t.PSY.mask_adjust_short+=e.tune_value_a),function(e){var t=e.internal_flags;switch(e.quality){default:case 9:t.psymodel=0,t.noise_shaping=0,t.noise_shaping_amp=0,t.noise_shaping_stop=0,t.use_best_huffman=0,t.full_outer_loop=0;break;case 8:e.quality=7;case 7:t.psymodel=1,t.noise_shaping=0,t.noise_shaping_amp=0,t.noise_shaping_stop=0,t.use_best_huffman=0,t.full_outer_loop=0;break;case 6:case 5:t.psymodel=1,0==t.noise_shaping&&(t.noise_shaping=1),t.noise_shaping_amp=0,t.noise_shaping_stop=0,-1==t.subblock_gain&&(t.subblock_gain=1),t.use_best_huffman=0,t.full_outer_loop=0;break;case 4:t.psymodel=1,0==t.noise_shaping&&(t.noise_shaping=1),t.noise_shaping_amp=0,t.noise_shaping_stop=0,-1==t.subblock_gain&&(t.subblock_gain=1),t.use_best_huffman=1,t.full_outer_loop=0;break;case 3:t.psymodel=1,0==t.noise_shaping&&(t.noise_shaping=1),t.noise_shaping_amp=1,t.noise_shaping_stop=1,-1==t.subblock_gain&&(t.subblock_gain=1),t.use_best_huffman=1,t.full_outer_loop=0;break;case 2:t.psymodel=1,0==t.noise_shaping&&(t.noise_shaping=1),0==t.substep_shaping&&(t.substep_shaping=2),t.noise_shaping_amp=1,t.noise_shaping_stop=1,-1==t.subblock_gain&&(t.subblock_gain=1),t.use_best_huffman=1,t.full_outer_loop=0;break;case 1:case 0:t.psymodel=1,0==t.noise_shaping&&(t.noise_shaping=1),0==t.substep_shaping&&(t.substep_shaping=2),t.noise_shaping_amp=2,t.noise_shaping_stop=1,-1==t.subblock_gain&&(t.subblock_gain=1),t.use_best_huffman=1,t.full_outer_loop=0}}(e),M(e.scale>=0),e.athaa_type<0?t.ATH.useAdjust=3:t.ATH.useAdjust=e.athaa_type,t.ATH.aaSensitivityP=Math.pow(10,e.athaa_sensitivity/-10),null==e.short_blocks&&(e.short_blocks=c.short_block_allowed),e.short_blocks!=c.short_block_allowed||e.mode!=MPEGMode.JOINT_STEREO&&e.mode!=MPEGMode.STEREO||(e.short_blocks=c.short_block_coupled),e.quant_comp<0&&(e.quant_comp=1),e.quant_comp_short<0&&(e.quant_comp_short=0),e.msfix<0&&(e.msfix=0),e.exp_nspsytune=1|e.exp_nspsytune,e.internal_flags.nsPsy.attackthre<0&&(e.internal_flags.nsPsy.attackthre=p.NSATTACKTHRE),e.internal_flags.nsPsy.attackthre_s<0&&(e.internal_flags.nsPsy.attackthre_s=p.NSATTACKTHRE_S),M(e.scale>=0),e.scale<0&&(e.scale=1),e.ATHtype<0&&(e.ATHtype=4),e.ATHcurve<0&&(e.ATHcurve=4),e.athaa_loudapprox<0&&(e.athaa_loudapprox=2),e.interChRatio<0&&(e.interChRatio=0),null==e.useTemporal&&(e.useTemporal=!0),t.slot_lag=t.frac_SpF=0,e.VBR==r.vbr_off&&(t.slot_lag=t.frac_SpF=72e3*(e.version+1)*e.brate%e.out_samplerate|0),g.iteration_init(e),N.psymodel_init(e),M(e.scale>=0),0},this.lame_encode_flush=function(e,t,n,a){var r,c,i,s,M=e.internal_flags,p=l([2,1152]),u=0,f=M.mf_samples_to_encode-m.POSTDELAY,b=C(e);if(M.mf_samples_to_encode<1)return 0;for(r=0,e.in_samplerate!=e.out_samplerate&&(f+=16*e.out_samplerate/e.in_samplerate),(i=e.framesize-f%e.framesize)<576&&(i+=e.framesize),e.encoder_padding=i,s=(f+i)/e.framesize;s>0&&u>=0;){var d=b-M.mf_size,h=e.frameNum;d*=e.in_samplerate,(d/=e.out_samplerate)>1152&&(d=1152),d<1&&(d=1),c=a-r,0==a&&(c=0),n+=u=this.lame_encode_buffer(e,p[0],p[1],d,t,n,c),r+=u,s-=h!=e.frameNum?1:0}if(M.mf_samples_to_encode=0,u<0)return u;if(c=a-r,0==a&&(c=0),o.flush_bitstream(e),(u=o.copy_buffer(M,t,n,c,1))<0)return u;if(n+=u,c=a-(r+=u),0==a&&(c=0),e.write_id3tag_automatic){if(y.id3tag_write_v1(e),(u=o.copy_buffer(M,t,n,c,0))<0)return u;r+=u}return r},this.lame_encode_buffer=function(e,t,a,r,c,s,l){var p=e.internal_flags,u=[null,null];if(p.Class_ID!=S)return-3;if(0==r)return 0;!function(e,t){(null==e.in_buffer_0||e.in_buffer_nsamples<t)&&(e.in_buffer_0=i(t),e.in_buffer_1=i(t),e.in_buffer_nsamples=t)}(p,r),u[0]=p.in_buffer_0,u[1]=p.in_buffer_1;for(var b=0;b<r;b++)u[0][b]=t[b],p.channels_in>1&&(u[1][b]=a[b]);return function(e,t,a,r,c,i,s){var l,p,u,b,d,h=e.internal_flags,A=0,z=[null,null],g=[null,null];if(h.Class_ID!=S)return-3;if(0==r)return 0;if((d=o.copy_buffer(h,c,i,s,0))<0)return d;if(i+=d,A+=d,g[0]=t,g[1]=a,_.NEQ(e.scale,0)&&_.NEQ(e.scale,1))for(p=0;p<r;++p)g[0][p]*=e.scale,2==h.channels_out&&(g[1][p]*=e.scale);if(_.NEQ(e.scale_left,0)&&_.NEQ(e.scale_left,1))for(p=0;p<r;++p)g[0][p]*=e.scale_left;if(_.NEQ(e.scale_right,0)&&_.NEQ(e.scale_right,1))for(p=0;p<r;++p)g[1][p]*=e.scale_right;if(2==e.num_channels&&1==h.channels_out)for(p=0;p<r;++p)g[0][p]=.5*(g[0][p]+g[1][p]),g[1][p]=0;b=C(e),z[0]=h.mfbuf[0],z[1]=h.mfbuf[1];for(var O=0;r>0;){var L=[null,null],y=0,v=0;L[0]=g[0],L[1]=g[1];var N=new x;if(I(e,z,L,O,r,N),y=N.n_in,v=N.n_out,h.findReplayGain&&!h.decode_on_the_fly&&n.AnalyzeSamples(h.rgdata,z[0],h.mf_size,z[1],h.mf_size,v,h.channels_out)==GainAnalysis.GAIN_ANALYSIS_ERROR)return-6;if(r-=y,O+=y,h.channels_out,h.mf_size+=v,M(h.mf_size<=f.MFSIZE),h.mf_samples_to_encode<1&&(h.mf_samples_to_encode=m.ENCDELAY+m.POSTDELAY),h.mf_samples_to_encode+=v,h.mf_size>=b){var q=s-A;if(0==s&&(q=0),(l=k(e,z[0],z[1],c,i,q))<0)return l;for(i+=l,A+=l,h.mf_size-=e.framesize,h.mf_samples_to_encode-=e.framesize,u=0;u<h.channels_out;u++)for(p=0;p<h.mf_size;p++)z[u][p]=z[u][p+e.framesize]}}return M(0==r),A}(e,u[0],u[1],r,c,s,l)}}},function(e,t,n){var o=n(298),a=(o.System,o.VbrMode),r=o.Float,c=o.ShortBlock,i=o.Util,s=o.Arrays,l=(o.new_array_n,o.new_byte,o.new_double,o.new_float),M=o.new_float_n,p=o.new_int,u=(o.new_int_n,o.assert),f=n(414),b=n(299);e.exports=function(){var e=new f,t=2.302585092994046,n=2,o=16,d=2,h=16,_=.34,A=1/217621504/(b.BLKSIZE/2),m=.3,z=21,g=.2302585093;function O(e){return e}function L(e,t){for(var n=0,o=0;o<b.BLKSIZE/2;++o)n+=e[o]*t.ATH.eql_w[o];return n*=A}function y(t,n,o,a,r,c,s,l,M,p,u){var f=t.internal_flags;if(M<2)e.fft_long(f,a[r],M,p,u),e.fft_short(f,c[s],M,p,u);else if(2==M){for(var d=b.BLKSIZE-1;d>=0;--d){var h=a[r+0][d],_=a[r+1][d];a[r+0][d]=(h+_)*i.SQRT2*.5,a[r+1][d]=(h-_)*i.SQRT2*.5}for(var A=2;A>=0;--A)for(d=b.BLKSIZE_s-1;d>=0;--d)h=c[s+0][A][d],_=c[s+1][A][d],c[s+0][A][d]=(h+_)*i.SQRT2*.5,c[s+1][A][d]=(h-_)*i.SQRT2*.5}for(n[0]=O(a[r+0][0]),n[0]*=n[0],d=b.BLKSIZE/2-1;d>=0;--d){var m=a[r+0][b.BLKSIZE/2-d],z=a[r+0][b.BLKSIZE/2+d];n[b.BLKSIZE/2-d]=O(.5*(m*m+z*z))}for(A=2;A>=0;--A)for(o[A][0]=c[s+0][A][0],o[A][0]*=o[A][0],d=b.BLKSIZE_s/2-1;d>=0;--d)m=c[s+0][A][b.BLKSIZE_s/2-d],z=c[s+0][A][b.BLKSIZE_s/2+d],o[A][b.BLKSIZE_s/2-d]=O(.5*(m*m+z*z));var g=0;for(d=11;d<b.HBLKSIZE;d++)g+=n[d];if(f.tot_ener[M]=g,t.analysis){for(d=0;d<b.HBLKSIZE;d++)f.pinfo.energy[l][M][d]=f.pinfo.energy_save[M][d],f.pinfo.energy_save[M][d]=n[d];f.pinfo.pe[l][M]=f.pe[M]}2==t.athaa_loudapprox&&M<2&&(f.loudness_sq[l][M]=f.loudness_sq_save[M],f.loudness_sq_save[M]=L(n,f))}var v,N,q,T=8,B=23,S=15,w=[1,.79433,.63096,.63096,.63096,.63096,.63096,.25119,.11749],W=[3.3246*3.3246,3.23837*3.23837,9.9500500969,9.0247369744,8.1854926609,7.0440875649,2.46209*2.46209,2.284*2.284,4.4892710641,1.96552*1.96552,1.82335*1.82335,1.69146*1.69146,2.4621061921,2.1508568964,1.37074*1.37074,1.31036*1.31036,1.5691069696,1.4555939904,1.16203*1.16203,1.2715945225,1.09428*1.09428,1.0659*1.0659,1.0779838276,1.0382591025,1],X=[1.7782755904,1.35879*1.35879,1.38454*1.38454,1.39497*1.39497,1.40548*1.40548,1.3537*1.3537,1.6999465924,1.22321*1.22321,1.3169398564,1],R=[5.5396212496,2.29259*2.29259,4.9868695969,2.12675*2.12675,2.02545*2.02545,1.87894*1.87894,1.74303*1.74303,1.61695*1.61695,2.2499700001,1.39148*1.39148,1.29083*1.29083,1.19746*1.19746,1.2339655056,1.0779838276];function E(e,t,n,o,a,r){var c,s,l;if(t>e){if(!(t<e*N))return e+t;c=t/e}else{if(e>=t*N)return e+t;c=e/t}if(u(e>=0),u(t>=0),e+=t,o+3<=6){if(c>=v)return e;var M=0|i.FAST_LOG10_X(c,16);return e*X[M]}return M=0|i.FAST_LOG10_X(c,16),t=0!=r?a.ATH.cb_s[n]*a.ATH.adjust:a.ATH.cb_l[n]*a.ATH.adjust,u(t>=0),e<q*t?e>t?(s=1,M<=13&&(s=R[M]),l=i.FAST_LOG10_X(e/t,10/15),e*((W[M]-s)*l+s)):M>13?e:e*R[M]:e*W[M]}var C=[1.7782755904,1.35879*1.35879,1.38454*1.38454,1.39497*1.39497,1.40548*1.40548,1.3537*1.3537,1.6999465924,1.22321*1.22321,1.3169398564,1];function k(e,t,n){var o;if(e<0&&(e=0),t<0&&(t=0),e<=0)return t;if(t<=0)return e;if(o=t>e?t/e:e/t,-2<=n&&n<=2){if(o>=v)return e+t;var a=0|i.FAST_LOG10_X(o,16);return(e+t)*C[a]}return o<N?e+t:(e<t&&(e=t),e)}function x(e,t,n,o,a){var r,c,i=0,s=0;for(r=c=0;r<b.SBMAX_s;++c,++r){for(var l=e.bo_s[r],M=e.npart_s,p=l<M?l:M;c<p;)u(t[c]>=0),u(n[c]>=0),i+=t[c],s+=n[c],c++;if(e.en[o].s[r][a]=i,e.thm[o].s[r][a]=s,c>=M){++r;break}u(t[c]>=0),u(n[c]>=0);var f=e.PSY.bo_s_weight[r],d=1-f;i=f*t[c],s=f*n[c],e.en[o].s[r][a]+=i,e.thm[o].s[r][a]+=s,i=d*t[c],s=d*n[c]}for(;r<b.SBMAX_s;++r)e.en[o].s[r][a]=0,e.thm[o].s[r][a]=0}function P(e,t,n,o){var a,r,c=0,i=0;for(a=r=0;a<b.SBMAX_l;++r,++a){for(var s=e.bo_l[a],l=e.npart_l,M=s<l?s:l;r<M;)u(t[r]>=0),u(n[r]>=0),c+=t[r],i+=n[r],r++;if(e.en[o].l[a]=c,e.thm[o].l[a]=i,r>=l){++a;break}u(t[r]>=0),u(n[r]>=0);var p=e.PSY.bo_l_weight[a],f=1-p;c=p*t[r],i=p*n[r],e.en[o].l[a]+=c,e.thm[o].l[a]+=i,c=f*t[r],i=f*n[r]}for(;a<b.SBMAX_l;++a)e.en[o].l[a]=0,e.thm[o].l[a]=0}function D(e,t,n,o,a,r){var c,i,s=e.internal_flags;for(i=c=0;i<s.npart_s;++i){for(var l=0,M=0,p=s.numlines_s[i],f=0;f<p;++f,++c){var _=t[r][c];l+=_,M<_&&(M=_)}n[i]=l}for(u(i==s.npart_s),u(129==c),c=i=0;i<s.npart_s;i++){var A=s.s3ind_s[i][0],m=s.s3_ss[c++]*n[A];for(++A;A<=s.s3ind_s[i][1];)m+=s.s3_ss[c]*n[A],++c,++A;var z=d*s.nb_s1[a][i];if(o[i]=Math.min(m,z),s.blocktype_old[1&a]==b.SHORT_TYPE){z=h*s.nb_s2[a][i];var g=o[i];o[i]=Math.min(z,g)}s.nb_s2[a][i]=s.nb_s1[a][i],s.nb_s1[a][i]=m,u(o[i]>=0)}for(;i<=b.CBANDS;++i)n[i]=0,o[i]=0}function F(e,t,n){return n>=1?e:n<=0?t:t>0?Math.pow(e/t,n)*t:0}var I=[11.8,13.6,17.2,32,46.5,51.3,57.5,67.1,71.5,84.6,97.6,130];function H(e,n){for(var o=309.07,a=0;a<b.SBMAX_s-1;a++)for(var r=0;r<3;r++){var c=e.thm.s[a][r];if(u(a<I.length),c>0){var s=c*n,l=e.en.s[a][r];l>s&&(l>1e10*s?o+=I[a]*(10*t):(u(s>0),o+=I[a]*i.FAST_LOG10(l/s)))}}return o}var V=[6.8,5.8,5.8,6.4,6.5,9.9,12.1,14.4,15,18.9,21.6,26.9,34.2,40.2,46.8,56.5,60.7,73.9,85.7,93.4,126.1];function U(e,n){for(var o=281.0575,a=0;a<b.SBMAX_l-1;a++){var r=e.thm.l[a];if(u(a<V.length),r>0){var c=r*n,s=e.en.l[a];s>c&&(s>1e10*c?o+=V[a]*(10*t):(u(c>0),o+=V[a]*i.FAST_LOG10(s/c)))}}return o}function j(e,t,n,o,a){var r,c;for(r=c=0;r<e.npart_l;++r){var i,s=0,l=0;for(i=0;i<e.numlines_l[r];++i,++c){var M=t[c];u(M>=0),s+=M,l<M&&(l=M)}n[r]=s,o[r]=l,a[r]=s*e.rnumlines_l[r],u(e.rnumlines_l[r]>=0),u(s>=0),u(n[r]>=0),u(o[r]>=0),u(a[r]>=0)}}function Y(e,t,n,o){var a=w.length-1,r=0,c=n[r]+n[r+1];for(u(c>=0),c>0?((i=t[r])<t[r+1]&&(i=t[r+1]),u(e.numlines_l[r]+e.numlines_l[r+1]-1>0),(s=0|(c=20*(2*i-c)/(c*(e.numlines_l[r]+e.numlines_l[r+1]-1))))>a&&(s=a),o[r]=s):o[r]=0,r=1;r<e.npart_l-1;r++){var i,s;c=n[r-1]+n[r]+n[r+1],u(c>=0),c>0?((i=t[r-1])<t[r]&&(i=t[r]),i<t[r+1]&&(i=t[r+1]),u(e.numlines_l[r-1]+e.numlines_l[r]+e.numlines_l[r+1]-1>0),(s=0|(c=20*(3*i-c)/(c*(e.numlines_l[r-1]+e.numlines_l[r]+e.numlines_l[r+1]-1))))>a&&(s=a),o[r]=s):o[r]=0}u(r>0),u(r==e.npart_l-1),c=n[r-1]+n[r],u(c>=0),c>0?((i=t[r-1])<t[r]&&(i=t[r]),u(e.numlines_l[r-1]+e.numlines_l[r]-1>0),(s=0|(c=20*(2*i-c)/(c*(e.numlines_l[r-1]+e.numlines_l[r]-1))))>a&&(s=a),o[r]=s):o[r]=0,u(r==e.npart_l-1)}var G=[-1.730326e-17,-.01703172,-1.349528e-17,.0418072,-6.73278e-17,-.0876324,-3.0835e-17,.1863476,-1.104424e-16,-.627638];function K(t,n,o,a,r,c,s,l){var M=t.internal_flags;if(a<2)e.fft_long(M,s[l],a,n,o);else if(2==a)for(var p=b.BLKSIZE-1;p>=0;--p){var u=s[l+0][p],f=s[l+1][p];s[l+0][p]=(u+f)*i.SQRT2*.5,s[l+1][p]=(u-f)*i.SQRT2*.5}for(c[0]=O(s[l+0][0]),c[0]*=c[0],p=b.BLKSIZE/2-1;p>=0;--p){var d=s[l+0][b.BLKSIZE/2-p],h=s[l+0][b.BLKSIZE/2+p];c[b.BLKSIZE/2-p]=O(.5*(d*d+h*h))}var _=0;for(p=11;p<b.HBLKSIZE;p++)_+=c[p];if(M.tot_ener[a]=_,t.analysis){for(p=0;p<b.HBLKSIZE;p++)M.pinfo.energy[r][a][p]=M.pinfo.energy_save[a][p],M.pinfo.energy_save[a][p]=c[p];M.pinfo.pe[r][a]=M.pe[a]}}function Q(t,n,o,a,r,c,s,l){var M=t.internal_flags;if(0==r&&a<2&&e.fft_short(M,s[l],a,n,o),2==a)for(var p=b.BLKSIZE_s-1;p>=0;--p){var u=s[l+0][r][p],f=s[l+1][r][p];s[l+0][r][p]=(u+f)*i.SQRT2*.5,s[l+1][r][p]=(u-f)*i.SQRT2*.5}for(c[r][0]=s[l+0][r][0],c[r][0]*=c[r][0],p=b.BLKSIZE_s/2-1;p>=0;--p){var d=s[l+0][r][b.BLKSIZE_s/2-p],h=s[l+0][r][b.BLKSIZE_s/2+p];c[r][b.BLKSIZE_s/2-p]=O(.5*(d*d+h*h))}}function J(e,t,n,o){var a=e.internal_flags;2==e.athaa_loudapprox&&n<2&&(a.loudness_sq[t][n]=a.loudness_sq_save[n],a.loudness_sq_save[n]=L(o,a))}this.L3psycho_anal_ns=function(e,t,r,i,f,d,h,_,A,g){var O,L,v,N,q,T,B,S,W,X,R=e.internal_flags,C=M([2,b.BLKSIZE]),k=M([2,3,b.BLKSIZE_s]),I=l(b.CBANDS+1),V=l(b.CBANDS+1),K=l(b.CBANDS+2),Q=p(2),J=p(2),Z=M([2,576]),$=p(b.CBANDS+2),ee=p(b.CBANDS+2);for(s.fill(ee,0),O=R.channels_out,e.mode==MPEGMode.JOINT_STEREO&&(O=4),W=e.VBR==a.vbr_off?0==R.ResvMax?0:R.ResvSize/R.ResvMax*.5:e.VBR==a.vbr_rh||e.VBR==a.vbr_mtrh||e.VBR==a.vbr_mt?.6:1,L=0;L<R.channels_out;L++){var te=t[L],ne=r+576-350-z+192;for(u(G.length==(z-1)/2),N=0;N<576;N++){var oe,ae;for(oe=te[ne+N+10],ae=0,q=0;q<(z-1)/2-1;q+=2)oe+=G[q]*(te[ne+N+q]+te[ne+N+z-q]),ae+=G[q+1]*(te[ne+N+q+1]+te[ne+N+z-q-1]);Z[L][N]=oe+ae}f[i][L].en.assign(R.en[L]),f[i][L].thm.assign(R.thm[L]),O>2&&(d[i][L].en.assign(R.en[L+2]),d[i][L].thm.assign(R.thm[L+2]))}for(L=0;L<O;L++){var re,ce=l(12),ie=[0,0,0,0],se=l(12),le=1,Me=l(b.CBANDS),pe=l(b.CBANDS),ue=[0,0,0,0],fe=l(b.HBLKSIZE),be=M([3,b.HBLKSIZE_s]);for(u(R.npart_s<=b.CBANDS),u(R.npart_l<=b.CBANDS),N=0;N<3;N++)ce[N]=R.nsPsy.last_en_subshort[L][N+6],u(R.nsPsy.last_en_subshort[L][N+4]>0),se[N]=ce[N]/R.nsPsy.last_en_subshort[L][N+4],ie[0]+=ce[N];if(2==L)for(N=0;N<576;N++){var de,he;de=Z[0][N],he=Z[1][N],Z[0][N]=de+he,Z[1][N]=de-he}var _e=Z[1&L],Ae=0;for(N=0;N<9;N++){for(var me=Ae+64,ze=1;Ae<me;Ae++)ze<Math.abs(_e[Ae])&&(ze=Math.abs(_e[Ae]));R.nsPsy.last_en_subshort[L][N]=ce[N+3]=ze,ie[1+N/3]+=ze,ze>ce[N+3-2]?(u(ce[N+3-2]>0),ze/=ce[N+3-2]):ce[N+3-2]>10*ze?(u(ze>0),ze=ce[N+3-2]/(10*ze)):ze=0,se[N+3]=ze}if(e.analysis){var ge=se[0];for(N=1;N<12;N++)ge<se[N]&&(ge=se[N]);R.pinfo.ers[i][L]=R.pinfo.ers_save[L],R.pinfo.ers_save[L]=ge}for(re=3==L?R.nsPsy.attackthre_s:R.nsPsy.attackthre,N=0;N<12;N++)0==ue[N/3]&&se[N]>re&&(ue[N/3]=N%3+1);for(N=1;N<4;N++){var Oe;ie[N-1]>ie[N]?(u(ie[N]>0),Oe=ie[N-1]/ie[N]):(u(ie[N-1]>0),Oe=ie[N]/ie[N-1]),Oe<1.7&&(ue[N]=0,1==N&&(ue[0]=0))}for(0!=ue[0]&&0!=R.nsPsy.lastAttacks[L]&&(ue[0]=0),3!=R.nsPsy.lastAttacks[L]&&ue[0]+ue[1]+ue[2]+ue[3]==0||(le=0,0!=ue[1]&&0!=ue[0]&&(ue[1]=0),0!=ue[2]&&0!=ue[1]&&(ue[2]=0),0!=ue[3]&&0!=ue[2]&&(ue[3]=0)),L<2?J[L]=le:0==le&&(J[0]=J[1]=0),A[L]=R.tot_ener[L],y(e,fe,be,C,1&L,k,1&L,i,L,t,r),j(R,fe,I,Me,pe),Y(R,Me,pe,$),S=0;S<3;S++){var Le,ye;for(D(e,be,V,K,L,S),x(R,V,K,L,S),B=0;B<b.SBMAX_s;B++){if(ye=R.thm[L].s[B][S],ye*=.8,ue[S]>=2||1==ue[S+1]){var ve=0!=S?S-1:2;ze=F(R.thm[L].s[B][ve],ye,.6*W),ye=Math.min(ye,ze)}1==ue[S]?(ve=0!=S?S-1:2,ze=F(R.thm[L].s[B][ve],ye,m*W),ye=Math.min(ye,ze)):(0!=S&&3==ue[S-1]||0==S&&3==R.nsPsy.lastAttacks[L])&&(ve=2!=S?S+1:0,ze=F(R.thm[L].s[B][ve],ye,m*W),ye=Math.min(ye,ze)),Le=ce[3*S+3]+ce[3*S+4]+ce[3*S+5],6*ce[3*S+5]<Le&&(ye*=.5,6*ce[3*S+4]<Le&&(ye*=.5)),R.thm[L].s[B][S]=ye}}for(R.nsPsy.lastAttacks[L]=ue[2],T=0,v=0;v<R.npart_l;v++){for(var Ne=R.s3ind[v][0],qe=I[Ne]*w[$[Ne]],Te=R.s3_ll[T++]*qe;++Ne<=R.s3ind[v][1];)qe=I[Ne]*w[$[Ne]],Te=E(Te,R.s3_ll[T++]*qe,Ne,Ne-v,R,0);Te*=.158489319246111,R.blocktype_old[1&L]==b.SHORT_TYPE?K[v]=Te:K[v]=F(Math.min(Te,Math.min(n*R.nb_1[L][v],o*R.nb_2[L][v])),Te,W),R.nb_2[L][v]=R.nb_1[L][v],R.nb_1[L][v]=Te}for(;v<=b.CBANDS;++v)I[v]=0,K[v]=0;P(R,I,K,L)}for(e.mode!=MPEGMode.STEREO&&e.mode!=MPEGMode.JOINT_STEREO||e.interChRatio>0&&function(e,t){var n=e.internal_flags;if(n.channels_out>1){for(var o=0;o<b.SBMAX_l;o++){var a=n.thm[0].l[o],r=n.thm[1].l[o];n.thm[0].l[o]+=r*t,n.thm[1].l[o]+=a*t}for(o=0;o<b.SBMAX_s;o++)for(var c=0;c<3;c++)a=n.thm[0].s[o][c],r=n.thm[1].s[o][c],n.thm[0].s[o][c]+=r*t,n.thm[1].s[o][c]+=a*t}}(e,e.interChRatio),e.mode==MPEGMode.JOINT_STEREO&&(function(e){for(var t=0;t<b.SBMAX_l;t++)if(!(e.thm[0].l[t]>1.58*e.thm[1].l[t]||e.thm[1].l[t]>1.58*e.thm[0].l[t])){var n=e.mld_l[t]*e.en[3].l[t],o=Math.max(e.thm[2].l[t],Math.min(e.thm[3].l[t],n));n=e.mld_l[t]*e.en[2].l[t];var a=Math.max(e.thm[3].l[t],Math.min(e.thm[2].l[t],n));e.thm[2].l[t]=o,e.thm[3].l[t]=a}for(t=0;t<b.SBMAX_s;t++)for(var r=0;r<3;r++)e.thm[0].s[t][r]>1.58*e.thm[1].s[t][r]||e.thm[1].s[t][r]>1.58*e.thm[0].s[t][r]||(n=e.mld_s[t]*e.en[3].s[t][r],o=Math.max(e.thm[2].s[t][r],Math.min(e.thm[3].s[t][r],n)),n=e.mld_s[t]*e.en[2].s[t][r],a=Math.max(e.thm[3].s[t][r],Math.min(e.thm[2].s[t][r],n)),e.thm[2].s[t][r]=o,e.thm[3].s[t][r]=a)}(R),X=e.msfix,Math.abs(X)>0&&function(e,t,n){var o=t,a=Math.pow(10,n);t*=2,o*=2;for(var r=0;r<b.SBMAX_l;r++)M=e.ATH.cb_l[e.bm_l[r]]*a,(i=Math.min(Math.max(e.thm[0].l[r],M),Math.max(e.thm[1].l[r],M)))*t<(s=Math.max(e.thm[2].l[r],M))+(l=Math.max(e.thm[3].l[r],M))&&u((s*=p=i*o/(s+l))+(l*=p)>0),e.thm[2].l[r]=Math.min(s,e.thm[2].l[r]),e.thm[3].l[r]=Math.min(l,e.thm[3].l[r]);for(a*=b.BLKSIZE_s/b.BLKSIZE,r=0;r<b.SBMAX_s;r++)for(var c=0;c<3;c++){var i,s,l,M,p;M=e.ATH.cb_s[e.bm_s[r]]*a,(i=Math.min(Math.max(e.thm[0].s[r][c],M),Math.max(e.thm[1].s[r][c],M)))*t<(s=Math.max(e.thm[2].s[r][c],M))+(l=Math.max(e.thm[3].s[r][c],M))&&u((s*=p=i*t/(s+l))+(l*=p)>0),e.thm[2].s[r][c]=Math.min(e.thm[2].s[r][c],s),e.thm[3].s[r][c]=Math.min(e.thm[3].s[r][c],l)}}(R,X,e.ATHlower*R.ATH.adjust)),function(e,t,n,o){var a=e.internal_flags;e.short_blocks!=c.short_block_coupled||0!=t[0]&&0!=t[1]||(t[0]=t[1]=0);for(var r=0;r<a.channels_out;r++)o[r]=b.NORM_TYPE,e.short_blocks==c.short_block_dispensed&&(t[r]=1),e.short_blocks==c.short_block_forced&&(t[r]=0),0!=t[r]?(u(a.blocktype_old[r]!=b.START_TYPE),a.blocktype_old[r]==b.SHORT_TYPE&&(o[r]=b.STOP_TYPE)):(o[r]=b.SHORT_TYPE,a.blocktype_old[r]==b.NORM_TYPE&&(a.blocktype_old[r]=b.START_TYPE),a.blocktype_old[r]==b.STOP_TYPE&&(a.blocktype_old[r]=b.SHORT_TYPE)),n[r]=a.blocktype_old[r],a.blocktype_old[r]=o[r]}(e,J,g,Q),L=0;L<O;L++){var Be,Se,we,We=0;L>1?(Be=_,We=-2,Se=b.NORM_TYPE,g[0]!=b.SHORT_TYPE&&g[1]!=b.SHORT_TYPE||(Se=b.SHORT_TYPE),we=d[i][L-2]):(Be=h,We=0,Se=g[L],we=f[i][L]),Se==b.SHORT_TYPE?Be[We+L]=H(we,R.masking_lower):Be[We+L]=U(we,R.masking_lower),e.analysis&&(R.pinfo.pe[i][L]=Be[We+L])}return 0};var Z=[-1.730326e-17,-.01703172,-1.349528e-17,.0418072,-6.73278e-17,-.0876324,-3.0835e-17,.1863476,-1.104424e-16,-.627638];function $(e,t,n){if(0==n)for(var o=0;o<e.npart_s;o++)e.nb_s2[t][o]=e.nb_s1[t][o],e.nb_s1[t][o]=0}function ee(e,t){for(var n=0;n<e.npart_l;n++)e.nb_2[t][n]=e.nb_1[t][n],e.nb_1[t][n]=0}function te(e,t,n,o,a,r){var c,i,s,M=e.internal_flags,p=new float[b.CBANDS],f=l(b.CBANDS),d=new int[b.CBANDS];for(s=i=0;s<M.npart_s;++s){var h=0,_=0,A=M.numlines_s[s];for(c=0;c<A;++c,++i){var m=t[r][i];h+=m,_<m&&(_=m)}n[s]=h,u(h>=0),p[s]=_,u(A>0),f[s]=h/A,u(f[s]>=0)}for(u(s==M.npart_s),u(129==i);s<b.CBANDS;++s)p[s]=0,f[s]=0;for(function(e,t,n,o){var a=w.length-1,r=0,c=n[r]+n[r+1];for(u(c>=0),c>0?((i=t[r])<t[r+1]&&(i=t[r+1]),u(e.numlines_s[r]+e.numlines_s[r+1]-1>0),(s=0|(c=20*(2*i-c)/(c*(e.numlines_s[r]+e.numlines_s[r+1]-1))))>a&&(s=a),o[r]=s):o[r]=0,r=1;r<e.npart_s-1;r++){var i,s;c=n[r-1]+n[r]+n[r+1],u(r+1<e.npart_s),u(c>=0),c>0?((i=t[r-1])<t[r]&&(i=t[r]),i<t[r+1]&&(i=t[r+1]),u(e.numlines_s[r-1]+e.numlines_s[r]+e.numlines_s[r+1]-1>0),(s=0|(c=20*(3*i-c)/(c*(e.numlines_s[r-1]+e.numlines_s[r]+e.numlines_s[r+1]-1))))>a&&(s=a),o[r]=s):o[r]=0}u(r>0),u(r==e.npart_s-1),c=n[r-1]+n[r],u(c>=0),c>0?((i=t[r-1])<t[r]&&(i=t[r]),u(e.numlines_s[r-1]+e.numlines_s[r]-1>0),(s=0|(c=20*(2*i-c)/(c*(e.numlines_s[r-1]+e.numlines_s[r]-1))))>a&&(s=a),o[r]=s):o[r]=0,u(r==e.npart_s-1)}(M,p,f,d),i=s=0;s<M.npart_s;s++){var z,g,O,L,y,v=M.s3ind_s[s][0],N=M.s3ind_s[s][1];for(z=d[v],g=1,L=M.s3_ss[i]*n[v]*w[d[v]],++i,++v;v<=N;)z+=d[v],g+=1,L=k(L,O=M.s3_ss[i]*n[v]*w[d[v]],v-s),++i,++v;L*=y=.5*w[z=(1+2*z)/(2*g)],o[s]=L,M.nb_s2[a][s]=M.nb_s1[a][s],M.nb_s1[a][s]=L,O=p[s],O*=M.minval_s[s],O*=y,o[s]>O&&(o[s]=O),M.masking_lower>1&&(o[s]*=M.masking_lower),o[s]>n[s]&&(o[s]=n[s]),M.masking_lower<1&&(o[s]*=M.masking_lower),u(o[s]>=0)}for(;s<b.CBANDS;++s)n[s]=0,o[s]=0}function ne(e,t,a,r,c){var i,s=l(b.CBANDS),M=l(b.CBANDS),f=p(b.CBANDS+2);j(e,t,a,s,M),Y(e,s,M,f);var d=0;for(i=0;i<e.npart_l;i++){var h,_,A,z=e.s3ind[i][0],g=e.s3ind[i][1],O=0,L=0;for(O=f[z],L+=1,_=e.s3_ll[d]*a[z]*w[f[z]],++d,++z;z<=g;)O+=f[z],L+=1,_=k(_,h=e.s3_ll[d]*a[z]*w[f[z]],z-i),++d,++z;if(_*=A=.5*w[O=(1+2*O)/(2*L)],e.blocktype_old[1&c]==b.SHORT_TYPE){var y=n*e.nb_1[c][i];r[i]=y>0?Math.min(_,y):Math.min(_,a[i]*m)}else{var v=o*e.nb_2[c][i],N=n*e.nb_1[c][i];v<=0&&(v=_),N<=0&&(N=_),y=e.blocktype_old[1&c]==b.NORM_TYPE?Math.min(N,v):N,r[i]=Math.min(_,y)}e.nb_2[c][i]=e.nb_1[c][i],e.nb_1[c][i]=_,h=s[i],h*=e.minval_l[i],h*=A,r[i]>h&&(r[i]=h),e.masking_lower>1&&(r[i]*=e.masking_lower),r[i]>a[i]&&(r[i]=a[i]),e.masking_lower<1&&(r[i]*=e.masking_lower),u(r[i]>=0)}for(;i<b.CBANDS;++i)a[i]=0,r[i]=0}function oe(e,t,n,o,a,r,c){for(var i,s,l=2*r,M=r>0?Math.pow(10,a):1,p=0;p<c;++p){var f=e[2][p],b=e[3][p],d=t[0][p],h=t[1][p],_=t[2][p],A=t[3][p];if(d<=1.58*h&&h<=1.58*d){var m=n[p]*b,z=n[p]*f;s=Math.max(_,Math.min(A,m)),i=Math.max(A,Math.min(_,z))}else s=_,i=A;if(r>0){var g,O,L=o[p]*M;if(g=Math.min(Math.max(d,L),Math.max(h,L)),(O=(_=Math.max(s,L))+(A=Math.max(i,L)))>0&&g*l<O){var y=g*l/O;_*=y,A*=y,u(O>0)}s=Math.min(_,s),i=Math.min(A,i)}s>f&&(s=f),i>b&&(i=b),t[2][p]=s,t[3][p]=i}}function ae(e,t){var n;return(n=e>=0?27*-e:e*t)<=-72?0:Math.exp(n*g)}function re(e){var t,n,o,a,r=0;for(r=0;ae(r,e)>1e-20;r-=1);for(o=r,a=0;Math.abs(a-o)>1e-12;)ae(r=(a+o)/2,e)>0?a=r:o=r;for(t=o,r=0,r=0;ae(r,e)>1e-20;r+=1);for(o=0,a=r;Math.abs(a-o)>1e-12;)ae(r=(a+o)/2,e)>0?o=r:a=r;n=a;var c,i=0;for(c=0;c<=1e3;++c)i+=ae(r=t+c*(n-t)/1e3,e);return 1001/(i*(n-t))}function ce(e){var t,n,o,a;return t=e,n=(t*=t>=0?3:1.5)>=.5&&t<=2.5?8*((a=t-.5)*a-2*a):0,(o=15.811389+7.5*(t+=.474)-17.5*Math.sqrt(1+t*t))<=-60?0:(t=Math.exp((n+o)*g),t/=.6609193)}function ie(e){return e<0&&(e=0),e*=.001,13*Math.atan(.76*e)+3.5*Math.atan(e*e/56.25)}function se(e,t,n,o,a,r,c,i,s,M,f,d){var h,A=l(b.CBANDS+1),m=i/(d>15?1152:384),z=p(b.HBLKSIZE);i/=s;var g=0,O=0;for(h=0;h<b.CBANDS;h++){var L;for(W=ie(i*g),A[h]=i*g,L=g;ie(i*L)-W<_&&L<=s/2;L++);for(e[h]=L-g,O=h+1;g<L;)u(g<b.HBLKSIZE),z[g++]=h;if(g>s/2){g=s/2,++h;break}}u(h<b.CBANDS),A[h]=i*g;for(var y=0;y<d;y++){var v,N,q,T,B;q=M[y],T=M[y+1],(v=0|Math.floor(.5+f*(q-.5)))<0&&(v=0),(N=0|Math.floor(.5+f*(T-.5)))>s/2&&(N=s/2),n[y]=(z[v]+z[N])/2,t[y]=z[N];var S=m*T;c[y]=(S-A[t[y]])/(A[t[y]+1]-A[t[y]]),c[y]<0?c[y]=0:c[y]>1&&(c[y]=1),B=ie(i*M[y]*f),B=Math.min(B,15.5)/15.5,r[y]=Math.pow(10,1.25*(1-Math.cos(Math.PI*B))-2.5)}g=0;for(var w=0;w<O;w++){var W,X,R=e[w];W=ie(i*g),X=ie(i*(g+R-1)),o[w]=.5*(W+X),W=ie(i*(g-.5)),X=ie(i*(g+R-.5)),a[w]=X-W,g+=R}return O}function le(e,t,n,o,a,r){var c,i=M([b.CBANDS,b.CBANDS]),s=0;if(r)for(var p=0;p<t;p++)for(c=0;c<t;c++){var u=ce(n[p]-n[c])*o[c];i[p][c]=u*a[p]}else for(c=0;c<t;c++){var f=15+Math.min(21/n[c],12),d=re(f);for(p=0;p<t;p++)u=d*ae(n[p]-n[c],f)*o[c],i[p][c]=u*a[p]}for(p=0;p<t;p++){for(c=0;c<t&&!(i[p][c]>0);c++);for(e[p][0]=c,c=t-1;c>0&&!(i[p][c]>0);c--);e[p][1]=c,s+=e[p][1]-e[p][0]+1}var h=l(s),_=0;for(p=0;p<t;p++)for(c=e[p][0];c<=e[p][1];c++)h[_++]=i[p][c];return h}function Me(e){var t=ie(e);return t=Math.min(t,15.5)/15.5,Math.pow(10,1.25*(1-Math.cos(Math.PI*t))-2.5)}function pe(e,t){return e<-.3&&(e=3410),e/=1e3,e=Math.max(.1,e),3.64*Math.pow(e,-.8)-6.8*Math.exp(-.6*Math.pow(e-3.4,2))+6*Math.exp(-.15*Math.pow(e-8.7,2))+.001*(.6+.04*t)*Math.pow(e,4)}this.L3psycho_anal_vbr=function(e,t,n,o,a,r,i,s,f,d){var h=e.internal_flags,_=l(b.HBLKSIZE),A=M([3,b.HBLKSIZE_s]),g=M([2,b.BLKSIZE]),O=M([2,3,b.BLKSIZE_s]),L=M([4,b.CBANDS]),y=M([4,b.CBANDS]),v=M([4,3]),N=[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]],q=p(2),T=e.mode==MPEGMode.JOINT_STEREO?4:h.channels_out;!function(e,t,n,o,a,r,c,i,s,p){for(var f=M([2,576]),b=e.internal_flags,d=b.channels_out,h=e.mode==MPEGMode.JOINT_STEREO?4:d,_=0;_<d;_++){firbuf=t[_];var A=n+576-350-z+192;u(Z.length==(z-1)/2);for(var m=0;m<576;m++){var g,O;g=firbuf[A+m+10],O=0;for(var L=0;L<(z-1)/2-1;L+=2)g+=Z[L]*(firbuf[A+m+L]+firbuf[A+m+z-L]),O+=Z[L+1]*(firbuf[A+m+L+1]+firbuf[A+m+z-L-1]);f[_][m]=g+O}a[o][_].en.assign(b.en[_]),a[o][_].thm.assign(b.thm[_]),h>2&&(r[o][_].en.assign(b.en[_+2]),r[o][_].thm.assign(b.thm[_+2]))}for(_=0;_<h;_++){var y=l(12),v=l(12),N=[0,0,0,0],q=f[1&_],T=0,B=3==_?b.nsPsy.attackthre_s:b.nsPsy.attackthre,S=1;if(2==_)for(m=0,L=576;L>0;++m,--L){var w=f[0][m],W=f[1][m];f[0][m]=w+W,f[1][m]=w-W}for(m=0;m<3;m++)v[m]=b.nsPsy.last_en_subshort[_][m+6],u(b.nsPsy.last_en_subshort[_][m+4]>0),y[m]=v[m]/b.nsPsy.last_en_subshort[_][m+4],N[0]+=v[m];for(m=0;m<9;m++){for(var X=T+64,R=1;T<X;T++)R<Math.abs(q[T])&&(R=Math.abs(q[T]));b.nsPsy.last_en_subshort[_][m]=v[m+3]=R,N[1+m/3]+=R,R>v[m+3-2]?(u(v[m+3-2]>0),R/=v[m+3-2]):v[m+3-2]>10*R?(u(R>0),R=v[m+3-2]/(10*R)):R=0,y[m+3]=R}for(m=0;m<3;++m){var E=v[3*m+3]+v[3*m+4]+v[3*m+5],C=1;6*v[3*m+5]<E&&(C*=.5,6*v[3*m+4]<E&&(C*=.5)),i[_][m]=C}if(e.analysis){var k=y[0];for(m=1;m<12;m++)k<y[m]&&(k=y[m]);b.pinfo.ers[o][_]=b.pinfo.ers_save[_],b.pinfo.ers_save[_]=k}for(m=0;m<12;m++)0==s[_][m/3]&&y[m]>B&&(s[_][m/3]=m%3+1);for(m=1;m<4;m++){var x=N[m-1],P=N[m];Math.max(x,P)<4e4&&x<1.7*P&&P<1.7*x&&(1==m&&s[_][0]<=s[_][m]&&(s[_][0]=0),s[_][m]=0)}s[_][0]<=b.nsPsy.lastAttacks[_]&&(s[_][0]=0),3!=b.nsPsy.lastAttacks[_]&&s[_][0]+s[_][1]+s[_][2]+s[_][3]==0||(S=0,0!=s[_][1]&&0!=s[_][0]&&(s[_][1]=0),0!=s[_][2]&&0!=s[_][1]&&(s[_][2]=0),0!=s[_][3]&&0!=s[_][2]&&(s[_][3]=0)),_<2?p[_]=S:0==S&&(p[0]=p[1]=0),c[_]=b.tot_ener[_]}}(e,t,n,o,a,r,f,v,N,q),function(e,t){var n=e.internal_flags;e.short_blocks!=c.short_block_coupled||0!=t[0]&&0!=t[1]||(t[0]=t[1]=0);for(var o=0;o<n.channels_out;o++)e.short_blocks==c.short_block_dispensed&&(t[o]=1),e.short_blocks==c.short_block_forced&&(t[o]=0)}(e,q);for(var B=0;B<T;B++)K(e,t,n,B,o,_,g,w=1&B),J(e,o,B,_),0!=q[w]?ne(h,_,L[B],y[B],B):ee(h,B);for(q[0]+q[1]==2&&e.mode==MPEGMode.JOINT_STEREO&&oe(L,y,h.mld_cb_l,h.ATH.cb_l,e.ATHlower*h.ATH.adjust,e.msfix,h.npart_l),B=0;B<T;B++)0!=q[w=1&B]&&P(h,L[B],y[B],B);for(var S=0;S<3;S++){for(B=0;B<T;++B)0!=q[w=1&B]?$(h,B,S):(Q(e,t,n,B,S,A,O,w),te(e,A,L[B],y[B],B,S));for(q[0]+q[1]==0&&e.mode==MPEGMode.JOINT_STEREO&&oe(L,y,h.mld_cb_s,h.ATH.cb_s,e.ATHlower*h.ATH.adjust,e.msfix,h.npart_s),B=0;B<T;++B)0==q[w=1&B]&&x(h,L[B],y[B],B,S)}for(B=0;B<T;B++){var w;if(0==q[w=1&B])for(var W=0;W<b.SBMAX_s;W++){var X=l(3);for(S=0;S<3;S++){var R=h.thm[B].s[W][S];if(R*=.8,N[B][S]>=2||1==N[B][S+1]){var E=0!=S?S-1:2,C=F(h.thm[B].s[W][E],R,.36);R=Math.min(R,C)}else 1==N[B][S]?(E=0!=S?S-1:2,C=F(h.thm[B].s[W][E],R,.6*m),R=Math.min(R,C)):(0!=S&&3==N[B][S-1]||0==S&&3==h.nsPsy.lastAttacks[B])&&(E=2!=S?S+1:0,C=F(h.thm[B].s[W][E],R,.6*m),R=Math.min(R,C));R*=v[B][S],X[S]=R}for(S=0;S<3;S++)h.thm[B].s[W][S]=X[S]}}for(B=0;B<T;B++)h.nsPsy.lastAttacks[B]=N[B][2];for(function(e,t,n){for(var o=e.internal_flags,a=0;a<o.channels_out;a++){var r=b.NORM_TYPE;0!=t[a]?(u(o.blocktype_old[a]!=b.START_TYPE),o.blocktype_old[a]==b.SHORT_TYPE&&(r=b.STOP_TYPE)):(r=b.SHORT_TYPE,o.blocktype_old[a]==b.NORM_TYPE&&(o.blocktype_old[a]=b.START_TYPE),o.blocktype_old[a]==b.STOP_TYPE&&(o.blocktype_old[a]=b.SHORT_TYPE)),n[a]=o.blocktype_old[a],o.blocktype_old[a]=r}}(e,q,d),B=0;B<T;B++){var k,D,I,V;B>1?(k=s,D=-2,I=b.NORM_TYPE,d[0]!=b.SHORT_TYPE&&d[1]!=b.SHORT_TYPE||(I=b.SHORT_TYPE),V=r[o][B-2]):(k=i,D=0,I=d[B],V=a[o][B]),I==b.SHORT_TYPE?k[D+B]=H(V,h.masking_lower):k[D+B]=U(V,h.masking_lower),e.analysis&&(h.pinfo.pe[o][B]=k[D+B])}return 0},this.psymodel_init=function(n){var o,c,i=n.internal_flags,s=!0,M=13,p=0,f=0,d=-8.25,h=-4.5,_=l(b.CBANDS),A=l(b.CBANDS),m=l(b.CBANDS),z=n.out_samplerate;switch(n.experimentalZ){default:case 0:s=!0;break;case 1:s=n.VBR!=a.vbr_mtrh&&n.VBR!=a.vbr_mt;break;case 2:s=!1;break;case 3:M=8,p=-1.75,f=-.0125,d=-8.25,h=-2.25}for(i.ms_ener_ratio_old=.25,i.blocktype_old[0]=i.blocktype_old[1]=b.NORM_TYPE,o=0;o<4;++o){for(var g=0;g<b.CBANDS;++g)i.nb_1[o][g]=1e20,i.nb_2[o][g]=1e20,i.nb_s1[o][g]=i.nb_s2[o][g]=1;for(var O=0;O<b.SBMAX_l;O++)i.en[o].l[O]=1e20,i.thm[o].l[O]=1e20;for(g=0;g<3;++g){for(O=0;O<b.SBMAX_s;O++)i.en[o].s[O][g]=1e20,i.thm[o].s[O][g]=1e20;i.nsPsy.lastAttacks[o]=0}for(g=0;g<9;g++)i.nsPsy.last_en_subshort[o][g]=10}for(i.loudness_sq_save[0]=i.loudness_sq_save[1]=0,i.npart_l=se(i.numlines_l,i.bo_l,i.bm_l,_,A,i.mld_l,i.PSY.bo_l_weight,z,b.BLKSIZE,i.scalefac_band.l,b.BLKSIZE/1152,b.SBMAX_l),u(i.npart_l<b.CBANDS),o=0;o<i.npart_l;o++){var L=p;_[o]>=M&&(L=f*(_[o]-M)/(24-M)+p*(24-_[o])/(24-M)),m[o]=Math.pow(10,L/10),i.numlines_l[o]>0?i.rnumlines_l[o]=1/i.numlines_l[o]:i.rnumlines_l[o]=0}for(i.s3_ll=le(i.s3ind,i.npart_l,_,A,m,s),g=0,o=0;o<i.npart_l;o++){W=r.MAX_VALUE;for(var y=0;y<i.numlines_l[o];y++,g++){var w=z*g/(1e3*b.BLKSIZE);X=this.ATHformula(1e3*w,n)-20,X=Math.pow(10,.1*X),W>(X*=i.numlines_l[o])&&(W=X)}i.ATH.cb_l[o]=W,(W=20*_[o]/10-20)>6&&(W=100),W<-15&&(W=-15),W-=8,i.minval_l[o]=Math.pow(10,W/10)*i.numlines_l[o]}for(i.npart_s=se(i.numlines_s,i.bo_s,i.bm_s,_,A,i.mld_s,i.PSY.bo_s_weight,z,b.BLKSIZE_s,i.scalefac_band.s,b.BLKSIZE_s/384,b.SBMAX_s),u(i.npart_s<b.CBANDS),g=0,o=0;o<i.npart_s;o++){var W;for(L=d,_[o]>=M&&(L=h*(_[o]-M)/(24-M)+d*(24-_[o])/(24-M)),m[o]=Math.pow(10,L/10),W=r.MAX_VALUE,y=0;y<i.numlines_s[o];y++,g++){var X;w=z*g/(1e3*b.BLKSIZE_s),X=this.ATHformula(1e3*w,n)-20,X=Math.pow(10,.1*X),W>(X*=i.numlines_s[o])&&(W=X)}i.ATH.cb_s[o]=W,W=7*_[o]/12-7,_[o]>12&&(W*=1+3.1*Math.log(1+W)),_[o]<12&&(W*=1+2.3*Math.log(1-W)),W<-15&&(W=-15),W-=8,i.minval_s[o]=Math.pow(10,W/10)*i.numlines_s[o]}i.s3_ss=le(i.s3ind_s,i.npart_s,_,A,m,s),v=Math.pow(10,(T+1)/16),N=Math.pow(10,(B+1)/16),q=Math.pow(10,S/10),e.init_fft(i),i.decay=Math.exp(-1*t/(.01*z/192)),c=3.5,0!=(2&n.exp_nspsytune)&&(c=1),Math.abs(n.msfix)>0&&(c=n.msfix),n.msfix=c;for(var R=0;R<i.npart_l;R++)i.s3ind[R][1]>i.npart_l-1&&(i.s3ind[R][1]=i.npart_l-1);var E=576*i.mode_gr/z;if(i.ATH.decay=Math.pow(10,-1.2*E),i.ATH.adjust=.01,i.ATH.adjustLimit=1,u(i.bo_l[b.SBMAX_l-1]<=i.npart_l),u(i.bo_s[b.SBMAX_s-1]<=i.npart_s),-1!=n.ATHtype){var C=n.out_samplerate/b.BLKSIZE,k=0;for(w=0,o=0;o<b.BLKSIZE/2;++o)w+=C,i.ATH.eql_w[o]=1/Math.pow(10,this.ATHformula(w,n)/10),k+=i.ATH.eql_w[o];for(k=1/k,o=b.BLKSIZE/2;--o>=0;)i.ATH.eql_w[o]*=k}for(R=g=0;R<i.npart_s;++R)for(o=0;o<i.numlines_s[R];++o)++g;for(u(129==g),R=g=0;R<i.npart_l;++R)for(o=0;o<i.numlines_l[R];++o)++g;for(u(513==g),g=0,o=0;o<i.npart_l;o++)w=z*(g+i.numlines_l[o]/2)/(1*b.BLKSIZE),i.mld_cb_l[o]=Me(w),g+=i.numlines_l[o];for(;o<b.CBANDS;++o)i.mld_cb_l[o]=1;for(g=0,o=0;o<i.npart_s;o++)w=z*(g+i.numlines_s[o]/2)/(1*b.BLKSIZE_s),i.mld_cb_s[o]=Me(w),g+=i.numlines_s[o];for(;o<b.CBANDS;++o)i.mld_cb_s[o]=1;return 0},this.ATHformula=function(e,t){var n;switch(t.ATHtype){case 0:n=pe(e,9);break;case 1:n=pe(e,-1);break;case 2:n=pe(e,0);break;case 3:n=pe(e,1)+6;break;case 4:n=pe(e,t.ATHcurve);break;default:n=pe(e,0)}return n}}},function(e,t,n){var o=n(298),a=(o.System,o.VbrMode,o.Float,o.ShortBlock,o.Util),r=(o.Arrays,o.new_array_n,o.new_byte,o.new_double,o.new_float),c=(o.new_float_n,o.new_int,o.new_int_n,o.assert,n(299));e.exports=function(){var e=r(c.BLKSIZE),t=r(c.BLKSIZE_s/2),n=[.9238795325112867,.3826834323650898,.9951847266721969,.0980171403295606,.9996988186962042,.02454122852291229,.9999811752826011,.006135884649154475];function o(e,t,o){var r,c,i,s=0,l=t+(o<<=1);r=4;do{var M,p,u,f,b,d,h;h=r>>1,d=(b=r<<1)+(f=r),r=b<<1,i=(c=t)+h;do{L=e[c+0]-e[c+f],O=e[c+0]+e[c+f],q=e[c+b]-e[c+d],v=e[c+b]+e[c+d],e[c+b]=O-v,e[c+0]=O+v,e[c+d]=L-q,e[c+f]=L+q,L=e[i+0]-e[i+f],O=e[i+0]+e[i+f],q=a.SQRT2*e[i+d],v=a.SQRT2*e[i+b],e[i+b]=O-v,e[i+0]=O+v,e[i+d]=L-q,e[i+f]=L+q,i+=r,c+=r}while(c<l);for(p=n[s+0],M=n[s+1],u=1;u<h;u++){var _,A;_=1-2*M*M,A=2*M*p,c=t+u,i=t+f-u;do{var m,z,g,O,L,y,v,N,q,T;z=A*e[c+f]-_*e[i+f],m=_*e[c+f]+A*e[i+f],L=e[c+0]-m,O=e[c+0]+m,y=e[i+0]-z,g=e[i+0]+z,z=A*e[c+d]-_*e[i+d],m=_*e[c+d]+A*e[i+d],q=e[c+b]-m,v=e[c+b]+m,T=e[i+b]-z,N=e[i+b]+z,z=M*v-p*T,m=p*v+M*T,e[c+b]=O-m,e[c+0]=O+m,e[i+d]=y-z,e[i+f]=y+z,z=p*N-M*q,m=M*N+p*q,e[i+b]=g-m,e[i+0]=g+m,e[c+d]=L-z,e[c+f]=L+z,i+=r,c+=r}while(c<l);p=(_=p)*n[s+0]-M*n[s+1],M=_*n[s+1]+M*n[s+0]}s+=2}while(r<o)}var i=[0,128,64,192,32,160,96,224,16,144,80,208,48,176,112,240,8,136,72,200,40,168,104,232,24,152,88,216,56,184,120,248,4,132,68,196,36,164,100,228,20,148,84,212,52,180,116,244,12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254];this.fft_short=function(e,n,a,r,s){for(var l=0;l<3;l++){var M=c.BLKSIZE_s/2,p=65535&192*(l+1),u=c.BLKSIZE_s/8-1;do{var f,b,d,h,_,A=255&i[u<<2];b=(f=t[A]*r[a][s+A+p])-(_=t[127-A]*r[a][s+A+p+128]),f+=_,h=(d=t[A+64]*r[a][s+A+p+64])-(_=t[63-A]*r[a][s+A+p+192]),d+=_,M-=4,n[l][M+0]=f+d,n[l][M+2]=f-d,n[l][M+1]=b+h,n[l][M+3]=b-h,b=(f=t[A+1]*r[a][s+A+p+1])-(_=t[126-A]*r[a][s+A+p+129]),f+=_,h=(d=t[A+65]*r[a][s+A+p+65])-(_=t[62-A]*r[a][s+A+p+193]),d+=_,n[l][M+c.BLKSIZE_s/2+0]=f+d,n[l][M+c.BLKSIZE_s/2+2]=f-d,n[l][M+c.BLKSIZE_s/2+1]=b+h,n[l][M+c.BLKSIZE_s/2+3]=b-h}while(--u>=0);o(n[l],M,c.BLKSIZE_s/2)}},this.fft_long=function(t,n,a,r,s){var l=c.BLKSIZE/8-1,M=c.BLKSIZE/2;do{var p,u,f,b,d,h=255&i[l];u=(p=e[h]*r[a][s+h])-(d=e[h+512]*r[a][s+h+512]),p+=d,b=(f=e[h+256]*r[a][s+h+256])-(d=e[h+768]*r[a][s+h+768]),f+=d,n[0+(M-=4)]=p+f,n[M+2]=p-f,n[M+1]=u+b,n[M+3]=u-b,u=(p=e[h+1]*r[a][s+h+1])-(d=e[h+513]*r[a][s+h+513]),p+=d,b=(f=e[h+257]*r[a][s+h+257])-(d=e[h+769]*r[a][s+h+769]),f+=d,n[M+c.BLKSIZE/2+0]=p+f,n[M+c.BLKSIZE/2+2]=p-f,n[M+c.BLKSIZE/2+1]=u+b,n[M+c.BLKSIZE/2+3]=u-b}while(--l>=0);o(n,M,c.BLKSIZE/2)},this.init_fft=function(n){for(var o=0;o<c.BLKSIZE;o++)e[o]=.42-.5*Math.cos(2*Math.PI*(o+.5)/c.BLKSIZE)+.08*Math.cos(4*Math.PI*(o+.5)/c.BLKSIZE);for(o=0;o<c.BLKSIZE_s/2;o++)t[o]=.5*(1-Math.cos(2*Math.PI*(o+.5)/c.BLKSIZE_s))}}},function(e,t,n){var o=n(298),a=o.System,r=(o.VbrMode,o.Float,o.ShortBlock,o.Util),c=o.Arrays,i=(o.new_array_n,o.new_byte,o.new_double,o.new_float),s=(o.new_float_n,o.new_int,o.new_int_n,o.assert,n(299));e.exports=function(){var e=[-.1482523854003001,32.308141959636465,296.40344946382766,883.1344870032432,11113.947376231741,1057.2713659324597,305.7402417275812,30.825928907280012,3.8533188138216365,59.42900443849514,709.5899960123345,5281.91112291017,-5829.66483675846,-817.6293103748613,-76.91656988279972,-4.594269939176596,.9063471690191471,.1960342806591213,-.15466694054279598,34.324387823855965,301.8067566458425,817.599602898885,11573.795901679885,1181.2520595540152,321.59731579894424,31.232021761053772,3.7107095756221318,53.650946155329365,684.167428119626,5224.56624370173,-6366.391851890084,-908.9766368219582,-89.83068876699639,-5.411397422890401,.8206787908286602,.3901806440322567,-.16070888947830023,36.147034243915876,304.11815768187864,732.7429163887613,11989.60988270091,1300.012278487897,335.28490093152146,31.48816102859945,3.373875931311736,47.232241542899175,652.7371796173471,5132.414255594984,-6909.087078780055,-1001.9990371107289,-103.62185754286375,-6.104916304710272,.7416505462720353,.5805693545089249,-.16636367662261495,37.751650073343995,303.01103387567713,627.9747488785183,12358.763425278165,1412.2779918482834,346.7496836825721,31.598286663170416,3.1598635433980946,40.57878626349686,616.1671130880391,5007.833007176154,-7454.040671756168,-1095.7960341867115,-118.24411666465777,-6.818469345853504,.6681786379192989,.7653668647301797,-.1716176790982088,39.11551877123304,298.3413246578966,503.5259106886539,12679.589408408976,1516.5821921214542,355.9850766329023,31.395241710249053,2.9164211881972335,33.79716964664243,574.8943997801362,4853.234992253242,-7997.57021486075,-1189.7624067269965,-133.6444792601766,-7.7202770609839915,.5993769336819237,.9427934736519954,-.17645823955292173,40.21879108166477,289.9982036694474,359.3226160751053,12950.259102786438,1612.1013903507662,362.85067106591504,31.045922092242872,2.822222032597987,26.988862316190684,529.8996541764288,4671.371946949588,-8535.899136645805,-1282.5898586244496,-149.58553632943463,-8.643494270763135,.5345111359507916,1.111140466039205,-.36174739330527045,41.04429910497807,277.5463268268618,195.6386023135583,13169.43812144731,1697.6433561479398,367.40983966190305,30.557037410382826,2.531473372857427,20.070154905927314,481.50208566532336,4464.970341588308,-9065.36882077239,-1373.62841526722,-166.1660487028118,-9.58289321133207,.4729647758913199,1.268786568327291,-.36970682634889585,41.393213350082036,261.2935935556502,12.935476055240873,13336.131683328815,1772.508612059496,369.76534388639965,29.751323653701338,2.4023193045459172,13.304795348228817,430.5615775526625,4237.0568611071185,-9581.931701634761,-1461.6913552409758,-183.12733958476446,-10.718010163869403,.41421356237309503,1.414213562373095,-.37677560326535325,41.619486213528496,241.05423794991074,-187.94665032361226,13450.063605744153,1836.153896465782,369.4908799925761,29.001847876923147,2.0714759319987186,6.779591200894186,377.7767837205709,3990.386575512536,-10081.709459700915,-1545.947424837898,-200.3762958015653,-11.864482073055006,.3578057213145241,1.546020906725474,-.3829366947518991,41.1516456456653,216.47684307105183,-406.1569483347166,13511.136535077321,1887.8076599260432,367.3025214564151,28.136213436723654,1.913880671464418,.3829366947518991,323.85365704338597,3728.1472257487526,-10561.233882199509,-1625.2025997821418,-217.62525175416,-13.015432208941645,.3033466836073424,1.66293922460509,-.5822628872992417,40.35639251440489,188.20071124269245,-640.2706748618148,13519.21490106562,1927.6022433578062,362.8197642637487,26.968821921868447,1.7463817695935329,-5.62650678237171,269.3016715297017,3453.386536448852,-11016.145278780888,-1698.6569643425091,-234.7658734267683,-14.16351421663124,.2504869601913055,1.76384252869671,-.5887180101749253,39.23429103868072,155.76096234403798,-889.2492977967378,13475.470561874661,1955.0535223723712,356.4450994756727,25.894952980042156,1.5695032905781554,-11.181939564328772,214.80884394039484,3169.1640829158237,-11443.321309975563,-1765.1588461316153,-251.68908574481912,-15.49755935939164,.198912367379658,1.847759065022573,-.7912582233652842,37.39369355329111,119.699486012458,-1151.0956593239027,13380.446257078214,1970.3952110853447,348.01959814116185,24.731487364283044,1.3850130831637748,-16.421408865300393,161.05030052864092,2878.3322807850063,-11838.991423510031,-1823.985884688674,-268.2854986386903,-16.81724543849939,.1483359875383474,1.913880671464418,-.7960642926861912,35.2322109610459,80.01928065061526,-1424.0212633405113,13235.794061869668,1973.804052543835,337.9908651258184,23.289159354463873,1.3934255946442087,-21.099669467133474,108.48348407242611,2583.700758091299,-12199.726194855148,-1874.2780658979746,-284.2467154529415,-18.11369784385905,.09849140335716425,1.961570560806461,-.998795456205172,32.56307803611191,36.958364584370486,-1706.075448829146,13043.287458812016,1965.3831106103316,326.43182772364605,22.175018750622293,1.198638339011324,-25.371248002043963,57.53505923036915,2288.41886619975,-12522.674544337233,-1914.8400385312243,-299.26241273417224,-19.37805630698734,.04912684976946725,1.990369453344394,.035780907*r.SQRT2*.5/2384e-9,.017876148*r.SQRT2*.5/2384e-9,.003134727*r.SQRT2*.5/2384e-9,.002457142*r.SQRT2*.5/2384e-9,971317e-9*r.SQRT2*.5/2384e-9,218868e-9*r.SQRT2*.5/2384e-9,101566e-9*r.SQRT2*.5/2384e-9,13828e-9*r.SQRT2*.5/2384e-9,12804.797818791945,1945.5515939597317,313.4244966442953,49591e-9/2384e-9,1995.1556208053692,21458e-9/2384e-9,-69618e-9/2384e-9],t=[[2.382191739347913e-13,6.423305872147834e-13,9.400849094049688e-13,1.122435026096556e-12,1.183840321267481e-12,1.122435026096556e-12,9.40084909404969e-13,6.423305872147839e-13,2.382191739347918e-13,5.456116108943412e-12,4.878985199565852e-12,4.240448995017367e-12,3.559909094758252e-12,2.858043359288075e-12,2.156177623817898e-12,1.475637723558783e-12,8.371015190102974e-13,2.599706096327376e-13,-5.456116108943412e-12,-4.878985199565852e-12,-4.240448995017367e-12,-3.559909094758252e-12,-2.858043359288076e-12,-2.156177623817898e-12,-1.475637723558783e-12,-8.371015190102975e-13,-2.599706096327376e-13,-2.382191739347923e-13,-6.423305872147843e-13,-9.400849094049696e-13,-1.122435026096556e-12,-1.183840321267481e-12,-1.122435026096556e-12,-9.400849094049694e-13,-6.42330587214784e-13,-2.382191739347918e-13],[2.382191739347913e-13,6.423305872147834e-13,9.400849094049688e-13,1.122435026096556e-12,1.183840321267481e-12,1.122435026096556e-12,9.400849094049688e-13,6.423305872147841e-13,2.382191739347918e-13,5.456116108943413e-12,4.878985199565852e-12,4.240448995017367e-12,3.559909094758253e-12,2.858043359288075e-12,2.156177623817898e-12,1.475637723558782e-12,8.371015190102975e-13,2.599706096327376e-13,-5.461314069809755e-12,-4.921085770524055e-12,-4.343405037091838e-12,-3.732668368707687e-12,-3.093523840190885e-12,-2.430835727329465e-12,-1.734679010007751e-12,-9.74825365660928e-13,-2.797435120168326e-13,0,0,0,0,0,0,-2.283748241799531e-13,-4.037858874020686e-13,-2.146547464825323e-13],[.1316524975873958,.414213562373095,.7673269879789602,1.091308501069271,1.303225372841206,1.56968557711749,1.920982126971166,2.414213562373094,3.171594802363212,4.510708503662055,7.595754112725146,22.90376554843115,.984807753012208,.6427876096865394,.3420201433256688,.9396926207859084,-.1736481776669303,-.7660444431189779,.8660254037844387,.5,-.5144957554275265,-.4717319685649723,-.3133774542039019,-.1819131996109812,-.09457419252642064,-.04096558288530405,-.01419856857247115,-.003699974673760037,.8574929257125442,.8817419973177052,.9496286491027329,.9833145924917901,.9955178160675857,.9991605581781475,.999899195244447,.9999931550702802],[0,0,0,0,0,0,2.283748241799531e-13,4.037858874020686e-13,2.146547464825323e-13,5.461314069809755e-12,4.921085770524055e-12,4.343405037091838e-12,3.732668368707687e-12,3.093523840190885e-12,2.430835727329466e-12,1.734679010007751e-12,9.74825365660928e-13,2.797435120168326e-13,-5.456116108943413e-12,-4.878985199565852e-12,-4.240448995017367e-12,-3.559909094758253e-12,-2.858043359288075e-12,-2.156177623817898e-12,-1.475637723558782e-12,-8.371015190102975e-13,-2.599706096327376e-13,-2.382191739347913e-13,-6.423305872147834e-13,-9.400849094049688e-13,-1.122435026096556e-12,-1.183840321267481e-12,-1.122435026096556e-12,-9.400849094049688e-13,-6.423305872147841e-13,-2.382191739347918e-13]],n=t[s.SHORT_TYPE],o=t[s.SHORT_TYPE],l=t[s.SHORT_TYPE],M=t[s.SHORT_TYPE],p=[0,1,16,17,8,9,24,25,4,5,20,21,12,13,28,29,2,3,18,19,10,11,26,27,6,7,22,23,14,15,30,31];function u(t,n,o){for(var a,c,i,s=10,l=n+238-14-286,M=-15;M<0;M++){var p,u,f;p=e[s+-10],u=t[l+-224]*p,f=t[n+224]*p,p=e[s+-9],u+=t[l+-160]*p,f+=t[n+160]*p,p=e[s+-8],u+=t[l+-96]*p,f+=t[n+96]*p,p=e[s+-7],u+=t[l+-32]*p,f+=t[n+32]*p,p=e[s+-6],u+=t[l+32]*p,f+=t[n+-32]*p,p=e[s+-5],u+=t[l+96]*p,f+=t[n+-96]*p,p=e[s+-4],u+=t[l+160]*p,f+=t[n+-160]*p,p=e[s+-3],u+=t[l+224]*p,f+=t[n+-224]*p,p=e[s+-2],u+=t[n+-256]*p,f-=t[l+256]*p,p=e[s+-1],u+=t[n+-192]*p,f-=t[l+192]*p,p=e[s+0],u+=t[n+-128]*p,f-=t[l+128]*p,p=e[s+1],u+=t[n+-64]*p,f-=t[l+64]*p,p=e[s+2],u+=t[n+0]*p,f-=t[l+0]*p,p=e[s+3],u+=t[n+64]*p,f-=t[l+-64]*p,p=e[s+4],u+=t[n+128]*p,f-=t[l+-128]*p,p=e[s+5],u+=t[n+192]*p,p=(f-=t[l+-192]*p)-(u*=e[s+6]),o[30+2*M]=f+u,o[31+2*M]=e[s+7]*p,s+=18,n--,l++}f=t[n+-16]*e[s+-10],u=t[n+-32]*e[s+-2],f+=(t[n+-48]-t[n+16])*e[s+-9],u+=t[n+-96]*e[s+-1],f+=(t[n+-80]+t[n+48])*e[s+-8],u+=t[n+-160]*e[s+0],f+=(t[n+-112]-t[n+80])*e[s+-7],u+=t[n+-224]*e[s+1],f+=(t[n+-144]+t[n+112])*e[s+-6],u-=t[n+32]*e[s+2],f+=(t[n+-176]-t[n+144])*e[s+-5],u-=t[n+96]*e[s+3],f+=(t[n+-208]+t[n+176])*e[s+-4],u-=t[n+160]*e[s+4],f+=(t[n+-240]-t[n+208])*e[s+-3],a=(u-=t[n+224])-f,c=u+f,f=o[14],u=o[15]-f,o[31]=c+f,o[30]=a+u,o[15]=a-u,o[14]=c-f,i=o[28]-o[0],o[0]+=o[28],o[28]=i*e[s+-36+7],i=o[29]-o[1],o[1]+=o[29],o[29]=i*e[s+-36+7],i=o[26]-o[2],o[2]+=o[26],o[26]=i*e[s+-72+7],i=o[27]-o[3],o[3]+=o[27],o[27]=i*e[s+-72+7],i=o[24]-o[4],o[4]+=o[24],o[24]=i*e[s+-108+7],i=o[25]-o[5],o[5]+=o[25],o[25]=i*e[s+-108+7],i=o[22]-o[6],o[6]+=o[22],o[22]=i*r.SQRT2,i=o[23]-o[7],o[7]+=o[23],o[23]=i*r.SQRT2-o[7],o[7]-=o[6],o[22]-=o[7],o[23]-=o[22],i=o[6],o[6]=o[31]-i,o[31]=o[31]+i,i=o[7],o[7]=o[30]-i,o[30]=o[30]+i,i=o[22],o[22]=o[15]-i,o[15]=o[15]+i,i=o[23],o[23]=o[14]-i,o[14]=o[14]+i,i=o[20]-o[8],o[8]+=o[20],o[20]=i*e[s+-180+7],i=o[21]-o[9],o[9]+=o[21],o[21]=i*e[s+-180+7],i=o[18]-o[10],o[10]+=o[18],o[18]=i*e[s+-216+7],i=o[19]-o[11],o[11]+=o[19],o[19]=i*e[s+-216+7],i=o[16]-o[12],o[12]+=o[16],o[16]=i*e[s+-252+7],i=o[17]-o[13],o[13]+=o[17],o[17]=i*e[s+-252+7],i=-o[20]+o[24],o[20]+=o[24],o[24]=i*e[s+-216+7],i=-o[21]+o[25],o[21]+=o[25],o[25]=i*e[s+-216+7],i=o[4]-o[8],o[4]+=o[8],o[8]=i*e[s+-216+7],i=o[5]-o[9],o[5]+=o[9],o[9]=i*e[s+-216+7],i=o[0]-o[12],o[0]+=o[12],o[12]=i*e[s+-72+7],i=o[1]-o[13],o[1]+=o[13],o[13]=i*e[s+-72+7],i=o[16]-o[28],o[16]+=o[28],o[28]=i*e[s+-72+7],i=-o[17]+o[29],o[17]+=o[29],o[29]=i*e[s+-72+7],i=r.SQRT2*(o[2]-o[10]),o[2]+=o[10],o[10]=i,i=r.SQRT2*(o[3]-o[11]),o[3]+=o[11],o[11]=i,i=r.SQRT2*(-o[18]+o[26]),o[18]+=o[26],o[26]=i-o[18],i=r.SQRT2*(-o[19]+o[27]),o[19]+=o[27],o[27]=i-o[19],i=o[2],o[19]-=o[3],o[3]-=i,o[2]=o[31]-i,o[31]+=i,i=o[3],o[11]-=o[19],o[18]-=i,o[3]=o[30]-i,o[30]+=i,i=o[18],o[27]-=o[11],o[19]-=i,o[18]=o[15]-i,o[15]+=i,i=o[19],o[10]-=i,o[19]=o[14]-i,o[14]+=i,i=o[10],o[11]-=i,o[10]=o[23]-i,o[23]+=i,i=o[11],o[26]-=i,o[11]=o[22]-i,o[22]+=i,i=o[26],o[27]-=i,o[26]=o[7]-i,o[7]+=i,i=o[27],o[27]=o[6]-i,o[6]+=i,i=r.SQRT2*(o[0]-o[4]),o[0]+=o[4],o[4]=i,i=r.SQRT2*(o[1]-o[5]),o[1]+=o[5],o[5]=i,i=r.SQRT2*(o[16]-o[20]),o[16]+=o[20],o[20]=i,i=r.SQRT2*(o[17]-o[21]),o[17]+=o[21],o[21]=i,i=-r.SQRT2*(o[8]-o[12]),o[8]+=o[12],o[12]=i-o[8],i=-r.SQRT2*(o[9]-o[13]),o[9]+=o[13],o[13]=i-o[9],i=-r.SQRT2*(o[25]-o[29]),o[25]+=o[29],o[29]=i-o[25],i=-r.SQRT2*(o[24]+o[28]),o[24]-=o[28],o[28]=i-o[24],i=o[24]-o[16],o[24]=i,i=o[20]-i,o[20]=i,i=o[28]-i,o[28]=i,i=o[25]-o[17],o[25]=i,i=o[21]-i,o[21]=i,i=o[29]-i,o[29]=i,i=o[17]-o[1],o[17]=i,i=o[9]-i,o[9]=i,i=o[25]-i,o[25]=i,i=o[5]-i,o[5]=i,i=o[21]-i,o[21]=i,i=o[13]-i,o[13]=i,i=o[29]-i,o[29]=i,i=o[1]-o[0],o[1]=i,i=o[16]-i,o[16]=i,i=o[17]-i,o[17]=i,i=o[8]-i,o[8]=i,i=o[9]-i,o[9]=i,i=o[24]-i,o[24]=i,i=o[25]-i,o[25]=i,i=o[4]-i,o[4]=i,i=o[5]-i,o[5]=i,i=o[20]-i,o[20]=i,i=o[21]-i,o[21]=i,i=o[12]-i,o[12]=i,i=o[13]-i,o[13]=i,i=o[28]-i,o[28]=i,i=o[29]-i,o[29]=i,i=o[0],o[0]+=o[31],o[31]-=i,i=o[1],o[1]+=o[30],o[30]-=i,i=o[16],o[16]+=o[15],o[15]-=i,i=o[17],o[17]+=o[14],o[14]-=i,i=o[8],o[8]+=o[23],o[23]-=i,i=o[9],o[9]+=o[22],o[22]-=i,i=o[24],o[24]+=o[7],o[7]-=i,i=o[25],o[25]+=o[6],o[6]-=i,i=o[4],o[4]+=o[27],o[27]-=i,i=o[5],o[5]+=o[26],o[26]-=i,i=o[20],o[20]+=o[11],o[11]-=i,i=o[21],o[21]+=o[10],o[10]-=i,i=o[12],o[12]+=o[19],o[19]-=i,i=o[13],o[13]+=o[18],o[18]-=i,i=o[28],o[28]+=o[3],o[3]-=i,i=o[29],o[29]+=o[2],o[2]-=i}function f(e,n){for(var o=0;o<3;o++){var a,r,c,i,l,M;r=(i=e[n+6]*t[s.SHORT_TYPE][0]-e[n+15])+(a=e[n+0]*t[s.SHORT_TYPE][2]-e[n+9]),c=i-a,l=(i=e[n+15]*t[s.SHORT_TYPE][0]+e[n+6])+(a=e[n+9]*t[s.SHORT_TYPE][2]+e[n+0]),M=-i+a,a=2.069978111953089e-11*(e[n+3]*t[s.SHORT_TYPE][1]-e[n+12]),i=2.069978111953089e-11*(e[n+12]*t[s.SHORT_TYPE][1]+e[n+3]),e[n+0]=1.90752519173728e-11*r+a,e[n+15]=1.90752519173728e-11*-l+i,c=.8660254037844387*c*1.907525191737281e-11,l=.5*l*1.907525191737281e-11+i,e[n+3]=c-l,e[n+6]=c+l,r=.5*r*1.907525191737281e-11-a,M=.8660254037844387*M*1.907525191737281e-11,e[n+9]=r+M,e[n+12]=r-M,n++}}function b(e,t,n){var a,r,c,i,s,l,M,p,u,f,b,d,h,_,A,m,z,g;c=n[17]-n[9],s=n[15]-n[11],l=n[14]-n[12],M=n[0]+n[8],p=n[1]+n[7],u=n[2]+n[6],f=n[3]+n[5],e[t+17]=M+u-f-(p-n[4]),r=(M+u-f)*o[19]+(p-n[4]),a=(c-s-l)*o[18],e[t+5]=a+r,e[t+6]=a-r,i=(n[16]-n[10])*o[18],p=p*o[19]+n[4],a=c*o[12]+i+s*o[13]+l*o[14],r=-M*o[16]+p-u*o[17]+f*o[15],e[t+1]=a+r,e[t+2]=a-r,a=c*o[13]-i-s*o[14]+l*o[12],r=-M*o[17]+p-u*o[15]+f*o[16],e[t+9]=a+r,e[t+10]=a-r,a=c*o[14]-i+s*o[12]-l*o[13],r=M*o[15]-p+u*o[16]-f*o[17],e[t+13]=a+r,e[t+14]=a-r,b=n[8]-n[0],h=n[6]-n[2],_=n[5]-n[3],A=n[17]+n[9],m=n[16]+n[10],z=n[15]+n[11],g=n[14]+n[12],e[t+0]=A+z+g+(m+n[13]),a=(A+z+g)*o[19]-(m+n[13]),r=(b-h+_)*o[18],e[t+11]=a+r,e[t+12]=a-r,d=(n[7]-n[1])*o[18],m=n[13]-m*o[19],a=A*o[15]-m+z*o[16]+g*o[17],r=b*o[14]+d+h*o[12]+_*o[13],e[t+3]=a+r,e[t+4]=a-r,a=-A*o[17]+m-z*o[15]-g*o[16],r=b*o[13]+d-h*o[14]-_*o[12],e[t+7]=a+r,e[t+8]=a-r,a=-A*o[16]+m-z*o[17]-g*o[15],r=b*o[12]-d+h*o[13]-_*o[14],e[t+15]=a+r,e[t+16]=a-r}this.mdct_sub48=function(e,o,r){for(var d=o,h=286,_=0;_<e.channels_out;_++){for(var A=0;A<e.mode_gr;A++){for(var m,z=e.l3_side.tt[A][_],g=z.xr,O=0,L=e.sb_sample[_][1-A],y=0,v=0;v<9;v++)for(u(d,h,L[y]),u(d,h+32,L[y+1]),y+=2,h+=64,m=1;m<32;m+=2)L[y-1][m]*=-1;for(m=0;m<32;m++,O+=18){var N=z.block_type,q=e.sb_sample[_][A],T=e.sb_sample[_][1-A];if(0!=z.mixed_block_flag&&m<2&&(N=0),e.amp_filter[m]<1e-12)c.fill(g,O+0,O+18,0);else{if(e.amp_filter[m]<1)for(v=0;v<18;v++)T[v][p[m]]*=e.amp_filter[m];if(N==s.SHORT_TYPE){for(v=-3;v<0;v++){var B=t[s.SHORT_TYPE][v+3];g[O+3*v+9]=q[9+v][p[m]]*B-q[8-v][p[m]],g[O+3*v+18]=q[14-v][p[m]]*B+q[15+v][p[m]],g[O+3*v+10]=q[15+v][p[m]]*B-q[14-v][p[m]],g[O+3*v+19]=T[2-v][p[m]]*B+T[3+v][p[m]],g[O+3*v+11]=T[3+v][p[m]]*B-T[2-v][p[m]],g[O+3*v+20]=T[8-v][p[m]]*B+T[9+v][p[m]]}f(g,O)}else{var S=i(18);for(v=-9;v<0;v++){var w,W;w=t[N][v+27]*T[v+9][p[m]]+t[N][v+36]*T[8-v][p[m]],W=t[N][v+9]*q[v+9][p[m]]-t[N][v+18]*q[8-v][p[m]],S[v+9]=w-W*n[3+v+9],S[v+18]=w*n[3+v+9]+W}b(g,O,S)}}if(N!=s.SHORT_TYPE&&0!=m)for(v=7;v>=0;--v){var X,R;X=g[O+v]*l[20+v]+g[O+-1-v]*M[28+v],R=g[O+v]*M[28+v]-g[O+-1-v]*l[20+v],g[O+-1-v]=X,g[O+v]=R}}}if(d=r,h=286,1==e.mode_gr)for(var E=0;E<18;E++)a.arraycopy(e.sb_sample[_][1][E],0,e.sb_sample[_][0][E],0,32)}}}},function(e,t,n){var o=n(358);e.exports=function(){this.thm=new o,this.en=new o}},function(e,t,n){var o=n(359);e.exports=function(){this.class_id=0,this.num_samples=0,this.num_channels=0,this.in_samplerate=0,this.out_samplerate=0,this.scale=0,this.scale_left=0,this.scale_right=0,this.analysis=!1,this.bWriteVbrTag=!1,this.decode_only=!1,this.quality=0,this.mode=o.STEREO,this.force_ms=!1,this.free_format=!1,this.findReplayGain=!1,this.decode_on_the_fly=!1,this.write_id3tag_automatic=!1,this.brate=0,this.compression_ratio=0,this.copyright=0,this.original=0,this.extension=0,this.emphasis=0,this.error_protection=0,this.strict_ISO=!1,this.disable_reservoir=!1,this.quant_comp=0,this.quant_comp_short=0,this.experimentalY=!1,this.experimentalZ=0,this.exp_nspsytune=0,this.preset=0,this.VBR=null,this.VBR_q_frac=0,this.VBR_q=0,this.VBR_mean_bitrate_kbps=0,this.VBR_min_bitrate_kbps=0,this.VBR_max_bitrate_kbps=0,this.VBR_hard_min=0,this.lowpassfreq=0,this.highpassfreq=0,this.lowpasswidth=0,this.highpasswidth=0,this.maskingadjust=0,this.maskingadjust_short=0,this.ATHonly=!1,this.ATHshort=!1,this.noATH=!1,this.ATHtype=0,this.ATHcurve=0,this.ATHlower=0,this.athaa_type=0,this.athaa_loudapprox=0,this.athaa_sensitivity=0,this.short_blocks=null,this.useTemporal=!1,this.interChRatio=0,this.msfix=0,this.tune=!1,this.tune_value_a=0,this.version=0,this.encoder_delay=0,this.encoder_padding=0,this.framesize=0,this.frameNum=0,this.lame_allocated_gfp=0,this.internal_flags=null}},function(e,t,n){var o=n(298),a=(o.System,o.VbrMode,o.Float,o.ShortBlock,o.Util,o.Arrays,o.new_array_n,o.new_byte,o.new_double,o.new_float,o.new_float_n,o.new_int),r=(o.new_int_n,o.assert,n(317));e.exports=function(){this.tt=[[null,null],[null,null]],this.main_data_begin=0,this.private_bits=0,this.resvDrain_pre=0,this.resvDrain_post=0,this.scfsi=[a(4),a(4)];for(var e=0;e<2;e++)for(var t=0;t<2;t++)this.tt[e][t]=new r}},function(e,t,n){var o=n(298),a=(o.System,o.VbrMode,o.Float,o.ShortBlock,o.Util,o.Arrays,o.new_array_n,o.new_byte,o.new_double,o.new_float),r=o.new_float_n,c=o.new_int,i=(o.new_int_n,o.assert,n(299));e.exports=function(){this.last_en_subshort=r([4,9]),this.lastAttacks=c(4),this.pefirbuf=a(19),this.longfact=a(i.SBMAX_l),this.shortfact=a(i.SBMAX_s),this.attackthre=0,this.attackthre_s=0}},function(e,t){e.exports=function(){this.sum=0,this.seen=0,this.want=0,this.pos=0,this.size=0,this.bag=null,this.nVbrNumFrames=0,this.nBytesWritten=0,this.TotalFrameSize=0}},function(e,t,n){var o=n(298),a=(o.System,o.VbrMode,o.Float,o.ShortBlock,o.Util,o.Arrays,o.new_array_n,o.new_byte,o.new_double,o.new_float),r=(o.new_float_n,o.new_int,o.new_int_n,o.assert,n(299));e.exports=function(){this.useAdjust=0,this.aaSensitivityP=0,this.adjust=0,this.adjustLimit=0,this.decay=0,this.floor=0,this.l=a(r.SBMAX_l),this.s=a(r.SBMAX_s),this.psfb21=a(r.PSFB21),this.psfb12=a(r.PSFB12),this.cb_l=a(r.CBANDS),this.cb_s=a(r.CBANDS),this.eql_w=a(r.BLKSIZE/2)}},function(e,t,n){var o=n(298),a=(o.System,o.VbrMode,o.Float,o.ShortBlock,o.Util,o.Arrays,o.new_array_n,o.new_byte,o.new_double,o.new_float),r=(o.new_float_n,o.new_int),c=(o.new_int_n,o.assert,n(361));e.exports=function(){this.linprebuf=a(2*c.MAX_ORDER),this.linpre=0,this.lstepbuf=a(c.MAX_SAMPLES_PER_WINDOW+c.MAX_ORDER),this.lstep=0,this.loutbuf=a(c.MAX_SAMPLES_PER_WINDOW+c.MAX_ORDER),this.lout=0,this.rinprebuf=a(2*c.MAX_ORDER),this.rinpre=0,this.rstepbuf=a(c.MAX_SAMPLES_PER_WINDOW+c.MAX_ORDER),this.rstep=0,this.routbuf=a(c.MAX_SAMPLES_PER_WINDOW+c.MAX_ORDER),this.rout=0,this.sampleWindow=0,this.totsamp=0,this.lsum=0,this.rsum=0,this.freqindex=0,this.first=0,this.A=r(0|c.STEPS_per_dB*c.MAX_dB),this.B=r(0|c.STEPS_per_dB*c.MAX_dB)}},function(e,t,n){var o=n(298),a=(o.System,o.VbrMode,o.Float,o.ShortBlock,o.Util,o.Arrays,o.new_array_n,o.new_byte,o.new_double,o.new_float),r=(o.new_float_n,o.new_int),c=(o.new_int_n,o.assert),i=n(362),s=n(299),l=n(308),M=n(307);e.exports=function(e){var t=e;this.quantize=t,this.iteration_loop=function(e,t,n,o){var p,u=e.internal_flags,f=a(l.SFBMAX),b=a(576),d=r(2),h=0,_=u.l3_side,A=new i(h);this.quantize.rv.ResvFrameBegin(e,A),h=A.bits;for(var m=0;m<u.mode_gr;m++){p=this.quantize.qupvt.on_pe(e,t,d,h,m,m),u.mode_ext==s.MPG_MD_MS_LR&&(this.quantize.ms_convert(u.l3_side,m),this.quantize.qupvt.reduce_side(d,n[m],h,p));for(var z=0;z<u.channels_out;z++){var g,O,L=_.tt[m][z];L.block_type!=s.SHORT_TYPE?(g=0,O=u.PSY.mask_adjust-g):(g=0,O=u.PSY.mask_adjust_short-g),u.masking_lower=Math.pow(10,.1*O),this.quantize.init_outer_loop(u,L),this.quantize.init_xrpow(u,L,b)&&(this.quantize.qupvt.calc_xmin(e,o[m][z],L,f),this.quantize.outer_loop(e,L,f,b,z,d[z])),this.quantize.iteration_finish_one(u,m,z),c(L.part2_3_length<=M.MAX_BITS_PER_CHANNEL),c(L.part2_3_length<=d[z])}}this.quantize.rv.ResvFrameEnd(u,h)}}},function(e,t,n){var o=n(298),a=(o.System,o.VbrMode);o.Float,o.ShortBlock,o.Util,o.Arrays,o.new_array_n,o.new_byte,o.new_double,o.new_float,o.new_float_n,o.new_int,o.new_int_n,o.assert;e.exports=function(){function e(e,t,n,o,a,r,c,i,s,l,M,p,u,f,b){this.vbr_q=e,this.quant_comp=t,this.quant_comp_s=n,this.expY=o,this.st_lrm=a,this.st_s=r,this.masking_adj=c,this.masking_adj_short=i,this.ath_lower=s,this.ath_curve=l,this.ath_sensitivity=M,this.interch=p,this.safejoint=u,this.sfb21mod=f,this.msfix=b}function t(e,t,n,o,a,r,c,i,s,l,M,p,u,f){this.quant_comp=t,this.quant_comp_s=n,this.safejoint=o,this.nsmsfix=a,this.st_lrm=r,this.st_s=c,this.nsbass=i,this.scale=s,this.masking_adj=l,this.ath_lower=M,this.ath_curve=p,this.interch=u,this.sfscale=f}var n;this.setModules=function(e){n=e};var o=[new e(0,9,9,0,5.2,125,-4.2,-6.3,4.8,1,0,0,2,21,.97),new e(1,9,9,0,5.3,125,-3.6,-5.6,4.5,1.5,0,0,2,21,1.35),new e(2,9,9,0,5.6,125,-2.2,-3.5,2.8,2,0,0,2,21,1.49),new e(3,9,9,1,5.8,130,-1.8,-2.8,2.6,3,-4,0,2,20,1.64),new e(4,9,9,1,6,135,-.7,-1.1,1.1,3.5,-8,0,2,0,1.79),new e(5,9,9,1,6.4,140,.5,.4,-7.5,4,-12,2e-4,0,0,1.95),new e(6,9,9,1,6.6,145,.67,.65,-14.7,6.5,-19,4e-4,0,0,2.3),new e(7,9,9,1,6.6,145,.8,.75,-19.7,8,-22,6e-4,0,0,2.7),new e(8,9,9,1,6.6,145,1.2,1.15,-27.5,10,-23,7e-4,0,0,0),new e(9,9,9,1,6.6,145,1.6,1.6,-36,11,-25,8e-4,0,0,0),new e(10,9,9,1,6.6,145,2,2,-36,12,-25,8e-4,0,0,0)],r=[new e(0,9,9,0,4.2,25,-7,-4,7.5,1,0,0,2,26,.97),new e(1,9,9,0,4.2,25,-5.6,-3.6,4.5,1.5,0,0,2,21,1.35),new e(2,9,9,0,4.2,25,-4.4,-1.8,2,2,0,0,2,18,1.49),new e(3,9,9,1,4.2,25,-3.4,-1.25,1.1,3,-4,0,2,15,1.64),new e(4,9,9,1,4.2,25,-2.2,.1,0,3.5,-8,0,2,0,1.79),new e(5,9,9,1,4.2,25,-1,1.65,-7.7,4,-12,2e-4,0,0,1.95),new e(6,9,9,1,4.2,25,-0,2.47,-7.7,6.5,-19,4e-4,0,0,2),new e(7,9,9,1,4.2,25,.5,2,-14.5,8,-22,6e-4,0,0,2),new e(8,9,9,1,4.2,25,1,2.4,-22,10,-23,7e-4,0,0,2),new e(9,9,9,1,4.2,25,1.5,2.95,-30,11,-25,8e-4,0,0,2),new e(10,9,9,1,4.2,25,2,2.95,-36,12,-30,8e-4,0,0,2)];function c(e,t,n){var c=e.VBR==a.vbr_rh?o:r,i=e.VBR_q_frac,s=c[t],l=c[t+1],M=s;s.st_lrm=s.st_lrm+i*(l.st_lrm-s.st_lrm),s.st_s=s.st_s+i*(l.st_s-s.st_s),s.masking_adj=s.masking_adj+i*(l.masking_adj-s.masking_adj),s.masking_adj_short=s.masking_adj_short+i*(l.masking_adj_short-s.masking_adj_short),s.ath_lower=s.ath_lower+i*(l.ath_lower-s.ath_lower),s.ath_curve=s.ath_curve+i*(l.ath_curve-s.ath_curve),s.ath_sensitivity=s.ath_sensitivity+i*(l.ath_sensitivity-s.ath_sensitivity),s.interch=s.interch+i*(l.interch-s.interch),s.msfix=s.msfix+i*(l.msfix-s.msfix),function(e,t){0>t&&(-1,t=0),9<t&&(-1,t=9),e.VBR_q=t,e.VBR_q_frac=0}(e,M.vbr_q),0!=n?e.quant_comp=M.quant_comp:Math.abs(e.quant_comp- -1)>0||(e.quant_comp=M.quant_comp),0!=n?e.quant_comp_short=M.quant_comp_s:Math.abs(e.quant_comp_short- -1)>0||(e.quant_comp_short=M.quant_comp_s),0!=M.expY&&(e.experimentalY=0!=M.expY),0!=n?e.internal_flags.nsPsy.attackthre=M.st_lrm:Math.abs(e.internal_flags.nsPsy.attackthre- -1)>0||(e.internal_flags.nsPsy.attackthre=M.st_lrm),0!=n?e.internal_flags.nsPsy.attackthre_s=M.st_s:Math.abs(e.internal_flags.nsPsy.attackthre_s- -1)>0||(e.internal_flags.nsPsy.attackthre_s=M.st_s),0!=n?e.maskingadjust=M.masking_adj:Math.abs(e.maskingadjust-0)>0||(e.maskingadjust=M.masking_adj),0!=n?e.maskingadjust_short=M.masking_adj_short:Math.abs(e.maskingadjust_short-0)>0||(e.maskingadjust_short=M.masking_adj_short),0!=n?e.ATHlower=-M.ath_lower/10:Math.abs(10*-e.ATHlower-0)>0||(e.ATHlower=-M.ath_lower/10),0!=n?e.ATHcurve=M.ath_curve:Math.abs(e.ATHcurve- -1)>0||(e.ATHcurve=M.ath_curve),0!=n?e.athaa_sensitivity=M.ath_sensitivity:Math.abs(e.athaa_sensitivity- -1)>0||(e.athaa_sensitivity=M.ath_sensitivity),M.interch>0&&(0!=n?e.interChRatio=M.interch:Math.abs(e.interChRatio- -1)>0||(e.interChRatio=M.interch)),M.safejoint>0&&(e.exp_nspsytune=e.exp_nspsytune|M.safejoint),M.sfb21mod>0&&(e.exp_nspsytune=e.exp_nspsytune|M.sfb21mod<<20),0!=n?e.msfix=M.msfix:Math.abs(e.msfix- -1)>0||(e.msfix=M.msfix),0==n&&(e.VBR_q=t,e.VBR_q_frac=i)}var i=[new t(8,9,9,0,0,6.6,145,0,.95,0,-30,11,.0012,1),new t(16,9,9,0,0,6.6,145,0,.95,0,-25,11,.001,1),new t(24,9,9,0,0,6.6,145,0,.95,0,-20,11,.001,1),new t(32,9,9,0,0,6.6,145,0,.95,0,-15,11,.001,1),new t(40,9,9,0,0,6.6,145,0,.95,0,-10,11,9e-4,1),new t(48,9,9,0,0,6.6,145,0,.95,0,-10,11,9e-4,1),new t(56,9,9,0,0,6.6,145,0,.95,0,-6,11,8e-4,1),new t(64,9,9,0,0,6.6,145,0,.95,0,-2,11,8e-4,1),new t(80,9,9,0,0,6.6,145,0,.95,0,0,8,7e-4,1),new t(96,9,9,0,2.5,6.6,145,0,.95,0,1,5.5,6e-4,1),new t(112,9,9,0,2.25,6.6,145,0,.95,0,2,4.5,5e-4,1),new t(128,9,9,0,1.95,6.4,140,0,.95,0,3,4,2e-4,1),new t(160,9,9,1,1.79,6,135,0,.95,-2,5,3.5,0,1),new t(192,9,9,1,1.49,5.6,125,0,.97,-4,7,3,0,0),new t(224,9,9,1,1.25,5.2,125,0,.98,-6,9,2,0,0),new t(256,9,9,1,.97,5.2,125,0,1,-8,10,1,0,0),new t(320,9,9,1,.9,5.2,125,0,1,-10,12,0,0,0)];function s(e,t,o){var r=t,c=n.nearestBitrateFullIndex(t);if(e.VBR=a.vbr_abr,e.VBR_mean_bitrate_kbps=r,e.VBR_mean_bitrate_kbps=Math.min(e.VBR_mean_bitrate_kbps,320),e.VBR_mean_bitrate_kbps=Math.max(e.VBR_mean_bitrate_kbps,8),e.brate=e.VBR_mean_bitrate_kbps,e.VBR_mean_bitrate_kbps>320&&(e.disable_reservoir=!0),i[c].safejoint>0&&(e.exp_nspsytune=2|e.exp_nspsytune),i[c].sfscale>0&&(e.internal_flags.noise_shaping=2),Math.abs(i[c].nsbass)>0){var s=int(4*i[c].nsbass);s<0&&(s+=64),e.exp_nspsytune=e.exp_nspsytune|s<<2}return 0!=o?e.quant_comp=i[c].quant_comp:Math.abs(e.quant_comp- -1)>0||(e.quant_comp=i[c].quant_comp),0!=o?e.quant_comp_short=i[c].quant_comp_s:Math.abs(e.quant_comp_short- -1)>0||(e.quant_comp_short=i[c].quant_comp_s),0!=o?e.msfix=i[c].nsmsfix:Math.abs(e.msfix- -1)>0||(e.msfix=i[c].nsmsfix),0!=o?e.internal_flags.nsPsy.attackthre=i[c].st_lrm:Math.abs(e.internal_flags.nsPsy.attackthre- -1)>0||(e.internal_flags.nsPsy.attackthre=i[c].st_lrm),0!=o?e.internal_flags.nsPsy.attackthre_s=i[c].st_s:Math.abs(e.internal_flags.nsPsy.attackthre_s- -1)>0||(e.internal_flags.nsPsy.attackthre_s=i[c].st_s),0!=o?e.scale=i[c].scale:Math.abs(e.scale- -1)>0||(e.scale=i[c].scale),0!=o?e.maskingadjust=i[c].masking_adj:Math.abs(e.maskingadjust-0)>0||(e.maskingadjust=i[c].masking_adj),i[c].masking_adj>0?0!=o?e.maskingadjust_short=.9*i[c].masking_adj:Math.abs(e.maskingadjust_short-0)>0||(e.maskingadjust_short=.9*i[c].masking_adj):0!=o?e.maskingadjust_short=1.1*i[c].masking_adj:Math.abs(e.maskingadjust_short-0)>0||(e.maskingadjust_short=1.1*i[c].masking_adj),0!=o?e.ATHlower=-i[c].ath_lower/10:Math.abs(10*-e.ATHlower-0)>0||(e.ATHlower=-i[c].ath_lower/10),0!=o?e.ATHcurve=i[c].ath_curve:Math.abs(e.ATHcurve- -1)>0||(e.ATHcurve=i[c].ath_curve),0!=o?e.interChRatio=i[c].interch:Math.abs(e.interChRatio- -1)>0||(e.interChRatio=i[c].interch),t}this.apply_preset=function(e,t,n){switch(t){case Lame.R3MIX:t=Lame.V3,e.VBR=a.vbr_mtrh;break;case Lame.MEDIUM:t=Lame.V4,e.VBR=a.vbr_rh;break;case Lame.MEDIUM_FAST:t=Lame.V4,e.VBR=a.vbr_mtrh;break;case Lame.STANDARD:t=Lame.V2,e.VBR=a.vbr_rh;break;case Lame.STANDARD_FAST:t=Lame.V2,e.VBR=a.vbr_mtrh;break;case Lame.EXTREME:t=Lame.V0,e.VBR=a.vbr_rh;break;case Lame.EXTREME_FAST:t=Lame.V0,e.VBR=a.vbr_mtrh;break;case Lame.INSANE:return t=320,e.preset=t,s(e,t,n),e.VBR=a.vbr_off,t}switch(e.preset=t,t){case Lame.V9:return c(e,9,n),t;case Lame.V8:return c(e,8,n),t;case Lame.V7:return c(e,7,n),t;case Lame.V6:return c(e,6,n),t;case Lame.V5:return c(e,5,n),t;case Lame.V4:return c(e,4,n),t;case Lame.V3:return c(e,3,n),t;case Lame.V2:return c(e,2,n),t;case Lame.V1:return c(e,1,n),t;case Lame.V0:return c(e,0,n),t}return 8<=t&&t<=320?s(e,t,n):(e.preset=0,t)}}},function(e,t,n){var o=n(298),a=o.System,r=o.VbrMode,c=(o.Float,o.ShortBlock,o.Util),i=o.Arrays,s=(o.new_array_n,o.new_byte,o.new_double,o.new_float),l=(o.new_float_n,o.new_int,o.new_int_n,o.assert),M=n(426),p=n(427),u=n(428),f=n(299),b=n(317),d=n(308);e.exports=function(){var e,t,n;this.rv=null,this.qupvt=null;var o,h=new M;function _(e){this.ordinal=e}function A(e){for(var t=0;t<e.sfbmax;t++)if(e.scalefac[t]+e.subblock_gain[e.window[t]]==0)return!1;return!0}function m(e,t,n,o,a){var r;switch(e){default:case 9:t.over_count>0?(r=n.over_SSD<=t.over_SSD,n.over_SSD==t.over_SSD&&(r=n.bits<t.bits)):r=n.max_noise<0&&10*n.max_noise+n.bits<=10*t.max_noise+t.bits;break;case 0:r=n.over_count<t.over_count||n.over_count==t.over_count&&n.over_noise<t.over_noise||n.over_count==t.over_count&&BitStream.EQ(n.over_noise,t.over_noise)&&n.tot_noise<t.tot_noise;break;case 8:n.max_noise=function(e,t){for(var n,o=1e-37,a=0;a<t.psymax;a++)o+=(n=e[a],c.FAST_LOG10(.368+.632*n*n*n));return Math.max(1e-20,o)}(a,o);case 1:r=n.max_noise<t.max_noise;break;case 2:r=n.tot_noise<t.tot_noise;break;case 3:r=n.tot_noise<t.tot_noise&&n.max_noise<t.max_noise;break;case 4:r=n.max_noise<=0&&t.max_noise>.2||n.max_noise<=0&&t.max_noise<0&&t.max_noise>n.max_noise-.2&&n.tot_noise<t.tot_noise||n.max_noise<=0&&t.max_noise>0&&t.max_noise>n.max_noise-.2&&n.tot_noise<t.tot_noise+t.over_noise||n.max_noise>0&&t.max_noise>-.05&&t.max_noise>n.max_noise-.1&&n.tot_noise+n.over_noise<t.tot_noise+t.over_noise||n.max_noise>0&&t.max_noise>-.1&&t.max_noise>n.max_noise-.15&&n.tot_noise+n.over_noise+n.over_noise<t.tot_noise+t.over_noise+t.over_noise;break;case 5:r=n.over_noise<t.over_noise||BitStream.EQ(n.over_noise,t.over_noise)&&n.tot_noise<t.tot_noise;break;case 6:r=n.over_noise<t.over_noise||BitStream.EQ(n.over_noise,t.over_noise)&&(n.max_noise<t.max_noise||BitStream.EQ(n.max_noise,t.max_noise)&&n.tot_noise<=t.tot_noise);break;case 7:r=n.over_count<t.over_count||n.over_noise<t.over_noise}return 0==t.over_count&&(r=r&&n.bits<t.bits),r}function z(e,t,a,r,c){var s=e.internal_flags;!function(e,t,n,o,a){var r,c=e.internal_flags;r=0==t.scalefac_scale?1.2968395546510096:1.6817928305074292;for(var i=0,s=0;s<t.sfbmax;s++)i<n[s]&&(i=n[s]);var l=c.noise_shaping_amp;switch(3==l&&(l=a?2:1),l){case 2:break;case 1:i>1?i=Math.pow(i,.5):i*=.95;break;case 0:default:i>1?i=1:i*=.95}var M=0;for(s=0;s<t.sfbmax;s++){var p,u=t.width[s];if(M+=u,!(n[s]<i)){if(0!=(2&c.substep_shaping)&&(c.pseudohalf[s]=0==c.pseudohalf[s]?1:0,0==c.pseudohalf[s]&&2==c.noise_shaping_amp))return;for(t.scalefac[s]++,p=-u;p<0;p++)o[M+p]*=r,o[M+p]>t.xrpow_max&&(t.xrpow_max=o[M+p]);if(2==c.noise_shaping_amp)return}}}(e,t,a,r,c);var M=A(t);return!M&&(!(M=2==s.mode_gr?o.scale_bitcount(t):o.scale_bitcount_lsf(s,t))||(s.noise_shaping>1&&(i.fill(s.pseudohalf,0),0==t.scalefac_scale?(function(e,t){for(var o=0,a=0;a<e.sfbmax;a++){var r=e.width[a],c=e.scalefac[a];if(0!=e.preflag&&(c+=n.pretab[a]),o+=r,0!=(1&c)){c++;for(var i=-r;i<0;i++)t[o+i]*=1.2968395546510096,t[o+i]>e.xrpow_max&&(e.xrpow_max=t[o+i])}e.scalefac[a]=c>>1}e.preflag=0,e.scalefac_scale=1}(t,r),M=!1):t.block_type==f.SHORT_TYPE&&s.subblock_gain>0&&(M=function(e,t,o){var a,r=t.scalefac;for(a=0;a<t.sfb_lmax;a++)if(r[a]>=16)return!0;for(var c=0;c<3;c++){var i=0,s=0;for(a=t.sfb_lmax+c;a<t.sfbdivide;a+=3)i<r[a]&&(i=r[a]);for(;a<t.sfbmax;a+=3)s<r[a]&&(s=r[a]);if(!(i<16&&s<8)){if(t.subblock_gain[c]>=7)return!0;t.subblock_gain[c]++;var M=e.scalefac_band.l[t.sfb_lmax];for(a=t.sfb_lmax+c;a<t.sfbmax;a+=3){var p=t.width[a],u=r[a];if(l(u>=0),(u-=4>>t.scalefac_scale)>=0)r[a]=u,M+=3*p;else{r[a]=0;var f=210+(u<<t.scalefac_scale+1);d=n.IPOW20(f),M+=p*(c+1);for(var b=-p;b<0;b++)o[M+b]*=d,o[M+b]>t.xrpow_max&&(t.xrpow_max=o[M+b]);M+=p*(3-c-1)}}var d=n.IPOW20(202);for(M+=t.width[a]*(c+1),b=-t.width[a];b<0;b++)o[M+b]*=d,o[M+b]>t.xrpow_max&&(t.xrpow_max=o[M+b])}}return!1}(s,t,r)||A(t))),M||(M=2==s.mode_gr?o.scale_bitcount(t):o.scale_bitcount_lsf(s,t)),!M))}this.setModules=function(a,r,c,i){e=a,t=r,this.rv=r,n=c,this.qupvt=c,o=i,h.setModules(n,o)},this.ms_convert=function(e,t){for(var n=0;n<576;++n){var o=e.tt[t][0].xr[n],a=e.tt[t][1].xr[n];e.tt[t][0].xr[n]=(o+a)*(.5*c.SQRT2),e.tt[t][1].xr[n]=(o-a)*(.5*c.SQRT2)}},this.init_xrpow=function(e,t,n){var o=0,a=0|t.max_nonzero_coeff;if(l(null!=n),t.xrpow_max=0,l(0<=a&&a<=575),i.fill(n,a,576,0),(o=function(e,t,n,o){o=0;for(var a=0;a<=n;++a){var r=Math.abs(e.xr[a]);o+=r,t[a]=Math.sqrt(r*Math.sqrt(r)),t[a]>e.xrpow_max&&(e.xrpow_max=t[a])}return o}(t,n,a,o))>1e-20){var r=0;0!=(2&e.substep_shaping)&&(r=1);for(var c=0;c<t.psymax;c++)e.pseudohalf[c]=r;return!0}return i.fill(t.l3_enc,0,576,0),!1},this.init_outer_loop=function(e,t){t.part2_3_length=0,t.big_values=0,t.count1=0,t.global_gain=210,t.scalefac_compress=0,t.table_select[0]=0,t.table_select[1]=0,t.table_select[2]=0,t.subblock_gain[0]=0,t.subblock_gain[1]=0,t.subblock_gain[2]=0,t.subblock_gain[3]=0,t.region0_count=0,t.region1_count=0,t.preflag=0,t.scalefac_scale=0,t.count1table_select=0,t.part2_length=0,t.sfb_lmax=f.SBPSY_l,t.sfb_smin=f.SBPSY_s,t.psy_lmax=e.sfb21_extra?f.SBMAX_l:f.SBPSY_l,t.psymax=t.psy_lmax,t.sfbmax=t.sfb_lmax,t.sfbdivide=11;for(var o=0;o<f.SBMAX_l;o++)t.width[o]=e.scalefac_band.l[o+1]-e.scalefac_band.l[o],t.window[o]=3;if(t.block_type==f.SHORT_TYPE){var r=s(576);t.sfb_smin=0,t.sfb_lmax=0,0!=t.mixed_block_flag&&(t.sfb_smin=3,t.sfb_lmax=2*e.mode_gr+4),t.psymax=t.sfb_lmax+3*((e.sfb21_extra?f.SBMAX_s:f.SBPSY_s)-t.sfb_smin),t.sfbmax=t.sfb_lmax+3*(f.SBPSY_s-t.sfb_smin),t.sfbdivide=t.sfbmax-18,t.psy_lmax=t.sfb_lmax;var c=e.scalefac_band.l[t.sfb_lmax];for(a.arraycopy(t.xr,0,r,0,576),o=t.sfb_smin;o<f.SBMAX_s;o++)for(var l=e.scalefac_band.s[o],M=e.scalefac_band.s[o+1],p=0;p<3;p++)for(var u=l;u<M;u++)t.xr[c++]=r[3*u+p];var b=t.sfb_lmax;for(o=t.sfb_smin;o<f.SBMAX_s;o++)t.width[b]=t.width[b+1]=t.width[b+2]=e.scalefac_band.s[o+1]-e.scalefac_band.s[o],t.window[b]=0,t.window[b+1]=1,t.window[b+2]=2,b+=3}t.count1bits=0,t.sfb_partition_table=n.nr_of_sfb_block[0][0],t.slen[0]=0,t.slen[1]=0,t.slen[2]=0,t.slen[3]=0,t.max_nonzero_coeff=575,i.fill(t.scalefac,0),function(e,t){var o=e.ATH,a=t.xr;if(t.block_type!=f.SHORT_TYPE)for(var r=!1,c=f.PSFB21-1;c>=0&&!r;c--){var i=e.scalefac_band.psfb21[c],s=e.scalefac_band.psfb21[c+1],l=n.athAdjust(o.adjust,o.psfb21[c],o.floor);e.nsPsy.longfact[21]>1e-12&&(l*=e.nsPsy.longfact[21]);for(var M=s-1;M>=i;M--){if(!(Math.abs(a[M])<l)){r=!0;break}a[M]=0}}else for(var p=0;p<3;p++)for(r=!1,c=f.PSFB12-1;c>=0&&!r;c--){s=(i=3*e.scalefac_band.s[12]+(e.scalefac_band.s[13]-e.scalefac_band.s[12])*p+(e.scalefac_band.psfb12[c]-e.scalefac_band.psfb12[0]))+(e.scalefac_band.psfb12[c+1]-e.scalefac_band.psfb12[c]);var u=n.athAdjust(o.adjust,o.psfb12[c],o.floor);for(e.nsPsy.shortfact[12]>1e-12&&(u*=e.nsPsy.shortfact[12]),M=s-1;M>=i;M--){if(!(Math.abs(a[M])<u)){r=!0;break}a[M]=0}}}(e,t)},_.BINSEARCH_NONE=new _(0),_.BINSEARCH_UP=new _(1),_.BINSEARCH_DOWN=new _(2),this.trancate_smallspectrums=function(e,t,a,r){var c=s(d.SFBMAX);if((0!=(4&e.substep_shaping)||t.block_type!=f.SHORT_TYPE)&&0==(128&e.substep_shaping)){n.calc_noise(t,a,c,new p,null);for(var l=0;l<576;l++){var M=0;0!=t.l3_enc[l]&&(M=Math.abs(t.xr[l])),r[l]=M}l=0;var u=8;t.block_type==f.SHORT_TYPE&&(u=6);do{var b,h,_,A,m=t.width[u];if(l+=m,!(c[u]>=1)&&(i.sort(r,l-m,m),!BitStream.EQ(r[l-1],0))){b=(1-c[u])*a[u],h=0,A=0;do{var z;for(_=1;A+_<m&&!BitStream.NEQ(r[A+l-m],r[A+l+_-m]);_++);if(b<(z=r[A+l-m]*r[A+l-m]*_)){0!=A&&(h=r[A+l-m-1]);break}b-=z,A+=_}while(A<m);if(!BitStream.EQ(h,0))do{Math.abs(t.xr[l-m])<=h&&(t.l3_enc[l-m]=0)}while(--m>0)}}while(++u<t.psymax);t.part2_3_length=o.noquant_count_bits(e,t,null)}},this.outer_loop=function(e,t,c,i,M,h){var A=e.internal_flags,g=new b,O=s(576),L=s(d.SFBMAX),y=new p,v=new u,N=9999999,q=!1,T=!1,B=0;if(function(e,t,n,a,r){var c,i=e.CurrentStep[a],s=!1,M=e.OldValue[a],p=_.BINSEARCH_NONE;for(t.global_gain=M,n-=t.part2_length,l(0!=i);;){var u;if(c=o.count_bits(e,r,t,null),1==i||c==n)break;c>n?(p==_.BINSEARCH_DOWN&&(s=!0),s&&(i/=2),p=_.BINSEARCH_UP,u=i):(p==_.BINSEARCH_UP&&(s=!0),s&&(i/=2),p=_.BINSEARCH_DOWN,u=-i),t.global_gain+=u,t.global_gain<0&&(t.global_gain=0,s=!0),t.global_gain>255&&(t.global_gain=255,s=!0)}for(l(t.global_gain>=0),l(t.global_gain<256);c>n&&t.global_gain<255;)t.global_gain++,c=o.count_bits(e,r,t,null);e.CurrentStep[a]=M-t.global_gain>=4?4:2,e.OldValue[a]=t.global_gain,t.part2_3_length=c}(A,t,h,M,i),0==A.noise_shaping)return 100;n.calc_noise(t,c,L,y,v),y.bits=t.part2_3_length,g.assign(t);var S=0;for(a.arraycopy(i,0,O,0,576);!q;){do{var w,W=new p,X=255;if(w=0!=(2&A.substep_shaping)?20:3,A.sfb21_extra){if(L[g.sfbmax]>1)break;if(g.block_type==f.SHORT_TYPE&&(L[g.sfbmax+1]>1||L[g.sfbmax+2]>1))break}if(!z(e,g,L,i,T))break;0!=g.scalefac_scale&&(X=254);var R=h-g.part2_length;if(R<=0)break;for(;(g.part2_3_length=o.count_bits(A,i,g,v))>R&&g.global_gain<=X;)g.global_gain++;if(g.global_gain>X)break;if(0==y.over_count){for(;(g.part2_3_length=o.count_bits(A,i,g,v))>N&&g.global_gain<=X;)g.global_gain++;if(g.global_gain>X)break}if(n.calc_noise(g,c,L,W,v),W.bits=g.part2_3_length,0!=(m(t.block_type!=f.SHORT_TYPE?e.quant_comp:e.quant_comp_short,y,W,g,L)?1:0))N=t.part2_3_length,y=W,t.assign(g),S=0,a.arraycopy(i,0,O,0,576);else if(0==A.full_outer_loop){if(++S>w&&0==y.over_count)break;if(3==A.noise_shaping_amp&&T&&S>30)break;if(3==A.noise_shaping_amp&&T&&g.global_gain-B>15)break}}while(g.global_gain+g.scalefac_scale<255);3==A.noise_shaping_amp?T?q=!0:(g.assign(t),a.arraycopy(O,0,i,0,576),S=0,B=g.global_gain,T=!0):q=!0}return l(t.global_gain+t.scalefac_scale<=255),e.VBR==r.vbr_rh||e.VBR==r.vbr_mtrh?a.arraycopy(O,0,i,0,576):0!=(1&A.substep_shaping)&&trancate_smallspectrums(A,t,c,i),y.over_count},this.iteration_finish_one=function(e,n,a){var r=e.l3_side,c=r.tt[n][a];o.best_scalefac_store(e,n,a,r),1==e.use_best_huffman&&o.best_huffman_divide(e,c),t.ResvAdjust(e,c)},this.VBR_encode_granule=function(e,t,n,o,r,c,M){var p,u=e.internal_flags,f=new b,d=s(576),h=M,_=M+1,A=(M+c)/2,m=0,z=u.sfb21_extra;l(h<=LameInternalFlags.MAX_BITS_PER_CHANNEL),i.fill(f.l3_enc,0);do{l(A>=c),l(A<=M),l(c<=M),u.sfb21_extra=!(A>h-42)&&z,outer_loop(e,t,n,o,r,A)<=0?(m=1,_=t.part2_3_length,f.assign(t),a.arraycopy(o,0,d,0,576),p=(M=_-32)-c,A=(M+c)/2):(p=M-(c=A+32),A=(M+c)/2,0!=m&&(m=2,t.assign(f),a.arraycopy(d,0,o,0,576)))}while(p>12);u.sfb21_extra=z,2==m&&a.arraycopy(f.l3_enc,0,t.l3_enc,0,576),l(t.part2_3_length<=h)},this.get_framebits=function(n,o){var a=n.internal_flags;a.bitrate_index=a.VBR_min_bitrate;var r=e.getframebits(n);a.bitrate_index=1,r=e.getframebits(n);for(var c=1;c<=a.VBR_max_bitrate;c++){a.bitrate_index=c;var i=new MeanBits(r);o[c]=t.ResvFrameBegin(n,i),r=i.bits}},this.VBR_old_prepare=function(e,o,a,r,c,i,s,l,M){var p,u=e.internal_flags,b=0,d=1,h=0;u.bitrate_index=u.VBR_max_bitrate;var _=t.ResvFrameBegin(e,new MeanBits(0))/u.mode_gr;get_framebits(e,i);for(var A=0;A<u.mode_gr;A++){var m=n.on_pe(e,o,l[A],_,A,0);u.mode_ext==f.MPG_MD_MS_LR&&(ms_convert(u.l3_side,A),n.reduce_side(l[A],a[A],_,m));for(var z=0;z<u.channels_out;++z){var g=u.l3_side.tt[A][z];g.block_type!=f.SHORT_TYPE?(b=1.28/(1+Math.exp(3.5-o[A][z]/300))-.05,p=u.PSY.mask_adjust-b):(b=2.56/(1+Math.exp(3.5-o[A][z]/300))-.14,p=u.PSY.mask_adjust_short-b),u.masking_lower=Math.pow(10,.1*p),init_outer_loop(u,g),M[A][z]=n.calc_xmin(e,r[A][z],g,c[A][z]),0!=M[A][z]&&(d=0),s[A][z]=126,h+=l[A][z]}}for(A=0;A<u.mode_gr;A++)for(z=0;z<u.channels_out;z++)h>i[u.VBR_max_bitrate]&&(l[A][z]*=i[u.VBR_max_bitrate],l[A][z]/=h),s[A][z]>l[A][z]&&(s[A][z]=l[A][z]);return d},this.bitpressure_strategy=function(e,t,n,o){for(var a=0;a<e.mode_gr;a++)for(var r=0;r<e.channels_out;r++){for(var c=e.l3_side.tt[a][r],i=t[a][r],s=0,l=0;l<c.psy_lmax;l++)i[s++]*=1+.029*l*l/f.SBMAX_l/f.SBMAX_l;if(c.block_type==f.SHORT_TYPE)for(l=c.sfb_smin;l<f.SBMAX_s;l++)i[s++]*=1+.029*l*l/f.SBMAX_s/f.SBMAX_s,i[s++]*=1+.029*l*l/f.SBMAX_s/f.SBMAX_s,i[s++]*=1+.029*l*l/f.SBMAX_s/f.SBMAX_s;o[a][r]=0|Math.max(n[a][r],.9*o[a][r])}},this.VBR_new_prepare=function(e,o,a,r,c,i){var s,l=e.internal_flags,M=1,p=0,u=0;if(e.free_format)l.bitrate_index=0,b=new MeanBits(p),s=t.ResvFrameBegin(e,b),p=b.bits,c[0]=s;else{l.bitrate_index=l.VBR_max_bitrate;var b=new MeanBits(p);t.ResvFrameBegin(e,b),p=b.bits,get_framebits(e,c),s=c[l.VBR_max_bitrate]}for(var d=0;d<l.mode_gr;d++){n.on_pe(e,o,i[d],p,d,0),l.mode_ext==f.MPG_MD_MS_LR&&ms_convert(l.l3_side,d);for(var h=0;h<l.channels_out;++h){var _=l.l3_side.tt[d][h];l.masking_lower=Math.pow(10,.1*l.PSY.mask_adjust),init_outer_loop(l,_),0!=n.calc_xmin(e,a[d][h],_,r[d][h])&&(M=0),u+=i[d][h]}}for(d=0;d<l.mode_gr;d++)for(h=0;h<l.channels_out;h++)u>s&&(i[d][h]*=s,i[d][h]/=u);return M},this.calc_target_bits=function(o,a,r,c,i,s){var l,M,p,u,b=o.internal_flags,d=b.l3_side,h=0;b.bitrate_index=b.VBR_max_bitrate;var _=new MeanBits(h);for(s[0]=t.ResvFrameBegin(o,_),h=_.bits,b.bitrate_index=1,h=e.getframebits(o)-8*b.sideinfo_len,i[0]=h/(b.mode_gr*b.channels_out),h=o.VBR_mean_bitrate_kbps*o.framesize*1e3,0!=(1&b.substep_shaping)&&(h*=1.09),h/=o.out_samplerate,h-=8*b.sideinfo_len,h/=b.mode_gr*b.channels_out,(l=.93+.07*(11-o.compression_ratio)/5.5)<.9&&(l=.9),l>1&&(l=1),M=0;M<b.mode_gr;M++){var A=0;for(p=0;p<b.channels_out;p++){if(c[M][p]=int(l*h),a[M][p]>700){var m=int((a[M][p]-700)/1.4),z=d.tt[M][p];c[M][p]=int(l*h),z.block_type==f.SHORT_TYPE&&m<h/2&&(m=h/2),m>3*h/2?m=3*h/2:m<0&&(m=0),c[M][p]+=m}c[M][p]>LameInternalFlags.MAX_BITS_PER_CHANNEL&&(c[M][p]=LameInternalFlags.MAX_BITS_PER_CHANNEL),A+=c[M][p]}if(A>LameInternalFlags.MAX_BITS_PER_GRANULE)for(p=0;p<b.channels_out;++p)c[M][p]*=LameInternalFlags.MAX_BITS_PER_GRANULE,c[M][p]/=A}if(b.mode_ext==f.MPG_MD_MS_LR)for(M=0;M<b.mode_gr;M++)n.reduce_side(c[M],r[M],h*b.channels_out,LameInternalFlags.MAX_BITS_PER_GRANULE);for(u=0,M=0;M<b.mode_gr;M++)for(p=0;p<b.channels_out;p++)c[M][p]>LameInternalFlags.MAX_BITS_PER_CHANNEL&&(c[M][p]=LameInternalFlags.MAX_BITS_PER_CHANNEL),u+=c[M][p];if(u>s[0])for(M=0;M<b.mode_gr;M++)for(p=0;p<b.channels_out;p++)c[M][p]*=s[0],c[M][p]/=u}}},function(e,t){e.exports=function(){this.setModules=function(e,t){}}},function(e,t){e.exports=function(){this.over_noise=0,this.tot_noise=0,this.max_noise=0,this.over_count=0,this.over_SSD=0,this.bits=0}},function(e,t,n){var o=n(298),a=o.new_float,r=o.new_int;o.assert;e.exports=function(){this.global_gain=0,this.sfb_count1=0,this.step=r(39),this.noise=a(39),this.noise_log=a(39)}},function(e,t,n){var o=n(298).assert;e.exports=function(){var e;this.setModules=function(t){e=t},this.ResvFrameBegin=function(t,n){var a,r=t.internal_flags,c=r.l3_side,i=e.getframebits(t);n.bits=(i-8*r.sideinfo_len)/r.mode_gr;var s=2048*r.mode_gr-8;t.brate>320?a=8*int(1e3*t.brate/(t.out_samplerate/1152)/8+.5):(a=11520,t.strict_ISO&&(a=8*int(32e4/(t.out_samplerate/1152)/8+.5))),r.ResvMax=a-i,r.ResvMax>s&&(r.ResvMax=s),(r.ResvMax<0||t.disable_reservoir)&&(r.ResvMax=0);var l=n.bits*r.mode_gr+Math.min(r.ResvSize,r.ResvMax);return l>a&&(l=a),o(0==r.ResvMax%8),o(r.ResvMax>=0),c.resvDrain_pre=0,null!=r.pinfo&&(r.pinfo.mean_bits=n.bits/2,r.pinfo.resvsize=r.ResvSize),l},this.ResvMaxBits=function(e,t,n,o){var a,r=e.internal_flags,c=r.ResvSize,i=r.ResvMax;0!=o&&(c+=t),0!=(1&r.substep_shaping)&&(i*=.9),n.bits=t,10*c>9*i?(a=c-9*i/10,n.bits+=a,r.substep_shaping|=128):(a=0,r.substep_shaping&=127,e.disable_reservoir||0!=(1&r.substep_shaping)||(n.bits-=.1*t));var s=c<6*r.ResvMax/10?c:6*r.ResvMax/10;return(s-=a)<0&&(s=0),s},this.ResvAdjust=function(e,t){e.ResvSize-=t.part2_3_length+t.part2_length},this.ResvFrameEnd=function(e,t){var n,a=e.l3_side;e.ResvSize+=t*e.mode_gr;var r=0;a.resvDrain_post=0,a.resvDrain_pre=0,0!=(n=e.ResvSize%8)&&(r+=n),(n=e.ResvSize-r-e.ResvMax)>0&&(o(0==n%8),o(n>=0),r+=n);var c=Math.min(8*a.main_data_begin,r)/8;a.resvDrain_pre+=8*c,r-=8*c,e.ResvSize-=8*c,a.main_data_begin-=c,a.resvDrain_post+=r,e.ResvSize-=r}}},function(e,t){e.exports=function(){this.getLameVersion=function(){return\"3.98.4\"},this.getLameShortVersion=function(){return\"3.98.4\"},this.getLameVeryShortVersion=function(){return\"LAME3.98r\"},this.getPsyVersion=function(){return\"0.93\"},this.getLameUrl=function(){return\"http://www.mp3dev.org/\"},this.getLameOsBitness=function(){return\"32bits\"}}},function(e,t,n){var o=n(298),a=o.System,r=o.VbrMode,c=(o.Float,o.ShortBlock),i=(o.Util,o.Arrays),s=(o.new_array_n,o.new_byte),l=(o.new_double,o.new_float,o.new_float_n,o.new_int,o.new_int_n,o.assert);function M(){var e,t,n;this.setModules=function(o,a,r){e=o,t=a,n=r};var o=M.NUMTOCENTRIES,p=M.MAXFRAMESIZE,u=o+4+4+4+4+4+9+1+1+8+1+1+3+1+1+2+4+2+2,f=128,b=64,d=32,h=null,_=\"Xing\",A=\"Info\",m=[0,49345,49537,320,49921,960,640,49729,50689,1728,1920,51009,1280,50625,50305,1088,52225,3264,3456,52545,3840,53185,52865,3648,2560,51905,52097,2880,51457,2496,2176,51265,55297,6336,6528,55617,6912,56257,55937,6720,7680,57025,57217,8e3,56577,7616,7296,56385,5120,54465,54657,5440,55041,6080,5760,54849,53761,4800,4992,54081,4352,53697,53377,4160,61441,12480,12672,61761,13056,62401,62081,12864,13824,63169,63361,14144,62721,13760,13440,62529,15360,64705,64897,15680,65281,16320,16e3,65089,64001,15040,15232,64321,14592,63937,63617,14400,10240,59585,59777,10560,60161,11200,10880,59969,60929,11968,12160,61249,11520,60865,60545,11328,58369,9408,9600,58689,9984,59329,59009,9792,8704,58049,58241,9024,57601,8640,8320,57409,40961,24768,24960,41281,25344,41921,41601,25152,26112,42689,42881,26432,42241,26048,25728,42049,27648,44225,44417,27968,44801,28608,28288,44609,43521,27328,27520,43841,26880,43457,43137,26688,30720,47297,47489,31040,47873,31680,31360,47681,48641,32448,32640,48961,32e3,48577,48257,31808,46081,29888,30080,46401,30464,47041,46721,30272,29184,45761,45953,29504,45313,29120,28800,45121,20480,37057,37249,20800,37633,21440,21120,37441,38401,22208,22400,38721,21760,38337,38017,21568,39937,23744,23936,40257,24320,40897,40577,24128,23040,39617,39809,23360,39169,22976,22656,38977,34817,18624,18816,35137,19200,35777,35457,19008,19968,36545,36737,20288,36097,19904,19584,35905,17408,33985,34177,17728,34561,18368,18048,34369,33281,17088,17280,33601,16640,33217,32897,16448];function z(e,t){var n=255&e[t+0];return n<<=8,n|=255&e[t+1],n<<=8,n|=255&e[t+2],n<<=8,n|=255&e[t+3]}function g(e,t,n){e[t+0]=255&n>>24,e[t+1]=255&n>>16,e[t+2]=255&n>>8,e[t+3]=255&n}function O(e,t,n){e[t+0]=255&n>>8,e[t+1]=255&n}function L(e,t,n){return 255&(e<<t|n&~(-1<<t))}function y(t,n){var o=t.internal_flags;n[0]=L(n[0],8,255),n[1]=L(n[1],3,7),n[1]=L(n[1],1,t.out_samplerate<16e3?0:1),n[1]=L(n[1],1,t.version),n[1]=L(n[1],2,1),n[1]=L(n[1],1,t.error_protection?0:1),n[2]=L(n[2],4,o.bitrate_index),n[2]=L(n[2],2,o.samplerate_index),n[2]=L(n[2],1,0),n[2]=L(n[2],1,t.extension),n[3]=L(n[3],2,t.mode.ordinal()),n[3]=L(n[3],2,o.mode_ext),n[3]=L(n[3],1,t.copyright),n[3]=L(n[3],1,t.original),n[3]=L(n[3],2,t.emphasis),n[0]=255;var a,c,i=241&n[1];a=1==t.version?f:t.out_samplerate<16e3?d:b,t.VBR==r.vbr_off&&(a=t.brate),c=t.free_format?0:255&16*e.BitrateIndex(a,t.version,t.out_samplerate),1==t.version?(n[1]=255&(10|i),i=13&n[2],n[2]=255&(c|i)):(n[1]=255&(2|i),i=13&n[2],n[2]=255&(c|i))}function v(e,t){return t=t>>8^m[255&(t^e)]}this.addVbrFrame=function(e){var t=e.internal_flags,n=Tables.bitrate_table[e.version][t.bitrate_index];l(null!=t.VBR_seek_table.bag),function(e,t){if(e.nVbrNumFrames++,e.sum+=t,e.seen++,!(e.seen<e.want)&&(e.pos<e.size&&(e.bag[e.pos]=e.sum,e.pos++,e.seen=0),e.pos==e.size)){for(var n=1;n<e.size;n+=2)e.bag[n/2]=e.bag[n];e.want*=2,e.pos/=2}}(t.VBR_seek_table,n)},this.getVbrTag=function(e){var t=new VBRTagData,n=0;t.flags=0;var a=e[n+1]>>3&1,r=e[n+2]>>2&3,c=e[n+3]>>6&3,i=e[n+2]>>4&15;if(i=Tables.bitrate_table[a][i],e[n+1]>>4==14?t.samprate=Tables.samplerate_table[2][r]:t.samprate=Tables.samplerate_table[a][r],!function(e,t){return new String(e,t,_.length(),h).equals(_)||new String(e,t,A.length(),h).equals(A)}(e,n+=0!=a?3!=c?36:21:3!=c?21:13))return null;n+=4,t.hId=a;var s=t.flags=z(e,n);if(n+=4,0!=(1&s)&&(t.frames=z(e,n),n+=4),0!=(2&s)&&(t.bytes=z(e,n),n+=4),0!=(4&s)){if(null!=t.toc)for(var l=0;l<o;l++)t.toc[l]=e[n+l];n+=o}t.vbrScale=-1,0!=(8&s)&&(t.vbrScale=z(e,n),n+=4),t.headersize=72e3*(a+1)*i/t.samprate;var M=e[(n+=21)+0]<<4;M+=e[n+1]>>4;var p=(15&e[n+1])<<8;return(M<0||M>3e3)&&(M=-1),((p+=255&e[n+2])<0||p>3e3)&&(p=-1),t.encDelay=M,t.encPadding=p,t},this.InitVbrTag=function(e){var n,o=e.internal_flags;n=1==e.version?f:e.out_samplerate<16e3?d:b,e.VBR==r.vbr_off&&(n=e.brate);var a=72e3*(e.version+1)*n/e.out_samplerate,c=o.sideinfo_len+u;if(o.VBR_seek_table.TotalFrameSize=a,a<c||a>p)e.bWriteVbrTag=!1;else{o.VBR_seek_table.nVbrNumFrames=0,o.VBR_seek_table.nBytesWritten=0,o.VBR_seek_table.sum=0,o.VBR_seek_table.seen=0,o.VBR_seek_table.want=1,o.VBR_seek_table.pos=0,null==o.VBR_seek_table.bag&&(o.VBR_seek_table.bag=new int[400],o.VBR_seek_table.size=400);var i=s(p);y(e,i);for(var l=o.VBR_seek_table.TotalFrameSize,M=0;M<l;++M)t.add_dummy_byte(e,255&i[M],1)}},this.updateMusicCRC=function(e,t,n,o){for(var a=0;a<o;++a)e[0]=v(t[n+a],e[0])},this.getLameTagFrame=function(e,l){var M=e.internal_flags;if(!e.bWriteVbrTag)return 0;if(M.Class_ID!=Lame.LAME_ID)return 0;if(M.VBR_seek_table.pos<=0)return 0;if(l.length<M.VBR_seek_table.TotalFrameSize)return M.VBR_seek_table.TotalFrameSize;i.fill(l,0,M.VBR_seek_table.TotalFrameSize,0),y(e,l);var p=s(o);if(e.free_format)for(var u=1;u<o;++u)p[u]=255&255*u/100;else!function(e,t){if(!(e.pos<=0))for(var n=1;n<o;++n){var a=n/o,r=0|Math.floor(a*e.pos);r>e.pos-1&&(r=e.pos-1);var c=0|256*e.bag[r]/e.sum;c>255&&(c=255),t[n]=255&c}}(M.VBR_seek_table,p);var f=M.sideinfo_len;e.error_protection&&(f-=2),e.VBR==r.vbr_off?(l[f++]=255&A.charAt(0),l[f++]=255&A.charAt(1),l[f++]=255&A.charAt(2),l[f++]=255&A.charAt(3)):(l[f++]=255&_.charAt(0),l[f++]=255&_.charAt(1),l[f++]=255&_.charAt(2),l[f++]=255&_.charAt(3)),g(l,f,15),g(l,f+=4,M.VBR_seek_table.nVbrNumFrames),f+=4;var b=M.VBR_seek_table.nBytesWritten+M.VBR_seek_table.TotalFrameSize;g(l,f,0|b),f+=4,a.arraycopy(p,0,l,f,p.length),f+=p.length,e.error_protection&&t.CRC_writeheader(M,l);var d=0;for(u=0;u<f;u++)d=v(l[u],d);return f+=function(e,t,o,a,r){var i,s,l,M,p,u=e.internal_flags,f=0,b=e.encoder_delay,d=e.encoder_padding,h=100-10*e.VBR_q-e.quality,_=n.getLameVeryShortVersion(),A=[1,5,3,2,4,0,3],m=0|(e.lowpassfreq/100+.5>255?255:e.lowpassfreq/100+.5),z=0,L=0,y=e.internal_flags.noise_shaping,N=0,q=0,T=0,B=0!=(1&e.exp_nspsytune),S=0!=(2&e.exp_nspsytune),w=!1,W=!1,X=e.internal_flags.nogap_total,R=e.internal_flags.nogap_current,E=e.ATHtype;switch(e.VBR){case vbr_abr:p=e.VBR_mean_bitrate_kbps;break;case vbr_off:p=e.brate;break;default:p=e.VBR_min_bitrate_kbps}switch(i=0+(e.VBR.ordinal()<A.length?A[e.VBR.ordinal()]:0),u.findReplayGain&&(u.RadioGain>510&&(u.RadioGain=510),u.RadioGain<-510&&(u.RadioGain=-510),L=8192,L|=3072,u.RadioGain>=0?L|=u.RadioGain:(L|=512,L|=-u.RadioGain)),u.findPeakSample&&(z=Math.abs(0|u.PeakSample/32767*Math.pow(2,23)+.5)),-1!=X&&(R>0&&(W=!0),R<X-1&&(w=!0)),M=E+((B?1:0)<<4)+((S?1:0)<<5)+((w?1:0)<<6)+((W?1:0)<<7),h<0&&(h=0),e.mode){case MONO:N=0;break;case STEREO:N=1;break;case DUAL_CHANNEL:N=2;break;case JOINT_STEREO:N=e.force_ms?4:3;break;case NOT_SET:default:N=7}T=e.in_samplerate<=32e3?0:48e3==e.in_samplerate?2:e.in_samplerate>48e3?3:1,(e.short_blocks==c.short_block_forced||e.short_blocks==c.short_block_dispensed||-1==e.lowpassfreq&&-1==e.highpassfreq||e.scale_left<e.scale_right||e.scale_left>e.scale_right||e.disable_reservoir&&e.brate<320||e.noATH||e.ATHonly||0==E||e.in_samplerate<=32e3)&&(q=1),s=y+(N<<2)+(q<<5)+(T<<6),l=u.nMusicCRC,g(o,a+f,h),f+=4;for(var C=0;C<9;C++)o[a+f+C]=255&_.charAt(C);o[a+(f+=9)]=255&i,o[a+ ++f]=255&m,g(o,a+ ++f,z),O(o,a+(f+=4),L),O(o,a+(f+=2),0),o[a+(f+=2)]=255&M,o[a+ ++f]=p>=255?255:255&p,o[a+ ++f]=255&b>>4,o[a+f+1]=255&(b<<4)+(d>>8),o[a+f+2]=255&d,o[a+(f+=3)]=255&s,f++,o[a+f++]=0,O(o,a+f,e.preset),g(o,a+(f+=2),t),O(o,a+(f+=4),l),f+=2;for(var k=0;k<f;k++)r=v(o[a+k],r);return O(o,a+f,r),f+=2}(e,b,l,f,d),M.VBR_seek_table.TotalFrameSize},this.putVbrTag=function(e,t){if(e.internal_flags.VBR_seek_table.pos<=0)return-1;if(t.seek(t.length()),0==t.length())return-1;var n=function(e){e.seek(0);var t=s(10);return e.readFully(t),new String(t,\"ISO-8859-1\").startsWith(\"ID3\")?0:((127&t[6])<<21|(127&t[7])<<14|(127&t[8])<<7|127&t[9])+t.length}(t);t.seek(n);var o=s(p),a=getLameTagFrame(e,o);return a>o.length?-1:a<1?0:(t.write(o,0,a),0)}}M.NUMTOCENTRIES=100,M.MAXFRAMESIZE=2880,e.exports=M}])]);","extractedComments":[]}