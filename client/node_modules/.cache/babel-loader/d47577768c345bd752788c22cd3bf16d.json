{"ast":null,"code":"import _slicedToArray from \"/Users/metabou/Desktop/chatapp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metabou/Desktop/chatapp/client/src/components/Login/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { toast } from 'react-toastify';\nimport { Redirect } from 'react-router';\nimport ToastMessage from '../../components/ToastMessage/ToastMessage';\nimport './Login.css';\n\nconst Login = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  useEffect(() => {\n    if (props.notVerified) {\n      toast.dismiss();\n      toast.error('Your account has not been verified!', {\n        position: 'bottom-center'\n      }, () => {\n        return React.createElement(Redirect, {\n          push: true,\n          to: \"/Verification\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        });\n      });\n    }\n\n    if (props.error) {\n      toast.dismiss();\n      toast.error('Please check your email and password, and try again!', {\n        position: 'bottom-center'\n      });\n    }\n\n    props.resetUserValues();\n  });\n\n  if (props.success) {\n    return React.createElement(Redirect, {\n      push: true,\n      to: \"/Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  }\n\n  const userLogin = () => {\n    const params = {\n      email: email,\n      password: password\n    };\n\n    if (!email && !password) {\n      toast.error('Email and password are required.', {\n        position: 'bottom-center'\n      });\n    } else {\n      props.userLogin(params);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"authcontainerlogin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(ToastMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Login to chatter!\"), React.createElement(\"div\", {\n    className: \"authcontainerlogin__section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    onChange: event => setEmail(event.target.value),\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    onChange: event => setPassword(event.target.value),\n    value: password,\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Forgot your password?\"), React.createElement(\"button\", {\n    onClick: userLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Login\"), React.createElement(Link, {\n    to: \"/Signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Need an account? Register.\"))));\n};\n\nfunction mapStateToProps({\n  usersReducer\n}) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    notVerified: usersReducer.notVerified\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Login);","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/components/Login/Login.js"],"names":["React","useState","useEffect","Link","connect","actions","toast","Redirect","ToastMessage","Login","props","email","setEmail","password","setPassword","notVerified","dismiss","error","position","resetUserValues","success","userLogin","params","event","target","value","mapStateToProps","usersReducer","isLoading"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { toast } from 'react-toastify';\nimport { Redirect } from 'react-router';\nimport ToastMessage from '../../components/ToastMessage/ToastMessage';\nimport './Login.css';\n\nconst Login = (props) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    if (props.notVerified) {\n      toast.dismiss();\n      toast.error('Your account has not been verified!', { position: 'bottom-center' }, () => {\n        return <Redirect push to=\"/Verification\" />;\n      });\n    }\n\n    if (props.error) {\n      toast.dismiss();\n      toast.error('Please check your email and password, and try again!', { position: 'bottom-center' });\n    }\n    props.resetUserValues();\n  });\n\n  if(props.success) {\n    return <Redirect push to=\"/Dashboard\" />;\n  }\n\n  const userLogin = () => {\n    const params = {\n      email: email,\n      password: password\n    }\n    if(!email && !password) {\n      toast.error('Email and password are required.', { position: 'bottom-center' });\n    } else {\n      props.userLogin(params);\n    }\n  }\n\n  return (\n    <div className=\"authcontainerlogin\">\n      <ToastMessage />\n      <span>Login to chatter!</span>\n      <div className=\"authcontainerlogin__section\">\n        <span>Email</span>\n        <input onChange={event => setEmail(event.target.value)} value={email} />\n        <span>Password</span>\n        <input onChange={event => setPassword(event.target.value)} value={password} type=\"password\" />\n        <p>Forgot your password?</p>\n        <button onClick={userLogin}>Login</button>\n        <Link to=\"/Signup\"><p className=\"register\">Need an account? Register.</p></Link>\n      </div>\n    </div>\n  );\n};\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    notVerified: usersReducer.notVerified\n  }\n}\n\nexport default connect(mapStateToProps, actions)(Login);"]},"metadata":{},"sourceType":"module"}