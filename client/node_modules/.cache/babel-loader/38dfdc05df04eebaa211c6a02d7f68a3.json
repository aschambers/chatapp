{"ast":null,"code":"import _slicedToArray from \"/Users/metabou/Desktop/chatapp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metabou/Desktop/chatapp/client/src/views/Dashboard/Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport ReactTooltip from 'react-tooltip';\nimport Chatroom from '../../components/Chatroom/Chatroom';\nimport './Dashboard.css';\nimport chatot from '../../assets/images/chatot.png';\nimport friends from '../../assets/images/friends.png';\nimport settings from '../../assets/images/settings.png';\n\nconst Dashboard = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        imageUrl = _useState4[0],\n        setImageUrl = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        active = _useState6[0],\n        setActive = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        chatroom = _useState8[0],\n        setChatroom = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        hover = _useState10[0],\n        setHover = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        isModalOpen = _useState12[0],\n        setModalOpen = _useState12[1];\n\n  useEffect(() => {\n    if (!props.user) {\n      props.currentUser();\n      window.addEventListener('keydown', detectEscape);\n    } else if (props.user) {\n      const _props$user = props.user,\n            username = _props$user.username,\n            imageUrl = _props$user.imageUrl,\n            active = _props$user.active;\n      setUsername(username);\n      setImageUrl(imageUrl);\n      setActive(active);\n    }\n  }, [props]);\n\n  const detectEscape = event => {\n    if (event.keyCode === 27) {\n      setModalOpen(false);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"chatroom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidebar-container\",\n    \"data-tip\": \"home\",\n    \"data-place\": \"right\",\n    onPointerOver: () => {\n      setHover(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, hover === \"\" && chatroom !== \"\" ? React.createElement(\"span\", {\n    className: \"sidebar-hover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }) : null, chatroom === \"\" ? React.createElement(\"span\", {\n    className: \"sidebar-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }) : null, React.createElement(\"img\", {\n    className: \"sidebar-logo\",\n    src: chatot,\n    alt: \"chatter-icon-logo\",\n    onClick: () => {\n      setChatroom(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"sidebar-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sidebar-container\",\n    \"data-tip\": username,\n    \"data-place\": \"right\",\n    onPointerOver: () => {\n      setHover(username);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, hover === username && chatroom !== username ? React.createElement(\"span\", {\n    className: \"sidebar-hover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }) : null, chatroom === username ? React.createElement(\"span\", {\n    className: \"sidebar-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }) : null, React.createElement(\"img\", {\n    className: \"sidebar-logo\",\n    src: chatot,\n    alt: \"chatter-icon\",\n    onClick: () => {\n      setChatroom(username);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), React.createElement(ReactTooltip, {\n    delayShow: 200,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sidebarleft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidebarleft-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Find or start a conversation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"sidebarleft-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sidebarleft-friendscontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"sidebarleft-logo\",\n    src: friends,\n    alt: \"friends-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"sidebarleft-friends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Friends\")), React.createElement(\"div\", {\n    className: \"sidebarleft-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sidebarleft-directmessages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Private Messages\")), React.createElement(\"div\", {\n    className: \"sidebarleft-bordertwo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"userinfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"username-image\",\n    src: imageUrl ? imageUrl : chatot,\n    alt: \"username-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), active ? React.createElement(\"div\", {\n    className: \"userinfo-online\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }) : null, React.createElement(\"span\", {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, username), React.createElement(\"img\", {\n    className: \"settings-image\",\n    src: settings,\n    alt: \"settings-icon\",\n    onClick: () => {\n      setModalOpen(!isModalOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))), chatroom === username ? React.createElement(Chatroom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"mainarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mainarea-topnav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"mainarea-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mainarea-container-addserver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Create\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Create a new server and invite other people to join!\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Create a server\")), React.createElement(\"div\", {\n    className: \"mainarea-container-joinserver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Join\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Enter an secret invite code to join an existing server!\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Join a server\")))), isModalOpen ? React.createElement(\"div\", {\n    className: \"usersettings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"usersettings-sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"User Settings\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"My Account\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Privacy & Safety\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Connections\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Billing\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"App Settings\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Voice & Video\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Notifications\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Appearance\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Language\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Logout\")), React.createElement(\"div\", {\n    className: \"usersettings-myaccount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"My Account\"), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }))) : null);\n};\n\nfunction mapStateToProps({\n  usersReducer\n}) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Dashboard);","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/views/Dashboard/Dashboard.js"],"names":["React","useState","useEffect","connect","actions","ReactTooltip","Chatroom","chatot","friends","settings","Dashboard","props","username","setUsername","imageUrl","setImageUrl","active","setActive","chatroom","setChatroom","hover","setHover","isModalOpen","setModalOpen","user","currentUser","window","addEventListener","detectEscape","event","keyCode","color","mapStateToProps","usersReducer","error","isLoading","success","users"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAO,iBAAP;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,QAAP,MAAqB,kCAArB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA,oBACKV,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,QACpBW,QADoB;AAAA,QACVC,WADU;;AAAA,qBAEKZ,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,QAEpBa,QAFoB;AAAA,QAEVC,WAFU;;AAAA,qBAGCd,QAAQ,CAAC,KAAD,CAHT;AAAA;AAAA,QAGpBe,MAHoB;AAAA,QAGZC,SAHY;;AAAA,qBAIKhB,QAAQ,CAAC,EAAD,CAJb;AAAA;AAAA,QAIpBiB,QAJoB;AAAA,QAIVC,WAJU;;AAAA,qBAKDlB,QAAQ,CAAC,EAAD,CALP;AAAA;AAAA,QAKpBmB,KALoB;AAAA,QAKbC,QALa;;AAAA,sBAMSpB,QAAQ,CAAC,KAAD,CANjB;AAAA;AAAA,QAMpBqB,WANoB;AAAA,QAMPC,YANO;;AAQ3BrB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACS,KAAK,CAACa,IAAV,EAAgB;AACdb,MAAAA,KAAK,CAACc,WAAN;AACAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCC,YAAnC;AACD,KAHD,MAGO,IAAGjB,KAAK,CAACa,IAAT,EAAe;AAAA,0BACmBb,KAAK,CAACa,IADzB;AAAA,YACZZ,QADY,eACZA,QADY;AAAA,YACFE,QADE,eACFA,QADE;AAAA,YACQE,MADR,eACQA,MADR;AAEpBH,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD;AACF,GAVQ,EAUN,CAACL,KAAD,CAVM,CAAT;;AAYA,QAAMiB,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACxBP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GAJD;;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,gBAAS,MAA5C;AAAmD,kBAAW,OAA9D;AAAsE,IAAA,aAAa,EAAE,MAAM;AAAEF,MAAAA,QAAQ,CAAC,EAAD,CAAR;AAAc,KAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,KAAK,EAAV,IAAgBF,QAAQ,KAAK,EAA7B,GAAkC;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlC,GAA4E,IAD/E,EAEGA,QAAQ,KAAK,EAAb,GAAkB;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,GAA6D,IAFhE,EAGE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,GAAG,EAAEX,MAAnC;AAA2C,IAAA,GAAG,EAAC,mBAA/C;AAAmE,IAAA,OAAO,EAAE,MAAM;AAAEY,MAAAA,WAAW,CAAC,EAAD,CAAX;AAAiB,KAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAME;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,gBAAUP,QAA7C;AAAuD,kBAAW,OAAlE;AAA0E,IAAA,aAAa,EAAE,MAAM;AAAES,MAAAA,QAAQ,CAACT,QAAD,CAAR;AAAoB,KAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,KAAK,KAAKR,QAAV,IAAsBM,QAAQ,KAAKN,QAAnC,GAA8C;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9C,GAAwF,IAD3F,EAEGM,QAAQ,KAAKN,QAAb,GAAwB;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,GAAmE,IAFtE,EAGE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,GAAG,EAAEL,MAAnC;AAA2C,IAAA,GAAG,EAAC,cAA/C;AAA8D,IAAA,OAAO,EAAE,MAAM;AAAEY,MAAAA,WAAW,CAACP,QAAD,CAAX;AAAuB,KAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAPF,CADF,EAcE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAE,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAeE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,WAAW,EAAC,8BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,GAAG,EAAEJ,OAAvC;AAAgD,IAAA,GAAG,EAAC,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CALF,EASE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAVF,EAaE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAcE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,GAAG,EAAEM,QAAQ,GAAGA,QAAH,GAAcP,MAA3D;AAAmE,IAAA,GAAG,EAAC,eAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGS,MAAM,GAAG;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA6C,IAJtD,EAKE;AAAM,IAAA,KAAK,EAAE;AAAEe,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCnB,QAAlC,CALF,EAME;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,GAAG,EAAEH,QAArC;AAA+C,IAAA,GAAG,EAAC,eAAnD;AAAmE,IAAA,OAAO,EAAE,MAAM;AAAEc,MAAAA,YAAY,CAAC,CAACD,WAAF,CAAZ;AAA6B,KAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAdF,CAfF,EAsCGJ,QAAQ,KAAKN,QAAb,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAEC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CADF,EAME;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CANF,CAHF,CAxCJ,EAyDGU,WAAW,GACV;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CADF,EAcE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAdF,CADU,GAqBV,IA9EJ,CADF;AAkFD,CA5GD;;AA8GA,SAASU,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAA2C;AACzC,SAAO;AACLC,IAAAA,KAAK,EAAED,YAAY,CAACC,KADf;AAELC,IAAAA,SAAS,EAAEF,YAAY,CAACE,SAFnB;AAGLC,IAAAA,OAAO,EAAEH,YAAY,CAACG,OAHjB;AAILZ,IAAAA,IAAI,EAAES,YAAY,CAACT,IAJd;AAKLa,IAAAA,KAAK,EAAEJ,YAAY,CAACI;AALf,GAAP;AAOD;;AAED,eAAelC,OAAO,CAAC6B,eAAD,EAAkB5B,OAAlB,CAAP,CAAkCM,SAAlC,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport ReactTooltip from 'react-tooltip';\nimport Chatroom from '../../components/Chatroom/Chatroom';\nimport './Dashboard.css';\nimport chatot from '../../assets/images/chatot.png';\nimport friends from '../../assets/images/friends.png';\nimport settings from '../../assets/images/settings.png';\n\nconst Dashboard = (props) => {\n  const [username, setUsername] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [active, setActive] = useState(false);\n  const [chatroom, setChatroom] = useState('');\n  const [hover, setHover] = useState('');\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  useEffect(() => {\n    if(!props.user) {\n      props.currentUser();\n      window.addEventListener('keydown', detectEscape);\n    } else if(props.user) {\n      const { username, imageUrl, active } = props.user;\n      setUsername(username);\n      setImageUrl(imageUrl);\n      setActive(active);\n    }\n  }, [props]);\n\n  const detectEscape = (event) => {\n    if (event.keyCode === 27) {\n      setModalOpen(false);\n    }\n  }\n\n  return (\n    <div className=\"chatroom\">\n      <div className=\"sidebar\">\n        <div className=\"sidebar-container\" data-tip=\"home\" data-place=\"right\" onPointerOver={() => { setHover(\"\") }}>\n          {hover === \"\" && chatroom !== \"\" ? <span className=\"sidebar-hover\"></span> : null}\n          {chatroom === \"\" ? <span className=\"sidebar-select\"></span> : null}\n          <img className=\"sidebar-logo\" src={chatot} alt=\"chatter-icon-logo\" onClick={() => { setChatroom(\"\") }} />\n        </div>\n        <div className=\"sidebar-border\" />\n        <div className=\"sidebar-container\" data-tip={username} data-place=\"right\" onPointerOver={() => { setHover(username) }}>\n          {hover === username && chatroom !== username ? <span className=\"sidebar-hover\"></span> : null}\n          {chatroom === username ? <span className=\"sidebar-select\"></span> : null}\n          <img className=\"sidebar-logo\" src={chatot} alt=\"chatter-icon\" onClick={() => { setChatroom(username) }} />\n        </div>\n      </div>\n      <ReactTooltip delayShow={200} />\n      <div className=\"sidebarleft\">\n        <div className=\"sidebarleft-container\">\n          <input placeholder=\"Find or start a conversation\"></input>\n        </div>\n        <div className=\"sidebarleft-border\" />\n        <div className=\"sidebarleft-friendscontainer\">\n          <img className=\"sidebarleft-logo\" src={friends} alt=\"friends-icon\" />\n          <span className=\"sidebarleft-friends\">Friends</span>\n        </div>\n        <div className=\"sidebarleft-border\" />\n        <div className=\"sidebarleft-directmessages\">\n          <span>Private Messages</span>\n        </div>\n        <div className=\"sidebarleft-bordertwo\" />\n        <div className=\"userinfo\">\n          <div className=\"username\">\n            <img className=\"username-image\" src={imageUrl ? imageUrl : chatot} alt=\"username-icon\" />\n          </div>\n          {active ? <div className=\"userinfo-online\"></div> : null}\n          <span style={{ color: 'white' }}>{username}</span>\n          <img className=\"settings-image\" src={settings} alt=\"settings-icon\" onClick={() => { setModalOpen(!isModalOpen); }} />\n        </div>\n      </div>\n      {chatroom === username ?\n        <Chatroom /> :\n        <div className=\"mainarea\">\n          <div className=\"mainarea-topnav\">\n          </div>\n          <div className=\"mainarea-container\">\n            <div className=\"mainarea-container-addserver\">\n              <h1>Create</h1>\n              <p>Create a new server and invite other people to join!</p>\n              <button>Create a server</button>\n            </div>\n            <div className=\"mainarea-container-joinserver\">\n              <h1>Join</h1>\n              <p>Enter an secret invite code to join an existing server!</p>\n              <button>Join a server</button>\n            </div>\n          </div>\n        </div>\n      }\n      {isModalOpen ?\n        <div className=\"usersettings\">\n          <div className=\"usersettings-sidebar\">\n            <h1>User Settings</h1>\n            <p>My Account</p>\n            <p>Privacy &amp; Safety</p>\n            <p>Connections</p>\n            <p>Billing</p>\n            <h1>App Settings</h1>\n            <p>Voice &amp; Video</p>\n            <p>Notifications</p>\n            <p>Appearance</p>\n            <p>Language</p>\n            <p>Logout</p>\n          </div>\n          <div className=\"usersettings-myaccount\">\n            <h1>My Account</h1>\n            <div className=\"usersettings-myaccount__container\">\n            </div>\n          </div>\n        </div>\n      : null}\n    </div>\n  );\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Dashboard);"]},"metadata":{},"sourceType":"module"}