{"ast":null,"code":"var _jsxFileName = \"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/components/Chatroom/Chatroom.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from 'socket.io-client';\nimport freeice from 'freeice';\nimport quickconnect from 'rtc-quickconnect';\nimport wrtc from 'wrtc';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Chatroom.css';\nimport chatot from '../../assets/images/chatot.png';\nimport numbersign from '../../assets/images/numbersign.png';\nimport voice from '../../assets/images/voice.png';\nimport editwhite from '../../assets/images/editwhite.png';\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.useOnClickOutside = (ref, handler) => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    };\n\n    this.recordAudioInput = async stream => {\n      if (stream) {\n        try {\n          const localAudio = document.getElementById('localAudio');\n          localAudio.srcObject = stream;\n          localAudio.autoplay = true;\n          this.state.myConnection = new RTCPeerConnection();\n          let loggedInUser = this.state.voiceUsers.filter(x => x.username === this.state.username);\n\n          if (this.state.voiceUsers.length && !this.state.voiceUsers.filter(x => x.username === this.state.username)) {\n            this.state.voiceUsers.push(this.state.username);\n          }\n\n          console.log(loggedInUser);\n          console.log(this.state.voiceUsers);\n\n          if (!loggedInUser && this.state.voiceUsers.length > 0) {\n            for (let i = 0; i < this.state.voiceUsers.length; i++) {\n              if (this.state.voiceUsers[i] === this.state.username) {\n                continue;\n              } else {\n                this.state.myConnection.createOffer(offer => {\n                  console.log('createOffer: ' + offer + ' i: ' + i);\n                  this.rtcSend({\n                    type: \"offer\",\n                    offer: offer\n                  });\n                  this.state.myConnection.setLocalDescription(offer);\n                }, function (error) {\n                  console.log('createOffer error: ' + error);\n                });\n              }\n            }\n          }\n\n          this.state.myConnection.onicecandidate = event => {\n            if (event.candidate) {\n              console.log('icecandidate event: ' + event);\n              this.rtcSend({\n                type: \"candidate\",\n                candidate: event.candidate\n              });\n            }\n          };\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        const localAudio = document.getElementById('localAudio');\n        localAudio.srcObject = null;\n        localAudio.autoplay = false;\n        const remoteAudio = document.getElementById('remoteAudio');\n        remoteAudio.srcObject = null;\n        remoteAudio.autoplay = false;\n      }\n    };\n\n    this.rtcSend = message => {\n      if (this.state.username) {\n        message.name = this.state.username;\n      }\n\n      this.socket.emit('SEND_CANDIDATE', JSON.stringify(message));\n    };\n\n    this.onReceiveCandidate = candidate => {\n      console.log('received candidate: ' + candidate);\n      this.state.myConnection.addIceCandidate(new RTCIceCandidate(candidate));\n    };\n\n    this.onOffer = (offer, name) => {\n      console.log('on offer, an offer: ' + offer + ' a name: ' + name);\n      this.setState({\n        otherConnection: name\n      });\n      this.state.myConnection.setRemoteDescription(new RTCSessionDescription(offer));\n      this.state.myConnection.createAnswer(answer => {\n        this.state.myConnection.setLocalDescription(answer);\n        console.log('success answer: ' + answer);\n        this.rtcSend({\n          type: \"answer\",\n          answer: answer\n        });\n      }, error => {\n        console.log('error creating answer: ' + error);\n      });\n    };\n\n    this.onAnswer = answer => {\n      console.log('here is our answer: ' + answer);\n      this.state.myConnection.setRemoteDescription(new RTCSessionDescription(answer));\n    };\n\n    this.sendMessage = event => {\n      if (event) {\n        event.preventDefault();\n        const data = {\n          username: this.props.username,\n          message: this.state.message,\n          userId: this.props.userId,\n          chatroomId: this.state.chatroomId,\n          room: this.state.room\n        };\n        this.socket.emit('CHATROOM_MESSAGE', data);\n        this.setState({\n          message: \"\"\n        });\n      }\n    };\n\n    this.sideContextMenu = (event, item) => {\n      event.preventDefault();\n      this.setState({\n        sideRightClickedUser: item,\n        sideUserModalOpen: true\n      });\n    };\n\n    this.contextMenu = (event, item) => {\n      event.preventDefault();\n      this.setState({\n        rightClickedUser: item,\n        userModalOpen: true,\n        messageMenu: false,\n        editingMessage: null\n      });\n    };\n\n    this.privateMessageUser = () => {\n      this.setState({\n        messages: []\n      });\n      this.props.privateMessageUser(this.state.rightClickedUser);\n    };\n\n    this.sidePrivateMessageUser = () => {\n      this.setState({\n        messages: []\n      });\n      this.props.privateMessageUser(this.state.sideRightClickedUser);\n    };\n\n    this.openMessageMenu = item => {\n      this.setState({\n        messageMenu: true,\n        editMessage: item\n      });\n    };\n\n    this.deleteChatroomMessage = () => {\n      const data = {\n        username: this.props.username,\n        message: this.state.message,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        messageId: this.state.editMessage.id,\n        room: this.state.room\n      };\n      this.socket.emit('DELETE_CHATROOM_MESSAGE', data);\n    };\n\n    this.editChatroomMessage = () => {\n      this.setState({\n        editingMessage: this.state.editMessage,\n        newMessage: this.state.editMessage.message,\n        hover: \"\"\n      }, () => {\n        this.setState({\n          editMessage: null,\n          messageMenu: false\n        });\n      });\n    };\n\n    this.detectEscape = event => {\n      if (event.keyCode === 27 && !this.state.messageMenu) {\n        this.setState({\n          editingMessage: this.state.editMessage,\n          newMessage: \"\"\n        });\n      }\n    };\n\n    this.sendEditedMessage = event => {\n      event.preventDefault();\n      const data = {\n        username: this.props.username,\n        message: this.state.newMessage,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        messageId: this.state.editingMessage.id,\n        room: this.state.room\n      };\n      this.socket.emit('EDIT_CHATROOM_MESSAGE', data);\n    };\n\n    this.kickUser = user => {\n      const data = {\n        serverId: this.state.serverId,\n        chatroomId: this.state.chatroomId,\n        type: 'user',\n        userId: user.userId,\n        room: this.state.room\n      };\n      this.socket.emit('KICK_SERVER_USER', data);\n    };\n\n    this.banUser = user => {\n      const data = {\n        serverId: this.state.serverId,\n        chatroomId: this.state.chatroomId,\n        type: 'user',\n        userId: user.userId,\n        room: this.state.room\n      };\n      this.socket.emit('BAN_SERVER_USER', data);\n    };\n\n    this.ref = React.createRef();\n    this.useOnClickOutside(this.ref, () => this.setState({\n      messageMenu: false,\n      userModalOpen: false,\n      sideUserModalOpen: false\n    }));\n    this.state = {\n      id: \"\",\n      username: \"\",\n      active: false,\n      type: \"\",\n      imageUrl: \"\",\n      message: \"\",\n      messages: [],\n      users: [],\n      clickedUsername: \"\",\n      clickedType: \"\",\n      privateMessages: [],\n      personalMessages: [],\n      userDetails: false,\n      socketId: \"\",\n      currentSocket: \"\",\n      rightClickedUser: {},\n      sideRightClickedUser: {},\n      sideUserModalOpen: false,\n      userModalOpen: false,\n      namespace: null,\n      room: null,\n      serverId: null,\n      previousRoom: null,\n      currentChatroom: null,\n      editMessage: null,\n      messageMenu: false,\n      editingMessage: null,\n      newMessage: \"\",\n      hover: \"\",\n      serverUserList: [],\n      isLoading: false,\n      chunks: [],\n      localStream: null,\n      remoteStream: null,\n      myConnection: null,\n      otherConnection: null,\n      voiceUsers: []\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener('keydown', this.detectEscape);\n    this.props.getUsers();\n    this.socket = io(ROOT_URL);\n    this.socket.on('connect', () => {\n      this.setState({\n        serverUserList: this.props.serverUserList,\n        socketId: this.socket.id,\n        namespace: \"\".concat(ROOT_URL, \"/\").concat(this.props.serverId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        serverId: this.props.serverId,\n        currentChatroom: this.props.activeChatroom,\n        chatroomId: this.props.activeChatroomId,\n        username: this.props.username\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.socket.id,\n        chatroomId: this.props.activeChatroomId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId)\n      });\n      this.socket.emit('GET_SERVER_LIST', {\n        socketId: this.socket.id,\n        serverId: this.props.serverId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId)\n      });\n    });\n    this.socket.on('RECEIVE_CHATROOM_MESSAGES', data => {\n      this.setState({\n        messageMenu: false,\n        editMessage: null,\n        editingMessage: null,\n        newMessage: \"\"\n      }); // scroll to latest message after rendering messages in firefox\n\n      if (navigator.userAgent.search(\"Firefox\") > -1 || navigator.userAgent.search(\"Edge\") > -1) {\n        this.setState({\n          messages: data.reverse()\n        }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0 || navigator.userAgent.search(\"Edge\") < 0) {\n        this.setState({\n          messages: data\n        });\n      }\n    });\n    this.socket.on('RECEIVE_SERVER_LIST', data => {\n      const index = data.findIndex(x => x.username === this.state.username);\n\n      if (index < 0) {\n        this.props.leaveServer();\n      } else if (index > -1) {\n        this.props.refreshServerUsers();\n        this.setState({\n          userModalOpen: false,\n          sideUserModalOpen: false,\n          rightClickedUser: {},\n          sideRightClickedUser: {},\n          serverUserList: data\n        });\n      }\n    });\n    this.socket.on('RECEIVE_CANDIDATE', data => {\n      console.log('data receive candidate socket: ' + data);\n      this.onReceiveCandidate(data.candidate);\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.username) {\n      this.setState({\n        username: nextProps.username\n      });\n    }\n\n    if (nextProps.serverUserList) {\n      this.setState({\n        serverUserList: nextProps.serverUserList\n      });\n    }\n\n    if (nextProps.activeChatroomId !== this.state.chatroomId && this.state.chatroomId !== undefined) {\n      this.setState({\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(this.state.chatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(nextProps.activeChatroomId),\n        serverId: nextProps.serverId,\n        currentChatroom: nextProps.activeChatroom,\n        chatroomId: nextProps.activeChatroomId\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.state.socketId,\n        chatroomId: nextProps.activeChatroomId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(this.state.chatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(nextProps.activeChatroomId)\n      });\n    }\n\n    if (nextProps.users && nextProps.users.length) {\n      const userList = [];\n\n      for (let i = 0; i < nextProps.users.length; i++) {\n        userList.push(nextProps.users[i]);\n      }\n\n      this.setState({\n        users: userList\n      });\n    }\n\n    if (nextProps.activeChatroomType === \"voice\" && nextProps.audioStream) {\n      this.setState({\n        localStream: nextProps.localStream\n      });\n      this.recordAudioInput(nextProps.audioStream);\n    }\n\n    if (nextProps.activeChatroomType !== \"voice\") {\n      this.setState({\n        localStream: null\n      });\n      this.recordAudioInput(null);\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('LEAVE_CHATROOMS', {\n      room: this.state.room\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chatroom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      id: \"localAudio\",\n      style: {\n        \"display\": \"none\"\n      },\n      muted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }), React.createElement(\"audio\", {\n      id: \"remoteAudio\",\n      style: {\n        \"display\": \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"chatarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chatarea-topbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.activeChatroomType === \"text\" ? numbersign : voice,\n      alt: \"channel\",\n      height: 16,\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, this.props.activeChatroom)), React.createElement(\"div\", {\n      id: \"chatareamessages\",\n      className: \"chatarea-messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n      const moderate = this.state.serverUserList.length > 0 && this.state.serverUserList.some(serverItem => serverItem['username'] !== this.state.username && serverItem['username'] === item.username && serverItem['type'] !== 'owner' && serverItem['type'] !== 'admin');\n      return React.createElement(\"div\", {\n        id: \"message\" + index,\n        key: index,\n        onMouseEnter: () => {\n          this.setState({\n            hover: this.state.editingMessage || this.state.messageMenu || this.props.userId !== item.userId ? \"\" : \"message\" + index\n          });\n        },\n        onMouseLeave: () => {\n          this.setState({\n            hover: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chatarea-messages-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"chatarea-messages-user\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.contextMenu(event, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, item.username), React.createElement(Moment, {\n        format: \"MM/DD/YYYY\",\n        date: item.updatedAt,\n        className: \"chatarea-messages-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }), this.state.hover === \"message\" + index ? React.createElement(\"span\", {\n        className: \"chatarea-messages-menu\",\n        onClick: () => {\n          this.openMessageMenu(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: editwhite,\n        height: 15,\n        width: 15,\n        alt: \"edit message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      })) : null, this.state.messageMenu && this.state.editMessage.id === item.id ? React.createElement(\"div\", {\n        className: \"chatarea-messages-editmenu\",\n        ref: this.ref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            editMessage: null,\n            messageMenu: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.editChatroomMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.deleteChatroomMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, \"Delete\")) : null, this.state.userModalOpen && this.state.rightClickedUser.id === item.id ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-usermodalmod\" : \"chatarea-messages-usermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            userModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.privateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-usermodalmod-privatemessage\" : \"chatarea-messages-usermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(item);\n        },\n        className: \"chatarea-messages-usermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, \"Kick \", item.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(item);\n        },\n        className: \"chatarea-messages-usermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, \"Ban \", item.username) : null) : null), this.state.editingMessage !== null && this.state.editingMessage.id === item.id ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"chatarea-messages-editmessage\",\n        onChange: event => {\n          this.setState({\n            newMessage: event.target.value\n          });\n        },\n        value: this.state.newMessage,\n        onKeyDown: event => {\n          event.keyCode === 13 && event.shiftKey === false ? this.sendEditedMessage(event) : this.sendMessage(null);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"chatarea-messages-editmessage-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \"escape to cancel \\u2022 enter to save\")) : React.createElement(\"p\", {\n        className: \"chatarea-messages-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, item.message));\n    }) : null), React.createElement(\"div\", {\n      className: \"chatarea-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Send a message!\",\n      type: \"text\",\n      onChange: event => {\n        this.setState({\n          message: event.target.value\n        });\n      },\n      value: this.state.message,\n      onKeyDown: event => {\n        event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"sidebarright\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebarright-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Filter users in server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sidebarright-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, \"Room Owners\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'owner' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, user.type === 'owner' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      })) : null, user.type === 'owner' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }) : null, user.type === 'owner' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }) : null, user.type === 'owner' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'owner' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, \"Send Message\")) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'owner') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, \"Administrators\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'admin' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, user.type === 'admin' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      })) : null, user.type === 'admin' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }) : null, user.type === 'admin' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }) : null, user.type === 'admin' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'admin' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, \"Send Message\")) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'admin') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, \"Moderators\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      const moderate = user.username !== this.state.username;\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'moderator' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, user.type === 'moderator' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      })) : null, user.type === 'moderator' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }) : null, user.type === 'moderator' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }) : null, user.type === 'moderator' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'moderator' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, \"Kick \", user.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, \"Ban \", user.username) : null) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'moderator') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    }, \"Voice\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      const moderate = user.username !== this.state.username;\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'voice' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, user.type === 'voice' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      })) : null, user.type === 'voice' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }) : null, user.type === 'voice' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }) : null, user.type === 'voice' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'voice' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, \"Kick \", user.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, \"Ban \", user.username) : null) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'voice') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, \"Users\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      const moderate = user.username !== this.state.username;\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'user' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, user.type === 'user' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      })) : null, user.type === 'user' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }) : null, user.type === 'user' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }) : null, user.type === 'user' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'user' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, \"Kick \", user.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, \"Ban \", user.username) : null) : null) : null);\n    }) : null));\n  }\n\n}\n\nfunction mapStateToProps({\n  usersReducer\n}) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Chatroom);","map":{"version":3,"sources":["/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/components/Chatroom/Chatroom.js"],"names":["React","Component","connect","actions","ROOT_URL","io","freeice","quickconnect","wrtc","Moment","chatot","numbersign","voice","editwhite","Chatroom","constructor","props","useOnClickOutside","ref","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","recordAudioInput","stream","localAudio","getElementById","srcObject","autoplay","state","myConnection","RTCPeerConnection","loggedInUser","voiceUsers","filter","x","username","length","push","console","log","i","createOffer","offer","rtcSend","type","setLocalDescription","error","onicecandidate","candidate","remoteAudio","message","name","socket","emit","JSON","stringify","onReceiveCandidate","addIceCandidate","RTCIceCandidate","onOffer","setState","otherConnection","setRemoteDescription","RTCSessionDescription","createAnswer","answer","onAnswer","sendMessage","preventDefault","data","userId","chatroomId","room","sideContextMenu","item","sideRightClickedUser","sideUserModalOpen","contextMenu","rightClickedUser","userModalOpen","messageMenu","editingMessage","privateMessageUser","messages","sidePrivateMessageUser","openMessageMenu","editMessage","deleteChatroomMessage","messageId","id","editChatroomMessage","newMessage","hover","detectEscape","keyCode","sendEditedMessage","kickUser","user","serverId","banUser","createRef","active","imageUrl","users","clickedUsername","clickedType","privateMessages","personalMessages","userDetails","socketId","currentSocket","namespace","previousRoom","currentChatroom","serverUserList","isLoading","chunks","localStream","remoteStream","componentDidMount","window","getUsers","on","activeChatroomId","activeChatroom","navigator","userAgent","search","reverse","element","scrollIntoView","index","findIndex","leaveServer","refreshServerUsers","componentWillReceiveProps","nextProps","undefined","userList","activeChatroomType","audioStream","componentWillUnmount","render","map","moderate","some","serverItem","handleClick","updatedAt","value","shiftKey","mapStateToProps","usersReducer","success"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from 'socket.io-client';\nimport freeice from 'freeice';\nimport quickconnect from 'rtc-quickconnect';\nimport wrtc from 'wrtc';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Chatroom.css';\nimport chatot from '../../assets/images/chatot.png';\nimport numbersign from '../../assets/images/numbersign.png';\nimport voice from '../../assets/images/voice.png';\nimport editwhite from '../../assets/images/editwhite.png';\n\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.useOnClickOutside(this.ref, () => this.setState({ messageMenu: false, userModalOpen: false, sideUserModalOpen: false }));\n\n    this.state = {\n      id: \"\",\n      username: \"\",\n      active: false,\n      type: \"\",\n      imageUrl: \"\",\n      message: \"\",\n      messages: [],\n      users: [],\n      clickedUsername: \"\",\n      clickedType: \"\",\n      privateMessages: [],\n      personalMessages: [],\n      userDetails: false,\n      socketId: \"\",\n      currentSocket: \"\",\n      rightClickedUser: {},\n      sideRightClickedUser: {},\n      sideUserModalOpen: false,\n      userModalOpen: false,\n      namespace: null,\n      room: null,\n      serverId: null,\n      previousRoom: null,\n      currentChatroom: null,\n      editMessage: null,\n      messageMenu: false,\n      editingMessage: null,\n      newMessage: \"\",\n      hover: \"\",\n      serverUserList: [],\n      isLoading: false,\n      chunks: [],\n      localStream: null,\n      remoteStream: null,\n      myConnection: null,\n      otherConnection: null,\n      voiceUsers: []\n    }\n  }\n\n  useOnClickOutside = (ref, handler) => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener('keydown', this.detectEscape);\n    this.props.getUsers();\n\n    this.socket = io(ROOT_URL);\n\n    this.socket.on('connect', () => {\n      this.setState({ serverUserList: this.props.serverUserList, socketId: this.socket.id, namespace: `${ROOT_URL}/${this.props.serverId}`, room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`, previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`, serverId: this.props.serverId, currentChatroom: this.props.activeChatroom, chatroomId: this.props.activeChatroomId, username: this.props.username });\n\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.socket.id,\n        chatroomId: this.props.activeChatroomId,\n        previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`,\n        room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`\n      });\n\n      this.socket.emit('GET_SERVER_LIST', {\n        socketId: this.socket.id,\n        serverId: this.props.serverId,\n        previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`,\n        room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`\n      });\n    });\n\n    this.socket.on('RECEIVE_CHATROOM_MESSAGES', (data) => {\n      this.setState({ messageMenu: false, editMessage: null, editingMessage: null, newMessage: \"\" });\n      // scroll to latest message after rendering messages in firefox\n      if (navigator.userAgent.search(\"Firefox\") > -1 || navigator.userAgent.search(\"Edge\") > -1) {\n        this.setState({ messages: data.reverse() }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0 || navigator.userAgent.search(\"Edge\") < 0) {\n        this.setState({ messages: data });\n      }\n    });\n\n    this.socket.on('RECEIVE_SERVER_LIST', (data) => {\n      const index = data.findIndex(x => x.username === this.state.username);\n      if (index < 0) {\n        this.props.leaveServer();\n      } else if (index > -1) {\n        this.props.refreshServerUsers();\n        this.setState({ userModalOpen: false, sideUserModalOpen: false, rightClickedUser: {}, sideRightClickedUser: {}, serverUserList: data });\n      }\n    });\n\n    this.socket.on('RECEIVE_CANDIDATE', (data) => {\n      console.log('data receive candidate socket: ' + data);\n      this.onReceiveCandidate(data.candidate);\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.username) {\n      this.setState({ username: nextProps.username });\n    }\n    if (nextProps.serverUserList) {\n      this.setState({ serverUserList: nextProps.serverUserList });\n    }\n    if (nextProps.activeChatroomId !== this.state.chatroomId && this.state.chatroomId !== undefined) {\n      this.setState({\n        previousRoom: `${ROOT_URL}/chatroom/${nextProps.serverId}/${this.state.chatroomId}`,\n        room: `${ROOT_URL}/chatroom/${nextProps.serverId}/${nextProps.activeChatroomId}`,\n        serverId: nextProps.serverId,\n        currentChatroom: nextProps.activeChatroom,\n        chatroomId: nextProps.activeChatroomId\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.state.socketId,\n        chatroomId: nextProps.activeChatroomId,\n        previousRoom: `${ROOT_URL}/chatroom/${nextProps.serverId}/${this.state.chatroomId}`,\n        room: `${ROOT_URL}/chatroom/${nextProps.serverId}/${nextProps.activeChatroomId}`\n      });\n    }\n\n    if (nextProps.users && nextProps.users.length) {\n      const userList = [];\n      for(let i = 0; i < nextProps.users.length; i++) {\n        userList.push(nextProps.users[i]);\n      }\n      this.setState({ users: userList });\n    }\n\n    if (nextProps.activeChatroomType === \"voice\" && nextProps.audioStream) {\n      this.setState({ localStream: nextProps.localStream });\n      this.recordAudioInput(nextProps.audioStream);\n    }\n\n    if (nextProps.activeChatroomType !== \"voice\") {\n      this.setState({ localStream: null });\n      this.recordAudioInput(null);\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('LEAVE_CHATROOMS', {\n      room: this.state.room\n    });\n  }\n\n  recordAudioInput = async(stream) => {\n    if (stream) {\n      try {\n        const localAudio = document.getElementById('localAudio');\n        localAudio.srcObject = stream;\n        localAudio.autoplay = true;\n        this.state.myConnection = new RTCPeerConnection();\n\n        let loggedInUser = this.state.voiceUsers.filter(x => x.username === this.state.username);\n\n        if (this.state.voiceUsers.length && !this.state.voiceUsers.filter(x => x.username === this.state.username)) {\n          this.state.voiceUsers.push(this.state.username);\n        }\n\n        console.log(loggedInUser);\n        console.log(this.state.voiceUsers);\n\n        if (!loggedInUser && this.state.voiceUsers.length > 0) {\n          for (let i = 0; i < this.state.voiceUsers.length; i++) {\n            if (this.state.voiceUsers[i] === this.state.username) {\n              continue;\n            } else {\n              this.state.myConnection.createOffer((offer) => {\n                console.log('createOffer: ' + offer + ' i: ' + i);\n                this.rtcSend({\n                   type: \"offer\",\n                   offer: offer\n                });\n                this.state.myConnection.setLocalDescription(offer);\n              }, function (error) {\n                  console.log('createOffer error: ' + error);\n              });\n            }\n          }\n        }\n\n        this.state.myConnection.onicecandidate = (event) => {\n          if (event.candidate) {\n            console.log('icecandidate event: ' + event);\n            this.rtcSend({\n              type: \"candidate\",\n              candidate: event.candidate\n            });\n          }\n        };\n\n\n\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      const localAudio = document.getElementById('localAudio');\n      localAudio.srcObject = null;\n      localAudio.autoplay = false;\n      const remoteAudio = document.getElementById('remoteAudio');\n      remoteAudio.srcObject = null;\n      remoteAudio.autoplay = false;\n    }\n  }\n\n  rtcSend = (message) => {\n    if (this.state.username) {\n       message.name = this.state.username;\n    }\n    this.socket.emit('SEND_CANDIDATE', JSON.stringify(message));\n  };\n\n  onReceiveCandidate = (candidate) => {\n    console.log('received candidate: ' + candidate);\n    this.state.myConnection.addIceCandidate(new RTCIceCandidate(candidate));\n  }\n\n  onOffer = (offer, name) => {\n    console.log('on offer, an offer: ' + offer + ' a name: ' + name);\n    this.setState({ otherConnection: name });\n    this.state.myConnection.setRemoteDescription(new RTCSessionDescription(offer));\n\n    this.state.myConnection.createAnswer((answer) => {\n      this.state.myConnection.setLocalDescription(answer);\n      console.log('success answer: ' + answer);\n\n      this.rtcSend({\n        type: \"answer\",\n        answer: answer\n      });\n    }, (error) => {\n      console.log('error creating answer: ' + error);\n    });\n  }\n\n  // when another user answers to our offer\n  onAnswer = (answer) => {\n    console.log('here is our answer: ' + answer);\n    this.state.myConnection.setRemoteDescription(new RTCSessionDescription(answer));\n  }\n\n  sendMessage = (event) => {\n    if (event) {\n      event.preventDefault();\n      const data = {\n        username: this.props.username,\n        message: this.state.message,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        room: this.state.room\n      };\n      this.socket.emit('CHATROOM_MESSAGE', data);\n      this.setState({ message: \"\" });\n    }\n  }\n\n  sideContextMenu = (event, item) => {\n    event.preventDefault();\n    this.setState({ sideRightClickedUser: item, sideUserModalOpen: true });\n  }\n\n  contextMenu = (event, item) => {\n    event.preventDefault();\n    this.setState({ rightClickedUser: item, userModalOpen: true, messageMenu: false, editingMessage: null });\n  }\n\n  privateMessageUser = () => {\n    this.setState({ messages: [] });\n    this.props.privateMessageUser(this.state.rightClickedUser);\n  }\n\n  sidePrivateMessageUser = () => {\n    this.setState({ messages: [] });\n    this.props.privateMessageUser(this.state.sideRightClickedUser);\n  }\n\n  openMessageMenu = (item) => {\n    this.setState({ messageMenu: true, editMessage: item });\n  }\n\n  deleteChatroomMessage = () => {\n    const data = {\n      username: this.props.username,\n      message: this.state.message,\n      userId: this.props.userId,\n      chatroomId: this.state.chatroomId,\n      messageId: this.state.editMessage.id,\n      room: this.state.room\n    };\n    this.socket.emit('DELETE_CHATROOM_MESSAGE', data);\n  }\n\n  editChatroomMessage = () => {\n    this.setState({ editingMessage: this.state.editMessage, newMessage: this.state.editMessage.message, hover: \"\" }, () => {\n      this.setState({ editMessage: null, messageMenu: false });\n    });\n  }\n\n  detectEscape = (event) => {\n    if (event.keyCode === 27 && !this.state.messageMenu) {\n      this.setState({ editingMessage: this.state.editMessage, newMessage: \"\" });\n    }\n  }\n\n  sendEditedMessage = (event) => {\n    event.preventDefault();\n    const data = {\n      username: this.props.username,\n      message: this.state.newMessage,\n      userId: this.props.userId,\n      chatroomId: this.state.chatroomId,\n      messageId: this.state.editingMessage.id,\n      room: this.state.room\n    };\n    this.socket.emit('EDIT_CHATROOM_MESSAGE', data);\n  }\n\n  kickUser = (user) => {\n    const data = {\n      serverId: this.state.serverId,\n      chatroomId: this.state.chatroomId,\n      type: 'user',\n      userId: user.userId,\n      room: this.state.room\n    };\n    this.socket.emit('KICK_SERVER_USER', data);\n  }\n\n  banUser = (user) => {\n    const data = {\n      serverId: this.state.serverId,\n      chatroomId: this.state.chatroomId,\n      type: 'user',\n      userId: user.userId,\n      room: this.state.room\n    };\n    this.socket.emit('BAN_SERVER_USER', data);\n  }\n\n  render() {\n    return (\n      <div className=\"chatroom\">\n        <audio id=\"localAudio\" style={{ \"display\": \"none\" }} muted />\n        <audio id=\"remoteAudio\" style={{ \"display\": \"none\" }} />\n        <div className=\"chatarea\">\n          <div className=\"chatarea-topbar\">\n            <img src={this.props.activeChatroomType === \"text\" ? numbersign : voice} alt=\"channel\" height={16} width={16} /><span>{this.props.activeChatroom}</span>\n          </div>\n          <div id=\"chatareamessages\" className=\"chatarea-messages\">\n            {this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n              const moderate = (this.state.serverUserList.length > 0\n              && this.state.serverUserList.some(serverItem => serverItem['username'] !== this.state.username\n              && (serverItem['username'] === item.username && serverItem['type'] !== 'owner' && serverItem['type'] !== 'admin')));\n              return (\n                <div id={\"message\" + index} key={index} onMouseEnter={() => { this.setState({ hover: (this.state.editingMessage || this.state.messageMenu || (this.props.userId !== item.userId)) ? \"\" : (\"message\" + index) }) }} onMouseLeave={() => { this.setState({ hover: \"\" }); }}>\n                  <div className=\"chatarea-messages-container\">\n                    <span className=\"chatarea-messages-user\" onClick={this.handleClick} onContextMenu={(event) => { this.contextMenu(event, item); }}>{item.username}</span>\n                    <Moment format=\"MM/DD/YYYY\" date={item.updatedAt} className=\"chatarea-messages-time\" />\n                    {this.state.hover === (\"message\" + index) ? <span className=\"chatarea-messages-menu\" onClick={() => { this.openMessageMenu(item); }}><img src={editwhite} height={15} width={15} alt=\"edit message\" /></span> : null}\n                    {this.state.messageMenu && this.state.editMessage.id === item.id ?\n                      <div className=\"chatarea-messages-editmenu\" ref={this.ref}>\n                        <span onClick={() => { this.setState({ editMessage: null, messageMenu: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.editChatroomMessage(); }}>Edit</p>\n                        <p onClick={() => { this.deleteChatroomMessage(); }}>Delete</p>\n                      </div>\n                    : null}\n                    {this.state.userModalOpen && this.state.rightClickedUser.id === item.id ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-usermodalmod\" : \"chatarea-messages-usermodal\"}>\n                        <span onClick={() => { this.setState({ userModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.privateMessageUser(); }} className={moderate === true ? \"chatarea-messages-usermodalmod-privatemessage\" : \"chatarea-messages-usermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(item); }} className=\"chatarea-messages-usermodalmod-kick\">Kick {item.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(item); }} className=\"chatarea-messages-usermodalmod-ban\">Ban {item.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                  {this.state.editingMessage !== null && this.state.editingMessage.id === item.id ? <span><input className=\"chatarea-messages-editmessage\" onChange={(event) => { this.setState({ newMessage: event.target.value }) }} value={this.state.newMessage} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendEditedMessage(event) : this.sendMessage(null) }} /><p className=\"chatarea-messages-editmessage-note\">escape to cancel • enter to save</p></span> : <p className=\"chatarea-messages-message\">{item.message}</p>}\n                </div>\n              )\n            }) : null}\n          </div>\n          <div className=\"chatarea-container\">\n            <input placeholder=\"Send a message!\" type=\"text\" onChange={(event) => { this.setState({ message: event.target.value }); }} value={this.state.message} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null) }}></input>\n          </div>\n        </div>\n        <div className=\"sidebarright\">\n          <div className=\"sidebarright-container\">\n            <input placeholder=\"Filter users in server\"></input>\n          </div>\n          <div className=\"sidebarright-border\" />\n          <div className=\"sidebarright-authority\">\n            <span>Room Owners</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index)  => {\n            return (\n              <div key={index} className={user.type === 'owner' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'owner' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'owner' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'owner' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'owner' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'owner' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className=\"chatarea-messages-sideusermodal\">\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className=\"chatarea-messages-sideusermodal-privatemessage\">Send Message</p>\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'owner') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Administrators</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index)  => {\n            return (\n              <div key={index} className={user.type === 'admin' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'admin' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'admin' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'admin' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'admin' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'admin' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className=\"chatarea-messages-sideusermodal\">\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className=\"chatarea-messages-sideusermodal-privatemessage\">Send Message</p>\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'admin') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Moderators</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index)  => {\n            const moderate = (user.username !== this.state.username);\n            return (\n              <div key={index} className={user.type === 'moderator' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'moderator' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'moderator' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'moderator' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'moderator' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'moderator' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\"}>\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className={moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(user); }} className=\"chatarea-messages-sideusermodalmod-kick\">Kick {user.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(user); }} className=\"chatarea-messages-sideusermodalmod-ban\">Ban {user.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'moderator') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Voice</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n            const moderate = (user.username !== this.state.username);\n            return (\n              <div key={index} className={user.type === 'voice' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'voice' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'voice' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'voice' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'voice' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'voice' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\"}>\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className={moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(user); }} className=\"chatarea-messages-sideusermodalmod-kick\">Kick {user.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(user); }} className=\"chatarea-messages-sideusermodalmod-ban\">Ban {user.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'voice') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Users</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n            const moderate = (user.username !== this.state.username);\n            return (\n              <div key={index} className={user.type === 'user' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'user' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'user' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'user' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'user' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'user' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\"}>\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className={moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(user); }} className=\"chatarea-messages-sideusermodalmod-kick\">Kick {user.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(user); }} className=\"chatarea-messages-sideusermodalmod-ban\">Ban {user.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            )\n          }) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Chatroom);"]},"metadata":{},"sourceType":"module"}