{"ast":null,"code":"import _objectSpread from \"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport { ROOT_URL } from '../../../config/networkSettings';\nimport { config } from '../../../config/token';\nimport { CREATING_FRIEND, CREATE_FRIEND_FAIL, CREATE_FRIEND_SUCCESS, DELETING_FRIEND, DELETE_FRIEND_FAIL, DELETE_FRIEND_SUCCESS, FINDING_FRIENDS, FIND_FRIENDS_FAIL, FIND_FRIENDS_SUCCESS, RESET_FRIEND_VALUES } from '../../types'; // Initial States\n\nexport const initialState = {\n  isLoading: false,\n  error: false,\n  success: false,\n  user: null\n}; // Reducers\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case CREATING_FRIEND:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        createFriendError: false,\n        createFriendSuccess: false\n      });\n\n    case CREATE_FRIEND_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        createFriendError: false,\n        createFriendSuccess: true,\n        friendsList: action.payload\n      });\n\n    case CREATE_FRIEND_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        createFriendError: true,\n        createFriendSuccess: false\n      });\n\n    case DELETING_FRIEND:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        deleteFriendError: false,\n        deleteFriendSuccess: false\n      });\n\n    case DELETE_FRIEND_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        deleteFriendError: false,\n        deleteFriendSuccess: true,\n        friendsList: action.payload\n      });\n\n    case DELETE_FRIEND_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        deleteFriendError: true,\n        deleteFriendSuccess: false\n      });\n\n    case FINDING_FRIENDS:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        findFriendsError: false,\n        findFriendsSuccess: false\n      });\n\n    case FIND_FRIENDS_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        findFriendsError: false,\n        findFriendsSuccess: true,\n        friendsList: action.payload\n      });\n\n    case FIND_FRIENDS_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        findFriendsError: true,\n        findFriendsSuccess: false\n      });\n\n    case RESET_FRIEND_VALUES:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        createFriendError: false,\n        createFriendSuccess: false,\n        deleteFriendError: false,\n        deleteFriendSuccess: false,\n        findFriendsError: false,\n        findFriendsSuccess: false\n      });\n\n    default:\n      return state;\n  }\n}); // Actions\n\nexport const friendCreate = params => async dispatch => {\n  dispatch({\n    type: CREATING_FRIEND\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/friendCreate\"), params, config);\n\n    if (response.data) {\n      dispatch({\n        type: CREATE_FRIEND_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: CREATE_FRIEND_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: CREATE_FRIEND_FAIL\n    });\n  }\n};\nexport const friendDelete = params => async dispatch => {\n  dispatch({\n    type: DELETING_FRIEND\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/friendDelete\"), params, config);\n\n    if (response.data) {\n      dispatch({\n        type: DELETE_FRIEND_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: DELETE_FRIEND_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: DELETE_FRIEND_FAIL\n    });\n  }\n};\nexport const findFriends = params => async dispatch => {\n  dispatch({\n    type: FINDING_FRIENDS\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/findFriends\"), params, config);\n\n    if (response.data) {\n      dispatch({\n        type: FIND_FRIENDS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: FIND_FRIENDS_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: FIND_FRIENDS_FAIL\n    });\n  }\n};\nexport function resetFriendValues() {\n  return function (dispatch) {\n    dispatch({\n      type: RESET_FRIEND_VALUES\n    });\n  };\n}","map":{"version":3,"sources":["/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/redux/modules/friends/friends.js"],"names":["axios","ROOT_URL","config","CREATING_FRIEND","CREATE_FRIEND_FAIL","CREATE_FRIEND_SUCCESS","DELETING_FRIEND","DELETE_FRIEND_FAIL","DELETE_FRIEND_SUCCESS","FINDING_FRIENDS","FIND_FRIENDS_FAIL","FIND_FRIENDS_SUCCESS","RESET_FRIEND_VALUES","initialState","isLoading","error","success","user","state","action","type","createFriendError","createFriendSuccess","friendsList","payload","deleteFriendError","deleteFriendSuccess","findFriendsError","findFriendsSuccess","friendCreate","params","dispatch","response","post","data","err","friendDelete","findFriends","resetFriendValues"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { ROOT_URL } from '../../../config/networkSettings';\nimport { config } from '../../../config/token';\n\nimport {\n  CREATING_FRIEND,\n  CREATE_FRIEND_FAIL,\n  CREATE_FRIEND_SUCCESS,\n  DELETING_FRIEND,\n  DELETE_FRIEND_FAIL,\n  DELETE_FRIEND_SUCCESS,\n  FINDING_FRIENDS,\n  FIND_FRIENDS_FAIL,\n  FIND_FRIENDS_SUCCESS,\n  RESET_FRIEND_VALUES\n} from '../../types';\n\n// Initial States\nexport const initialState = {\n  isLoading: false,\n  error: false,\n  success: false,\n  user: null\n};\n\n// Reducers\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CREATING_FRIEND:\n      return {\n        ...state, isLoading: true, createFriendError: false, createFriendSuccess: false\n      };\n    case CREATE_FRIEND_SUCCESS:\n      return {\n        ...state, isLoading: false, createFriendError: false, createFriendSuccess: true, friendsList: action.payload\n      };\n    case CREATE_FRIEND_FAIL:\n      return {\n        ...state, isLoading: false, createFriendError: true, createFriendSuccess: false\n      };\n    case DELETING_FRIEND:\n      return {\n        ...state, isLoading: true, deleteFriendError: false, deleteFriendSuccess: false\n      };\n    case DELETE_FRIEND_SUCCESS:\n      return {\n        ...state, isLoading: false, deleteFriendError: false, deleteFriendSuccess: true, friendsList: action.payload\n      };\n    case DELETE_FRIEND_FAIL:\n      return {\n        ...state, isLoading: false, deleteFriendError: true, deleteFriendSuccess: false\n      };\n    case FINDING_FRIENDS:\n      return {\n        ...state, isLoading: true, findFriendsError: false, findFriendsSuccess: false\n      };\n    case FIND_FRIENDS_SUCCESS:\n      return {\n        ...state, isLoading: false, findFriendsError: false, findFriendsSuccess: true, friendsList: action.payload\n      };\n    case FIND_FRIENDS_FAIL:\n      return {\n        ...state, isLoading: false, findFriendsError: true, findFriendsSuccess: false\n      };\n    case RESET_FRIEND_VALUES:\n      return {\n        ...state, isLoading: false, createFriendError: false, createFriendSuccess: false, deleteFriendError: false, deleteFriendSuccess: false, findFriendsError: false, findFriendsSuccess: false\n      };\n    default:\n      return state;\n  }\n};\n\n// Actions\nexport const friendCreate = params => async dispatch => {\n  dispatch({ type: CREATING_FRIEND });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/friendCreate`, params, config);\n    if (response.data) {\n      dispatch({ type: CREATE_FRIEND_SUCCESS, payload: response.data });\n    } else {\n      dispatch({ type: CREATE_FRIEND_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: CREATE_FRIEND_FAIL });\n  }\n};\n\nexport const friendDelete = params => async dispatch => {\n  dispatch({ type: DELETING_FRIEND });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/friendDelete`, params, config);\n    if (response.data) {\n      dispatch({ type: DELETE_FRIEND_SUCCESS, payload: response.data });\n    } else {\n      dispatch({ type: DELETE_FRIEND_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: DELETE_FRIEND_FAIL });\n  }\n};\n\nexport const findFriends = params => async dispatch => {\n  dispatch({ type: FINDING_FRIENDS });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/findFriends`, params, config);\n    if (response.data) {\n      dispatch({ type: FIND_FRIENDS_SUCCESS, payload: response.data });\n    } else {\n      dispatch({ type: FIND_FRIENDS_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: FIND_FRIENDS_FAIL });\n  }\n};\n\nexport function resetFriendValues() {\n  return function(dispatch) {\n    dispatch({ type: RESET_FRIEND_VALUES });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}