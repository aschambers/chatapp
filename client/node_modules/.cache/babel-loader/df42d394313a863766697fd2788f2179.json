{"ast":null,"code":"import _slicedToArray from \"/Users/metabou/Desktop/chatapp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metabou/Desktop/chatapp/client/src/components/InviteModal/InviteModal.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport settings from '../../assets/images/settings.png';\nimport './InviteModal.css';\n\nconst InviteModal = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        inviteExpiresModal = _useState2[0],\n        setInviteExpiresModal = _useState2[1];\n\n  const ref = useRef();\n  useOnClickOutside(ref, () => props.setInviteModal(false));\n  return React.createElement(\"div\", {\n    ref: ref,\n    className: \"invitemodal-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, inviteExpiresModal ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Change when invite expires.\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"invitemodal-container-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Create Invite\"), React.createElement(\"button\", {\n    className: \"invitemodal-container-cancel\",\n    onClick: () => {\n      props.setInviteModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    className: \"invitemodal-container-create\",\n    onClick: () => {\n      props.createNewInvite();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Create\"), React.createElement(\"img\", {\n    className: \"settings-image\",\n    src: settings,\n    alt: \"settings-icon\",\n    onClick: () => {\n      setInviteExpiresModal(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })));\n};\n\nconst useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n};\n\nexport default InviteModal;","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/components/InviteModal/InviteModal.js"],"names":["React","useEffect","useState","useRef","settings","InviteModal","props","inviteExpiresModal","setInviteExpiresModal","ref","useOnClickOutside","setInviteModal","createNewInvite","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA,oBACuBJ,QAAQ,CAAC,KAAD,CAD/B;AAAA;AAAA,QACtBK,kBADsB;AAAA,QACFC,qBADE;;AAE7B,QAAMC,GAAG,GAAGN,MAAM,EAAlB;AACAO,EAAAA,iBAAiB,CAACD,GAAD,EAAM,MAAMH,KAAK,CAACK,cAAN,CAAqB,KAArB,CAAZ,CAAjB;AAEA,SACE;AAAK,IAAA,GAAG,EAAEF,GAAV;AAAe,IAAA,SAAS,EAAC,uBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,kBAAkB,GACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CADmB,GAInB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAQ,IAAA,SAAS,EAAC,8BAAlB;AAAiD,IAAA,OAAO,EAAE,MAAM;AAAED,MAAAA,KAAK,CAACK,cAAN,CAAqB,KAArB;AAA8B,KAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAQ,IAAA,SAAS,EAAC,8BAAlB;AAAiD,IAAA,OAAO,EAAE,MAAM;AAAEL,MAAAA,KAAK,CAACM,eAAN;AAA0B,KAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,GAAG,EAAER,QAArC;AAA+C,IAAA,GAAG,EAAC,eAAnD;AAAmE,IAAA,OAAO,EAAE,MAAM;AAAEI,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AAA8B,KAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CALF,CADF;AAcD,CAnBD;;AAqBA,MAAME,iBAAiB,GAAG,CAACD,GAAD,EAAMI,OAAN,KAAkB;AAC1CZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,QAAQ,GAAGC,KAAK,IAAI;AACxB;AACA,UAAI,CAACN,GAAG,CAACO,OAAL,IAAgBP,GAAG,CAACO,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtD;AACD;;AAEDL,MAAAA,OAAO,CAACE,KAAD,CAAP;AACD,KAPD;;AASAI,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,QAAvC;AACAK,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,EAAwCN,QAAxC;AAEA,WAAO,MAAM;AACXK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,QAA1C;AACAK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,YAA7B,EAA2CP,QAA3C;AACD,KAHD;AAID,GAjBQ,EAiBN,CAACL,GAAD,EAAMI,OAAN,CAjBM,CAAT;AAkBD,CAnBD;;AAqBA,eAAeR,WAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport settings from '../../assets/images/settings.png';\nimport './InviteModal.css';\n\nconst InviteModal = (props) => {\n  const [inviteExpiresModal, setInviteExpiresModal] = useState(false);\n  const ref = useRef();\n  useOnClickOutside(ref, () => props.setInviteModal(false));\n\n  return (\n    <div ref={ref} className=\"invitemodal-container\">\n      {inviteExpiresModal ?\n      <div>\n        <p>Change when invite expires.</p>\n      </div> :\n      <div>\n        <p className=\"invitemodal-container-title\">Create Invite</p>\n        <button className=\"invitemodal-container-cancel\" onClick={() => { props.setInviteModal(false); }}>Cancel</button>\n        <button className=\"invitemodal-container-create\" onClick={() => { props.createNewInvite(); }}>Create</button>\n        <img className=\"settings-image\" src={settings} alt=\"settings-icon\" onClick={() => { setInviteExpiresModal(true); }} />\n      </div>}\n    </div>\n  );\n}\n\nconst useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n}\n\nexport default InviteModal;"]},"metadata":{},"sourceType":"module"}