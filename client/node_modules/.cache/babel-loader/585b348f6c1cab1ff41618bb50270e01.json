{"ast":null,"code":"var _jsxFileName = \"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/components/ChannelModal/ChannelModal.js\";\nimport React, { useRef } from 'react';\nimport { toast } from 'react-toastify';\nimport useOnClickOutside from '../../utils/useOnClickOutside';\nimport './ChannelModal.css';\n\nconst ChannelModal = props => {\n  const ref = useRef();\n  useOnClickOutside(ref, () => props.setShowChannelModal(false));\n\n  const channelModelCreate = () => {\n    if (props.newChannel !== \"\" && props.newChannel.length > 2 && props.newChannel.length < 21) {\n      props.createNewChannel();\n    } else {\n      toast.dismiss();\n      toast.error('Error, the name of the channel does not meet the requirements.', {\n        position: 'bottom-center'\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    ref: ref,\n    className: \"categorymodal-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"categorymodal-container-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Create Channel\"), React.createElement(\"p\", {\n    className: \"categorymodal-container-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Channel Name\"), React.createElement(\"input\", {\n    onChange: event => {\n      props.setNewChannel(event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"categorymodal-container-cancel\",\n    onClick: () => {\n      props.setShowChannelModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    className: \"categorymodal-container-create\",\n    onClick: channelModelCreate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Create\"));\n};\n\nexport default ChannelModal;","map":{"version":3,"sources":["/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/components/ChannelModal/ChannelModal.js"],"names":["React","useRef","toast","useOnClickOutside","ChannelModal","props","ref","setShowChannelModal","channelModelCreate","newChannel","length","createNewChannel","dismiss","error","position","event","setNewChannel"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAO,oBAAP;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,GAAG,GAAGL,MAAM,EAAlB;AACAE,EAAAA,iBAAiB,CAACG,GAAD,EAAM,MAAMD,KAAK,CAACE,mBAAN,CAA0B,KAA1B,CAAZ,CAAjB;;AAEA,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAIH,KAAK,CAACI,UAAN,KAAqB,EAArB,IAA2BJ,KAAK,CAACI,UAAN,CAAiBC,MAAjB,GAA0B,CAArD,IAA0DL,KAAK,CAACI,UAAN,CAAiBC,MAAjB,GAA0B,EAAxF,EAA4F;AAC1FL,MAAAA,KAAK,CAACM,gBAAN;AACD,KAFD,MAEO;AACLT,MAAAA,KAAK,CAACU,OAAN;AACAV,MAAAA,KAAK,CAACW,KAAN,CAAY,gEAAZ,EAA8E;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA9E;AACD;AACF,GAPD;;AASA,SACE;AAAK,IAAA,GAAG,EAAER,GAAV;AAAe,IAAA,SAAS,EAAC,yBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,+BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAG,IAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AAAO,IAAA,QAAQ,EAAGS,KAAD,IAAW;AAAEV,MAAAA,KAAK,CAACW,aAAN,CAAoBD,KAApB;AAA6B,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAGiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHjE,EAIE;AAAQ,IAAA,SAAS,EAAC,gCAAlB;AAAmD,IAAA,OAAO,EAAE,MAAM;AAAEV,MAAAA,KAAK,CAACE,mBAAN,CAA0B,KAA1B;AAAmC,KAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAKE;AAAQ,IAAA,SAAS,EAAC,gCAAlB;AAAmD,IAAA,OAAO,EAAEC,kBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF;AASD,CAtBD;;AAwBA,eAAeJ,YAAf","sourcesContent":["import React, { useRef } from 'react';\nimport { toast } from 'react-toastify';\nimport useOnClickOutside from '../../utils/useOnClickOutside';\nimport './ChannelModal.css';\n\nconst ChannelModal = (props) => {\n  const ref = useRef();\n  useOnClickOutside(ref, () => props.setShowChannelModal(false));\n\n  const channelModelCreate = () => {\n    if (props.newChannel !== \"\" && props.newChannel.length > 2 && props.newChannel.length < 21) {\n      props.createNewChannel();\n    } else {\n      toast.dismiss();\n      toast.error('Error, the name of the channel does not meet the requirements.', { position: 'bottom-center' });\n    }\n  }\n\n  return (\n    <div ref={ref} className=\"categorymodal-container\">\n      <p className=\"categorymodal-container-title\">Create Channel</p>\n      <p className=\"categorymodal-container-name\">Channel Name</p>\n      <input onChange={(event) => { props.setNewChannel(event); }} /><br />\n      <button className=\"categorymodal-container-cancel\" onClick={() => { props.setShowChannelModal(false); }}>Cancel</button>\n      <button className=\"categorymodal-container-create\" onClick={channelModelCreate}>Create</button>\n    </div>\n  );\n}\n\nexport default ChannelModal;"]},"metadata":{},"sourceType":"module"}