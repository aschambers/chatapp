{"ast":null,"code":"var _jsxFileName = \"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/components/Chatroom/Chatroom.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from \"socket.io-client\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Chatroom.css';\nimport chatot from '../../assets/images/chatot.png';\nimport numbersign from '../../assets/images/numbersign.png';\nimport voice from '../../assets/images/voice.png';\nimport editwhite from '../../assets/images/editwhite.png';\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.useOnClickOutside = (ref, handler) => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    };\n\n    this.recordAudioInput = async stream => {\n      let chunks = [];\n      const recorder = new MediaRecorder(stream, {\n        type: 'audio/webm'\n      });\n      recorder.start(1000); // setInterval(() => {\n      //   console.log(recorder);\n      //   // if (this.state.audioStream !== null) {\n      //   //   recorder.stop();\n      //   //   recorder.start();\n      //   // }\n      // }, 2000);\n\n      recorder.addEventListener('dataavailable', event => {\n        // console.log(event);\n        if (typeof event.data === 'undefined') return;\n        if (event.data.size === 0) return;\n\n        if (chunks.length === 2) {\n          const recording = new Blob(chunks, {\n            type: 'audio/webm'\n          });\n          this.socket.emit('SEND_VOICE', {\n            recording: recording,\n            socketId: this.state.socketId,\n            chatroomId: this.state.chatroomId,\n            room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.state.serverId, \"/\").concat(this.state.chatroomId)\n          });\n          chunks = [];\n        } else {\n          chunks.push(event.data);\n        }\n      }); // Array.observe(chunks, (changes) => {\n      //   console.log(changes);\n      // });\n      // recorder.addEventListener('stop', () => {\n      //   console.log(chunks);\n      //   // const recording = new Blob(chunks, {\n      //   //   type: 'audio/webm'\n      //   // });\n      //   // this.socket.emit('SEND_VOICE', {\n      //   //   recording: recording,\n      //   //   socketId: this.state.socketId,\n      //   //   chatroomId: this.state.chatroomId,\n      //   //   room: `${ROOT_URL}/chatroom/${this.state.serverId}/${this.state.chatroomId}`\n      //   // });\n      //   chunks = [];\n      // });\n    };\n\n    this.sendMessage = event => {\n      if (event) {\n        event.preventDefault();\n        const data = {\n          username: this.props.username,\n          message: this.state.message,\n          userId: this.props.userId,\n          chatroomId: this.state.chatroomId,\n          room: this.state.room\n        };\n        this.socket.emit('CHATROOM_MESSAGE', data);\n        this.setState({\n          message: \"\"\n        });\n      }\n    };\n\n    this.sideContextMenu = (event, item) => {\n      event.preventDefault();\n      this.setState({\n        sideRightClickedUser: item,\n        sideUserModalOpen: true\n      });\n    };\n\n    this.contextMenu = (event, item) => {\n      event.preventDefault();\n      this.setState({\n        rightClickedUser: item,\n        userModalOpen: true,\n        messageMenu: false,\n        editingMessage: null\n      });\n    };\n\n    this.privateMessageUser = () => {\n      this.setState({\n        messages: []\n      });\n      this.props.privateMessageUser(this.state.rightClickedUser);\n    };\n\n    this.sidePrivateMessageUser = () => {\n      this.setState({\n        messages: []\n      });\n      this.props.privateMessageUser(this.state.sideRightClickedUser);\n    };\n\n    this.openMessageMenu = item => {\n      this.setState({\n        messageMenu: true,\n        editMessage: item\n      });\n    };\n\n    this.deleteChatroomMessage = () => {\n      const data = {\n        username: this.props.username,\n        message: this.state.message,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        messageId: this.state.editMessage.id,\n        room: this.state.room\n      };\n      this.socket.emit('DELETE_CHATROOM_MESSAGE', data);\n    };\n\n    this.editChatroomMessage = () => {\n      this.setState({\n        editingMessage: this.state.editMessage,\n        newMessage: this.state.editMessage.message,\n        hover: \"\"\n      }, () => {\n        this.setState({\n          editMessage: null,\n          messageMenu: false\n        });\n      });\n    };\n\n    this.detectEscape = event => {\n      if (event.keyCode === 27 && !this.state.messageMenu) {\n        this.setState({\n          editingMessage: this.state.editMessage,\n          newMessage: \"\"\n        });\n      }\n    };\n\n    this.sendEditedMessage = event => {\n      event.preventDefault();\n      const data = {\n        username: this.props.username,\n        message: this.state.newMessage,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        messageId: this.state.editingMessage.id,\n        room: this.state.room\n      };\n      this.socket.emit('EDIT_CHATROOM_MESSAGE', data);\n    };\n\n    this.kickUser = user => {\n      const data = {\n        serverId: this.state.serverId,\n        chatroomId: this.state.chatroomId,\n        type: 'user',\n        userId: user.userId,\n        room: this.state.room\n      };\n      this.socket.emit('KICK_SERVER_USER', data);\n    };\n\n    this.banUser = user => {\n      const data = {\n        serverId: this.state.serverId,\n        chatroomId: this.state.chatroomId,\n        type: 'user',\n        userId: user.userId,\n        room: this.state.room\n      };\n      this.socket.emit('BAN_SERVER_USER', data);\n    };\n\n    this.ref = React.createRef();\n    this.useOnClickOutside(this.ref, () => this.setState({\n      messageMenu: false,\n      userModalOpen: false,\n      sideUserModalOpen: false\n    }));\n    this.state = {\n      id: \"\",\n      username: \"\",\n      active: false,\n      type: \"\",\n      imageUrl: \"\",\n      message: \"\",\n      messages: [],\n      users: [],\n      clickedUsername: \"\",\n      clickedType: \"\",\n      privateMessages: [],\n      personalMessages: [],\n      userDetails: false,\n      socketId: \"\",\n      currentSocket: \"\",\n      rightClickedUser: {},\n      sideRightClickedUser: {},\n      sideUserModalOpen: false,\n      userModalOpen: false,\n      namespace: null,\n      room: null,\n      serverId: null,\n      previousRoom: null,\n      currentChatroom: null,\n      editMessage: null,\n      messageMenu: false,\n      editingMessage: null,\n      newMessage: \"\",\n      hover: \"\",\n      serverUserList: [],\n      isLoading: false,\n      chunks: []\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener('keydown', this.detectEscape);\n    this.props.getUsers();\n    this.socket = io(ROOT_URL);\n    this.socket.on('connect', () => {\n      this.setState({\n        serverUserList: this.props.serverUserList,\n        socketId: this.socket.id,\n        namespace: \"\".concat(ROOT_URL, \"/\").concat(this.props.serverId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        serverId: this.props.serverId,\n        currentChatroom: this.props.activeChatroom,\n        chatroomId: this.props.activeChatroomId,\n        username: this.props.username\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.socket.id,\n        chatroomId: this.props.activeChatroomId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId)\n      });\n      this.socket.emit('GET_SERVER_LIST', {\n        socketId: this.socket.id,\n        serverId: this.props.serverId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId)\n      });\n    });\n    this.socket.on('RECEIVE_CHATROOM_MESSAGES', data => {\n      this.setState({\n        messageMenu: false,\n        editMessage: null,\n        editingMessage: null,\n        newMessage: \"\"\n      }); // scroll to latest message after rendering messages in firefox\n\n      if (navigator.userAgent.search(\"Firefox\") > -1 || navigator.userAgent.search(\"Edge\") > -1) {\n        this.setState({\n          messages: data.reverse()\n        }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0 || navigator.userAgent.search(\"Edge\") < 0) {\n        this.setState({\n          messages: data\n        });\n      }\n    });\n    this.socket.on('RECEIVE_SERVER_LIST', data => {\n      const index = data.findIndex(x => x.username === this.state.username);\n\n      if (index < 0) {\n        this.props.leaveServer();\n      } else if (index > -1) {\n        this.props.refreshServerUsers();\n        this.setState({\n          userModalOpen: false,\n          sideUserModalOpen: false,\n          rightClickedUser: {},\n          sideRightClickedUser: {},\n          serverUserList: data\n        });\n      }\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.username) {\n      this.setState({\n        username: nextProps.username\n      });\n    }\n\n    if (nextProps.serverUserList) {\n      this.setState({\n        serverUserList: nextProps.serverUserList\n      });\n    }\n\n    if (nextProps.activeChatroomId !== this.state.chatroomId && this.state.chatroomId !== undefined) {\n      this.setState({\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(this.state.chatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(nextProps.activeChatroomId),\n        serverId: nextProps.serverId,\n        currentChatroom: nextProps.activeChatroom,\n        chatroomId: nextProps.activeChatroomId\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.state.socketId,\n        chatroomId: nextProps.activeChatroomId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(this.state.chatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(nextProps.activeChatroomId)\n      });\n    }\n\n    if (nextProps.users && nextProps.users.length) {\n      const userList = [];\n\n      for (let i = 0; i < nextProps.users.length; i++) {\n        userList.push(nextProps.users[i]);\n      }\n\n      this.setState({\n        users: userList\n      });\n    }\n\n    if (nextProps.activeChatroomType === \"voice\" && nextProps.audioStream) {\n      this.setState({\n        audioStream: nextProps.audioStream\n      });\n      this.recordAudioInput(nextProps.audioStream);\n    }\n\n    if (nextProps.activeChatroomType !== \"voice\") {\n      this.setState({\n        audioStream: null\n      });\n    }\n\n    this.socket.on('RECEIVE_VOICE', arrayBuffer => {\n      let blob = new Blob([arrayBuffer], {\n        'type': 'audio/webm'\n      });\n      let audio = document.createElement('audio');\n      audio.src = window.URL.createObjectURL(blob);\n      audio.style.display = \"none\";\n      audio.autoplay = false;\n      audio.play();\n\n      audio.onended = () => {\n        audio.remove();\n      };\n\n      document.body.appendChild(audio);\n    });\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('LEAVE_CHATROOMS', {\n      room: this.state.room\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chatroom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"chatarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chatarea-topbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.activeChatroomType === \"text\" ? numbersign : voice,\n      alt: \"channel\",\n      height: 16,\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, this.props.activeChatroom)), React.createElement(\"div\", {\n      id: \"chatareamessages\",\n      className: \"chatarea-messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n      const moderate = this.state.serverUserList.length > 0 && this.state.serverUserList.some(serverItem => serverItem['username'] !== this.state.username && serverItem['username'] === item.username && serverItem['type'] !== 'owner' && serverItem['type'] !== 'admin');\n      return React.createElement(\"div\", {\n        id: \"message\" + index,\n        key: index,\n        onMouseEnter: () => {\n          this.setState({\n            hover: this.state.editingMessage || this.state.messageMenu || this.props.userId !== item.userId ? \"\" : \"message\" + index\n          });\n        },\n        onMouseLeave: () => {\n          this.setState({\n            hover: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chatarea-messages-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"chatarea-messages-user\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.contextMenu(event, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, item.username), React.createElement(Moment, {\n        format: \"MM/DD/YYYY\",\n        date: item.updatedAt,\n        className: \"chatarea-messages-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }), this.state.hover === \"message\" + index ? React.createElement(\"span\", {\n        className: \"chatarea-messages-menu\",\n        onClick: () => {\n          this.openMessageMenu(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: editwhite,\n        height: 15,\n        width: 15,\n        alt: \"edit message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      })) : null, this.state.messageMenu && this.state.editMessage.id === item.id ? React.createElement(\"div\", {\n        className: \"chatarea-messages-editmenu\",\n        ref: this.ref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            editMessage: null,\n            messageMenu: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.editChatroomMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.deleteChatroomMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, \"Delete\")) : null, this.state.userModalOpen && this.state.rightClickedUser.id === item.id ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-usermodalmod\" : \"chatarea-messages-usermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            userModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.privateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-usermodalmod-privatemessage\" : \"chatarea-messages-usermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(item);\n        },\n        className: \"chatarea-messages-usermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, \"Kick \", item.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(item);\n        },\n        className: \"chatarea-messages-usermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, \"Ban \", item.username) : null) : null), this.state.editingMessage !== null && this.state.editingMessage.id === item.id ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"chatarea-messages-editmessage\",\n        onChange: event => {\n          this.setState({\n            newMessage: event.target.value\n          });\n        },\n        value: this.state.newMessage,\n        onKeyDown: event => {\n          event.keyCode === 13 && event.shiftKey === false ? this.sendEditedMessage(event) : this.sendMessage(null);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"chatarea-messages-editmessage-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \"escape to cancel \\u2022 enter to save\")) : React.createElement(\"p\", {\n        className: \"chatarea-messages-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, item.message));\n    }) : null), React.createElement(\"div\", {\n      className: \"chatarea-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Send a message!\",\n      type: \"text\",\n      onChange: event => {\n        this.setState({\n          message: event.target.value\n        });\n      },\n      value: this.state.message,\n      onKeyDown: event => {\n        event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"sidebarright\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebarright-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Filter users in server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sidebarright-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"Room Owners\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'owner' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, user.type === 'owner' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      })) : null, user.type === 'owner' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }) : null, user.type === 'owner' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }) : null, user.type === 'owner' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'owner' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, \"Send Message\")) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'owner') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, \"Administrators\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'admin' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, user.type === 'admin' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      })) : null, user.type === 'admin' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }) : null, user.type === 'admin' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }) : null, user.type === 'admin' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'admin' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, \"Send Message\")) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'admin') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, \"Moderators\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      const moderate = user.username !== this.state.username;\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'moderator' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, user.type === 'moderator' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      })) : null, user.type === 'moderator' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }) : null, user.type === 'moderator' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }) : null, user.type === 'moderator' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'moderator' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \"Kick \", user.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, \"Ban \", user.username) : null) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'moderator') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, \"Voice\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      const moderate = user.username !== this.state.username;\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'voice' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, user.type === 'voice' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      })) : null, user.type === 'voice' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }) : null, user.type === 'voice' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }) : null, user.type === 'voice' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'voice' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, \"Kick \", user.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, \"Ban \", user.username) : null) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'voice') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, \"Users\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      const moderate = user.username !== this.state.username;\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'user' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, user.type === 'user' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      })) : null, user.type === 'user' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }) : null, user.type === 'user' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }) : null, user.type === 'user' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'user' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, \"Kick \", user.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, \"Ban \", user.username) : null) : null) : null);\n    }) : null));\n  }\n\n}\n\nfunction mapStateToProps({\n  usersReducer\n}) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Chatroom);","map":{"version":3,"sources":["/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/components/Chatroom/Chatroom.js"],"names":["React","Component","connect","actions","ROOT_URL","io","Moment","chatot","numbersign","voice","editwhite","Chatroom","constructor","props","useOnClickOutside","ref","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","recordAudioInput","stream","chunks","recorder","MediaRecorder","type","start","data","size","length","recording","Blob","socket","emit","socketId","state","chatroomId","room","serverId","push","sendMessage","preventDefault","username","message","userId","setState","sideContextMenu","item","sideRightClickedUser","sideUserModalOpen","contextMenu","rightClickedUser","userModalOpen","messageMenu","editingMessage","privateMessageUser","messages","sidePrivateMessageUser","openMessageMenu","editMessage","deleteChatroomMessage","messageId","id","editChatroomMessage","newMessage","hover","detectEscape","keyCode","sendEditedMessage","kickUser","user","banUser","createRef","active","imageUrl","users","clickedUsername","clickedType","privateMessages","personalMessages","userDetails","currentSocket","namespace","previousRoom","currentChatroom","serverUserList","isLoading","componentDidMount","window","getUsers","on","activeChatroomId","activeChatroom","navigator","userAgent","search","reverse","element","getElementById","scrollIntoView","index","findIndex","x","leaveServer","refreshServerUsers","componentWillReceiveProps","nextProps","undefined","userList","i","activeChatroomType","audioStream","arrayBuffer","blob","audio","createElement","src","URL","createObjectURL","style","display","autoplay","play","onended","remove","body","appendChild","componentWillUnmount","render","map","moderate","some","serverItem","handleClick","updatedAt","value","shiftKey","mapStateToProps","usersReducer","error","success"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from \"socket.io-client\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Chatroom.css';\nimport chatot from '../../assets/images/chatot.png';\nimport numbersign from '../../assets/images/numbersign.png';\nimport voice from '../../assets/images/voice.png';\nimport editwhite from '../../assets/images/editwhite.png';\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.useOnClickOutside(this.ref, () => this.setState({ messageMenu: false, userModalOpen: false, sideUserModalOpen: false }));\n\n    this.state = {\n      id: \"\",\n      username: \"\",\n      active: false,\n      type: \"\",\n      imageUrl: \"\",\n      message: \"\",\n      messages: [],\n      users: [],\n      clickedUsername: \"\",\n      clickedType: \"\",\n      privateMessages: [],\n      personalMessages: [],\n      userDetails: false,\n      socketId: \"\",\n      currentSocket: \"\",\n      rightClickedUser: {},\n      sideRightClickedUser: {},\n      sideUserModalOpen: false,\n      userModalOpen: false,\n      namespace: null,\n      room: null,\n      serverId: null,\n      previousRoom: null,\n      currentChatroom: null,\n      editMessage: null,\n      messageMenu: false,\n      editingMessage: null,\n      newMessage: \"\",\n      hover: \"\",\n      serverUserList: [],\n      isLoading: false,\n      chunks: []\n    }\n  }\n\n  useOnClickOutside = (ref, handler) => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener('keydown', this.detectEscape);\n    this.props.getUsers();\n\n    this.socket = io(ROOT_URL);\n\n    this.socket.on('connect', () => {\n      this.setState({ serverUserList: this.props.serverUserList, socketId: this.socket.id, namespace: `${ROOT_URL}/${this.props.serverId}`, room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`, previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`, serverId: this.props.serverId, currentChatroom: this.props.activeChatroom, chatroomId: this.props.activeChatroomId, username: this.props.username });\n\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.socket.id,\n        chatroomId: this.props.activeChatroomId,\n        previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`,\n        room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`\n      });\n\n      this.socket.emit('GET_SERVER_LIST', {\n        socketId: this.socket.id,\n        serverId: this.props.serverId,\n        previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`,\n        room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`\n      });\n    });\n\n    this.socket.on('RECEIVE_CHATROOM_MESSAGES', (data) => {\n      this.setState({ messageMenu: false, editMessage: null, editingMessage: null, newMessage: \"\" });\n      // scroll to latest message after rendering messages in firefox\n      if (navigator.userAgent.search(\"Firefox\") > -1 || navigator.userAgent.search(\"Edge\") > -1) {\n        this.setState({ messages: data.reverse() }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0 || navigator.userAgent.search(\"Edge\") < 0) {\n        this.setState({ messages: data });\n      }\n    });\n\n    this.socket.on('RECEIVE_SERVER_LIST', (data) => {\n      const index = data.findIndex(x => x.username === this.state.username);\n      if (index < 0) {\n        this.props.leaveServer();\n      } else if (index > -1) {\n        this.props.refreshServerUsers();\n        this.setState({ userModalOpen: false, sideUserModalOpen: false, rightClickedUser: {}, sideRightClickedUser: {}, serverUserList: data });\n      }\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.username) {\n      this.setState({ username: nextProps.username });\n    }\n    if (nextProps.serverUserList) {\n      this.setState({ serverUserList: nextProps.serverUserList });\n    }\n    if (nextProps.activeChatroomId !== this.state.chatroomId && this.state.chatroomId !== undefined) {\n      this.setState({\n        previousRoom: `${ROOT_URL}/chatroom/${nextProps.serverId}/${this.state.chatroomId}`,\n        room: `${ROOT_URL}/chatroom/${nextProps.serverId}/${nextProps.activeChatroomId}`,\n        serverId: nextProps.serverId,\n        currentChatroom: nextProps.activeChatroom,\n        chatroomId: nextProps.activeChatroomId\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.state.socketId,\n        chatroomId: nextProps.activeChatroomId,\n        previousRoom: `${ROOT_URL}/chatroom/${nextProps.serverId}/${this.state.chatroomId}`,\n        room: `${ROOT_URL}/chatroom/${nextProps.serverId}/${nextProps.activeChatroomId}`\n      });\n    }\n\n    if (nextProps.users && nextProps.users.length) {\n      const userList = [];\n      for(let i = 0; i < nextProps.users.length; i++) {\n        userList.push(nextProps.users[i]);\n      }\n      this.setState({ users: userList });\n    }\n\n    if (nextProps.activeChatroomType === \"voice\" && nextProps.audioStream) {\n      this.setState({ audioStream: nextProps.audioStream });\n      this.recordAudioInput(nextProps.audioStream);\n    }\n\n    if (nextProps.activeChatroomType !== \"voice\") {\n      this.setState({ audioStream: null });\n    }\n\n    this.socket.on('RECEIVE_VOICE', (arrayBuffer) => {\n      let blob = new Blob([arrayBuffer], { 'type' : 'audio/webm' });\n\n      let audio = document.createElement('audio');\n      audio.src = window.URL.createObjectURL(blob);\n      audio.style.display = \"none\";\n      audio.autoplay = false;\n      audio.play();\n      audio.onended = () => {\n        audio.remove();\n      };\n      document.body.appendChild(audio);\n    });\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('LEAVE_CHATROOMS', {\n      room: this.state.room\n    });\n  }\n\n  recordAudioInput = async(stream) => {\n    let chunks = [];\n    const recorder = new MediaRecorder(stream, { type: 'audio/webm' });\n\n    recorder.start(1000);\n\n    // setInterval(() => {\n    //   console.log(recorder);\n    //   // if (this.state.audioStream !== null) {\n    //   //   recorder.stop();\n    //   //   recorder.start();\n    //   // }\n    // }, 2000);\n\n    recorder.addEventListener('dataavailable', event => {\n      // console.log(event);\n      if (typeof event.data === 'undefined') return;\n      if (event.data.size === 0) return;\n      if (chunks.length === 2) {\n        const recording = new Blob(chunks, {\n          type: 'audio/webm'\n        });\n        this.socket.emit('SEND_VOICE', {\n          recording: recording,\n          socketId: this.state.socketId,\n          chatroomId: this.state.chatroomId,\n          room: `${ROOT_URL}/chatroom/${this.state.serverId}/${this.state.chatroomId}`\n        });\n        chunks = [];\n      } else {\n        chunks.push(event.data);\n      }\n    });\n\n    // Array.observe(chunks, (changes) => {\n    //   console.log(changes);\n    // });\n\n    // recorder.addEventListener('stop', () => {\n    //   console.log(chunks);\n    //   // const recording = new Blob(chunks, {\n    //   //   type: 'audio/webm'\n    //   // });\n    //   // this.socket.emit('SEND_VOICE', {\n    //   //   recording: recording,\n    //   //   socketId: this.state.socketId,\n    //   //   chatroomId: this.state.chatroomId,\n    //   //   room: `${ROOT_URL}/chatroom/${this.state.serverId}/${this.state.chatroomId}`\n    //   // });\n    //   chunks = [];\n    // });\n  }\n\n  sendMessage = (event) => {\n    if (event) {\n      event.preventDefault();\n      const data = {\n        username: this.props.username,\n        message: this.state.message,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        room: this.state.room\n      };\n      this.socket.emit('CHATROOM_MESSAGE', data);\n      this.setState({ message: \"\" });\n    }\n  }\n\n  sideContextMenu = (event, item) => {\n    event.preventDefault();\n    this.setState({ sideRightClickedUser: item, sideUserModalOpen: true });\n  }\n\n  contextMenu = (event, item) => {\n    event.preventDefault();\n    this.setState({ rightClickedUser: item, userModalOpen: true, messageMenu: false, editingMessage: null });\n  }\n\n  privateMessageUser = () => {\n    this.setState({ messages: [] });\n    this.props.privateMessageUser(this.state.rightClickedUser);\n  }\n\n  sidePrivateMessageUser = () => {\n    this.setState({ messages: [] });\n    this.props.privateMessageUser(this.state.sideRightClickedUser);\n  }\n\n  openMessageMenu = (item) => {\n    this.setState({ messageMenu: true, editMessage: item });\n  }\n\n  deleteChatroomMessage = () => {\n    const data = {\n      username: this.props.username,\n      message: this.state.message,\n      userId: this.props.userId,\n      chatroomId: this.state.chatroomId,\n      messageId: this.state.editMessage.id,\n      room: this.state.room\n    };\n    this.socket.emit('DELETE_CHATROOM_MESSAGE', data);\n  }\n\n  editChatroomMessage = () => {\n    this.setState({ editingMessage: this.state.editMessage, newMessage: this.state.editMessage.message, hover: \"\" }, () => {\n      this.setState({ editMessage: null, messageMenu: false });\n    });\n  }\n\n  detectEscape = (event) => {\n    if (event.keyCode === 27 && !this.state.messageMenu) {\n      this.setState({ editingMessage: this.state.editMessage, newMessage: \"\" });\n    }\n  }\n\n  sendEditedMessage = (event) => {\n    event.preventDefault();\n    const data = {\n      username: this.props.username,\n      message: this.state.newMessage,\n      userId: this.props.userId,\n      chatroomId: this.state.chatroomId,\n      messageId: this.state.editingMessage.id,\n      room: this.state.room\n    };\n    this.socket.emit('EDIT_CHATROOM_MESSAGE', data);\n  }\n\n  kickUser = (user) => {\n    const data = {\n      serverId: this.state.serverId,\n      chatroomId: this.state.chatroomId,\n      type: 'user',\n      userId: user.userId,\n      room: this.state.room\n    };\n    this.socket.emit('KICK_SERVER_USER', data);\n  }\n\n  banUser = (user) => {\n    const data = {\n      serverId: this.state.serverId,\n      chatroomId: this.state.chatroomId,\n      type: 'user',\n      userId: user.userId,\n      room: this.state.room\n    };\n    this.socket.emit('BAN_SERVER_USER', data);\n  }\n\n  render() {\n    return (\n      <div className=\"chatroom\">\n        <audio />\n        <div className=\"chatarea\">\n          <div className=\"chatarea-topbar\">\n            <img src={this.props.activeChatroomType === \"text\" ? numbersign : voice} alt=\"channel\" height={16} width={16} /><span>{this.props.activeChatroom}</span>\n          </div>\n          <div id=\"chatareamessages\" className=\"chatarea-messages\">\n            {this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n              const moderate = (this.state.serverUserList.length > 0\n              && this.state.serverUserList.some(serverItem => serverItem['username'] !== this.state.username\n              && (serverItem['username'] === item.username && serverItem['type'] !== 'owner' && serverItem['type'] !== 'admin')));\n              return (\n                <div id={\"message\" + index} key={index} onMouseEnter={() => { this.setState({ hover: (this.state.editingMessage || this.state.messageMenu || (this.props.userId !== item.userId)) ? \"\" : (\"message\" + index) }) }} onMouseLeave={() => { this.setState({ hover: \"\" }); }}>\n                  <div className=\"chatarea-messages-container\">\n                    <span className=\"chatarea-messages-user\" onClick={this.handleClick} onContextMenu={(event) => { this.contextMenu(event, item); }}>{item.username}</span>\n                    <Moment format=\"MM/DD/YYYY\" date={item.updatedAt} className=\"chatarea-messages-time\" />\n                    {this.state.hover === (\"message\" + index) ? <span className=\"chatarea-messages-menu\" onClick={() => { this.openMessageMenu(item); }}><img src={editwhite} height={15} width={15} alt=\"edit message\" /></span> : null}\n                    {this.state.messageMenu && this.state.editMessage.id === item.id ?\n                      <div className=\"chatarea-messages-editmenu\" ref={this.ref}>\n                        <span onClick={() => { this.setState({ editMessage: null, messageMenu: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.editChatroomMessage(); }}>Edit</p>\n                        <p onClick={() => { this.deleteChatroomMessage(); }}>Delete</p>\n                      </div>\n                    : null}\n                    {this.state.userModalOpen && this.state.rightClickedUser.id === item.id ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-usermodalmod\" : \"chatarea-messages-usermodal\"}>\n                        <span onClick={() => { this.setState({ userModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.privateMessageUser(); }} className={moderate === true ? \"chatarea-messages-usermodalmod-privatemessage\" : \"chatarea-messages-usermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(item); }} className=\"chatarea-messages-usermodalmod-kick\">Kick {item.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(item); }} className=\"chatarea-messages-usermodalmod-ban\">Ban {item.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                  {this.state.editingMessage !== null && this.state.editingMessage.id === item.id ? <span><input className=\"chatarea-messages-editmessage\" onChange={(event) => { this.setState({ newMessage: event.target.value }) }} value={this.state.newMessage} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendEditedMessage(event) : this.sendMessage(null) }} /><p className=\"chatarea-messages-editmessage-note\">escape to cancel • enter to save</p></span> : <p className=\"chatarea-messages-message\">{item.message}</p>}\n                </div>\n              )\n            }) : null}\n          </div>\n          <div className=\"chatarea-container\">\n            <input placeholder=\"Send a message!\" type=\"text\" onChange={(event) => { this.setState({ message: event.target.value }); }} value={this.state.message} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null) }}></input>\n          </div>\n        </div>\n        <div className=\"sidebarright\">\n          <div className=\"sidebarright-container\">\n            <input placeholder=\"Filter users in server\"></input>\n          </div>\n          <div className=\"sidebarright-border\" />\n          <div className=\"sidebarright-authority\">\n            <span>Room Owners</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index)  => {\n            return (\n              <div key={index} className={user.type === 'owner' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'owner' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'owner' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'owner' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'owner' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'owner' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className=\"chatarea-messages-sideusermodal\">\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className=\"chatarea-messages-sideusermodal-privatemessage\">Send Message</p>\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'owner') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Administrators</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index)  => {\n            return (\n              <div key={index} className={user.type === 'admin' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'admin' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'admin' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'admin' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'admin' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'admin' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className=\"chatarea-messages-sideusermodal\">\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className=\"chatarea-messages-sideusermodal-privatemessage\">Send Message</p>\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'admin') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Moderators</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index)  => {\n            const moderate = (user.username !== this.state.username);\n            return (\n              <div key={index} className={user.type === 'moderator' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'moderator' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'moderator' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'moderator' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'moderator' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'moderator' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\"}>\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className={moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(user); }} className=\"chatarea-messages-sideusermodalmod-kick\">Kick {user.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(user); }} className=\"chatarea-messages-sideusermodalmod-ban\">Ban {user.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'moderator') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Voice</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n            const moderate = (user.username !== this.state.username);\n            return (\n              <div key={index} className={user.type === 'voice' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'voice' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'voice' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'voice' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'voice' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'voice' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\"}>\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className={moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(user); }} className=\"chatarea-messages-sideusermodalmod-kick\">Kick {user.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(user); }} className=\"chatarea-messages-sideusermodalmod-ban\">Ban {user.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'voice') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Users</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n            const moderate = (user.username !== this.state.username);\n            return (\n              <div key={index} className={user.type === 'user' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'user' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'user' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'user' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'user' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'user' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\"}>\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className={moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(user); }} className=\"chatarea-messages-sideusermodalmod-kick\">Kick {user.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(user); }} className=\"chatarea-messages-sideusermodalmod-ban\">Ban {user.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            )\n          }) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Chatroom);"]},"metadata":{},"sourceType":"module"}