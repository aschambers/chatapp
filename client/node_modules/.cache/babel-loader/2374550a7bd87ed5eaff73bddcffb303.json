{"ast":null,"code":"var _jsxFileName = \"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/components/Chatroom/Chatroom.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from 'socket.io-client';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Chatroom.css';\nimport chatot from '../../assets/images/chatot.png';\nimport numbersign from '../../assets/images/numbersign.png';\nimport voice from '../../assets/images/voice.png';\nimport editwhite from '../../assets/images/editwhite.png';\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.useOnClickOutside = (ref, handler) => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    };\n\n    this.recordAudioInput = async stream => {\n      if (stream) {\n        try {\n          const configuration = {\n            iceServers: [{\n              urls: 'stun:stun.l.google.com:19302' // Google's public STUN server\n\n            }]\n          }; // const localAudio = new Audio(stream);\n          // localAudio.autoplay = true;\n          // localAudio.muted = true;\n\n          this.setState({\n            myConnection: new RTCPeerConnection(configuration) // remoteConnection: new RTCPeerConnection(configuration)\n\n          }, async () => {\n            await stream.getTracks().forEach(track => {\n              this.state.myConnection.addTrack(track, stream);\n            });\n\n            try {\n              const offer = await this.state.myConnection.createOffer({\n                offerToReceiveAudio: 1,\n                offerToReceiveVideo: 0\n              });\n\n              if (!offer) {\n                console.log('offer fail');\n              }\n\n              await this.onCreateOfferSuccess(offer);\n            } catch (e) {\n              console.log('sessionDescription error: ' + e);\n            }\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        const localAudio = document.getElementById('localAudio');\n        localAudio.srcObject = null;\n        localAudio.autoplay = false;\n        const remoteAudio = document.getElementById('remoteAudio');\n        remoteAudio.srcObject = null;\n        remoteAudio.autoplay = false;\n      }\n    };\n\n    this.onCreateOfferSuccess = async desc => {\n      try {\n        await this.state.myConnection.setLocalDescription(desc);\n        const data = {\n          desc: desc,\n          username: this.state.username,\n          type: 'audio-offer'\n        };\n        this.socket.emit('SEND_OFFER', data);\n      } catch (e) {\n        console.log('session desc error creating offer: ' + e);\n      }\n    };\n\n    this.onCreateAnswerSuccess = async (desc, username) => {\n      try {\n        await this.state.remoteConnection.setLocalDescription(desc);\n        await this.state.myConnection.setRemoteDescription(desc);\n        const data = {\n          desc: desc,\n          username: username,\n          type: 'audio-answer'\n        };\n        this.socket.emit('SEND_ANSWER', data);\n      } catch (e) {\n        console.log('create answer error: ' + e);\n      }\n    };\n\n    this.sendMessage = event => {\n      if (event) {\n        event.preventDefault();\n        const data = {\n          username: this.props.username,\n          message: this.state.message,\n          userId: this.props.userId,\n          chatroomId: this.state.chatroomId,\n          room: this.state.room\n        };\n        this.socket.emit('CHATROOM_MESSAGE', data);\n        this.setState({\n          message: \"\"\n        });\n      }\n    };\n\n    this.sideContextMenu = (event, item) => {\n      event.preventDefault();\n      this.setState({\n        sideRightClickedUser: item,\n        sideUserModalOpen: true\n      });\n    };\n\n    this.contextMenu = (event, item) => {\n      event.preventDefault();\n      this.setState({\n        rightClickedUser: item,\n        userModalOpen: true,\n        messageMenu: false,\n        editingMessage: null\n      });\n    };\n\n    this.privateMessageUser = () => {\n      this.setState({\n        messages: []\n      });\n      this.props.privateMessageUser(this.state.rightClickedUser);\n    };\n\n    this.sidePrivateMessageUser = () => {\n      this.setState({\n        messages: []\n      });\n      this.props.privateMessageUser(this.state.sideRightClickedUser);\n    };\n\n    this.openMessageMenu = item => {\n      this.setState({\n        messageMenu: true,\n        editMessage: item\n      });\n    };\n\n    this.deleteChatroomMessage = () => {\n      const data = {\n        username: this.props.username,\n        message: this.state.message,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        messageId: this.state.editMessage.id,\n        room: this.state.room\n      };\n      this.socket.emit('DELETE_CHATROOM_MESSAGE', data);\n    };\n\n    this.editChatroomMessage = () => {\n      this.setState({\n        editingMessage: this.state.editMessage,\n        newMessage: this.state.editMessage.message,\n        hover: \"\"\n      }, () => {\n        this.setState({\n          editMessage: null,\n          messageMenu: false\n        });\n      });\n    };\n\n    this.detectEscape = event => {\n      if (event.keyCode === 27 && !this.state.messageMenu) {\n        this.setState({\n          editingMessage: this.state.editMessage,\n          newMessage: \"\"\n        });\n      }\n    };\n\n    this.sendEditedMessage = event => {\n      event.preventDefault();\n      const data = {\n        username: this.props.username,\n        message: this.state.newMessage,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        messageId: this.state.editingMessage.id,\n        room: this.state.room\n      };\n      this.socket.emit('EDIT_CHATROOM_MESSAGE', data);\n    };\n\n    this.kickUser = user => {\n      const data = {\n        serverId: this.state.serverId,\n        chatroomId: this.state.chatroomId,\n        type: 'user',\n        userId: user.userId,\n        room: this.state.room\n      };\n      this.socket.emit('KICK_SERVER_USER', data);\n    };\n\n    this.banUser = user => {\n      const data = {\n        serverId: this.state.serverId,\n        chatroomId: this.state.chatroomId,\n        type: 'user',\n        userId: user.userId,\n        room: this.state.room\n      };\n      this.socket.emit('BAN_SERVER_USER', data);\n    };\n\n    this.ref = React.createRef();\n    this.useOnClickOutside(this.ref, () => this.setState({\n      messageMenu: false,\n      userModalOpen: false,\n      sideUserModalOpen: false\n    }));\n    this.state = {\n      id: \"\",\n      username: \"\",\n      active: false,\n      type: \"\",\n      imageUrl: \"\",\n      message: \"\",\n      messages: [],\n      users: [],\n      clickedUsername: \"\",\n      clickedType: \"\",\n      privateMessages: [],\n      personalMessages: [],\n      userDetails: false,\n      socketId: \"\",\n      currentSocket: \"\",\n      rightClickedUser: {},\n      sideRightClickedUser: {},\n      sideUserModalOpen: false,\n      userModalOpen: false,\n      namespace: null,\n      room: null,\n      serverId: null,\n      previousRoom: null,\n      currentChatroom: null,\n      editMessage: null,\n      messageMenu: false,\n      editingMessage: null,\n      newMessage: \"\",\n      hover: \"\",\n      serverUserList: [],\n      isLoading: false,\n      chunks: [],\n      myConnection: null,\n      remoteConnection: null,\n      voiceUsers: []\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener('keydown', this.detectEscape);\n    this.props.getUsers();\n    this.socket = io(ROOT_URL);\n    this.socket.on('connect', () => {\n      this.setState({\n        serverUserList: this.props.serverUserList,\n        socketId: this.socket.id,\n        namespace: \"\".concat(ROOT_URL, \"/\").concat(this.props.serverId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        serverId: this.props.serverId,\n        currentChatroom: this.props.activeChatroom,\n        chatroomId: this.props.activeChatroomId,\n        username: this.props.username\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.socket.id,\n        chatroomId: this.props.activeChatroomId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId)\n      });\n      this.socket.emit('GET_SERVER_LIST', {\n        socketId: this.socket.id,\n        serverId: this.props.serverId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId)\n      });\n    });\n    this.socket.on('RECEIVE_CHATROOM_MESSAGES', data => {\n      this.setState({\n        messageMenu: false,\n        editMessage: null,\n        editingMessage: null,\n        newMessage: \"\"\n      }); // scroll to latest message after rendering messages in firefox\n\n      if (navigator.userAgent.search(\"Firefox\") > -1 || navigator.userAgent.search(\"Edge\") > -1) {\n        this.setState({\n          messages: data.reverse()\n        }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0 || navigator.userAgent.search(\"Edge\") < 0) {\n        this.setState({\n          messages: data\n        });\n      }\n    });\n    this.socket.on('RECEIVE_SERVER_LIST', data => {\n      const index = data.findIndex(x => x.username === this.state.username);\n\n      if (index < 0) {\n        this.props.leaveServer();\n      } else if (index > -1) {\n        this.props.refreshServerUsers();\n        this.setState({\n          userModalOpen: false,\n          sideUserModalOpen: false,\n          rightClickedUser: {},\n          sideRightClickedUser: {},\n          serverUserList: data\n        });\n      }\n    });\n    this.socket.on('RECEIVE_OFFER', async data => {\n      console.log('offer: ' + data.username);\n\n      if (data.username !== this.state.username) {\n        console.log('receive offer data: ' + data);\n\n        try {\n          await this.state.myConnection.setRemoteDescription(new RTCSessionDescription(data.desc)); // 3. Get stream\n\n          const constraints = {\n            audio: true,\n            video: false\n          };\n          const stream = await navigator.mediaDevices.getUserMedia(constraints);\n          if (!stream) return; // 4. Add tracks from stream\n\n          await stream.getTracks().forEach(track => {\n            this.state.myConnection.addTrack(track, stream);\n          });\n          const remoteAudio = document.getElementById('remoteAudio');\n          remoteAudio.srcObject = stream;\n          remoteAudio.autoplay = true; // 5. Create answer to sdp offer\n\n          const answer = await this.state.myConnection.createAnswer();\n          if (!answer) return; // 6. Set local description using answer\n\n          await this.state.myConnection.setLocalDescription(answer); // 7. Send a message back to sender\n\n          const message = {\n            answer: answer,\n            username: data.username,\n            type: 'audio-answer'\n          };\n          this.socket.emit('SEND_ANSWER', message);\n        } catch (error) {\n          console.log('set remote desc error');\n        }\n      }\n    });\n    this.socket.on('RECEIVE_ANSWER', async data => {\n      console.log('answer: ' + data.username);\n\n      if (data.username === this.state.username) {\n        console.log('receive answer data: ' + data); // Let my connection know how their connection is configured\n\n        this.state.myConnection.setRemoteDescription(new RTCSessionDescription(data.answer));\n\n        try {\n          console.log('try');\n        } catch (e) {\n          console.log('receive answer error: ' + e);\n        }\n      }\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.username) {\n      this.setState({\n        username: nextProps.username\n      });\n    }\n\n    if (nextProps.serverUserList) {\n      this.setState({\n        serverUserList: nextProps.serverUserList\n      });\n    }\n\n    if (nextProps.activeChatroomId !== this.state.chatroomId && this.state.chatroomId !== undefined) {\n      this.setState({\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(this.state.chatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(nextProps.activeChatroomId),\n        serverId: nextProps.serverId,\n        currentChatroom: nextProps.activeChatroom,\n        chatroomId: nextProps.activeChatroomId\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.state.socketId,\n        chatroomId: nextProps.activeChatroomId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(this.state.chatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(nextProps.activeChatroomId)\n      });\n    }\n\n    if (nextProps.users && nextProps.users.length) {\n      const userList = [];\n\n      for (let i = 0; i < nextProps.users.length; i++) {\n        userList.push(nextProps.users[i]);\n      }\n\n      this.setState({\n        users: userList\n      });\n    }\n\n    if (nextProps.activeChatroomType === \"voice\" && nextProps.audioStream) {\n      this.setState({\n        localStream: nextProps.localStream\n      });\n      this.recordAudioInput(nextProps.audioStream);\n    }\n\n    if (nextProps.activeChatroomType !== \"voice\") {\n      this.setState({\n        localStream: null\n      });\n      this.recordAudioInput(null);\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('LEAVE_CHATROOMS', {\n      room: this.state.room\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chatroom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      id: \"localAudio\",\n      style: {\n        \"display\": \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }), React.createElement(\"audio\", {\n      id: \"remoteAudio\",\n      style: {\n        \"display\": \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"chatarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chatarea-topbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.activeChatroomType === \"text\" ? numbersign : voice,\n      alt: \"channel\",\n      height: 16,\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, this.props.activeChatroom)), React.createElement(\"div\", {\n      id: \"chatareamessages\",\n      className: \"chatarea-messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n      const moderate = this.state.serverUserList.length > 0 && this.state.serverUserList.some(serverItem => serverItem['username'] !== this.state.username && serverItem['username'] === item.username && serverItem['type'] !== 'owner' && serverItem['type'] !== 'admin');\n      return React.createElement(\"div\", {\n        id: \"message\" + index,\n        key: index,\n        onMouseEnter: () => {\n          this.setState({\n            hover: this.state.editingMessage || this.state.messageMenu || this.props.userId !== item.userId ? \"\" : \"message\" + index\n          });\n        },\n        onMouseLeave: () => {\n          this.setState({\n            hover: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chatarea-messages-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"chatarea-messages-user\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.contextMenu(event, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, item.username), React.createElement(Moment, {\n        format: \"MM/DD/YYYY\",\n        date: item.updatedAt,\n        className: \"chatarea-messages-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }), this.state.hover === \"message\" + index ? React.createElement(\"span\", {\n        className: \"chatarea-messages-menu\",\n        onClick: () => {\n          this.openMessageMenu(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: editwhite,\n        height: 15,\n        width: 15,\n        alt: \"edit message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      })) : null, this.state.messageMenu && this.state.editMessage.id === item.id ? React.createElement(\"div\", {\n        className: \"chatarea-messages-editmenu\",\n        ref: this.ref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            editMessage: null,\n            messageMenu: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.editChatroomMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.deleteChatroomMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, \"Delete\")) : null, this.state.userModalOpen && this.state.rightClickedUser.id === item.id ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-usermodalmod\" : \"chatarea-messages-usermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            userModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.privateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-usermodalmod-privatemessage\" : \"chatarea-messages-usermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(item);\n        },\n        className: \"chatarea-messages-usermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, \"Kick \", item.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(item);\n        },\n        className: \"chatarea-messages-usermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, \"Ban \", item.username) : null) : null), this.state.editingMessage !== null && this.state.editingMessage.id === item.id ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"chatarea-messages-editmessage\",\n        onChange: event => {\n          this.setState({\n            newMessage: event.target.value\n          });\n        },\n        value: this.state.newMessage,\n        onKeyDown: event => {\n          event.keyCode === 13 && event.shiftKey === false ? this.sendEditedMessage(event) : this.sendMessage(null);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"chatarea-messages-editmessage-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, \"escape to cancel \\u2022 enter to save\")) : React.createElement(\"p\", {\n        className: \"chatarea-messages-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, item.message));\n    }) : null), React.createElement(\"div\", {\n      className: \"chatarea-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Send a message!\",\n      type: \"text\",\n      onChange: event => {\n        this.setState({\n          message: event.target.value\n        });\n      },\n      value: this.state.message,\n      onKeyDown: event => {\n        event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"sidebarright\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebarright-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Filter users in server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sidebarright-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, \"Room Owners\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'owner' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, user.type === 'owner' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      })) : null, user.type === 'owner' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }) : null, user.type === 'owner' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }) : null, user.type === 'owner' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'owner' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, \"Send Message\")) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'owner') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, \"Administrators\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'admin' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, user.type === 'admin' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      })) : null, user.type === 'admin' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }) : null, user.type === 'admin' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }) : null, user.type === 'admin' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'admin' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, \"Send Message\")) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'admin') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }, \"Moderators\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      const moderate = user.username !== this.state.username;\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'moderator' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, user.type === 'moderator' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      })) : null, user.type === 'moderator' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }) : null, user.type === 'moderator' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }) : null, user.type === 'moderator' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'moderator' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }, \"Kick \", user.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, \"Ban \", user.username) : null) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'moderator') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, \"Voice\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      const moderate = user.username !== this.state.username;\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'voice' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, user.type === 'voice' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      })) : null, user.type === 'voice' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }) : null, user.type === 'voice' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }) : null, user.type === 'voice' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'voice' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }, \"Kick \", user.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, \"Ban \", user.username) : null) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'voice') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }, \"Users\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      const moderate = user.username !== this.state.username;\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'user' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, user.type === 'user' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      })) : null, user.type === 'user' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }) : null, user.type === 'user' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      }) : null, user.type === 'user' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'user' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, \"Kick \", user.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      }, \"Ban \", user.username) : null) : null) : null);\n    }) : null));\n  }\n\n}\n\nfunction mapStateToProps({\n  usersReducer\n}) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Chatroom);","map":{"version":3,"sources":["/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/components/Chatroom/Chatroom.js"],"names":["React","Component","connect","actions","ROOT_URL","io","Moment","chatot","numbersign","voice","editwhite","Chatroom","constructor","props","useOnClickOutside","ref","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","recordAudioInput","stream","configuration","iceServers","urls","setState","myConnection","RTCPeerConnection","getTracks","forEach","track","state","addTrack","offer","createOffer","offerToReceiveAudio","offerToReceiveVideo","console","log","onCreateOfferSuccess","e","error","localAudio","getElementById","srcObject","autoplay","remoteAudio","desc","setLocalDescription","data","username","type","socket","emit","onCreateAnswerSuccess","remoteConnection","setRemoteDescription","sendMessage","preventDefault","message","userId","chatroomId","room","sideContextMenu","item","sideRightClickedUser","sideUserModalOpen","contextMenu","rightClickedUser","userModalOpen","messageMenu","editingMessage","privateMessageUser","messages","sidePrivateMessageUser","openMessageMenu","editMessage","deleteChatroomMessage","messageId","id","editChatroomMessage","newMessage","hover","detectEscape","keyCode","sendEditedMessage","kickUser","user","serverId","banUser","createRef","active","imageUrl","users","clickedUsername","clickedType","privateMessages","personalMessages","userDetails","socketId","currentSocket","namespace","previousRoom","currentChatroom","serverUserList","isLoading","chunks","voiceUsers","componentDidMount","window","getUsers","on","activeChatroomId","activeChatroom","navigator","userAgent","search","reverse","length","element","scrollIntoView","index","findIndex","x","leaveServer","refreshServerUsers","RTCSessionDescription","constraints","audio","video","mediaDevices","getUserMedia","answer","createAnswer","componentWillReceiveProps","nextProps","undefined","userList","i","push","activeChatroomType","audioStream","localStream","componentWillUnmount","render","map","moderate","some","serverItem","handleClick","updatedAt","value","shiftKey","mapStateToProps","usersReducer","success"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from 'socket.io-client';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Chatroom.css';\nimport chatot from '../../assets/images/chatot.png';\nimport numbersign from '../../assets/images/numbersign.png';\nimport voice from '../../assets/images/voice.png';\nimport editwhite from '../../assets/images/editwhite.png';\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.useOnClickOutside(this.ref, () => this.setState({ messageMenu: false, userModalOpen: false, sideUserModalOpen: false }));\n\n    this.state = {\n      id: \"\",\n      username: \"\",\n      active: false,\n      type: \"\",\n      imageUrl: \"\",\n      message: \"\",\n      messages: [],\n      users: [],\n      clickedUsername: \"\",\n      clickedType: \"\",\n      privateMessages: [],\n      personalMessages: [],\n      userDetails: false,\n      socketId: \"\",\n      currentSocket: \"\",\n      rightClickedUser: {},\n      sideRightClickedUser: {},\n      sideUserModalOpen: false,\n      userModalOpen: false,\n      namespace: null,\n      room: null,\n      serverId: null,\n      previousRoom: null,\n      currentChatroom: null,\n      editMessage: null,\n      messageMenu: false,\n      editingMessage: null,\n      newMessage: \"\",\n      hover: \"\",\n      serverUserList: [],\n      isLoading: false,\n      chunks: [],\n      myConnection: null,\n      remoteConnection: null,\n      voiceUsers: []\n    }\n  }\n\n  useOnClickOutside = (ref, handler) => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener('keydown', this.detectEscape);\n    this.props.getUsers();\n\n    this.socket = io(ROOT_URL);\n\n    this.socket.on('connect', () => {\n      this.setState({ serverUserList: this.props.serverUserList, socketId: this.socket.id, namespace: `${ROOT_URL}/${this.props.serverId}`, room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`, previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`, serverId: this.props.serverId, currentChatroom: this.props.activeChatroom, chatroomId: this.props.activeChatroomId, username: this.props.username });\n\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.socket.id,\n        chatroomId: this.props.activeChatroomId,\n        previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`,\n        room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`\n      });\n\n      this.socket.emit('GET_SERVER_LIST', {\n        socketId: this.socket.id,\n        serverId: this.props.serverId,\n        previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`,\n        room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`\n      });\n    });\n\n    this.socket.on('RECEIVE_CHATROOM_MESSAGES', (data) => {\n      this.setState({ messageMenu: false, editMessage: null, editingMessage: null, newMessage: \"\" });\n      // scroll to latest message after rendering messages in firefox\n      if (navigator.userAgent.search(\"Firefox\") > -1 || navigator.userAgent.search(\"Edge\") > -1) {\n        this.setState({ messages: data.reverse() }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0 || navigator.userAgent.search(\"Edge\") < 0) {\n        this.setState({ messages: data });\n      }\n    });\n\n    this.socket.on('RECEIVE_SERVER_LIST', (data) => {\n      const index = data.findIndex(x => x.username === this.state.username);\n      if (index < 0) {\n        this.props.leaveServer();\n      } else if (index > -1) {\n        this.props.refreshServerUsers();\n        this.setState({ userModalOpen: false, sideUserModalOpen: false, rightClickedUser: {}, sideRightClickedUser: {}, serverUserList: data });\n      }\n    });\n\n\n\n\n\n    this.socket.on('RECEIVE_OFFER', async(data) => {\n      console.log('offer: ' + data.username);\n      if (data.username !== this.state.username) {\n        console.log('receive offer data: ' + data);\n        try {\n          await this.state.myConnection.setRemoteDescription(new RTCSessionDescription(data.desc));\n\n          // 3. Get stream\n          const constraints = { audio: true, video: false };\n          const stream = await navigator.mediaDevices.getUserMedia(constraints);\n          if (!stream) return;\n\n          // 4. Add tracks from stream\n          await stream.getTracks().forEach(track => {\n            this.state.myConnection.addTrack(track, stream);\n          });\n\n          const remoteAudio = document.getElementById('remoteAudio');\n          remoteAudio.srcObject = stream;\n          remoteAudio.autoplay = true;\n\n          // 5. Create answer to sdp offer\n          const answer = await this.state.myConnection.createAnswer();\n          if (!answer) return;\n\n          // 6. Set local description using answer\n          await this.state.myConnection.setLocalDescription(answer);\n\n          // 7. Send a message back to sender\n          const message = {\n            answer: answer,\n            username: data.username,\n            type: 'audio-answer'\n          }\n          this.socket.emit('SEND_ANSWER', message);\n        } catch (error) {\n          console.log('set remote desc error');\n        }\n      }\n    });\n\n    this.socket.on('RECEIVE_ANSWER', async(data) => {\n      console.log('answer: ' + data.username);\n      if (data.username === this.state.username) {\n        console.log('receive answer data: ' + data);\n        // Let my connection know how their connection is configured\n        this.state.myConnection.setRemoteDescription(new RTCSessionDescription(data.answer));\n        try {\n          console.log('try');\n        } catch (e) {\n          console.log('receive answer error: ' + e);\n        }\n      }\n    });\n  }\n\n  recordAudioInput = async(stream) => {\n    if (stream) {\n      try {\n        const configuration = {\n          iceServers: [{\n            urls: 'stun:stun.l.google.com:19302' // Google's public STUN server\n          }]\n        };\n        // const localAudio = new Audio(stream);\n        // localAudio.autoplay = true;\n        // localAudio.muted = true;\n\n        this.setState({\n          myConnection: new RTCPeerConnection(configuration)\n          // remoteConnection: new RTCPeerConnection(configuration)\n        }, async() => {\n\n          await stream.getTracks().forEach(track => {\n            this.state.myConnection.addTrack(track, stream)\n          });\n\n          try {\n            const offer = await this.state.myConnection.createOffer({\n              offerToReceiveAudio: 1,\n              offerToReceiveVideo: 0\n            });\n            if (!offer) {\n              console.log('offer fail');\n            }\n            await this.onCreateOfferSuccess(offer);\n          } catch (e) {\n            console.log('sessionDescription error: ' + e);\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      const localAudio = document.getElementById('localAudio');\n      localAudio.srcObject = null;\n      localAudio.autoplay = false;\n      const remoteAudio = document.getElementById('remoteAudio');\n      remoteAudio.srcObject = null;\n      remoteAudio.autoplay = false;\n    }\n  }\n\n  onCreateOfferSuccess = async(desc) => {\n    try {\n      await this.state.myConnection.setLocalDescription(desc);\n      const data = {\n        desc: desc,\n        username: this.state.username,\n        type: 'audio-offer'\n      }\n      this.socket.emit('SEND_OFFER', data);\n    } catch (e) {\n      console.log('session desc error creating offer: ' + e);\n    }\n  }\n\n  onCreateAnswerSuccess = async(desc, username) => {\n    try {\n      await this.state.remoteConnection.setLocalDescription(desc);\n      await this.state.myConnection.setRemoteDescription(desc);\n      const data = {\n        desc: desc,\n        username: username,\n        type: 'audio-answer'\n      }\n      this.socket.emit('SEND_ANSWER', data);\n    } catch (e) {\n      console.log('create answer error: ' + e);\n    }\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.username) {\n      this.setState({ username: nextProps.username });\n    }\n    if (nextProps.serverUserList) {\n      this.setState({ serverUserList: nextProps.serverUserList });\n    }\n    if (nextProps.activeChatroomId !== this.state.chatroomId && this.state.chatroomId !== undefined) {\n      this.setState({\n        previousRoom: `${ROOT_URL}/chatroom/${nextProps.serverId}/${this.state.chatroomId}`,\n        room: `${ROOT_URL}/chatroom/${nextProps.serverId}/${nextProps.activeChatroomId}`,\n        serverId: nextProps.serverId,\n        currentChatroom: nextProps.activeChatroom,\n        chatroomId: nextProps.activeChatroomId\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.state.socketId,\n        chatroomId: nextProps.activeChatroomId,\n        previousRoom: `${ROOT_URL}/chatroom/${nextProps.serverId}/${this.state.chatroomId}`,\n        room: `${ROOT_URL}/chatroom/${nextProps.serverId}/${nextProps.activeChatroomId}`\n      });\n    }\n\n    if (nextProps.users && nextProps.users.length) {\n      const userList = [];\n      for(let i = 0; i < nextProps.users.length; i++) {\n        userList.push(nextProps.users[i]);\n      }\n      this.setState({ users: userList });\n    }\n\n    if (nextProps.activeChatroomType === \"voice\" && nextProps.audioStream) {\n      this.setState({ localStream: nextProps.localStream });\n      this.recordAudioInput(nextProps.audioStream);\n    }\n\n    if (nextProps.activeChatroomType !== \"voice\") {\n      this.setState({ localStream: null });\n      this.recordAudioInput(null);\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('LEAVE_CHATROOMS', {\n      room: this.state.room\n    });\n  }\n\n  sendMessage = (event) => {\n    if (event) {\n      event.preventDefault();\n      const data = {\n        username: this.props.username,\n        message: this.state.message,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        room: this.state.room\n      };\n      this.socket.emit('CHATROOM_MESSAGE', data);\n      this.setState({ message: \"\" });\n    }\n  }\n\n  sideContextMenu = (event, item) => {\n    event.preventDefault();\n    this.setState({ sideRightClickedUser: item, sideUserModalOpen: true });\n  }\n\n  contextMenu = (event, item) => {\n    event.preventDefault();\n    this.setState({ rightClickedUser: item, userModalOpen: true, messageMenu: false, editingMessage: null });\n  }\n\n  privateMessageUser = () => {\n    this.setState({ messages: [] });\n    this.props.privateMessageUser(this.state.rightClickedUser);\n  }\n\n  sidePrivateMessageUser = () => {\n    this.setState({ messages: [] });\n    this.props.privateMessageUser(this.state.sideRightClickedUser);\n  }\n\n  openMessageMenu = (item) => {\n    this.setState({ messageMenu: true, editMessage: item });\n  }\n\n  deleteChatroomMessage = () => {\n    const data = {\n      username: this.props.username,\n      message: this.state.message,\n      userId: this.props.userId,\n      chatroomId: this.state.chatroomId,\n      messageId: this.state.editMessage.id,\n      room: this.state.room\n    };\n    this.socket.emit('DELETE_CHATROOM_MESSAGE', data);\n  }\n\n  editChatroomMessage = () => {\n    this.setState({ editingMessage: this.state.editMessage, newMessage: this.state.editMessage.message, hover: \"\" }, () => {\n      this.setState({ editMessage: null, messageMenu: false });\n    });\n  }\n\n  detectEscape = (event) => {\n    if (event.keyCode === 27 && !this.state.messageMenu) {\n      this.setState({ editingMessage: this.state.editMessage, newMessage: \"\" });\n    }\n  }\n\n  sendEditedMessage = (event) => {\n    event.preventDefault();\n    const data = {\n      username: this.props.username,\n      message: this.state.newMessage,\n      userId: this.props.userId,\n      chatroomId: this.state.chatroomId,\n      messageId: this.state.editingMessage.id,\n      room: this.state.room\n    };\n    this.socket.emit('EDIT_CHATROOM_MESSAGE', data);\n  }\n\n  kickUser = (user) => {\n    const data = {\n      serverId: this.state.serverId,\n      chatroomId: this.state.chatroomId,\n      type: 'user',\n      userId: user.userId,\n      room: this.state.room\n    };\n    this.socket.emit('KICK_SERVER_USER', data);\n  }\n\n  banUser = (user) => {\n    const data = {\n      serverId: this.state.serverId,\n      chatroomId: this.state.chatroomId,\n      type: 'user',\n      userId: user.userId,\n      room: this.state.room\n    };\n    this.socket.emit('BAN_SERVER_USER', data);\n  }\n\n  render() {\n    return (\n      <div className=\"chatroom\">\n        <audio id=\"localAudio\" style={{ \"display\": \"none\" }} />\n        <audio id=\"remoteAudio\" style={{ \"display\": \"none\" }} />\n        <div className=\"chatarea\">\n          <div className=\"chatarea-topbar\">\n            <img src={this.props.activeChatroomType === \"text\" ? numbersign : voice} alt=\"channel\" height={16} width={16} /><span>{this.props.activeChatroom}</span>\n          </div>\n          <div id=\"chatareamessages\" className=\"chatarea-messages\">\n            {this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n              const moderate = (this.state.serverUserList.length > 0\n              && this.state.serverUserList.some(serverItem => serverItem['username'] !== this.state.username\n              && (serverItem['username'] === item.username && serverItem['type'] !== 'owner' && serverItem['type'] !== 'admin')));\n              return (\n                <div id={\"message\" + index} key={index} onMouseEnter={() => { this.setState({ hover: (this.state.editingMessage || this.state.messageMenu || (this.props.userId !== item.userId)) ? \"\" : (\"message\" + index) }) }} onMouseLeave={() => { this.setState({ hover: \"\" }); }}>\n                  <div className=\"chatarea-messages-container\">\n                    <span className=\"chatarea-messages-user\" onClick={this.handleClick} onContextMenu={(event) => { this.contextMenu(event, item); }}>{item.username}</span>\n                    <Moment format=\"MM/DD/YYYY\" date={item.updatedAt} className=\"chatarea-messages-time\" />\n                    {this.state.hover === (\"message\" + index) ? <span className=\"chatarea-messages-menu\" onClick={() => { this.openMessageMenu(item); }}><img src={editwhite} height={15} width={15} alt=\"edit message\" /></span> : null}\n                    {this.state.messageMenu && this.state.editMessage.id === item.id ?\n                      <div className=\"chatarea-messages-editmenu\" ref={this.ref}>\n                        <span onClick={() => { this.setState({ editMessage: null, messageMenu: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.editChatroomMessage(); }}>Edit</p>\n                        <p onClick={() => { this.deleteChatroomMessage(); }}>Delete</p>\n                      </div>\n                    : null}\n                    {this.state.userModalOpen && this.state.rightClickedUser.id === item.id ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-usermodalmod\" : \"chatarea-messages-usermodal\"}>\n                        <span onClick={() => { this.setState({ userModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.privateMessageUser(); }} className={moderate === true ? \"chatarea-messages-usermodalmod-privatemessage\" : \"chatarea-messages-usermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(item); }} className=\"chatarea-messages-usermodalmod-kick\">Kick {item.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(item); }} className=\"chatarea-messages-usermodalmod-ban\">Ban {item.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                  {this.state.editingMessage !== null && this.state.editingMessage.id === item.id ? <span><input className=\"chatarea-messages-editmessage\" onChange={(event) => { this.setState({ newMessage: event.target.value }) }} value={this.state.newMessage} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendEditedMessage(event) : this.sendMessage(null) }} /><p className=\"chatarea-messages-editmessage-note\">escape to cancel • enter to save</p></span> : <p className=\"chatarea-messages-message\">{item.message}</p>}\n                </div>\n              )\n            }) : null}\n          </div>\n          <div className=\"chatarea-container\">\n            <input placeholder=\"Send a message!\" type=\"text\" onChange={(event) => { this.setState({ message: event.target.value }); }} value={this.state.message} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null) }}></input>\n          </div>\n        </div>\n        <div className=\"sidebarright\">\n          <div className=\"sidebarright-container\">\n            <input placeholder=\"Filter users in server\"></input>\n          </div>\n          <div className=\"sidebarright-border\" />\n          <div className=\"sidebarright-authority\">\n            <span>Room Owners</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index)  => {\n            return (\n              <div key={index} className={user.type === 'owner' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'owner' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'owner' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'owner' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'owner' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'owner' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className=\"chatarea-messages-sideusermodal\">\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className=\"chatarea-messages-sideusermodal-privatemessage\">Send Message</p>\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'owner') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Administrators</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index)  => {\n            return (\n              <div key={index} className={user.type === 'admin' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'admin' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'admin' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'admin' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'admin' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'admin' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className=\"chatarea-messages-sideusermodal\">\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className=\"chatarea-messages-sideusermodal-privatemessage\">Send Message</p>\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'admin') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Moderators</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index)  => {\n            const moderate = (user.username !== this.state.username);\n            return (\n              <div key={index} className={user.type === 'moderator' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'moderator' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'moderator' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'moderator' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'moderator' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'moderator' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\"}>\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className={moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(user); }} className=\"chatarea-messages-sideusermodalmod-kick\">Kick {user.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(user); }} className=\"chatarea-messages-sideusermodalmod-ban\">Ban {user.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'moderator') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Voice</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n            const moderate = (user.username !== this.state.username);\n            return (\n              <div key={index} className={user.type === 'voice' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'voice' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'voice' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'voice' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'voice' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'voice' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\"}>\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className={moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(user); }} className=\"chatarea-messages-sideusermodalmod-kick\">Kick {user.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(user); }} className=\"chatarea-messages-sideusermodalmod-ban\">Ban {user.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'voice') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Users</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n            const moderate = (user.username !== this.state.username);\n            return (\n              <div key={index} className={user.type === 'user' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'user' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'user' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'user' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'user' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'user' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\"}>\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className={moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(user); }} className=\"chatarea-messages-sideusermodalmod-kick\">Kick {user.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(user); }} className=\"chatarea-messages-sideusermodalmod-ban\">Ban {user.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            )\n          }) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Chatroom);"]},"metadata":{},"sourceType":"module"}