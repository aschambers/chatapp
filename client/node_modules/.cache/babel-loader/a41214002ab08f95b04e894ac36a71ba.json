{"ast":null,"code":"import _objectSpread from \"/Users/metabou/Desktop/chatapp/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport { ROOT_URL } from '../../../config/networkSettings';\nimport { CREATING_INVITE, CREATE_INVITE_FAIL, CREATE_INVITE_SUCCESS, CREATING_EMAIL_INVITE, CREATE_INVITE_EMAIL_FAIL, CREATE_INVITE_EMAIL_SUCCESS, VERIFYING_SERVER_INVITE, VERIFY_SERVER_INVITE_FAIL, VERIFY_SERVER_INVITE_SUCCESS } from '../../types'; // Initial States\n\nexport const initialState = {\n  isLoading: false,\n  error: false,\n  success: false,\n  user: null\n}; // Reducers\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case CREATING_INVITE:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case CREATE_INVITE_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true,\n        inviteLink: action.payload\n      });\n\n    case CREATE_INVITE_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case CREATING_EMAIL_INVITE:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        inviteEmailError: false,\n        inviteEmailSuccess: false\n      });\n\n    case CREATE_INVITE_EMAIL_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        inviteEmailError: false,\n        inviteEmailSuccess: true\n      });\n\n    case CREATE_INVITE_EMAIL_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        inviteEmailError: true,\n        inviteEmailSuccess: false\n      });\n\n    case VERIFYING_SERVER_INVITE:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        verifyError: false,\n        verifySuccess: false\n      });\n\n    case VERIFY_SERVER_INVITE_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        verifyError: false,\n        verifySuccess: true,\n        userList: action.payload\n      });\n\n    case VERIFY_SERVER_INVITE_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        verifyError: false,\n        verifySuccess: true\n      });\n\n    default:\n      return state;\n  }\n}); // Actions\n\nexport const inviteCreate = params => async dispatch => {\n  dispatch({\n    type: CREATING_INVITE\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/inviteCreate\"), params);\n\n    if (response.data) {\n      dispatch({\n        type: CREATE_INVITE_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: CREATE_INVITE_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: CREATE_INVITE_FAIL\n    });\n  }\n};\nexport const inviteEmailCreate = params => async dispatch => {\n  dispatch({\n    type: CREATING_EMAIL_INVITE\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/inviteEmailCreate\"), params);\n\n    if (response.data) {\n      dispatch({\n        type: CREATE_INVITE_EMAIL_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: CREATE_INVITE_EMAIL_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: CREATE_INVITE_EMAIL_FAIL\n    });\n  }\n};\nexport const serverFind = params => async dispatch => {\n  dispatch({\n    type: VERIFYING_SERVER_INVITE\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/serverFind\"), params);\n\n    if (response.data) {\n      dispatch({\n        type: VERIFY_SERVER_INVITE_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: VERIFY_SERVER_INVITE_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: VERIFY_SERVER_INVITE_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/redux/modules/invites/invites.js"],"names":["axios","ROOT_URL","CREATING_INVITE","CREATE_INVITE_FAIL","CREATE_INVITE_SUCCESS","CREATING_EMAIL_INVITE","CREATE_INVITE_EMAIL_FAIL","CREATE_INVITE_EMAIL_SUCCESS","VERIFYING_SERVER_INVITE","VERIFY_SERVER_INVITE_FAIL","VERIFY_SERVER_INVITE_SUCCESS","initialState","isLoading","error","success","user","state","action","type","inviteLink","payload","inviteEmailError","inviteEmailSuccess","verifyError","verifySuccess","userList","inviteCreate","params","dispatch","response","post","data","err","inviteEmailCreate","serverFind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iCAAzB;AAEA,SACEC,eADF,EAEEC,kBAFF,EAGEC,qBAHF,EAIEC,qBAJF,EAKEC,wBALF,EAMEC,2BANF,EAOEC,uBAPF,EAQEC,yBARF,EASEC,4BATF,QAUO,aAVP,C,CAYA;;AACA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,KADe;AAE1BC,EAAAA,KAAK,EAAE,KAFmB;AAG1BC,EAAAA,OAAO,EAAE,KAHiB;AAI1BC,EAAAA,IAAI,EAAE;AAJoB,CAArB,C,CAOP;;AACA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,eAAL;AACE,+BACKc,KADL;AACYJ,QAAAA,SAAS,EAAE,IADvB;AAC6BC,QAAAA,KAAK,EAAE,KADpC;AAC2CC,QAAAA,OAAO,EAAE;AADpD;;AAGF,SAAKV,qBAAL;AACE,+BACKY,KADL;AACYJ,QAAAA,SAAS,EAAE,KADvB;AAC8BC,QAAAA,KAAK,EAAE,KADrC;AAC4CC,QAAAA,OAAO,EAAE,IADrD;AAC2DK,QAAAA,UAAU,EAAEF,MAAM,CAACG;AAD9E;;AAGF,SAAKjB,kBAAL;AACE,+BACKa,KADL;AACYJ,QAAAA,SAAS,EAAE,KADvB;AAC8BC,QAAAA,KAAK,EAAE,IADrC;AAC2CC,QAAAA,OAAO,EAAE;AADpD;;AAGF,SAAKT,qBAAL;AACE,+BACKW,KADL;AACYJ,QAAAA,SAAS,EAAE,IADvB;AAC6BS,QAAAA,gBAAgB,EAAE,KAD/C;AACsDC,QAAAA,kBAAkB,EAAE;AAD1E;;AAGF,SAAKf,2BAAL;AACE,+BACKS,KADL;AACYJ,QAAAA,SAAS,EAAE,KADvB;AAC8BS,QAAAA,gBAAgB,EAAE,KADhD;AACuDC,QAAAA,kBAAkB,EAAE;AAD3E;;AAGF,SAAKhB,wBAAL;AACE,+BACKU,KADL;AACYJ,QAAAA,SAAS,EAAE,KADvB;AAC8BS,QAAAA,gBAAgB,EAAE,IADhD;AACsDC,QAAAA,kBAAkB,EAAE;AAD1E;;AAGF,SAAKd,uBAAL;AACE,+BACKQ,KADL;AACYJ,QAAAA,SAAS,EAAE,IADvB;AAC6BW,QAAAA,WAAW,EAAE,KAD1C;AACiDC,QAAAA,aAAa,EAAE;AADhE;;AAGF,SAAKd,4BAAL;AACE,+BACKM,KADL;AACYJ,QAAAA,SAAS,EAAE,KADvB;AAC8BW,QAAAA,WAAW,EAAE,KAD3C;AACkDC,QAAAA,aAAa,EAAE,IADjE;AACuEC,QAAAA,QAAQ,EAAER,MAAM,CAACG;AADxF;;AAGF,SAAKX,yBAAL;AACE,+BACKO,KADL;AACYJ,QAAAA,SAAS,EAAE,KADvB;AAC8BW,QAAAA,WAAW,EAAE,KAD3C;AACkDC,QAAAA,aAAa,EAAE;AADjE;;AAGF;AACE,aAAOR,KAAP;AAtCJ;AAwCD,CAzCD,E,CA2CA;;AACA,OAAO,MAAMU,YAAY,GAAGC,MAAM,IAAI,MAAMC,QAAN,IAAkB;AACtDA,EAAAA,QAAQ,CAAC;AAAEV,IAAAA,IAAI,EAAEhB;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAM2B,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,IAAN,WAAc7B,QAAd,2BAA8C0B,MAA9C,CAAvB;;AACA,QAAGE,QAAQ,CAACE,IAAZ,EAAkB;AAChBH,MAAAA,QAAQ,CAAC;AAAEV,QAAAA,IAAI,EAAEd,qBAAR;AAA+BgB,QAAAA,OAAO,EAAES,QAAQ,CAACE;AAAjD,OAAD,CAAR;AACD,KAFD,MAEO;AACLH,MAAAA,QAAQ,CAAC;AAAEV,QAAAA,IAAI,EAAEf;AAAR,OAAD,CAAR;AACD;AACF,GAPD,CAOE,OAAM6B,GAAN,EAAW;AACXJ,IAAAA,QAAQ,CAAC;AAAEV,MAAAA,IAAI,EAAEf;AAAR,KAAD,CAAR;AACD;AACF,CAZM;AAcP,OAAO,MAAM8B,iBAAiB,GAAGN,MAAM,IAAI,MAAMC,QAAN,IAAkB;AAC3DA,EAAAA,QAAQ,CAAC;AAAEV,IAAAA,IAAI,EAAEb;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAMwB,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,IAAN,WAAc7B,QAAd,gCAAmD0B,MAAnD,CAAvB;;AACA,QAAGE,QAAQ,CAACE,IAAZ,EAAkB;AAChBH,MAAAA,QAAQ,CAAC;AAAEV,QAAAA,IAAI,EAAEX;AAAR,OAAD,CAAR;AACD,KAFD,MAEO;AACLqB,MAAAA,QAAQ,CAAC;AAAEV,QAAAA,IAAI,EAAEZ;AAAR,OAAD,CAAR;AACD;AACF,GAPD,CAOE,OAAM0B,GAAN,EAAW;AACXJ,IAAAA,QAAQ,CAAC;AAAEV,MAAAA,IAAI,EAAEZ;AAAR,KAAD,CAAR;AACD;AACF,CAZM;AAcP,OAAO,MAAM4B,UAAU,GAAGP,MAAM,IAAI,MAAMC,QAAN,IAAkB;AACpDA,EAAAA,QAAQ,CAAC;AAAEV,IAAAA,IAAI,EAAEV;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAMqB,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,IAAN,WAAc7B,QAAd,yBAA4C0B,MAA5C,CAAvB;;AACA,QAAGE,QAAQ,CAACE,IAAZ,EAAkB;AAChBH,MAAAA,QAAQ,CAAC;AAAEV,QAAAA,IAAI,EAAER,4BAAR;AAAsCU,QAAAA,OAAO,EAAES,QAAQ,CAACE;AAAxD,OAAD,CAAR;AACD,KAFD,MAEO;AACLH,MAAAA,QAAQ,CAAC;AAAEV,QAAAA,IAAI,EAAET;AAAR,OAAD,CAAR;AACD;AACF,GAPD,CAOE,OAAMuB,GAAN,EAAW;AACXJ,IAAAA,QAAQ,CAAC;AAAEV,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACD;AACF,CAZM","sourcesContent":["import axios from 'axios';\nimport { ROOT_URL } from '../../../config/networkSettings';\n\nimport {\n  CREATING_INVITE,\n  CREATE_INVITE_FAIL,\n  CREATE_INVITE_SUCCESS,\n  CREATING_EMAIL_INVITE,\n  CREATE_INVITE_EMAIL_FAIL,\n  CREATE_INVITE_EMAIL_SUCCESS,\n  VERIFYING_SERVER_INVITE,\n  VERIFY_SERVER_INVITE_FAIL,\n  VERIFY_SERVER_INVITE_SUCCESS\n} from '../../types';\n\n// Initial States\nexport const initialState = {\n  isLoading: false,\n  error: false,\n  success: false,\n  user: null\n};\n\n// Reducers\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CREATING_INVITE:\n      return {\n        ...state, isLoading: true, error: false, success: false\n      };\n    case CREATE_INVITE_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true, inviteLink: action.payload\n      };\n    case CREATE_INVITE_FAIL:\n      return {\n        ...state, isLoading: false, error: true, success: false\n      };\n    case CREATING_EMAIL_INVITE:\n      return {\n        ...state, isLoading: true, inviteEmailError: false, inviteEmailSuccess: false\n      };\n    case CREATE_INVITE_EMAIL_SUCCESS:\n      return {\n        ...state, isLoading: false, inviteEmailError: false, inviteEmailSuccess: true\n      };\n    case CREATE_INVITE_EMAIL_FAIL:\n      return {\n        ...state, isLoading: false, inviteEmailError: true, inviteEmailSuccess: false\n      };\n    case VERIFYING_SERVER_INVITE:\n      return {\n        ...state, isLoading: true, verifyError: false, verifySuccess: false\n      };\n    case VERIFY_SERVER_INVITE_SUCCESS:\n      return {\n        ...state, isLoading: false, verifyError: false, verifySuccess: true, userList: action.payload\n      };\n    case VERIFY_SERVER_INVITE_FAIL:\n      return {\n        ...state, isLoading: false, verifyError: false, verifySuccess: true\n      };\n    default:\n      return state;\n  }\n};\n\n// Actions\nexport const inviteCreate = params => async dispatch => {\n  dispatch({ type: CREATING_INVITE });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/inviteCreate`, params);\n    if(response.data) {\n      dispatch({ type: CREATE_INVITE_SUCCESS, payload: response.data });\n    } else {\n      dispatch({ type: CREATE_INVITE_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: CREATE_INVITE_FAIL });\n  }\n};\n\nexport const inviteEmailCreate = params => async dispatch => {\n  dispatch({ type: CREATING_EMAIL_INVITE });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/inviteEmailCreate`, params);\n    if(response.data) {\n      dispatch({ type: CREATE_INVITE_EMAIL_SUCCESS });\n    } else {\n      dispatch({ type: CREATE_INVITE_EMAIL_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: CREATE_INVITE_EMAIL_FAIL });\n  }\n};\n\nexport const serverFind = params => async dispatch => {\n  dispatch({ type: VERIFYING_SERVER_INVITE });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/serverFind`, params);\n    if(response.data) {\n      dispatch({ type: VERIFY_SERVER_INVITE_SUCCESS, payload: response.data });\n    } else {\n      dispatch({ type: VERIFY_SERVER_INVITE_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: VERIFY_SERVER_INVITE_FAIL });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}