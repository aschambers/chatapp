{"ast":null,"code":"var reHttpUrl = /^http(.*)$/;\n/**\n  # wsurl\n\n  Given a url (including protocol relative urls - i.e. `//`), generate an appropriate\n  url for a WebSocket endpoint (`ws` or `wss`).\n\n  ## Example Usage\n\n  <<< examples/relative.js\n\n**/\n\nmodule.exports = function (url, opts) {\n  var current = (opts || {}).current || typeof location != 'undefined' && location.href;\n  var currentProtocol = current && current.slice(0, current.indexOf(':'));\n  var insecure = (opts || {}).insecure;\n  var isRelative = url.slice(0, 2) == '//';\n  var forceWS = !currentProtocol || currentProtocol === 'file:';\n\n  if (isRelative) {\n    return forceWS ? (insecure ? 'ws:' : 'wss:') + url : currentProtocol.replace(reHttpUrl, 'ws$1') + ':' + url;\n  }\n\n  return url.replace(reHttpUrl, 'ws$1');\n};","map":null,"metadata":{},"sourceType":"script"}