{"ast":null,"code":"import _slicedToArray from \"/Users/metabou/Desktop/chatapp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\n\nconst useDrop = ({\n  ref,\n  onDrop\n}) => {\n  const _useState = useState(\"droppable\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        dropState = _useState2[0],\n        updateDropState = _useState2[1];\n\n  const dropOverCb = ev => {\n    ev.preventDefault();\n    updateDropState(\"dragging over\");\n  };\n\n  const dropCb = ev => {\n    ev.preventDefault();\n    onDrop(ev.dataTransfer.getData(\"source\"));\n    updateDropState(\"dropped\");\n  };\n\n  useEffect(() => {\n    const elem = ref.current;\n\n    if (elem) {\n      elem.addEventListener(\"dragover\", dropOverCb);\n      elem.addEventListener(\"drop\", dropCb);\n      return () => {\n        elem.removeEventListener(\"dragover\", dropOverCb);\n        elem.removeEventListener(\"drop\", dropCb);\n      };\n    }\n  });\n  return {\n    dropState\n  };\n};\n\nexport default useDrop;","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/hooks/useDrop.js"],"names":["useState","useEffect","useDrop","ref","onDrop","dropState","updateDropState","dropOverCb","ev","preventDefault","dropCb","dataTransfer","getData","elem","current","addEventListener","removeEventListener"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,KAAqB;AAAA,oBACEJ,QAAQ,CAAC,WAAD,CADV;AAAA;AAAA,QAC5BK,SAD4B;AAAA,QACjBC,eADiB;;AAEnC,QAAMC,UAAU,GAAGC,EAAE,IAAI;AACvBA,IAAAA,EAAE,CAACC,cAAH;AACAH,IAAAA,eAAe,CAAC,eAAD,CAAf;AACD,GAHD;;AAKA,QAAMI,MAAM,GAAGF,EAAE,IAAI;AACnBA,IAAAA,EAAE,CAACC,cAAH;AACAL,IAAAA,MAAM,CAACI,EAAE,CAACG,YAAH,CAAgBC,OAAhB,CAAwB,QAAxB,CAAD,CAAN;AACAN,IAAAA,eAAe,CAAC,SAAD,CAAf;AACD,GAJD;;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,IAAI,GAAGV,GAAG,CAACW,OAAjB;;AACA,QAAID,IAAJ,EAAU;AACRA,MAAAA,IAAI,CAACE,gBAAL,CAAsB,UAAtB,EAAkCR,UAAlC;AACAM,MAAAA,IAAI,CAACE,gBAAL,CAAsB,MAAtB,EAA8BL,MAA9B;AACA,aAAO,MAAM;AACXG,QAAAA,IAAI,CAACG,mBAAL,CAAyB,UAAzB,EAAqCT,UAArC;AACAM,QAAAA,IAAI,CAACG,mBAAL,CAAyB,MAAzB,EAAiCN,MAAjC;AACD,OAHD;AAID;AACF,GAVQ,CAAT;AAWA,SAAO;AACLL,IAAAA;AADK,GAAP;AAGD,CA1BD;;AA4BA,eAAeH,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useDrop = ({ ref, onDrop }) => {\n  const [dropState, updateDropState] = useState(\"droppable\");\n  const dropOverCb = ev => {\n    ev.preventDefault();\n    updateDropState(\"dragging over\");\n  };\n\n  const dropCb = ev => {\n    ev.preventDefault();\n    onDrop(ev.dataTransfer.getData(\"source\"));\n    updateDropState(\"dropped\");\n  };\n  useEffect(() => {\n    const elem = ref.current;\n    if (elem) {\n      elem.addEventListener(\"dragover\", dropOverCb);\n      elem.addEventListener(\"drop\", dropCb);\n      return () => {\n        elem.removeEventListener(\"dragover\", dropOverCb);\n        elem.removeEventListener(\"drop\", dropCb);\n      };\n    }\n  });\n  return {\n    dropState\n  };\n};\n\nexport default useDrop;\n"]},"metadata":{},"sourceType":"module"}