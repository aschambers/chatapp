{"ast":null,"code":"var _jsxFileName = \"/Users/metabou/Desktop/chatapp/client/src/components/Chatroom/Chatroom.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from \"socket.io-client\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Chatroom.css';\nimport chatot from '../../assets/images/chatot.png';\nimport numbersign from '../../assets/images/numbersign.png';\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendMessage = event => {\n      if (event) {\n        event.preventDefault();\n        this.socket.emit('CHATROOM_MESSAGE', {\n          username: this.props.username,\n          message: this.state.message,\n          userId: this.props.userId,\n          chatroomId: this.props.activeChatroomId\n        });\n        this.setState({\n          message: \"\"\n        });\n      }\n    };\n\n    this.state = {\n      id: \"\",\n      username: \"\",\n      active: false,\n      type: \"\",\n      imageUrl: \"\",\n      message: \"\",\n      messages: [],\n      users: [],\n      clickedUsername: \"\",\n      clickedType: \"\",\n      privateMessages: [],\n      personalMessages: [],\n      userDetails: false,\n      socketId: \"\",\n      currentSocket: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    this.props.currentUser();\n    this.props.getUsers();\n    this.socket = io(ROOT_URL);\n    this.socket.on('connect', () => {\n      this.setState({\n        socketId: this.socket.id\n      });\n    });\n    this.socket.emit('GET_CHATROOM_MESSAGES', {\n      chatroomId: this.props.activeChatroomId\n    });\n    this.socket.on('RECEIVE_CHATROOM_MESSAGE', data => {\n      this.setState({\n        messages: data\n      });\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    const element = \"message\" + (this.state.messages.length - 1);\n    document.getElementById(\"message8\").scrollIntoView();\n\n    if (nextProps.activeChatroomId) {\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        chatroomId: nextProps.activeChatroomId\n      });\n    }\n\n    if (nextProps.user) {\n      const _nextProps$user = nextProps.user,\n            id = _nextProps$user.id,\n            username = _nextProps$user.username,\n            active = _nextProps$user.active,\n            type = _nextProps$user.type;\n      this.setState({\n        id: id,\n        username: username,\n        active: active,\n        type: type\n      });\n    }\n\n    if (nextProps.users && nextProps.users.length) {\n      const userList = [];\n\n      for (let i = 0; i < nextProps.users.length; i++) {\n        userList.push(nextProps.users[i]);\n      }\n\n      this.setState({\n        users: userList\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chatroom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chatarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chatarea-topbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: numbersign,\n      alt: \"channel\",\n      height: 16,\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.props.activeChatroom)), React.createElement(\"div\", {\n      id: \"chatareamessages\",\n      className: \"chatarea-messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n      return React.createElement(\"div\", {\n        id: \"message\" + index,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"chatarea-messages-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, item.username), \" \", React.createElement(Moment, {\n        format: \"MM/DD/YYYY\",\n        className: \"chatarea-messages-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, item.createdAt))), React.createElement(\"p\", {\n        className: \"chatarea-messages-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, item.message));\n    }) : null), React.createElement(\"div\", {\n      className: \"chatarea-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Send a message!\",\n      type: \"text\",\n      onChange: event => {\n        this.setState({\n          message: event.target.value\n        });\n      },\n      value: this.state.message,\n      onKeyDown: event => {\n        event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"sidebarright\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebarright-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Filter users in server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sidebarright-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Room Owners\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'owner' ? \"sidebarright-usercontainer\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, user.type === 'owner' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })) : null, user.type === 'owner' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }) : null, user.type === 'owner' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }) : null, user.type === 'owner' ? React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, user.username) : null);\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Administrators\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'admin' ? \"sidebarright-usercontainer\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, user.type === 'admin' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })) : null, user.type === 'admin' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }) : null, user.type === 'admin' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }) : null, user.type === 'admin' ? React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, user.username) : null);\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Moderators\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), this.state.users.length > 0 ? this.state.users.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'moderator' ? \"sidebarright-usercontainer\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, user.type === 'moderator' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })) : null, user.type === 'moderator' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }) : null, user.type === 'moderator' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }) : null, user.type === 'moderator' ? React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, user.username) : null);\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Voice\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'voice' ? \"sidebarright-usercontainer\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, user.type === 'voice' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })) : null, user.type === 'voice' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }) : null, user.type === 'voice' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }) : null, user.type === 'voice' ? React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, user.username) : null);\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Users\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"sidebarright-usercontainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, user.type === 'user' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })) : null, user.type === 'user' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }) : null, user.type === 'user' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }) : null, user.type === 'user' ? React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, user.username) : null);\n    }) : null));\n  }\n\n}\n\nfunction mapStateToProps({\n  usersReducer\n}) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Chatroom);","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/components/Chatroom/Chatroom.js"],"names":["React","Component","connect","actions","ROOT_URL","io","Moment","chatot","numbersign","Chatroom","constructor","props","sendMessage","event","preventDefault","socket","emit","username","message","state","userId","chatroomId","activeChatroomId","setState","id","active","type","imageUrl","messages","users","clickedUsername","clickedType","privateMessages","personalMessages","userDetails","socketId","currentSocket","componentDidMount","currentUser","getUsers","on","data","componentWillReceiveProps","nextProps","element","length","document","getElementById","scrollIntoView","user","userList","i","push","render","activeChatroom","map","item","index","createdAt","target","value","keyCode","shiftKey","serverUserList","mapStateToProps","usersReducer","error","isLoading","success"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from \"socket.io-client\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Chatroom.css';\nimport chatot from '../../assets/images/chatot.png';\nimport numbersign from '../../assets/images/numbersign.png';\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      username: \"\",\n      active: false,\n      type: \"\",\n      imageUrl: \"\",\n      message: \"\",\n      messages: [],\n      users: [],\n      clickedUsername: \"\",\n      clickedType: \"\",\n      privateMessages: [],\n      personalMessages: [],\n      userDetails: false,\n      socketId: \"\",\n      currentSocket: \"\"\n    }\n  }\n\n  async componentDidMount() {\n    this.props.currentUser();\n    this.props.getUsers();\n\n    this.socket = io(ROOT_URL);\n\n    this.socket.on('connect', () => {\n      this.setState({ socketId: this.socket.id });\n    });\n\n    this.socket.emit('GET_CHATROOM_MESSAGES', {\n      chatroomId: this.props.activeChatroomId\n    });\n\n    this.socket.on('RECEIVE_CHATROOM_MESSAGE', (data) => {\n      this.setState({ messages: data});\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    const element = \"message\" + (this.state.messages.length - 1);\n    document.getElementById(\"message8\").scrollIntoView();\n    if (nextProps.activeChatroomId) {\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        chatroomId: nextProps.activeChatroomId\n      });\n    }\n    if (nextProps.user) {\n      const { id, username, active, type } = nextProps.user;\n      this.setState({\n        id: id,\n        username: username,\n        active: active,\n        type: type\n      });\n    }\n\n    if (nextProps.users && nextProps.users.length) {\n      const userList = [];\n      for(let i = 0; i < nextProps.users.length; i++) {\n        userList.push(nextProps.users[i]);\n      }\n      this.setState({ users: userList });\n    }\n  }\n\n  sendMessage = (event) => {\n    if (event) {\n      event.preventDefault();\n      this.socket.emit('CHATROOM_MESSAGE', {\n        username: this.props.username,\n        message: this.state.message,\n        userId: this.props.userId,\n        chatroomId: this.props.activeChatroomId\n      });\n      this.setState({ message: \"\" });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"chatroom\">\n        <div className=\"chatarea\">\n          <div className=\"chatarea-topbar\">\n            <img src={numbersign} alt=\"channel\" height={16} width={16} /><span>{this.props.activeChatroom}</span>\n          </div>\n          <div id=\"chatareamessages\" className=\"chatarea-messages\">\n            {this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n              return (\n                <div id={\"message\" + index} key={index}>\n                  <p><span className=\"chatarea-messages-user\">{item.username}</span> <Moment format=\"MM/DD/YYYY\" className=\"chatarea-messages-time\"><span>{item.createdAt}</span></Moment></p>\n                  <p className=\"chatarea-messages-message\">{item.message}</p>\n                </div>\n              )\n            }) : null}\n          </div>\n          <div className=\"chatarea-container\">\n            <input placeholder=\"Send a message!\" type=\"text\" onChange={(event) => { this.setState({ message: event.target.value }); }} value={this.state.message} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null) }}></input>\n          </div>\n        </div>\n        <div className=\"sidebarright\">\n          <div className=\"sidebarright-container\">\n            <input placeholder=\"Filter users in server\"></input>\n          </div>\n          <div className=\"sidebarright-border\" />\n          <div className=\"sidebarright-authority\">\n            <span>Room Owners</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index)  => {\n            return (\n              <div key={index} className={user.type === 'owner' ? \"sidebarright-usercontainer\" : \"\"}>\n                {user.type === 'owner' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'owner' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'owner' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'owner' ? <span className=\"sidebarright-user\">{user.username}</span> : null}\n              </div>\n            );\n          }) : null}\n          <div className=\"sidebarright-authority\">\n            <span>Administrators</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index)  => {\n            return (\n              <div key={index} className={user.type === 'admin' ? \"sidebarright-usercontainer\" : \"\"}>\n                {user.type === 'admin' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'admin' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'admin' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'admin' ? <span className=\"sidebarright-user\">{user.username}</span> : null}\n              </div>\n            );\n          }) : null}\n          <div className=\"sidebarright-authority\">\n            <span>Moderators</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.users.length > 0 ? this.state.users.map((user, index)  => {\n            return (\n              <div key={index} className={user.type === 'moderator' ? \"sidebarright-usercontainer\" : \"\"}>\n                {user.type === 'moderator' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'moderator' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'moderator' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'moderator' ? <span className=\"sidebarright-user\">{user.username}</span> : null}\n              </div>\n            );\n          }) : null}\n          <div className=\"sidebarright-authority\">\n            <span>Voice</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index) => {\n            return (\n              <div key={index} className={user.type === 'voice' ? \"sidebarright-usercontainer\" : \"\"}>\n                {user.type === 'voice' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'voice' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'voice' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'voice' ? <span className=\"sidebarright-user\">{user.username}</span> : null}\n              </div>\n            );\n          }) : null}\n          <div className=\"sidebarright-authority\">\n            <span>Users</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index) => {\n            return (\n              <div key={index} className=\"sidebarright-usercontainer\">\n                {user.type === 'user' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'user' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'user' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'user' ? <span className=\"sidebarright-user\">{user.username}</span> : null}\n              </div>\n            )\n          }) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Chatroom);"]},"metadata":{},"sourceType":"module"}