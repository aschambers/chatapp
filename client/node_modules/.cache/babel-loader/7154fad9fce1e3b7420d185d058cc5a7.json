{"ast":null,"code":"var _jsxFileName = \"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/components/ChatroomFriend/ChatroomFriend.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from \"socket.io-client\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './ChatroomFriend.css';\nimport editwhite from '../../assets/images/editwhite.png';\n\nclass ChatroomFriend extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendMessage = event => {\n      if (event) {\n        event.preventDefault();\n        const data = {\n          username: this.props.username,\n          message: this.state.message,\n          userId: this.props.userId,\n          friendId: this.props.friendId !== null ? this.props.friendId : this.props.userId,\n          room: \"\".concat(ROOT_URL, \"/friends/\").concat(this.props.groupId),\n          previousRoom: \"\".concat(ROOT_URL, \"/friends/\").concat(this.state.groupId)\n        };\n\n        if (data.userId === data.friendId) {\n          this.socket.emit('SEND_PERSONAL_MESSAGE', data);\n        } else if (data.userId !== data.friendId) {\n          this.socket.emit('SEND_PRIVATE_MESSAGE', data);\n        }\n\n        this.setState({\n          message: \"\"\n        });\n      }\n    };\n\n    this.openMessageMenu = item => {\n      this.setState({\n        messageMenu: true,\n        editMessage: item\n      });\n    };\n\n    this.deleteUserMessage = () => {\n      const data = {\n        username: this.props.username,\n        message: this.state.message,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        messageId: this.state.editMessage.id,\n        room: this.state.room\n      };\n      this.socket.emit('DELETE_USER_MESSAGE', data);\n    };\n\n    this.editUserMessage = () => {\n      this.setState({\n        editingMessage: this.state.editMessage,\n        newMessage: this.state.editMessage.message\n      }, () => {\n        this.setState({\n          editMessage: null,\n          messageMenu: false\n        });\n      });\n    };\n\n    this.detectEscape = event => {\n      if (event.keyCode === 27) {\n        this.setState({\n          editingMessage: this.state.editMessage,\n          newMessage: \"\"\n        });\n      }\n    };\n\n    this.sendEditedMessage = event => {\n      event.preventDefault();\n      const data = {\n        username: this.props.username,\n        message: this.state.newMessage,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        messageId: this.state.editingMessage.id,\n        room: this.state.room\n      };\n      this.socket.emit('EDIT_USER_MESSAGE', data);\n    };\n\n    this.state = {\n      message: \"\",\n      messages: [],\n      socketId: \"\",\n      currentSocket: \"\",\n      userId: null,\n      friendId: null,\n      groupId: null,\n      room: null,\n      previousRoom: null,\n      editMessage: null,\n      messageMenu: false,\n      editingMessage: null,\n      newMessage: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    this.socket = io(ROOT_URL);\n    this.socket.on('connect', () => {\n      this.setState({\n        socketId: this.socket.id,\n        userId: this.props.userId,\n        friendId: this.props.friendId,\n        groupId: this.props.groupId\n      });\n      const data = {\n        socketId: this.socket.id,\n        userId: this.props.userId,\n        friendId: this.props.friendId !== null ? this.props.friendId : this.props.userId,\n        room: \"\".concat(ROOT_URL, \"/friends/\").concat(this.props.groupId),\n        previousRoom: \"\".concat(ROOT_URL, \"/friends/\").concat(this.props.groupId)\n      };\n\n      if (data.userId === data.friendId) {\n        this.socket.emit('GET_PERSONAL_MESSAGES', data);\n      } else if (data.userId !== data.friendId) {\n        this.socket.emit('GET_PRIVATE_MESSAGES', data);\n      }\n    });\n    this.socket.on('RECEIVE_PRIVATE_MESSAGES', data => {\n      // scroll to latest message after rendering messages in firefox\n      if (navigator.userAgent.search(\"Firefox\") > -1 || navigator.userAgent.search(\"Edge\") > -1) {\n        this.setState({\n          messages: data.reverse()\n        }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0 || navigator.userAgent.search(\"Edge\") < 0) {\n        this.setState({\n          messages: data\n        });\n      }\n    });\n    this.socket.on('RECEIVE_PERSONAL_MESSAGES', data => {\n      // scroll to latest message after rendering messages in firefox\n      if (navigator.userAgent.search(\"Firefox\") > -1) {\n        this.setState({\n          messages: data.reverse()\n        }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0) {\n        this.setState({\n          messages: data\n        });\n      }\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.groupId !== this.state.groupId && this.state.groupId !== undefined) {\n      this.setState({\n        userId: nextProps.userId,\n        friendId: nextProps.friendId,\n        groupId: nextProps.groupId,\n        room: \"\".concat(ROOT_URL, \"/friends/\").concat(nextProps.groupId),\n        previousRoom: \"\".concat(ROOT_URL, \"/friends/\").concat(this.state.groupId)\n      });\n      const data = {\n        socketId: this.state.socketId,\n        userId: nextProps.userId,\n        friendId: nextProps.friendId,\n        room: \"\".concat(ROOT_URL, \"/friends/\").concat(nextProps.groupId),\n        previousRoom: \"\".concat(ROOT_URL, \"/friends/\").concat(this.state.groupId)\n      };\n\n      if (data.userId === data.friendId) {\n        this.socket.emit('GET_PERSONAL_MESSAGES', data);\n      } else if (data.userId !== data.friendId) {\n        this.socket.emit('GET_PRIVATE_MESSAGES', data);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('LEAVE_CHATROOMS', {\n      room: this.state.room\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chatroom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"privatechatarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"privatechatareamessages\",\n      className: \"privatechatarea-messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n      return React.createElement(\"div\", {\n        id: \"message\" + index,\n        key: index,\n        onMouseEnter: () => {\n          this.setState({\n            hover: this.state.editingMessage || this.state.messageMenu ? \"\" : \"message\" + index\n          });\n        },\n        onMouseLeave: () => {\n          this.setState({\n            hover: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"privatechatarea-messages-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, item.username), React.createElement(Moment, {\n        format: \"MM/DD/YYYY\",\n        date: item.updatedAt,\n        className: \"privatechatarea-messages-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })), this.state.editingMessage !== null && this.state.editingMessage.id === item.id ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"privatechatarea-messages-editmessage\",\n        onChange: event => {\n          this.setState({\n            newMessage: event.target.value\n          });\n        },\n        value: this.state.newMessage,\n        onKeyDown: event => {\n          event.keyCode === 13 && event.shiftKey === false ? this.sendEditedMessage(event) : this.sendMessage(null);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"privatechatarea-messages-editmessage-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"escape to cancel \\u2022 enter to save\")) : React.createElement(\"p\", {\n        className: \"privatechatarea-messages-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, item.message), this.state.hover === \"message\" + index ? React.createElement(\"span\", {\n        className: \"privatechatarea-messages-menu\",\n        onClick: () => {\n          this.openMessageMenu(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: editwhite,\n        height: 15,\n        width: 15,\n        alt: \"edit message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      })) : null, this.state.messageMenu && this.state.editMessage.id === item.id ? React.createElement(\"div\", {\n        className: \"privatechatarea-messages-editmenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            editMessage: null,\n            messageMenu: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.editUserMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.deleteUserMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Delete\")) : null);\n    }) : null), React.createElement(\"div\", {\n      className: \"privatechatarea-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Send a message!\",\n      type: \"text\",\n      onChange: event => {\n        this.setState({\n          message: event.target.value\n        });\n      },\n      value: this.state.message,\n      onKeyDown: event => {\n        event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapStateToProps({\n  usersReducer\n}) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(ChatroomFriend);","map":{"version":3,"sources":["/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/components/ChatroomFriend/ChatroomFriend.js"],"names":["React","Component","connect","actions","ROOT_URL","io","Moment","editwhite","ChatroomFriend","constructor","props","sendMessage","event","preventDefault","data","username","message","state","userId","friendId","room","groupId","previousRoom","socket","emit","setState","openMessageMenu","item","messageMenu","editMessage","deleteUserMessage","chatroomId","messageId","id","editUserMessage","editingMessage","newMessage","detectEscape","keyCode","sendEditedMessage","messages","socketId","currentSocket","componentDidMount","on","navigator","userAgent","search","reverse","length","element","document","getElementById","scrollIntoView","componentWillReceiveProps","nextProps","undefined","componentWillUnmount","render","map","index","hover","updatedAt","target","value","shiftKey","mapStateToProps","usersReducer","error","isLoading","success","user","users"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,iBAAP;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,mCAAtB;;AAEA,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AACrCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuGnBC,WAvGmB,GAuGJC,KAAD,IAAW;AACvB,UAAIA,KAAJ,EAAW;AACTA,QAAAA,KAAK,CAACC,cAAN;AACA,cAAMC,IAAI,GAAG;AACXC,UAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWK,QADV;AAEXC,UAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAFT;AAGXE,UAAAA,MAAM,EAAE,KAAKR,KAAL,CAAWQ,MAHR;AAIXC,UAAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWS,QAAX,KAAwB,IAAxB,GAA+B,KAAKT,KAAL,CAAWS,QAA1C,GAAqD,KAAKT,KAAL,CAAWQ,MAJ/D;AAKXE,UAAAA,IAAI,YAAKhB,QAAL,sBAAyB,KAAKM,KAAL,CAAWW,OAApC,CALO;AAMXC,UAAAA,YAAY,YAAKlB,QAAL,sBAAyB,KAAKa,KAAL,CAAWI,OAApC;AAND,SAAb;;AAQA,YAAIP,IAAI,CAACI,MAAL,KAAgBJ,IAAI,CAACK,QAAzB,EAAmC;AACjC,eAAKI,MAAL,CAAYC,IAAZ,CAAiB,uBAAjB,EAA0CV,IAA1C;AACD,SAFD,MAEO,IAAIA,IAAI,CAACI,MAAL,KAAgBJ,IAAI,CAACK,QAAzB,EAAmC;AACxC,eAAKI,MAAL,CAAYC,IAAZ,CAAiB,sBAAjB,EAAyCV,IAAzC;AACD;;AACD,aAAKW,QAAL,CAAc;AAAET,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD;AACF,KAzHkB;;AAAA,SA2HnBU,eA3HmB,GA2HAC,IAAD,IAAU;AAC1B,WAAKF,QAAL,CAAc;AAAEG,QAAAA,WAAW,EAAE,IAAf;AAAqBC,QAAAA,WAAW,EAAEF;AAAlC,OAAd;AACD,KA7HkB;;AAAA,SA+HnBG,iBA/HmB,GA+HC,MAAM;AACxB,YAAMhB,IAAI,GAAG;AACXC,QAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWK,QADV;AAEXC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAFT;AAGXE,QAAAA,MAAM,EAAE,KAAKR,KAAL,CAAWQ,MAHR;AAIXa,QAAAA,UAAU,EAAE,KAAKd,KAAL,CAAWc,UAJZ;AAKXC,QAAAA,SAAS,EAAE,KAAKf,KAAL,CAAWY,WAAX,CAAuBI,EALvB;AAMXb,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AANN,OAAb;AAQA,WAAKG,MAAL,CAAYC,IAAZ,CAAiB,qBAAjB,EAAwCV,IAAxC;AACD,KAzIkB;;AAAA,SA2InBoB,eA3ImB,GA2ID,MAAM;AACtB,WAAKT,QAAL,CAAc;AAAEU,QAAAA,cAAc,EAAE,KAAKlB,KAAL,CAAWY,WAA7B;AAA0CO,QAAAA,UAAU,EAAE,KAAKnB,KAAL,CAAWY,WAAX,CAAuBb;AAA7E,OAAd,EAAsG,MAAM;AAC1G,aAAKS,QAAL,CAAc;AAAEI,UAAAA,WAAW,EAAE,IAAf;AAAqBD,UAAAA,WAAW,EAAE;AAAlC,SAAd;AACD,OAFD;AAGD,KA/IkB;;AAAA,SAiJnBS,YAjJmB,GAiJHzB,KAAD,IAAW;AACxB,UAAIA,KAAK,CAAC0B,OAAN,KAAkB,EAAtB,EAA0B;AACxB,aAAKb,QAAL,CAAc;AAAEU,UAAAA,cAAc,EAAE,KAAKlB,KAAL,CAAWY,WAA7B;AAA0CO,UAAAA,UAAU,EAAE;AAAtD,SAAd;AACD;AACF,KArJkB;;AAAA,SAuJnBG,iBAvJmB,GAuJE3B,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,IAAI,GAAG;AACXC,QAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWK,QADV;AAEXC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWmB,UAFT;AAGXlB,QAAAA,MAAM,EAAE,KAAKR,KAAL,CAAWQ,MAHR;AAIXa,QAAAA,UAAU,EAAE,KAAKd,KAAL,CAAWc,UAJZ;AAKXC,QAAAA,SAAS,EAAE,KAAKf,KAAL,CAAWkB,cAAX,CAA0BF,EAL1B;AAMXb,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AANN,OAAb;AAQA,WAAKG,MAAL,CAAYC,IAAZ,CAAiB,mBAAjB,EAAsCV,IAAtC;AACD,KAlKkB;;AAGjB,SAAKG,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAE,EADE;AAEXwB,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,aAAa,EAAE,EAJJ;AAKXxB,MAAAA,MAAM,EAAE,IALG;AAMXC,MAAAA,QAAQ,EAAE,IANC;AAOXE,MAAAA,OAAO,EAAE,IAPE;AAQXD,MAAAA,IAAI,EAAE,IARK;AASXE,MAAAA,YAAY,EAAE,IATH;AAUXO,MAAAA,WAAW,EAAE,IAVF;AAWXD,MAAAA,WAAW,EAAE,KAXF;AAYXO,MAAAA,cAAc,EAAE,IAZL;AAaXC,MAAAA,UAAU,EAAE;AAbD,KAAb;AAeD;;AAED,QAAMO,iBAAN,GAA0B;AACxB,SAAKpB,MAAL,GAAclB,EAAE,CAACD,QAAD,CAAhB;AAEA,SAAKmB,MAAL,CAAYqB,EAAZ,CAAe,SAAf,EAA0B,MAAM;AAC9B,WAAKnB,QAAL,CAAc;AAAEgB,QAAAA,QAAQ,EAAE,KAAKlB,MAAL,CAAYU,EAAxB;AAA4Bf,QAAAA,MAAM,EAAE,KAAKR,KAAL,CAAWQ,MAA/C;AAAuDC,QAAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWS,QAA5E;AAAsFE,QAAAA,OAAO,EAAE,KAAKX,KAAL,CAAWW;AAA1G,OAAd;AAEA,YAAMP,IAAI,GAAG;AACX2B,QAAAA,QAAQ,EAAE,KAAKlB,MAAL,CAAYU,EADX;AAEXf,QAAAA,MAAM,EAAE,KAAKR,KAAL,CAAWQ,MAFR;AAGXC,QAAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWS,QAAX,KAAwB,IAAxB,GAA+B,KAAKT,KAAL,CAAWS,QAA1C,GAAoD,KAAKT,KAAL,CAAWQ,MAH9D;AAIXE,QAAAA,IAAI,YAAKhB,QAAL,sBAAyB,KAAKM,KAAL,CAAWW,OAApC,CAJO;AAKXC,QAAAA,YAAY,YAAKlB,QAAL,sBAAyB,KAAKM,KAAL,CAAWW,OAApC;AALD,OAAb;;AAOA,UAAIP,IAAI,CAACI,MAAL,KAAgBJ,IAAI,CAACK,QAAzB,EAAmC;AACjC,aAAKI,MAAL,CAAYC,IAAZ,CAAiB,uBAAjB,EAA0CV,IAA1C;AACD,OAFD,MAEO,IAAIA,IAAI,CAACI,MAAL,KAAgBJ,IAAI,CAACK,QAAzB,EAAmC;AACxC,aAAKI,MAAL,CAAYC,IAAZ,CAAiB,sBAAjB,EAAyCV,IAAzC;AACD;AACF,KAfD;AAiBA,SAAKS,MAAL,CAAYqB,EAAZ,CAAe,0BAAf,EAA4C9B,IAAD,IAAU;AACnD;AACA,UAAI+B,SAAS,CAACC,SAAV,CAAoBC,MAApB,CAA2B,SAA3B,IAAwC,CAAC,CAAzC,IAA8CF,SAAS,CAACC,SAAV,CAAoBC,MAApB,CAA2B,MAA3B,IAAqC,CAAC,CAAxF,EAA2F;AACzF,aAAKtB,QAAL,CAAc;AAAEe,UAAAA,QAAQ,EAAE1B,IAAI,CAACkC,OAAL;AAAZ,SAAd,EAA4C,MAAM;AAChD,cAAIlC,IAAI,IAAIA,IAAI,CAACmC,MAAL,GAAc,CAA1B,EAA6B;AAC3B,kBAAMC,OAAO,GAAG,aAAa,KAAKjC,KAAL,CAAWuB,QAAX,CAAoBS,MAApB,GAA6B,CAA1C,CAAhB;;AACA,gBAAIE,QAAQ,CAACC,cAAT,CAAwBF,OAAxB,CAAJ,EAAsC;AACpCC,cAAAA,QAAQ,CAACC,cAAT,CAAwBF,OAAxB,EAAiCG,cAAjC;AACD;AACF;AACF,SAPD;AAQD,OATD,MASO,IAAIR,SAAS,CAACC,SAAV,CAAoBC,MAApB,CAA2B,SAA3B,IAAwC,CAAxC,IAA6CF,SAAS,CAACC,SAAV,CAAoBC,MAApB,CAA2B,MAA3B,IAAqC,CAAtF,EAAyF;AAC9F,aAAKtB,QAAL,CAAc;AAAEe,UAAAA,QAAQ,EAAE1B;AAAZ,SAAd;AACD;AACF,KAdD;AAgBA,SAAKS,MAAL,CAAYqB,EAAZ,CAAe,2BAAf,EAA6C9B,IAAD,IAAU;AACpD;AACA,UAAI+B,SAAS,CAACC,SAAV,CAAoBC,MAApB,CAA2B,SAA3B,IAAwC,CAAC,CAA7C,EAAgD;AAC9C,aAAKtB,QAAL,CAAc;AAAEe,UAAAA,QAAQ,EAAE1B,IAAI,CAACkC,OAAL;AAAZ,SAAd,EAA4C,MAAM;AAChD,cAAIlC,IAAI,IAAIA,IAAI,CAACmC,MAAL,GAAc,CAA1B,EAA6B;AAC3B,kBAAMC,OAAO,GAAG,aAAa,KAAKjC,KAAL,CAAWuB,QAAX,CAAoBS,MAApB,GAA6B,CAA1C,CAAhB;;AACA,gBAAIE,QAAQ,CAACC,cAAT,CAAwBF,OAAxB,CAAJ,EAAsC;AACpCC,cAAAA,QAAQ,CAACC,cAAT,CAAwBF,OAAxB,EAAiCG,cAAjC;AACD;AACF;AACF,SAPD;AAQD,OATD,MASO,IAAIR,SAAS,CAACC,SAAV,CAAoBC,MAApB,CAA2B,SAA3B,IAAwC,CAA5C,EAA+C;AACpD,aAAKtB,QAAL,CAAc;AAAEe,UAAAA,QAAQ,EAAE1B;AAAZ,SAAd;AACD;AACF,KAdD;AAeD;;AAED,QAAMwC,yBAAN,CAAgCC,SAAhC,EAA2C;AACzC,QAAIA,SAAS,CAAClC,OAAV,KAAsB,KAAKJ,KAAL,CAAWI,OAAjC,IAA4C,KAAKJ,KAAL,CAAWI,OAAX,KAAuBmC,SAAvE,EAAkF;AAChF,WAAK/B,QAAL,CAAc;AACZP,QAAAA,MAAM,EAAEqC,SAAS,CAACrC,MADN;AAEZC,QAAAA,QAAQ,EAAEoC,SAAS,CAACpC,QAFR;AAGZE,QAAAA,OAAO,EAAEkC,SAAS,CAAClC,OAHP;AAIZD,QAAAA,IAAI,YAAKhB,QAAL,sBAAyBmD,SAAS,CAAClC,OAAnC,CAJQ;AAKZC,QAAAA,YAAY,YAAKlB,QAAL,sBAAyB,KAAKa,KAAL,CAAWI,OAApC;AALA,OAAd;AAOA,YAAMP,IAAI,GAAG;AACX2B,QAAAA,QAAQ,EAAE,KAAKxB,KAAL,CAAWwB,QADV;AAEXvB,QAAAA,MAAM,EAAEqC,SAAS,CAACrC,MAFP;AAGXC,QAAAA,QAAQ,EAAEoC,SAAS,CAACpC,QAHT;AAIXC,QAAAA,IAAI,YAAKhB,QAAL,sBAAyBmD,SAAS,CAAClC,OAAnC,CAJO;AAKXC,QAAAA,YAAY,YAAKlB,QAAL,sBAAyB,KAAKa,KAAL,CAAWI,OAApC;AALD,OAAb;;AAOA,UAAIP,IAAI,CAACI,MAAL,KAAgBJ,IAAI,CAACK,QAAzB,EAAmC;AACjC,aAAKI,MAAL,CAAYC,IAAZ,CAAiB,uBAAjB,EAA0CV,IAA1C;AACD,OAFD,MAEO,IAAIA,IAAI,CAACI,MAAL,KAAgBJ,IAAI,CAACK,QAAzB,EAAmC;AACxC,aAAKI,MAAL,CAAYC,IAAZ,CAAiB,sBAAjB,EAAyCV,IAAzC;AACD;AACF;AACF;;AAED2C,EAAAA,oBAAoB,GAAG;AACrB,SAAKlC,MAAL,CAAYC,IAAZ,CAAiB,iBAAjB,EAAoC;AAClCJ,MAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AADiB,KAApC;AAGD;;AA+DDsC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,yBAAR;AAAkC,MAAA,SAAS,EAAC,0BAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKzC,KAAL,CAAWuB,QAAX,IAAuB,KAAKvB,KAAL,CAAWuB,QAAX,CAAoBS,MAApB,GAA6B,CAApD,GAAwD,KAAKhC,KAAL,CAAWuB,QAAX,CAAoBmB,GAApB,CAAwB,CAAChC,IAAD,EAAOiC,KAAP,KAAiB;AAChG,aACE;AAAK,QAAA,EAAE,EAAE,YAAYA,KAArB;AAA4B,QAAA,GAAG,EAAEA,KAAjC;AAAwC,QAAA,YAAY,EAAE,MAAM;AAAE,eAAKnC,QAAL,CAAc;AAAEoC,YAAAA,KAAK,EAAG,KAAK5C,KAAL,CAAWkB,cAAX,IAA6B,KAAKlB,KAAL,CAAWW,WAAzC,GAAwD,EAAxD,GAA8D,YAAYgC;AAAnF,WAAd;AAA4G,SAA1K;AAA4K,QAAA,YAAY,EAAE,MAAM;AAAE,eAAKnC,QAAL,CAAc;AAAEoC,YAAAA,KAAK,EAAE;AAAT,WAAd;AAA+B,SAAjO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiDlC,IAAI,CAACZ,QAAtD,CADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAC,YAAf;AAA4B,QAAA,IAAI,EAAEY,IAAI,CAACmC,SAAvC;AAAkD,QAAA,SAAS,EAAC,+BAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKG,KAAK7C,KAAL,CAAWkB,cAAX,KAA8B,IAA9B,IAAsC,KAAKlB,KAAL,CAAWkB,cAAX,CAA0BF,EAA1B,KAAiCN,IAAI,CAACM,EAA5E,GAAiF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAO,QAAA,SAAS,EAAC,sCAAjB;AAAwD,QAAA,QAAQ,EAAGrB,KAAD,IAAW;AAAE,eAAKa,QAAL,CAAc;AAAEW,YAAAA,UAAU,EAAExB,KAAK,CAACmD,MAAN,CAAaC;AAA3B,WAAd;AAAmD,SAAlI;AAAoI,QAAA,KAAK,EAAE,KAAK/C,KAAL,CAAWmB,UAAtJ;AAAkK,QAAA,SAAS,EAAGxB,KAAD,IAAW;AAAEA,UAAAA,KAAK,CAAC0B,OAAN,KAAkB,EAAlB,IAAwB1B,KAAK,CAACqD,QAAN,KAAmB,KAA3C,GAAmD,KAAK1B,iBAAL,CAAuB3B,KAAvB,CAAnD,GAAmF,KAAKD,WAAL,CAAiB,IAAjB,CAAnF;AAA2G,SAArS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,EAA+S;AAAG,QAAA,SAAS,EAAC,2CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAA/S,CAAjF,GAAue;AAAG,QAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiDgB,IAAI,CAACX,OAAtD,CAL1e,EAMG,KAAKC,KAAL,CAAW4C,KAAX,KAAsB,YAAYD,KAAlC,GAA2C;AAAM,QAAA,SAAS,EAAC,+BAAhB;AAAgD,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKlC,eAAL,CAAqBC,IAArB;AAA6B,SAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgG;AAAK,QAAA,GAAG,EAAEpB,SAAV;AAAqB,QAAA,MAAM,EAAE,EAA7B;AAAiC,QAAA,KAAK,EAAE,EAAxC;AAA4C,QAAA,GAAG,EAAC,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhG,CAA3C,GAAsN,IANzN,EAOG,KAAKU,KAAL,CAAWW,WAAX,IAA0B,KAAKX,KAAL,CAAWY,WAAX,CAAuBI,EAAvB,KAA8BN,IAAI,CAACM,EAA7D,GACC;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKR,QAAL,CAAc;AAAEI,YAAAA,WAAW,EAAE,IAAf;AAAqBD,YAAAA,WAAW,EAAE;AAAlC,WAAd;AAA2D,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKM,eAAL;AAAyB,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKJ,iBAAL;AAA2B,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADD,GAMC,IAbJ,CADF;AAiBD,KAlBwD,CAAxD,GAkBI,IAnBP,CADF,EAsBE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,WAAW,EAAC,iBAAnB;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAiD,MAAA,QAAQ,EAAGlB,KAAD,IAAW;AAAE,aAAKa,QAAL,CAAc;AAAET,UAAAA,OAAO,EAAEJ,KAAK,CAACmD,MAAN,CAAaC;AAAxB,SAAd;AAAiD,OAAzH;AAA2H,MAAA,KAAK,EAAE,KAAK/C,KAAL,CAAWD,OAA7I;AAAsJ,MAAA,SAAS,EAAGJ,KAAD,IAAW;AAAEA,QAAAA,KAAK,CAAC0B,OAAN,KAAkB,EAAlB,IAAwB1B,KAAK,CAACqD,QAAN,KAAmB,KAA3C,GAAmD,KAAKtD,WAAL,CAAiBC,KAAjB,CAAnD,GAA6E,KAAKD,WAAL,CAAiB,IAAjB,CAA7E;AAAqG,OAAnR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAtBF,CADF,CADF;AA8BD;;AApMoC;;AAuMvC,SAASuD,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAA2C;AACzC,SAAO;AACLC,IAAAA,KAAK,EAAED,YAAY,CAACC,KADf;AAELC,IAAAA,SAAS,EAAEF,YAAY,CAACE,SAFnB;AAGLC,IAAAA,OAAO,EAAEH,YAAY,CAACG,OAHjB;AAILC,IAAAA,IAAI,EAAEJ,YAAY,CAACI,IAJd;AAKLC,IAAAA,KAAK,EAAEL,YAAY,CAACK;AALf,GAAP;AAOD;;AAED,eAAetE,OAAO,CAACgE,eAAD,EAAkB/D,OAAlB,CAAP,CAAkCK,cAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from \"socket.io-client\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './ChatroomFriend.css';\nimport editwhite from '../../assets/images/editwhite.png';\n\nclass ChatroomFriend extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: \"\",\n      messages: [],\n      socketId: \"\",\n      currentSocket: \"\",\n      userId: null,\n      friendId: null,\n      groupId: null,\n      room: null,\n      previousRoom: null,\n      editMessage: null,\n      messageMenu: false,\n      editingMessage: null,\n      newMessage: \"\"\n    }\n  }\n\n  async componentDidMount() {\n    this.socket = io(ROOT_URL);\n\n    this.socket.on('connect', () => {\n      this.setState({ socketId: this.socket.id, userId: this.props.userId, friendId: this.props.friendId, groupId: this.props.groupId });\n\n      const data = {\n        socketId: this.socket.id,\n        userId: this.props.userId,\n        friendId: this.props.friendId !== null ? this.props.friendId: this.props.userId,\n        room: `${ROOT_URL}/friends/${this.props.groupId}`,\n        previousRoom: `${ROOT_URL}/friends/${this.props.groupId}`\n      };\n      if (data.userId === data.friendId) {\n        this.socket.emit('GET_PERSONAL_MESSAGES', data);\n      } else if (data.userId !== data.friendId) {\n        this.socket.emit('GET_PRIVATE_MESSAGES', data);\n      }\n    });\n\n    this.socket.on('RECEIVE_PRIVATE_MESSAGES', (data) => {\n      // scroll to latest message after rendering messages in firefox\n      if (navigator.userAgent.search(\"Firefox\") > -1 || navigator.userAgent.search(\"Edge\") > -1) {\n        this.setState({ messages: data.reverse() }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0 || navigator.userAgent.search(\"Edge\") < 0) {\n        this.setState({ messages: data });\n      }\n    });\n\n    this.socket.on('RECEIVE_PERSONAL_MESSAGES', (data) => {\n      // scroll to latest message after rendering messages in firefox\n      if (navigator.userAgent.search(\"Firefox\") > -1) {\n        this.setState({ messages: data.reverse() }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0) {\n        this.setState({ messages: data });\n      }\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.groupId !== this.state.groupId && this.state.groupId !== undefined) {\n      this.setState({\n        userId: nextProps.userId,\n        friendId: nextProps.friendId,\n        groupId: nextProps.groupId,\n        room: `${ROOT_URL}/friends/${nextProps.groupId}`,\n        previousRoom: `${ROOT_URL}/friends/${this.state.groupId}`\n      });\n      const data = {\n        socketId: this.state.socketId,\n        userId: nextProps.userId,\n        friendId: nextProps.friendId,\n        room: `${ROOT_URL}/friends/${nextProps.groupId}`,\n        previousRoom: `${ROOT_URL}/friends/${this.state.groupId}`\n      };\n      if (data.userId === data.friendId) {\n        this.socket.emit('GET_PERSONAL_MESSAGES', data);\n      } else if (data.userId !== data.friendId) {\n        this.socket.emit('GET_PRIVATE_MESSAGES', data);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('LEAVE_CHATROOMS', {\n      room: this.state.room\n    });\n  }\n\n  sendMessage = (event) => {\n    if (event) {\n      event.preventDefault();\n      const data = {\n        username: this.props.username,\n        message: this.state.message,\n        userId: this.props.userId,\n        friendId: this.props.friendId !== null ? this.props.friendId : this.props.userId,\n        room: `${ROOT_URL}/friends/${this.props.groupId}`,\n        previousRoom: `${ROOT_URL}/friends/${this.state.groupId}`\n      }\n      if (data.userId === data.friendId) {\n        this.socket.emit('SEND_PERSONAL_MESSAGE', data);\n      } else if (data.userId !== data.friendId) {\n        this.socket.emit('SEND_PRIVATE_MESSAGE', data);\n      }\n      this.setState({ message: \"\" });\n    }\n  }\n\n  openMessageMenu = (item) => {\n    this.setState({ messageMenu: true, editMessage: item });\n  }\n\n  deleteUserMessage = () => {\n    const data = {\n      username: this.props.username,\n      message: this.state.message,\n      userId: this.props.userId,\n      chatroomId: this.state.chatroomId,\n      messageId: this.state.editMessage.id,\n      room: this.state.room\n    };\n    this.socket.emit('DELETE_USER_MESSAGE', data);\n  }\n\n  editUserMessage = () => {\n    this.setState({ editingMessage: this.state.editMessage, newMessage: this.state.editMessage.message }, () => {\n      this.setState({ editMessage: null, messageMenu: false });\n    });\n  }\n\n  detectEscape = (event) => {\n    if (event.keyCode === 27) {\n      this.setState({ editingMessage: this.state.editMessage, newMessage: \"\" });\n    }\n  }\n\n  sendEditedMessage = (event) => {\n    event.preventDefault();\n    const data = {\n      username: this.props.username,\n      message: this.state.newMessage,\n      userId: this.props.userId,\n      chatroomId: this.state.chatroomId,\n      messageId: this.state.editingMessage.id,\n      room: this.state.room\n    };\n    this.socket.emit('EDIT_USER_MESSAGE', data);\n  }\n\n  render() {\n    return (\n      <div className=\"chatroom\">\n        <div className=\"privatechatarea\">\n          <div id=\"privatechatareamessages\" className=\"privatechatarea-messages\">\n            {this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n              return (\n                <div id={\"message\" + index} key={index} onMouseEnter={() => { this.setState({ hover: (this.state.editingMessage || this.state.messageMenu) ? \"\" : (\"message\" + index) }) }} onMouseLeave={() => { this.setState({ hover: \"\" }); }}>\n                  <p>\n                    <span className=\"privatechatarea-messages-user\">{item.username}</span>\n                    <Moment format=\"MM/DD/YYYY\" date={item.updatedAt} className=\"privatechatarea-messages-time\" />\n                  </p>\n                  {this.state.editingMessage !== null && this.state.editingMessage.id === item.id ? <span><input className=\"privatechatarea-messages-editmessage\" onChange={(event) => { this.setState({ newMessage: event.target.value }) }} value={this.state.newMessage} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendEditedMessage(event) : this.sendMessage(null) }} /><p className=\"privatechatarea-messages-editmessage-note\">escape to cancel • enter to save</p></span> : <p className=\"privatechatarea-messages-message\">{item.message}</p>}\n                  {this.state.hover === (\"message\" + index) ? <span className=\"privatechatarea-messages-menu\" onClick={() => { this.openMessageMenu(item); }}><img src={editwhite} height={15} width={15} alt=\"edit message\" /></span> : null}\n                  {this.state.messageMenu && this.state.editMessage.id === item.id ?\n                    <div className=\"privatechatarea-messages-editmenu\">\n                      <span onClick={() => { this.setState({ editMessage: null, messageMenu: false }); }}>&#10005;</span>\n                      <p onClick={() => { this.editUserMessage(); }}>Edit</p>\n                      <p onClick={() => { this.deleteUserMessage(); }}>Delete</p>\n                    </div>\n                  : null}\n                </div>\n              )\n            }) : null}\n          </div>\n          <div className=\"privatechatarea-container\">\n            <input placeholder=\"Send a message!\" type=\"text\" onChange={(event) => { this.setState({ message: event.target.value }); }} value={this.state.message} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null) }}></input>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(ChatroomFriend);"]},"metadata":{},"sourceType":"module"}