{"ast":null,"code":"var _jsxFileName = \"/Users/metabou/Desktop/chatapp/client/src/views/Chatroom/Chatroom.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from \"socket.io-client\";\nimport './Chatroom.css';\nimport person from '../../assets/images/person-icon.png';\nimport general from '../../assets/images/general.png';\nimport AuthNavigation from '../../components/AuthNavigation/AuthNavigation';\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      message: \"\",\n      type: \"\",\n      messages: [],\n      users: [],\n      clickedUsername: \"\",\n      clickedType: \"\",\n      privateMessages: [],\n      personalMessages: [],\n      userDetails: false,\n      socketId: \"\",\n      currentSocket: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chatroom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n\n}\n\nfunction mapStateToProps({\n  usersReducer\n}) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Chatroom);","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/views/Chatroom/Chatroom.js"],"names":["React","Component","connect","actions","ROOT_URL","io","person","general","AuthNavigation","Chatroom","constructor","props","state","username","message","type","messages","users","clickedUsername","clickedType","privateMessages","personalMessages","userDetails","socketId","currentSocket","render","mapStateToProps","usersReducer","error","isLoading","success","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,cAAP,MAA2B,gDAA3B;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAC/BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,IAAI,EAAE,EAHK;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXC,MAAAA,KAAK,EAAE,EALI;AAMXC,MAAAA,eAAe,EAAE,EANN;AAOXC,MAAAA,WAAW,EAAE,EAPF;AAQXC,MAAAA,eAAe,EAAE,EARN;AASXC,MAAAA,gBAAgB,EAAE,EATP;AAUXC,MAAAA,WAAW,EAAE,KAVF;AAWXC,MAAAA,QAAQ,EAAE,EAXC;AAYXC,MAAAA,aAAa,EAAE;AAZJ,KAAb;AAcD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAID;;AAzB8B;;AA4BjC,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAA2C;AACzC,SAAO;AACLC,IAAAA,KAAK,EAAED,YAAY,CAACC,KADf;AAELC,IAAAA,SAAS,EAAEF,YAAY,CAACE,SAFnB;AAGLC,IAAAA,OAAO,EAAEH,YAAY,CAACG,OAHjB;AAILC,IAAAA,IAAI,EAAEJ,YAAY,CAACI;AAJd,GAAP;AAMD;;AAED,eAAe7B,OAAO,CAACwB,eAAD,EAAkBvB,OAAlB,CAAP,CAAkCM,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from \"socket.io-client\";\nimport './Chatroom.css';\nimport person from '../../assets/images/person-icon.png';\nimport general from '../../assets/images/general.png';\nimport AuthNavigation from '../../components/AuthNavigation/AuthNavigation';\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      message: \"\",\n      type: \"\",\n      messages: [],\n      users: [],\n      clickedUsername: \"\",\n      clickedType: \"\",\n      privateMessages: [],\n      personalMessages: [],\n      userDetails: false,\n      socketId: \"\",\n      currentSocket: \"\"\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"chatroom\">\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Chatroom);"]},"metadata":{},"sourceType":"module"}