{"ast":null,"code":"import _slicedToArray from \"/Users/metabou/Desktop/chatapp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metabou/Desktop/chatapp/client/src/views/Dashboard/Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport ReactTooltip from 'react-tooltip';\nimport { Redirect } from 'react-router';\nimport Chatroom from '../../components/Chatroom/Chatroom';\nimport CreateServer from '../../components/CreateServer/CreateServer';\nimport JoinServer from '../../components/JoinServer/JoinServer';\nimport './Dashboard.css';\nimport chatot from '../../assets/images/chatot.png';\nimport friends from '../../assets/images/friends.png';\nimport settings from '../../assets/images/settings.png';\n\nconst Dashboard = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        id = _useState2[0],\n        setId = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        username = _useState4[0],\n        setUsername = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        imageUrl = _useState8[0],\n        setImageUrl = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        active = _useState10[0],\n        setActive = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        chatroom = _useState12[0],\n        setChatroom = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        hover = _useState14[0],\n        setHover = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        isSettingsOpen = _useState16[0],\n        setSettingsOpen = _useState16[1];\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        isModalOpen = _useState18[0],\n        setModalOpen = _useState18[1];\n\n  const _useState19 = useState(\"\"),\n        _useState20 = _slicedToArray(_useState19, 2),\n        currentModal = _useState20[0],\n        setCurrentModal = _useState20[1];\n\n  const _useState21 = useState(\"US West\"),\n        _useState22 = _slicedToArray(_useState21, 2),\n        region = _useState22[0],\n        setRegion = _useState22[1];\n\n  const _useState23 = useState(null),\n        _useState24 = _slicedToArray(_useState23, 2),\n        serversList = _useState24[0],\n        setServersList = _useState24[1];\n\n  useEffect(() => {\n    console.log(props);\n\n    if (!props.user) {\n      props.currentUser();\n      window.addEventListener('keydown', detectEscape);\n    } else if (props.user) {\n      const _props$user = props.user,\n            id = _props$user.id,\n            username = _props$user.username,\n            email = _props$user.email,\n            imageUrl = _props$user.imageUrl,\n            active = _props$user.active,\n            serversList = _props$user.serversList;\n      setId(id);\n      setUsername(username);\n      setEmail(email);\n      setImageUrl(imageUrl);\n      setActive(active);\n      setServersList(serversList);\n    }\n  }, [props]);\n\n  const detectEscape = event => {\n    if (event.keyCode === 27) {\n      setSettingsOpen(false);\n    }\n  };\n\n  if (props.logout) {\n    return React.createElement(Redirect, {\n      push: true,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n  }\n\n  const userLogout = () => {\n    props.userLogout({\n      id: id\n    });\n  };\n\n  const toggleModal = value => {\n    setModalOpen(true);\n    setCurrentModal(value);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"chatroom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, isModalOpen ? React.createElement(\"span\", {\n    className: \"contentBackground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidebar-container\",\n    \"data-tip\": \"home\",\n    \"data-place\": \"right\",\n    onPointerOver: () => {\n      setHover(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, hover === \"\" && chatroom !== \"\" ? React.createElement(\"span\", {\n    className: \"sidebar-hover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }) : null, chatroom === \"\" ? React.createElement(\"span\", {\n    className: \"sidebar-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }) : null, React.createElement(\"img\", {\n    className: \"sidebar-logo\",\n    src: chatot,\n    alt: \"chatter-icon-logo\",\n    onClick: () => {\n      setChatroom(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"sidebar-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sidebar-container\",\n    \"data-tip\": username,\n    \"data-place\": \"right\",\n    onPointerOver: () => {\n      setHover(username);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, hover === username && chatroom !== username ? React.createElement(\"span\", {\n    className: \"sidebar-hover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }) : null, chatroom === username ? React.createElement(\"span\", {\n    className: \"sidebar-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }) : null, React.createElement(\"img\", {\n    className: \"sidebar-logo\",\n    src: chatot,\n    alt: \"chatter-icon\",\n    onClick: () => {\n      setChatroom(username);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), serversList && serversList.length > 0 ? serversList.map((item, index) => {\n    return React.createElement(\"div\", {\n      className: \"sidebar-container\",\n      \"data-tip\": item.name,\n      \"data-place\": \"right\",\n      onPointerOver: () => {\n        setHover(item.name);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, hover === item.name && chatroom !== item.name ? React.createElement(\"span\", {\n      className: \"sidebar-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }) : null, chatroom === item.name ? React.createElement(\"span\", {\n      className: \"sidebar-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }) : null, React.createElement(\"img\", {\n      className: \"sidebar-logo\",\n      src: item.imageUrl ? item.imageUrl : chatot,\n      alt: \"chatter-icon\",\n      onClick: () => {\n        setChatroom(item.name);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }) : null), React.createElement(ReactTooltip, {\n    delayShow: 200,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sidebarleft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidebarleft-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Find or start a conversation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"sidebarleft-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sidebarleft-friendscontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"sidebarleft-logo\",\n    src: friends,\n    alt: \"friends-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"sidebarleft-friends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Friends\")), React.createElement(\"div\", {\n    className: \"sidebarleft-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sidebarleft-directmessages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Private Messages\")), React.createElement(\"div\", {\n    className: \"sidebarleft-bordertwo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"userinfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"username-image\",\n    src: imageUrl ? imageUrl : chatot,\n    alt: \"username-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), active ? React.createElement(\"div\", {\n    className: \"userinfo-online\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }) : null, React.createElement(\"span\", {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, username), React.createElement(\"img\", {\n    className: \"settings-image\",\n    src: settings,\n    alt: \"settings-icon\",\n    onClick: () => {\n      setSettingsOpen(!isSettingsOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }))), chatroom === username ? React.createElement(Chatroom, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"mainarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mainarea-topnav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"mainarea-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mainarea-container-addserver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Create\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Create a new server and invite other people to join!\"), React.createElement(\"button\", {\n    onClick: () => {\n      toggleModal(\"create\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Create a server\")), React.createElement(\"div\", {\n    className: \"mainarea-container-joinserver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Join\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Enter an secret invite code to join an existing server!\"), React.createElement(\"button\", {\n    onClick: () => {\n      toggleModal(\"join\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Join a server\")))), isSettingsOpen ? React.createElement(\"div\", {\n    className: \"usersettings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"usersettings-sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"User Settings\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"My Account\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Privacy & Safety\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Connections\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Billing\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"App Settings\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Voice & Video\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Notifications\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Appearance\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Language\"), React.createElement(\"p\", {\n    onClick: userLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Logout\")), React.createElement(\"div\", {\n    className: \"usersettings-accountcontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"usersettings-myaccount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"My Account\"), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imageUrl ? imageUrl : chatot,\n    alt: \"username-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-info-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, username)), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-info-email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, email))), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Edit\")))), React.createElement(\"div\", {\n    className: \"usersettings-authentication\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Two-Factor Authentication\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Protect your account with an extra layer of security. Once configured you'll be required to enter your password and an authentication code from your mobile device to login.\"), React.createElement(\"div\", {\n    className: \"usersettings-authentication-enable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Enable\"))), React.createElement(\"div\", {\n    className: \"usersettings-escape\",\n    onClick: () => {\n      setSettingsOpen(!isSettingsOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"\\xD7\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"ESC\")))) : null, isModalOpen && currentModal === \"create\" ? React.createElement(CreateServer, {\n    id: id,\n    region: region,\n    setRegion: region => {\n      setRegion(region);\n    },\n    setModalOpen: () => {\n      setModalOpen(!isModalOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }) : null, isModalOpen && currentModal === \"join\" ? React.createElement(JoinServer, {\n    setModalOpen: () => {\n      setModalOpen(!isModalOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }) : null);\n};\n\nfunction mapStateToProps({\n  usersReducer\n}) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    logout: usersReducer.logout,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Dashboard);","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/views/Dashboard/Dashboard.js"],"names":["React","useState","useEffect","connect","actions","ReactTooltip","Redirect","Chatroom","CreateServer","JoinServer","chatot","friends","settings","Dashboard","props","id","setId","username","setUsername","email","setEmail","imageUrl","setImageUrl","active","setActive","chatroom","setChatroom","hover","setHover","isSettingsOpen","setSettingsOpen","isModalOpen","setModalOpen","currentModal","setCurrentModal","region","setRegion","serversList","setServersList","console","log","user","currentUser","window","addEventListener","detectEscape","event","keyCode","logout","userLogout","toggleModal","value","length","map","item","index","name","color","mapStateToProps","usersReducer","error","isLoading","success","users"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport ReactTooltip from 'react-tooltip';\nimport { Redirect } from 'react-router';\nimport Chatroom from '../../components/Chatroom/Chatroom';\nimport CreateServer from '../../components/CreateServer/CreateServer';\nimport JoinServer from '../../components/JoinServer/JoinServer';\nimport './Dashboard.css';\nimport chatot from '../../assets/images/chatot.png';\nimport friends from '../../assets/images/friends.png';\nimport settings from '../../assets/images/settings.png';\n\nconst Dashboard = (props) => {\n  const [id, setId] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [active, setActive] = useState(false);\n  const [chatroom, setChatroom] = useState('');\n  const [hover, setHover] = useState('');\n  const [isSettingsOpen, setSettingsOpen] = useState(false);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [currentModal, setCurrentModal] = useState(\"\");\n  const [region, setRegion] = useState(\"US West\");\n  const [serversList, setServersList] = useState(null);\n\n  useEffect(() => {\n    console.log(props);\n    if(!props.user) {\n      props.currentUser();\n      window.addEventListener('keydown', detectEscape);\n    } else if(props.user) {\n      const { id, username, email, imageUrl, active, serversList } = props.user;\n      setId(id);\n      setUsername(username);\n      setEmail(email);\n      setImageUrl(imageUrl);\n      setActive(active);\n      setServersList(serversList);\n    }\n  }, [props]);\n\n  const detectEscape = (event) => {\n    if (event.keyCode === 27) {\n      setSettingsOpen(false);\n    }\n  }\n\n  if(props.logout) {\n    return <Redirect push to=\"/\" />;\n  }\n\n  const userLogout = () => {\n    props.userLogout({ id: id });\n  }\n\n  const toggleModal = (value) => {\n    setModalOpen(true);\n    setCurrentModal(value);\n  }\n\n  return (\n    <div className=\"chatroom\">\n      {isModalOpen ? <span className=\"contentBackground\"></span> : null}\n      <div className=\"sidebar\">\n        <div className=\"sidebar-container\" data-tip=\"home\" data-place=\"right\" onPointerOver={() => { setHover(\"\") }}>\n          {hover === \"\" && chatroom !== \"\" ? <span className=\"sidebar-hover\"></span> : null}\n          {chatroom === \"\" ? <span className=\"sidebar-select\"></span> : null}\n          <img className=\"sidebar-logo\" src={chatot} alt=\"chatter-icon-logo\" onClick={() => { setChatroom(\"\") }} />\n        </div>\n        <div className=\"sidebar-border\" />\n        <div className=\"sidebar-container\" data-tip={username} data-place=\"right\" onPointerOver={() => { setHover(username) }}>\n          {hover === username && chatroom !== username ? <span className=\"sidebar-hover\"></span> : null}\n          {chatroom === username ? <span className=\"sidebar-select\"></span> : null}\n          <img className=\"sidebar-logo\" src={chatot} alt=\"chatter-icon\" onClick={() => { setChatroom(username) }} />\n        </div>\n        {serversList && serversList.length > 0 ? serversList.map((item, index)  => {\n          return (\n            <div className=\"sidebar-container\" data-tip={item.name} data-place=\"right\" onPointerOver={() => { setHover(item.name) }}>\n              {hover === item.name && chatroom !== item.name ? <span className=\"sidebar-hover\"></span> : null}\n              {chatroom === item.name ? <span className=\"sidebar-select\"></span> : null}\n              <img className=\"sidebar-logo\" src={item.imageUrl ? item.imageUrl : chatot} alt=\"chatter-icon\" onClick={() => { setChatroom(item.name) }} />\n            </div>\n          )\n        }) : null}\n      </div>\n      <ReactTooltip delayShow={200} />\n      <div className=\"sidebarleft\">\n        <div className=\"sidebarleft-container\">\n          <input placeholder=\"Find or start a conversation\"></input>\n        </div>\n        <div className=\"sidebarleft-border\" />\n        <div className=\"sidebarleft-friendscontainer\">\n          <img className=\"sidebarleft-logo\" src={friends} alt=\"friends-icon\" />\n          <span className=\"sidebarleft-friends\">Friends</span>\n        </div>\n        <div className=\"sidebarleft-border\" />\n        <div className=\"sidebarleft-directmessages\">\n          <span>Private Messages</span>\n        </div>\n        <div className=\"sidebarleft-bordertwo\" />\n        <div className=\"userinfo\">\n          <div className=\"username\">\n            <img className=\"username-image\" src={imageUrl ? imageUrl : chatot} alt=\"username-icon\" />\n          </div>\n          {active ? <div className=\"userinfo-online\"></div> : null}\n          <span style={{ color: 'white' }}>{username}</span>\n          <img className=\"settings-image\" src={settings} alt=\"settings-icon\" onClick={() => { setSettingsOpen(!isSettingsOpen); }} />\n        </div>\n      </div>\n      {chatroom === username ?\n        <Chatroom /> :\n        <div className=\"mainarea\">\n          <div className=\"mainarea-topnav\">\n          </div>\n          <div className=\"mainarea-container\">\n            <div className=\"mainarea-container-addserver\">\n              <h1>Create</h1>\n              <p>Create a new server and invite other people to join!</p>\n              <button onClick={() => { toggleModal(\"create\") }}>Create a server</button>\n            </div>\n            <div className=\"mainarea-container-joinserver\">\n              <h1>Join</h1>\n              <p>Enter an secret invite code to join an existing server!</p>\n              <button onClick={() => { toggleModal(\"join\") }}>Join a server</button>\n            </div>\n          </div>\n        </div>\n      }\n      {isSettingsOpen ?\n        <div className=\"usersettings\">\n          <div className=\"usersettings-sidebar\">\n            <h1>User Settings</h1>\n            <p>My Account</p>\n            <p>Privacy &amp; Safety</p>\n            <p>Connections</p>\n            <p>Billing</p>\n            <h1>App Settings</h1>\n            <p>Voice &amp; Video</p>\n            <p>Notifications</p>\n            <p>Appearance</p>\n            <p>Language</p>\n            <p onClick={userLogout}>Logout</p>\n          </div>\n          <div className=\"usersettings-accountcontainer\">\n            <div className=\"usersettings-myaccount\">\n              <h1>My Account</h1>\n              <div className=\"usersettings-myaccount__container\">\n                <div className=\"usersettings-myaccount__container-image\">\n                  <img src={imageUrl ? imageUrl : chatot} alt=\"username-icon\" />\n                </div>\n                <div className=\"usersettings-myaccount__container-info\">\n                  <div className=\"usersettings-myaccount__container-info-username\">\n                    <span>Username</span><br/>\n                    <span>{username}</span>\n                  </div>\n                  <div className=\"usersettings-myaccount__container-info-email\">\n                    <span>Email Address</span><br/>\n                    <span>{email}</span>\n                  </div>\n                </div>\n                <div className=\"usersettings-myaccount__container-edit\">\n                  <span>Edit</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"usersettings-authentication\">\n              <h1>Two-Factor Authentication</h1>\n              <p>Protect your account with an extra layer of security. Once configured you'll be required to enter your password and an authentication code from your mobile device to login.</p>\n              <div className=\"usersettings-authentication-enable\">\n                <span>Enable</span>\n              </div>\n            </div>\n            <div className=\"usersettings-escape\" onClick={() => { setSettingsOpen(!isSettingsOpen); }}>\n              <span>&#215;</span>\n              <p>ESC</p>\n            </div>\n          </div>\n        </div>\n      : null}\n      {isModalOpen && currentModal === \"create\" ?\n        <CreateServer id={id} region={region} setRegion={(region) => { setRegion(region) }} setModalOpen={() => { setModalOpen(!isModalOpen) }}/>\n      : null}\n      {isModalOpen && currentModal === \"join\" ?\n        <JoinServer setModalOpen={() => { setModalOpen(!isModalOpen) }}/>\n      : null}\n    </div>\n  );\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    logout: usersReducer.logout,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Dashboard);"]},"metadata":{},"sourceType":"module"}