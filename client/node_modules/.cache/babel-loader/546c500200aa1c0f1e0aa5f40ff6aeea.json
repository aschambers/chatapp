{"ast":null,"code":"import _slicedToArray from \"/Users/metabou/Desktop/chatapp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metabou/Desktop/chatapp/client/src/views/Verification/Verification.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport Loading from '../../components/Loading/Loading';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport './Verification.css';\n\nconst Verification = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isVerified = _useState2[0],\n        setIsVerified = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoading = _useState4[0],\n        setIsLoading = _useState4[1];\n\n  const params = queryString.parse(props.location.search);\n  const email = params.email;\n  const token = params.token;\n  useEffect(() => {\n    if (email && token) {\n      setIsLoading(true);\n    }\n\n    if (props.success) {\n      setIsLoading(false);\n      setIsVerified(true);\n    }\n  }, [props, email, token]);\n\n  if (props.isVerified) {\n    return React.createElement(Redirect, {\n      push: true,\n      to: \"/Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }\n\n  if (isLoading) {\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  } else if (!isLoading) {\n    return React.createElement(\"div\", {\n      className: \"verification\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"You must send another email to verify your account.\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Send email\"));\n  }\n};\n\nfunction mapStateToProps({\n  usersReducer\n}) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Verification);","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/views/Verification/Verification.js"],"names":["React","useState","useEffect","queryString","Loading","Redirect","connect","actions","Verification","props","isVerified","setIsVerified","isLoading","setIsLoading","params","parse","location","search","email","token","success","mapStateToProps","usersReducer","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;AACA,OAAO,oBAAP;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA,oBACMR,QAAQ,CAAC,KAAD,CADd;AAAA;AAAA,QACvBS,UADuB;AAAA,QACXC,aADW;;AAAA,qBAEIV,QAAQ,CAAC,KAAD,CAFZ;AAAA;AAAA,QAEvBW,SAFuB;AAAA,QAEZC,YAFY;;AAG9B,QAAMC,MAAM,GAAGX,WAAW,CAACY,KAAZ,CAAkBN,KAAK,CAACO,QAAN,CAAeC,MAAjC,CAAf;AACA,QAAMC,KAAK,GAAGJ,MAAM,CAACI,KAArB;AACA,QAAMC,KAAK,GAAGL,MAAM,CAACK,KAArB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,KAAK,IAAIC,KAAb,EAAoB;AAClBN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,QAAIJ,KAAK,CAACW,OAAV,EAAmB;AACjBP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GATQ,EASN,CAACF,KAAD,EAAQS,KAAR,EAAeC,KAAf,CATM,CAAT;;AAWA,MAAIV,KAAK,CAACC,UAAV,EAAsB;AACpB,WAAO,oBAAC,QAAD;AAAU,MAAA,IAAI,MAAd;AAAe,MAAA,EAAE,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIE,SAAJ,EAAe;AACb,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJD,MAIO,IAAI,CAACA,SAAL,EAAgB;AACrB,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF;AAMD;AACF,CAlCD;;AAoCA,SAASS,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAA2C;AACzC,SAAO;AACLC,IAAAA,KAAK,EAAED,YAAY,CAACC,KADf;AAELX,IAAAA,SAAS,EAAEU,YAAY,CAACV,SAFnB;AAGLQ,IAAAA,OAAO,EAAEE,YAAY,CAACF;AAHjB,GAAP;AAKD;;AAED,eAAed,OAAO,CAACe,eAAD,EAAkBd,OAAlB,CAAP,CAAkCC,YAAlC,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport Loading from '../../components/Loading/Loading';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport './Verification.css';\n\nconst Verification = (props) => {\n  const [isVerified, setIsVerified] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const params = queryString.parse(props.location.search);\n  const email = params.email;\n  const token = params.token;\n\n  useEffect(() => {\n    if (email && token) {\n      setIsLoading(true);\n    }\n\n    if (props.success) {\n      setIsLoading(false);\n      setIsVerified(true);\n    }\n  }, [props, email, token]);\n\n  if (props.isVerified) {\n    return <Redirect push to=\"/Login\" />;\n  }\n\n  if (isLoading) {\n    return (\n      <Loading />\n    );\n  } else if (!isLoading) {\n    return (\n      <div className=\"verification\">\n        <div>You must send another email to verify your account.</div>\n        <button>Send email</button>\n      </div>\n    );\n  }\n};\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Verification);"]},"metadata":{},"sourceType":"module"}