{"ast":null,"code":"var _jsxFileName = \"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/components/Chatroom/Chatroom.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from \"socket.io-client\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Chatroom.css';\nimport chatot from '../../assets/images/chatot.png';\nimport numbersign from '../../assets/images/numbersign.png';\nimport editwhite from '../../assets/images/editwhite.png';\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.useOnClickOutside = (ref, handler) => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    };\n\n    this.sendMessage = event => {\n      if (event) {\n        event.preventDefault();\n        const data = {\n          username: this.props.username,\n          message: this.state.message,\n          userId: this.props.userId,\n          chatroomId: this.state.chatroomId,\n          room: this.state.room\n        };\n        this.socket.emit('CHATROOM_MESSAGE', data);\n        this.setState({\n          message: \"\"\n        });\n      }\n    };\n\n    this.contextMenu = (event, item) => {\n      event.preventDefault();\n      this.setState({\n        rightClickedUser: item,\n        userModalOpen: true,\n        messageMenu: false,\n        editingMessage: null\n      });\n    };\n\n    this.privateMessageUser = () => {\n      this.setState({\n        messages: []\n      });\n      this.props.privateMessageUser(this.state.rightClickedUser);\n    };\n\n    this.openMessageMenu = item => {\n      this.setState({\n        messageMenu: true,\n        editMessage: item\n      });\n    };\n\n    this.deleteChatroomMessage = () => {\n      const data = {\n        username: this.props.username,\n        message: this.state.message,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        messageId: this.state.editMessage.id,\n        room: this.state.room\n      };\n      this.socket.emit('DELETE_CHATROOM_MESSAGE', data);\n    };\n\n    this.editChatroomMessage = () => {\n      this.setState({\n        editingMessage: this.state.editMessage,\n        newMessage: this.state.editMessage.message,\n        hover: \"\"\n      }, () => {\n        this.setState({\n          editMessage: null,\n          messageMenu: false\n        });\n      });\n    };\n\n    this.detectEscape = event => {\n      if (event.keyCode === 27 && !this.state.messageMenu) {\n        this.setState({\n          editingMessage: this.state.editMessage,\n          newMessage: \"\"\n        });\n      }\n    };\n\n    this.sendEditedMessage = event => {\n      event.preventDefault();\n      const data = {\n        username: this.props.username,\n        message: this.state.newMessage,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        messageId: this.state.editingMessage.id,\n        room: this.state.room\n      };\n      this.socket.emit('EDIT_CHATROOM_MESSAGE', data);\n    };\n\n    this.kickUser = user => {};\n\n    this.banUser = user => {};\n\n    this.ref = React.createRef();\n    this.useOnClickOutside(this.ref, () => this.setState({\n      messageMenu: false,\n      userModalOpen: false\n    }));\n    this.state = {\n      id: \"\",\n      username: \"\",\n      active: false,\n      type: \"\",\n      imageUrl: \"\",\n      message: \"\",\n      messages: [],\n      users: [],\n      clickedUsername: \"\",\n      clickedType: \"\",\n      privateMessages: [],\n      personalMessages: [],\n      userDetails: false,\n      socketId: \"\",\n      currentSocket: \"\",\n      rightClickedUser: {},\n      userModalOpen: false,\n      namespace: null,\n      room: null,\n      serverId: null,\n      previousRoom: null,\n      currentChatroom: null,\n      editMessage: null,\n      messageMenu: false,\n      editingMessage: null,\n      newMessage: \"\",\n      hover: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener('keydown', this.detectEscape);\n    this.props.currentUser();\n    this.props.getUsers();\n    this.socket = io(ROOT_URL);\n    this.socket.on('connect', () => {\n      this.setState({\n        socketId: this.socket.id,\n        namespace: \"\".concat(ROOT_URL, \"/\").concat(this.props.serverId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        serverId: this.props.serverId,\n        currentChatroom: this.props.activeChatroom,\n        chatroomId: this.props.activeChatroomId\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.socket.id,\n        chatroomId: this.props.activeChatroomId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId)\n      });\n    });\n    this.socket.on('RECEIVE_CHATROOM_MESSAGES', data => {\n      this.setState({\n        messageMenu: false,\n        editMessage: null,\n        editingMessage: null,\n        newMessage: \"\"\n      }); // scroll to latest message after rendering messages in firefox\n\n      if (navigator.userAgent.search(\"Firefox\") > -1 || navigator.userAgent.search(\"Edge\") > -1) {\n        this.setState({\n          messages: data.reverse()\n        }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0 || navigator.userAgent.search(\"Edge\") < 0) {\n        this.setState({\n          messages: data\n        });\n      }\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.activeChatroomId !== this.state.chatroomId && this.state.chatroomId !== undefined) {\n      this.setState({\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(this.state.chatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(nextProps.activeChatroomId),\n        serverId: nextProps.serverId,\n        currentChatroom: nextProps.activeChatroom,\n        chatroomId: nextProps.activeChatroomId\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.state.socketId,\n        chatroomId: nextProps.activeChatroomId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(this.state.chatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(nextProps.activeChatroomId)\n      });\n    }\n\n    if (nextProps.user) {\n      const _nextProps$user = nextProps.user,\n            id = _nextProps$user.id,\n            username = _nextProps$user.username,\n            active = _nextProps$user.active,\n            type = _nextProps$user.type;\n      this.setState({\n        id: id,\n        username: username,\n        active: active,\n        type: type\n      });\n    }\n\n    if (nextProps.users && nextProps.users.length) {\n      const userList = [];\n\n      for (let i = 0; i < nextProps.users.length; i++) {\n        userList.push(nextProps.users[i]);\n      }\n\n      this.setState({\n        users: userList\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('LEAVE_CHATROOMS', {\n      room: this.state.room\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chatroom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chatarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chatarea-topbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: numbersign,\n      alt: \"channel\",\n      height: 16,\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, this.props.activeChatroom)), React.createElement(\"div\", {\n      id: \"chatareamessages\",\n      className: \"chatarea-messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n      return React.createElement(\"div\", {\n        id: \"message\" + index,\n        key: index,\n        onMouseEnter: () => {\n          this.setState({\n            hover: this.state.editingMessage || this.state.messageMenu || this.props.userId !== item.userId ? \"\" : \"message\" + index\n          });\n        },\n        onMouseLeave: () => {\n          this.setState({\n            hover: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chatarea-messages-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"chatarea-messages-user\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.contextMenu(event, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, item.username), React.createElement(Moment, {\n        format: \"MM/DD/YYYY\",\n        date: item.updatedAt,\n        className: \"chatarea-messages-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), this.state.hover === \"message\" + index ? React.createElement(\"span\", {\n        className: \"chatarea-messages-menu\",\n        onClick: () => {\n          this.openMessageMenu(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: editwhite,\n        height: 15,\n        width: 15,\n        alt: \"edit message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      })) : null, this.state.messageMenu && this.state.editMessage.id === item.id ? React.createElement(\"div\", {\n        className: \"chatarea-messages-editmenu\",\n        ref: this.ref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            editMessage: null,\n            messageMenu: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.editChatroomMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.deleteChatroomMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Delete\")) : null, this.state.userModalOpen && this.state.rightClickedUser.id === item.id ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: \"chatarea-messages-usermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            userModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.privateMessageUser();\n        },\n        className: \"chatarea-messages-usermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Send Message\"), this.props.serverUserList.length > 0 && this.props.serverUserList.some(serverItem => (serverItem['type'] !== 'owner' || serverItem['type'] !== 'admin') && serverItem['username'] !== this.state.username && serverItem['username'] === item.username) ? React.createElement(\"p\", {\n        onClick: item => {\n          this.kickUser(item);\n        },\n        className: \"chatarea-messages-usermodal-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Kick \", item.username) : null, this.props.serverUserList.length > 0 && this.props.serverUserList.some(serverItem => (serverItem['type'] === 'owner' || serverItem['type'] === 'admin') && serverItem['username'] === this.state.username && item.username !== this.state.username) ? React.createElement(\"p\", {\n        onClick: item => {\n          this.banUser(item);\n        },\n        className: \"chatarea-messages-usermodal-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Ban \", item.username) : null) : null), this.state.editingMessage !== null && this.state.editingMessage.id === item.id ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"chatarea-messages-editmessage\",\n        onChange: event => {\n          this.setState({\n            newMessage: event.target.value\n          });\n        },\n        value: this.state.newMessage,\n        onKeyDown: event => {\n          event.keyCode === 13 && event.shiftKey === false ? this.sendEditedMessage(event) : this.sendMessage(null);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"chatarea-messages-editmessage-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"escape to cancel \\u2022 enter to save\")) : React.createElement(\"p\", {\n        className: \"chatarea-messages-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, item.message));\n    }) : null), React.createElement(\"div\", {\n      className: \"chatarea-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Send a message!\",\n      type: \"text\",\n      onChange: event => {\n        this.setState({\n          message: event.target.value\n        });\n      },\n      value: this.state.message,\n      onKeyDown: event => {\n        event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"sidebarright\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebarright-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Filter users in server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sidebarright-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Room Owners\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'owner' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.contextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, user.type === 'owner' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      })) : null, user.type === 'owner' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }) : null, user.type === 'owner' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }) : null, user.type === 'owner' ? React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, user.username) : null);\n    }) : null, this.props.serverUserList.length > 0 && this.props.serverUserList.some(item => item['type'] === 'owner') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Administrators\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'admin' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.contextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, user.type === 'admin' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      })) : null, user.type === 'admin' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }) : null, user.type === 'admin' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }) : null, user.type === 'admin' ? React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, user.username) : null);\n    }) : null, this.props.serverUserList.length > 0 && this.props.serverUserList.some(item => item['type'] === 'admin') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Moderators\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'moderator' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.contextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, user.type === 'moderator' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      })) : null, user.type === 'moderator' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }) : null, user.type === 'moderator' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }) : null, user.type === 'moderator' ? React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, user.username) : null);\n    }) : null, this.props.serverUserList.length > 0 && this.props.serverUserList.some(item => item['type'] === 'moderator') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"Voice\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }), this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'voice' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.contextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, user.type === 'voice' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      })) : null, user.type === 'voice' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }) : null, user.type === 'voice' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }) : null, user.type === 'voice' ? React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, user.username) : null);\n    }) : null, this.props.serverUserList.length > 0 && this.props.serverUserList.some(item => item['type'] === 'voice') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"Users\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }), this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'user' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.contextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, user.type === 'user' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      })) : null, user.type === 'user' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }) : null, user.type === 'user' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }) : null, user.type === 'user' ? React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, user.username) : null);\n    }) : null));\n  }\n\n}\n\nfunction mapStateToProps({\n  usersReducer\n}) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Chatroom);","map":{"version":3,"sources":["/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/components/Chatroom/Chatroom.js"],"names":["React","Component","connect","actions","ROOT_URL","io","Moment","chatot","numbersign","editwhite","Chatroom","constructor","props","useOnClickOutside","ref","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","sendMessage","preventDefault","data","username","message","state","userId","chatroomId","room","socket","emit","setState","contextMenu","item","rightClickedUser","userModalOpen","messageMenu","editingMessage","privateMessageUser","messages","openMessageMenu","editMessage","deleteChatroomMessage","messageId","id","editChatroomMessage","newMessage","hover","detectEscape","keyCode","sendEditedMessage","kickUser","user","banUser","createRef","active","type","imageUrl","users","clickedUsername","clickedType","privateMessages","personalMessages","userDetails","socketId","currentSocket","namespace","serverId","previousRoom","currentChatroom","componentDidMount","window","currentUser","getUsers","on","activeChatroomId","activeChatroom","navigator","userAgent","search","reverse","length","element","getElementById","scrollIntoView","componentWillReceiveProps","nextProps","undefined","userList","i","push","componentWillUnmount","render","map","index","handleClick","updatedAt","serverUserList","some","serverItem","value","shiftKey","mapStateToProps","usersReducer","error","isLoading","success"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from \"socket.io-client\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Chatroom.css';\nimport chatot from '../../assets/images/chatot.png';\nimport numbersign from '../../assets/images/numbersign.png';\nimport editwhite from '../../assets/images/editwhite.png';\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.useOnClickOutside(this.ref, () => this.setState({ messageMenu: false, userModalOpen: false }));\n\n    this.state = {\n      id: \"\",\n      username: \"\",\n      active: false,\n      type: \"\",\n      imageUrl: \"\",\n      message: \"\",\n      messages: [],\n      users: [],\n      clickedUsername: \"\",\n      clickedType: \"\",\n      privateMessages: [],\n      personalMessages: [],\n      userDetails: false,\n      socketId: \"\",\n      currentSocket: \"\",\n      rightClickedUser: {},\n      userModalOpen: false,\n      namespace: null,\n      room: null,\n      serverId: null,\n      previousRoom: null,\n      currentChatroom: null,\n      editMessage: null,\n      messageMenu: false,\n      editingMessage: null,\n      newMessage: \"\",\n      hover: \"\"\n    }\n  }\n\n  useOnClickOutside = (ref, handler) => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener('keydown', this.detectEscape);\n    this.props.currentUser();\n    this.props.getUsers();\n\n    this.socket = io(ROOT_URL);\n\n    this.socket.on('connect', () => {\n      this.setState({ socketId: this.socket.id, namespace: `${ROOT_URL}/${this.props.serverId}`, room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`, previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`, serverId: this.props.serverId, currentChatroom: this.props.activeChatroom, chatroomId: this.props.activeChatroomId });\n\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.socket.id,\n        chatroomId: this.props.activeChatroomId,\n        previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`,\n        room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`\n      });\n    });\n\n    this.socket.on('RECEIVE_CHATROOM_MESSAGES', (data) => {\n      this.setState({ messageMenu: false, editMessage: null, editingMessage: null, newMessage: \"\" });\n      // scroll to latest message after rendering messages in firefox\n      if (navigator.userAgent.search(\"Firefox\") > -1 || navigator.userAgent.search(\"Edge\") > -1) {\n        this.setState({ messages: data.reverse() }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0 || navigator.userAgent.search(\"Edge\") < 0) {\n        this.setState({ messages: data });\n      }\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.activeChatroomId !== this.state.chatroomId && this.state.chatroomId !== undefined) {\n      this.setState({\n        previousRoom: `${ROOT_URL}/chatroom/${nextProps.serverId}/${this.state.chatroomId}`,\n        room: `${ROOT_URL}/chatroom/${nextProps.serverId}/${nextProps.activeChatroomId}`,\n        serverId: nextProps.serverId,\n        currentChatroom: nextProps.activeChatroom,\n        chatroomId: nextProps.activeChatroomId\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.state.socketId,\n        chatroomId: nextProps.activeChatroomId,\n        previousRoom: `${ROOT_URL}/chatroom/${nextProps.serverId}/${this.state.chatroomId}`,\n        room: `${ROOT_URL}/chatroom/${nextProps.serverId}/${nextProps.activeChatroomId}`\n      });\n    }\n\n    if (nextProps.user) {\n      const { id, username, active, type } = nextProps.user;\n      this.setState({\n        id: id,\n        username: username,\n        active: active,\n        type: type\n      });\n    }\n\n    if (nextProps.users && nextProps.users.length) {\n      const userList = [];\n      for(let i = 0; i < nextProps.users.length; i++) {\n        userList.push(nextProps.users[i]);\n      }\n      this.setState({ users: userList });\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('LEAVE_CHATROOMS', {\n      room: this.state.room\n    });\n  }\n\n  sendMessage = (event) => {\n    if (event) {\n      event.preventDefault();\n      const data = {\n        username: this.props.username,\n        message: this.state.message,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        room: this.state.room\n      };\n      this.socket.emit('CHATROOM_MESSAGE', data);\n      this.setState({ message: \"\" });\n    }\n  }\n\n  contextMenu = (event, item) => {\n    event.preventDefault();\n    this.setState({ rightClickedUser: item, userModalOpen: true, messageMenu: false, editingMessage: null });\n  }\n\n  privateMessageUser = () => {\n    this.setState({ messages: [] });\n    this.props.privateMessageUser(this.state.rightClickedUser);\n  }\n\n  openMessageMenu = (item) => {\n    this.setState({ messageMenu: true, editMessage: item });\n  }\n\n  deleteChatroomMessage = () => {\n    const data = {\n      username: this.props.username,\n      message: this.state.message,\n      userId: this.props.userId,\n      chatroomId: this.state.chatroomId,\n      messageId: this.state.editMessage.id,\n      room: this.state.room\n    };\n    this.socket.emit('DELETE_CHATROOM_MESSAGE', data);\n  }\n\n  editChatroomMessage = () => {\n    this.setState({ editingMessage: this.state.editMessage, newMessage: this.state.editMessage.message, hover: \"\" }, () => {\n      this.setState({ editMessage: null, messageMenu: false });\n    });\n  }\n\n  detectEscape = (event) => {\n    if (event.keyCode === 27 && !this.state.messageMenu) {\n      this.setState({ editingMessage: this.state.editMessage, newMessage: \"\" });\n    }\n  }\n\n  sendEditedMessage = (event) => {\n    event.preventDefault();\n    const data = {\n      username: this.props.username,\n      message: this.state.newMessage,\n      userId: this.props.userId,\n      chatroomId: this.state.chatroomId,\n      messageId: this.state.editingMessage.id,\n      room: this.state.room\n    };\n    this.socket.emit('EDIT_CHATROOM_MESSAGE', data);\n  }\n\n  kickUser = (user) => {\n\n  }\n\n  banUser = (user) => {\n\n  }\n\n  render() {\n    return (\n      <div className=\"chatroom\">\n        <div className=\"chatarea\">\n          <div className=\"chatarea-topbar\">\n            <img src={numbersign} alt=\"channel\" height={16} width={16} /><span>{this.props.activeChatroom}</span>\n          </div>\n          <div id=\"chatareamessages\" className=\"chatarea-messages\">\n            {this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n              return (\n                <div id={\"message\" + index} key={index} onMouseEnter={() => { this.setState({ hover: (this.state.editingMessage || this.state.messageMenu || (this.props.userId !== item.userId)) ? \"\" : (\"message\" + index) }) }} onMouseLeave={() => { this.setState({ hover: \"\" }); }}>\n                  <div className=\"chatarea-messages-container\">\n                    <span className=\"chatarea-messages-user\" onClick={this.handleClick} onContextMenu={(event) => { this.contextMenu(event, item); }}>{item.username}</span>\n                    <Moment format=\"MM/DD/YYYY\" date={item.updatedAt} className=\"chatarea-messages-time\" />\n                    {this.state.hover === (\"message\" + index) ? <span className=\"chatarea-messages-menu\" onClick={() => { this.openMessageMenu(item); }}><img src={editwhite} height={15} width={15} alt=\"edit message\" /></span> : null}\n                    {this.state.messageMenu && this.state.editMessage.id === item.id ?\n                      <div className=\"chatarea-messages-editmenu\" ref={this.ref}>\n                        <span onClick={() => { this.setState({ editMessage: null, messageMenu: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.editChatroomMessage(); }}>Edit</p>\n                        <p onClick={() => { this.deleteChatroomMessage(); }}>Delete</p>\n                      </div>\n                    : null}\n                    {this.state.userModalOpen && this.state.rightClickedUser.id === item.id ?\n                      <div ref={this.ref} className=\"chatarea-messages-usermodal\">\n                        <span onClick={() => { this.setState({ userModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.privateMessageUser(); }} className=\"chatarea-messages-usermodal-privatemessage\">Send Message</p>\n\n                        {this.props.serverUserList.length > 0\n                        && this.props.serverUserList.some(serverItem => (serverItem['type'] !== 'owner' || serverItem['type'] !== 'admin')\n                        && serverItem['username'] !== this.state.username\n                        && serverItem['username'] === item.username)\n                        ? <p onClick={(item) => { this.kickUser(item); }} className=\"chatarea-messages-usermodal-kick\">Kick {item.username}</p> : null}\n\n                        {this.props.serverUserList.length > 0 && this.props.serverUserList.some(serverItem => (serverItem['type'] === 'owner' || serverItem['type'] === 'admin') && serverItem['username'] === this.state.username && item.username !== this.state.username)\n                        ? <p onClick={(item) => { this.banUser(item); }} className=\"chatarea-messages-usermodal-kick\">Ban {item.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                  {this.state.editingMessage !== null && this.state.editingMessage.id === item.id ? <span><input className=\"chatarea-messages-editmessage\" onChange={(event) => { this.setState({ newMessage: event.target.value }) }} value={this.state.newMessage} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendEditedMessage(event) : this.sendMessage(null) }} /><p className=\"chatarea-messages-editmessage-note\">escape to cancel • enter to save</p></span> : <p className=\"chatarea-messages-message\">{item.message}</p>}\n                </div>\n              )\n            }) : null}\n          </div>\n          <div className=\"chatarea-container\">\n            <input placeholder=\"Send a message!\" type=\"text\" onChange={(event) => { this.setState({ message: event.target.value }); }} value={this.state.message} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null) }}></input>\n          </div>\n        </div>\n        <div className=\"sidebarright\">\n          <div className=\"sidebarright-container\">\n            <input placeholder=\"Filter users in server\"></input>\n          </div>\n          <div className=\"sidebarright-border\" />\n          <div className=\"sidebarright-authority\">\n            <span>Room Owners</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index)  => {\n            return (\n              <div key={index} className={user.type === 'owner' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.contextMenu(event, user); }}>\n                {user.type === 'owner' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'owner' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'owner' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'owner' ? <span className=\"sidebarright-user\">{user.username}</span> : null}\n              </div>\n            );\n          }) : null}\n          {this.props.serverUserList.length > 0 && this.props.serverUserList.some(item => item['type'] === 'owner') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Administrators</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index)  => {\n            return (\n              <div key={index} className={user.type === 'admin' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.contextMenu(event, user); }}>\n                {user.type === 'admin' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'admin' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'admin' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'admin' ? <span className=\"sidebarright-user\">{user.username}</span> : null}\n              </div>\n            );\n          }) : null}\n          {this.props.serverUserList.length > 0 && this.props.serverUserList.some(item => item['type'] === 'admin') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Moderators</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index)  => {\n            return (\n              <div key={index} className={user.type === 'moderator' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.contextMenu(event, user); }}>\n                {user.type === 'moderator' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'moderator' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'moderator' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'moderator' ? <span className=\"sidebarright-user\">{user.username}</span> : null}\n              </div>\n            );\n          }) : null}\n          {this.props.serverUserList.length > 0 && this.props.serverUserList.some(item => item['type'] === 'moderator') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Voice</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index) => {\n            return (\n              <div key={index} className={user.type === 'voice' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.contextMenu(event, user); }}>\n                {user.type === 'voice' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'voice' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'voice' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'voice' ? <span className=\"sidebarright-user\">{user.username}</span> : null}\n              </div>\n            );\n          }) : null}\n          {this.props.serverUserList.length > 0 && this.props.serverUserList.some(item => item['type'] === 'voice') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Users</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.props.serverUserList.length > 0 ? this.props.serverUserList.map((user, index) => {\n            return (\n              <div key={index} className={user.type === 'user' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.contextMenu(event, user); }}>\n                {user.type === 'user' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'user' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'user' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'user' ? <span className=\"sidebarright-user\">{user.username}</span> : null}\n              </div>\n            )\n          }) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Chatroom);"]},"metadata":{},"sourceType":"module"}