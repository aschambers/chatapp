{"ast":null,"code":"import _objectSpread from \"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport { ROOT_URL } from '../../../config/networkSettings';\nimport { CREATING_CATEGORY, CREATE_CATEGORY_FAIL, CREATE_CATEGORY_SUCCESS, FINDING_CATEGORY, FIND_CATEGORY_FAIL, FIND_CATEGORY_SUCCESS, RESET_CATEGORY_VALUES } from '../../types'; // Initial States\n\nexport const initialState = {\n  isLoading: false,\n  error: false,\n  success: false,\n  user: null\n}; // Reducers\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case CREATING_CATEGORY:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case CREATE_CATEGORY_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        findCategoryError: false,\n        findCategorySuccess: true,\n        categoryList: action.payload\n      });\n\n    case CREATE_CATEGORY_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case FINDING_CATEGORY:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case FIND_CATEGORY_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        findCategoryError: false,\n        findCategorySuccess: true,\n        categoryList: action.payload\n      });\n\n    case FIND_CATEGORY_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case RESET_CATEGORY_VALUES:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: false,\n        findCategoryError: false,\n        findCategorySuccess: false\n      });\n\n    default:\n      return state;\n  }\n}); // Actions\n\nexport const categoryCreate = params => async dispatch => {\n  dispatch({\n    type: CREATING_CATEGORY\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/categoryCreate\"), params);\n\n    if (response.data) {\n      dispatch({\n        type: CREATE_CATEGORY_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: CREATE_CATEGORY_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: CREATE_CATEGORY_FAIL\n    });\n  }\n};\nexport const categoryFindAll = params => async dispatch => {\n  dispatch({\n    type: FINDING_CATEGORY\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/categoryFindAll\"), params);\n\n    if (response.data) {\n      dispatch({\n        type: FIND_CATEGORY_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: FIND_CATEGORY_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: FIND_CATEGORY_FAIL\n    });\n  }\n};\nexport function resetCategoryValues() {\n  return function (dispatch) {\n    dispatch({\n      type: RESET_CATEGORY_VALUES\n    });\n  };\n}\n;","map":{"version":3,"sources":["/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/redux/modules/categories/categories.js"],"names":["axios","ROOT_URL","CREATING_CATEGORY","CREATE_CATEGORY_FAIL","CREATE_CATEGORY_SUCCESS","FINDING_CATEGORY","FIND_CATEGORY_FAIL","FIND_CATEGORY_SUCCESS","RESET_CATEGORY_VALUES","initialState","isLoading","error","success","user","state","action","type","findCategoryError","findCategorySuccess","categoryList","payload","categoryCreate","params","dispatch","response","post","data","err","categoryFindAll","resetCategoryValues"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { ROOT_URL } from '../../../config/networkSettings';\n\nimport {\n  CREATING_CATEGORY,\n  CREATE_CATEGORY_FAIL,\n  CREATE_CATEGORY_SUCCESS,\n  FINDING_CATEGORY,\n  FIND_CATEGORY_FAIL,\n  FIND_CATEGORY_SUCCESS,\n  RESET_CATEGORY_VALUES\n} from '../../types';\n\n// Initial States\nexport const initialState = {\n  isLoading: false,\n  error: false,\n  success: false,\n  user: null\n};\n\n// Reducers\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CREATING_CATEGORY:\n      return {\n        ...state, isLoading: true, error: false, success: false\n      };\n    case CREATE_CATEGORY_SUCCESS:\n      return {\n        ...state, isLoading: false, findCategoryError: false, findCategorySuccess: true, categoryList: action.payload\n      };\n    case CREATE_CATEGORY_FAIL:\n      return {\n        ...state, isLoading: false, error: true, success: false\n      };\n    case FINDING_CATEGORY:\n      return {\n        ...state, isLoading: true, error: false, success: false\n      };\n    case FIND_CATEGORY_SUCCESS:\n      return {\n        ...state, isLoading: false, findCategoryError: false, findCategorySuccess: true, categoryList: action.payload\n      };\n    case FIND_CATEGORY_FAIL:\n      return {\n        ...state, isLoading: false, error: true, success: false\n      };\n    case RESET_CATEGORY_VALUES:\n      return {\n        ...state, isLoading: false, error: false, success: false,\n        findCategoryError: false, findCategorySuccess: false\n      }\n    default:\n      return state;\n  }\n};\n\n// Actions\nexport const categoryCreate = params => async dispatch => {\n  dispatch({ type: CREATING_CATEGORY });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/categoryCreate`, params);\n    if (response.data) {\n      dispatch({ type: CREATE_CATEGORY_SUCCESS, payload: response.data });\n    } else {\n      dispatch({ type: CREATE_CATEGORY_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: CREATE_CATEGORY_FAIL });\n  }\n};\n\nexport const categoryFindAll = params => async dispatch => {\n  dispatch({ type: FINDING_CATEGORY });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/categoryFindAll`, params);\n    if (response.data) {\n      dispatch({ type: FIND_CATEGORY_SUCCESS, payload: response.data });\n    } else {\n      dispatch({ type: FIND_CATEGORY_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: FIND_CATEGORY_FAIL });\n  }\n};\n\nexport function resetCategoryValues() {\n  return function(dispatch) {\n    dispatch({ type: RESET_CATEGORY_VALUES });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}