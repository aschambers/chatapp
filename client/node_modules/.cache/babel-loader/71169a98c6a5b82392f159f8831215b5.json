{"ast":null,"code":"var _jsxFileName = \"/Users/metabou/Desktop/chatapp/client/src/components/ChatroomFriend/ChatroomFriend.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from \"socket.io-client\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './ChatroomFriend.css';\nimport editwhite from '../../assets/images/editwhite.png';\nimport emoji from '../../assets/images/emoji.png';\nimport EmojiPicker from 'emoji-picker-react';\n\nclass ChatroomFriend extends Component {\n  constructor(props) {\n    super(props);\n\n    this.useOnClickOutside = (ref, handler) => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    };\n\n    this.sendMessage = event => {\n      if (event) {\n        event.preventDefault();\n        const data = {\n          username: this.props.username,\n          message: this.state.message,\n          userId: this.props.userId,\n          friendId: this.props.friendId !== null ? this.props.friendId : this.props.userId,\n          room: \"\".concat(ROOT_URL, \"/friends/\").concat(this.props.groupId),\n          previousRoom: \"\".concat(ROOT_URL, \"/friends/\").concat(this.state.groupId)\n        };\n\n        if (data.userId === data.friendId) {\n          this.socket.emit('SEND_PERSONAL_MESSAGE', data);\n        } else if (data.userId !== data.friendId) {\n          this.socket.emit('SEND_PRIVATE_MESSAGE', data);\n        }\n\n        this.setState({\n          message: \"\"\n        });\n      }\n    };\n\n    this.openMessageMenu = item => {\n      this.setState({\n        messageMenu: true,\n        editMessage: item\n      });\n    };\n\n    this.deleteUserMessage = () => {\n      const data = {\n        socketId: this.state.socketId,\n        userId: this.props.userId,\n        friendId: this.props.friendId !== null ? this.props.friendId : this.props.userId,\n        messageId: this.state.editMessage.id,\n        room: \"\".concat(ROOT_URL, \"/friends/\").concat(this.props.groupId)\n      };\n      this.socket.emit('DELETE_USER_MESSAGE', data);\n    };\n\n    this.editUserMessage = () => {\n      this.setState({\n        editingMessage: this.state.editMessage,\n        newMessage: this.state.editMessage.message,\n        hover: \"\"\n      }, () => {\n        this.setState({\n          editMessage: null,\n          messageMenu: false\n        });\n      });\n    };\n\n    this.detectEscape = event => {\n      if (event.keyCode === 27 && !this.state.messageMenu) {\n        this.setState({\n          editingMessage: this.state.editMessage,\n          newMessage: \"\"\n        });\n      }\n    };\n\n    this.sendEditedMessage = event => {\n      event.preventDefault();\n      const data = {\n        socketId: this.state.socketId,\n        message: this.state.newMessage,\n        userId: this.props.userId,\n        friendId: this.props.friendId !== null ? this.props.friendId : this.props.userId,\n        messageId: this.state.editingMessage.id,\n        room: \"\".concat(ROOT_URL, \"/friends/\").concat(this.props.groupId)\n      };\n      this.socket.emit('EDIT_USER_MESSAGE', data);\n    };\n\n    this.showEmojiPicker = () => {\n      let showEmojiPicker = this.state.showEmojiPicker;\n      this.setState({\n        showEmojiPicker: !showEmojiPicker\n      });\n    };\n\n    this.handleEmojiClick = code => {\n      this.setState({\n        message: this.state.message + String.fromCodePoint(\"0x\" + code)\n      });\n    };\n\n    this.hideEmojiPicker = () => {\n      if (this.state.showEmojiPicker) {\n        this.setState({\n          showEmojiPicker: false\n        });\n      }\n    };\n\n    this.ref = React.createRef();\n    this.useOnClickOutside(this.ref, () => this.setState({\n      messageMenu: false\n    }));\n    this.state = {\n      message: \"\",\n      messages: [],\n      socketId: \"\",\n      currentSocket: \"\",\n      userId: null,\n      friendId: null,\n      groupId: null,\n      room: null,\n      previousRoom: null,\n      editMessage: null,\n      messageMenu: false,\n      editingMessage: null,\n      newMessage: \"\",\n      hover: \"\",\n      showEmojiPicker: false\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener('keydown', this.detectEscape);\n    this.socket = io(ROOT_URL);\n    this.socket.on('connect', () => {\n      this.setState({\n        socketId: this.socket.id,\n        userId: this.props.userId,\n        friendId: this.props.friendId,\n        groupId: this.props.groupId\n      });\n      const data = {\n        socketId: this.socket.id,\n        userId: this.props.userId,\n        friendId: this.props.friendId !== null ? this.props.friendId : this.props.userId,\n        room: \"\".concat(ROOT_URL, \"/friends/\").concat(this.props.groupId),\n        previousRoom: \"\".concat(ROOT_URL, \"/friends/\").concat(this.props.groupId)\n      };\n\n      if (data.userId === data.friendId) {\n        this.socket.emit('GET_PERSONAL_MESSAGES', data);\n      } else if (data.userId !== data.friendId) {\n        this.socket.emit('GET_PRIVATE_MESSAGES', data);\n      }\n    });\n    this.socket.on('RECEIVE_PRIVATE_MESSAGES', data => {\n      this.setState({\n        messageMenu: false,\n        editMessage: null,\n        editingMessage: null,\n        newMessage: \"\"\n      }); // scroll to latest message after rendering messages in firefox\n\n      if (navigator.userAgent.search(\"Firefox\") > -1 || navigator.userAgent.search(\"Edge\") > -1) {\n        this.setState({\n          messages: data.reverse()\n        }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0 || navigator.userAgent.search(\"Edge\") < 0) {\n        this.setState({\n          messages: data\n        });\n      }\n    });\n    this.socket.on('RECEIVE_PERSONAL_MESSAGES', data => {\n      this.setState({\n        messageMenu: false,\n        editMessage: null,\n        editingMessage: null,\n        newMessage: \"\"\n      }); // scroll to latest message after rendering messages in firefox\n\n      if (navigator.userAgent.search(\"Firefox\") > -1) {\n        this.setState({\n          messages: data.reverse()\n        }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0) {\n        this.setState({\n          messages: data\n        });\n      }\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.groupId !== this.state.groupId && this.state.groupId !== undefined) {\n      this.setState({\n        userId: nextProps.userId,\n        friendId: nextProps.friendId,\n        groupId: nextProps.groupId,\n        room: \"\".concat(ROOT_URL, \"/friends/\").concat(nextProps.groupId),\n        previousRoom: \"\".concat(ROOT_URL, \"/friends/\").concat(this.state.groupId)\n      });\n      const data = {\n        socketId: this.state.socketId,\n        userId: nextProps.userId,\n        friendId: nextProps.friendId,\n        room: \"\".concat(ROOT_URL, \"/friends/\").concat(nextProps.groupId),\n        previousRoom: \"\".concat(ROOT_URL, \"/friends/\").concat(this.state.groupId)\n      };\n\n      if (data.userId === data.friendId) {\n        this.socket.emit('GET_PERSONAL_MESSAGES', data);\n      } else if (data.userId !== data.friendId) {\n        this.socket.emit('GET_PRIVATE_MESSAGES', data);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('LEAVE_CHATROOMS', {\n      room: this.state.room\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chatroom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"privatechatarea\",\n      onClick: () => {\n        this.hideEmojiPicker();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"privatechatareamessages\",\n      className: \"privatechatarea-messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n      return React.createElement(\"div\", {\n        id: \"message\" + index,\n        key: index,\n        onMouseEnter: () => {\n          this.setState({\n            hover: this.state.editingMessage || this.state.messageMenu || this.props.userId !== item.userId ? \"\" : \"message\" + index\n          });\n        },\n        onMouseLeave: () => {\n          this.setState({\n            hover: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"privatechatarea-messages-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"privatechatarea-messages-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, item.username), React.createElement(Moment, {\n        format: \"MM/DD/YYYY\",\n        date: item.updatedAt,\n        className: \"privatechatarea-messages-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), this.state.hover === \"message\" + index ? React.createElement(\"span\", {\n        className: \"privatechatarea-messages-menu\",\n        onClick: () => {\n          this.openMessageMenu(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: editwhite,\n        height: 15,\n        width: 15,\n        alt: \"edit message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      })) : null, this.state.messageMenu && this.state.editMessage.id === item.id ? React.createElement(\"div\", {\n        className: \"privatechatarea-messages-editmenu\",\n        ref: this.ref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            editMessage: null,\n            messageMenu: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.editUserMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.deleteUserMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Delete\")) : null), this.state.editingMessage !== null && this.state.editingMessage.id === item.id ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"privatechatarea-messages-editmessage\",\n        onChange: event => {\n          this.setState({\n            newMessage: event.target.value\n          });\n        },\n        value: this.state.newMessage,\n        onKeyDown: event => {\n          event.keyCode === 13 && event.shiftKey === false ? this.sendEditedMessage(event) : this.sendMessage(null);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"privatechatarea-messages-editmessage-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"escape to cancel \\u2022 enter to save\")) : React.createElement(\"p\", {\n        className: \"privatechatarea-messages-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, item.message));\n    }) : null), this.state.showEmojiPicker ? React.createElement(\"div\", {\n      className: \"friendemojipickerchatroom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(EmojiPicker, {\n      style: {\n        width: \"-webkit-fill-available\",\n        zIndex: 10\n      },\n      emojiResolution: 32,\n      onEmojiClick: event => {\n        console.log(event);\n        this.handleEmojiClick(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      className: \"privatechatarea-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Send a message!\",\n      type: \"text\",\n      onChange: event => {\n        this.setState({\n          message: event.target.value\n        });\n      },\n      value: this.state.message,\n      onKeyDown: event => {\n        event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: emoji,\n      className: \"friendemojiselectchatroom\",\n      onClick: () => {\n        this.showEmojiPicker();\n      },\n      alt: \"emoji-picker-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapStateToProps({\n  usersReducer\n}) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(ChatroomFriend);","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/components/ChatroomFriend/ChatroomFriend.js"],"names":["React","Component","connect","actions","ROOT_URL","io","Moment","editwhite","emoji","EmojiPicker","ChatroomFriend","constructor","props","useOnClickOutside","ref","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","sendMessage","preventDefault","data","username","message","state","userId","friendId","room","groupId","previousRoom","socket","emit","setState","openMessageMenu","item","messageMenu","editMessage","deleteUserMessage","socketId","messageId","id","editUserMessage","editingMessage","newMessage","hover","detectEscape","keyCode","sendEditedMessage","showEmojiPicker","handleEmojiClick","code","String","fromCodePoint","hideEmojiPicker","createRef","messages","currentSocket","componentDidMount","window","on","navigator","userAgent","search","reverse","length","element","getElementById","scrollIntoView","componentWillReceiveProps","nextProps","undefined","componentWillUnmount","render","map","index","updatedAt","value","shiftKey","width","zIndex","console","log","mapStateToProps","usersReducer","error","isLoading","success","user","users"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from \"socket.io-client\";\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './ChatroomFriend.css';\nimport editwhite from '../../assets/images/editwhite.png';\nimport emoji from '../../assets/images/emoji.png';\nimport EmojiPicker from 'emoji-picker-react';\n\nclass ChatroomFriend extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.useOnClickOutside(this.ref, () => this.setState({ messageMenu: false }));\n\n    this.state = {\n      message: \"\",\n      messages: [],\n      socketId: \"\",\n      currentSocket: \"\",\n      userId: null,\n      friendId: null,\n      groupId: null,\n      room: null,\n      previousRoom: null,\n      editMessage: null,\n      messageMenu: false,\n      editingMessage: null,\n      newMessage: \"\",\n      hover: \"\",\n      showEmojiPicker: false\n    }\n  }\n\n  useOnClickOutside = (ref, handler) => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener('keydown', this.detectEscape);\n    this.socket = io(ROOT_URL);\n\n    this.socket.on('connect', () => {\n      this.setState({ socketId: this.socket.id, userId: this.props.userId, friendId: this.props.friendId, groupId: this.props.groupId });\n\n      const data = {\n        socketId: this.socket.id,\n        userId: this.props.userId,\n        friendId: this.props.friendId !== null ? this.props.friendId: this.props.userId,\n        room: `${ROOT_URL}/friends/${this.props.groupId}`,\n        previousRoom: `${ROOT_URL}/friends/${this.props.groupId}`\n      };\n      if (data.userId === data.friendId) {\n        this.socket.emit('GET_PERSONAL_MESSAGES', data);\n      } else if (data.userId !== data.friendId) {\n        this.socket.emit('GET_PRIVATE_MESSAGES', data);\n      }\n    });\n\n    this.socket.on('RECEIVE_PRIVATE_MESSAGES', (data) => {\n      this.setState({ messageMenu: false, editMessage: null, editingMessage: null, newMessage: \"\" });\n      // scroll to latest message after rendering messages in firefox\n      if (navigator.userAgent.search(\"Firefox\") > -1 || navigator.userAgent.search(\"Edge\") > -1) {\n        this.setState({ messages: data.reverse() }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0 || navigator.userAgent.search(\"Edge\") < 0) {\n        this.setState({ messages: data });\n      }\n    });\n\n    this.socket.on('RECEIVE_PERSONAL_MESSAGES', (data) => {\n      this.setState({ messageMenu: false, editMessage: null, editingMessage: null, newMessage: \"\" });\n      // scroll to latest message after rendering messages in firefox\n      if (navigator.userAgent.search(\"Firefox\") > -1) {\n        this.setState({ messages: data.reverse() }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0) {\n        this.setState({ messages: data });\n      }\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.groupId !== this.state.groupId && this.state.groupId !== undefined) {\n      this.setState({\n        userId: nextProps.userId,\n        friendId: nextProps.friendId,\n        groupId: nextProps.groupId,\n        room: `${ROOT_URL}/friends/${nextProps.groupId}`,\n        previousRoom: `${ROOT_URL}/friends/${this.state.groupId}`\n      });\n      const data = {\n        socketId: this.state.socketId,\n        userId: nextProps.userId,\n        friendId: nextProps.friendId,\n        room: `${ROOT_URL}/friends/${nextProps.groupId}`,\n        previousRoom: `${ROOT_URL}/friends/${this.state.groupId}`\n      };\n      if (data.userId === data.friendId) {\n        this.socket.emit('GET_PERSONAL_MESSAGES', data);\n      } else if (data.userId !== data.friendId) {\n        this.socket.emit('GET_PRIVATE_MESSAGES', data);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('LEAVE_CHATROOMS', {\n      room: this.state.room\n    });\n  }\n\n  sendMessage = (event) => {\n    if (event) {\n      event.preventDefault();\n      const data = {\n        username: this.props.username,\n        message: this.state.message,\n        userId: this.props.userId,\n        friendId: this.props.friendId !== null ? this.props.friendId : this.props.userId,\n        room: `${ROOT_URL}/friends/${this.props.groupId}`,\n        previousRoom: `${ROOT_URL}/friends/${this.state.groupId}`\n      }\n      if (data.userId === data.friendId) {\n        this.socket.emit('SEND_PERSONAL_MESSAGE', data);\n      } else if (data.userId !== data.friendId) {\n        this.socket.emit('SEND_PRIVATE_MESSAGE', data);\n      }\n      this.setState({ message: \"\" });\n    }\n  }\n\n  openMessageMenu = (item) => {\n    this.setState({ messageMenu: true, editMessage: item });\n  }\n\n  deleteUserMessage = () => {\n    const data = {\n      socketId: this.state.socketId,\n      userId: this.props.userId,\n      friendId: this.props.friendId !== null ? this.props.friendId : this.props.userId,\n      messageId: this.state.editMessage.id,\n      room: `${ROOT_URL}/friends/${this.props.groupId}`\n    };\n    this.socket.emit('DELETE_USER_MESSAGE', data);\n  }\n\n  editUserMessage = () => {\n    this.setState({ editingMessage: this.state.editMessage, newMessage: this.state.editMessage.message, hover: \"\" }, () => {\n      this.setState({ editMessage: null, messageMenu: false });\n    });\n  }\n\n  detectEscape = (event) => {\n    if (event.keyCode === 27 && !this.state.messageMenu) {\n      this.setState({ editingMessage: this.state.editMessage, newMessage: \"\" });\n    }\n  }\n\n  sendEditedMessage = (event) => {\n    event.preventDefault();\n    const data = {\n      socketId: this.state.socketId,\n      message: this.state.newMessage,\n      userId: this.props.userId,\n      friendId: this.props.friendId !== null ? this.props.friendId : this.props.userId,\n      messageId: this.state.editingMessage.id,\n      room: `${ROOT_URL}/friends/${this.props.groupId}`\n    };\n    this.socket.emit('EDIT_USER_MESSAGE', data);\n  }\n\n  showEmojiPicker = () => {\n    let { showEmojiPicker } = this.state;\n    this.setState({ showEmojiPicker: !showEmojiPicker });\n  }\n\n  handleEmojiClick = (code) => {\n    this.setState({\n      message: this.state.message + String.fromCodePoint(\"0x\" + code)\n    });\n  }\n\n  hideEmojiPicker = () => {\n    if (this.state.showEmojiPicker) {\n      this.setState({ showEmojiPicker: false });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"chatroom\">\n        <div className=\"privatechatarea\" onClick={() => { this.hideEmojiPicker() }}>\n          <div id=\"privatechatareamessages\" className=\"privatechatarea-messages\">\n            {this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n              return (\n                <div id={\"message\" + index} key={index} onMouseEnter={() => { this.setState({ hover: (this.state.editingMessage || this.state.messageMenu || (this.props.userId !== item.userId)) ? \"\" : (\"message\" + index) }) }} onMouseLeave={() => { this.setState({ hover: \"\" }); }}>\n                  <p className=\"privatechatarea-messages-container\">\n                    <span className=\"privatechatarea-messages-user\">{item.username}</span>\n                    <Moment format=\"MM/DD/YYYY\" date={item.updatedAt} className=\"privatechatarea-messages-time\" />\n                    {this.state.hover === (\"message\" + index) ? <span className=\"privatechatarea-messages-menu\" onClick={() => { this.openMessageMenu(item); }}><img src={editwhite} height={15} width={15} alt=\"edit message\" /></span> : null}\n                    {this.state.messageMenu && this.state.editMessage.id === item.id ?\n                      <div className=\"privatechatarea-messages-editmenu\" ref={this.ref}>\n                        <span onClick={() => { this.setState({ editMessage: null, messageMenu: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.editUserMessage(); }}>Edit</p>\n                        <p onClick={() => { this.deleteUserMessage(); }}>Delete</p>\n                      </div>\n                    : null}\n                  </p>\n                  {this.state.editingMessage !== null && this.state.editingMessage.id === item.id ? <span><input className=\"privatechatarea-messages-editmessage\" onChange={(event) => { this.setState({ newMessage: event.target.value }) }} value={this.state.newMessage} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendEditedMessage(event) : this.sendMessage(null) }} /><p className=\"privatechatarea-messages-editmessage-note\">escape to cancel • enter to save</p></span> : <p className=\"privatechatarea-messages-message\">{item.message}</p>}\n                </div>\n              )\n            }) : null}\n          </div>\n          {this.state.showEmojiPicker ?\n            <div className=\"friendemojipickerchatroom\">\n              <EmojiPicker\n                style={{ width: \"-webkit-fill-available\", zIndex: 10 }}\n                emojiResolution={32}\n                onEmojiClick={(event) => { console.log(event); this.handleEmojiClick(event); }}\n              />\n            </div>\n          : null}\n          <div className=\"privatechatarea-container\">\n            <input placeholder=\"Send a message!\" type=\"text\" onChange={(event) => { this.setState({ message: event.target.value }); }} value={this.state.message} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null) }}></input>\n            <img src={emoji} className=\"friendemojiselectchatroom\" onClick={() => { this.showEmojiPicker(); }} alt=\"emoji-picker-icon\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(ChatroomFriend);"]},"metadata":{},"sourceType":"module"}