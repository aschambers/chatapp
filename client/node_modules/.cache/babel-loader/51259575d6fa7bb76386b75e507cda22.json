{"ast":null,"code":"import _objectSpread from \"/Users/metabou/Desktop/chatapp/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/metabou/Desktop/chatapp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metabou/Desktop/chatapp/client/src/components/Draggable/Draggable.js\";\nimport React, { useState } from 'react';\nimport DragItem from '../../components/DragItem';\nimport DropItem from '../../components/DropItem';\nimport './Draggable.css';\nconst todos = {\n  1: {\n    text: 'First thing',\n    state: 'todo'\n  },\n  2: {\n    text: 'Second thing',\n    state: 'todo'\n  },\n  3: {\n    text: 'Third thing',\n    state: 'todo'\n  },\n  4: {\n    text: 'Fourth thing',\n    state: 'todo'\n  }\n};\n\nfunction Draggable() {\n  const _useState = useState(todos),\n        _useState2 = _slicedToArray(_useState, 2),\n        todoValues = _useState2[0],\n        setValue = _useState2[1];\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(DropItem, {\n    heading: \"Todos\",\n    onDrop: id => {\n      const currentTodo = _objectSpread({}, todoValues[id]);\n\n      currentTodo.state = 'todo';\n      setValue(_objectSpread({}, todoValues, {\n        [id]: currentTodo\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, Object.keys(todoValues).map(key => _objectSpread({\n    id: key\n  }, todoValues[key])).filter(todo => todo.state === 'todo').map(todo => React.createElement(DragItem, {\n    id: todo.id,\n    data: todo,\n    key: todo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))), React.createElement(DropItem, {\n    heading: \"WIP\",\n    onDrop: id => {\n      const currentTodo = _objectSpread({}, todoValues[id]);\n\n      currentTodo.state = 'wip';\n      setValue(_objectSpread({}, todoValues, {\n        [id]: currentTodo\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, Object.keys(todoValues).map(key => _objectSpread({\n    id: key\n  }, todoValues[key])).filter(todo => todo.state === 'wip').map(todo => React.createElement(DragItem, {\n    id: todo.id,\n    data: todo,\n    key: todo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))), React.createElement(DropItem, {\n    heading: \"Done\",\n    onDrop: id => {\n      const currentTodo = _objectSpread({}, todoValues[id]);\n\n      currentTodo.state = 'done';\n      setValue(_objectSpread({}, todoValues, {\n        [id]: currentTodo\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, Object.keys(todoValues).map(key => _objectSpread({\n    id: key\n  }, todoValues[key])).filter(todo => todo.state === 'done').map(todo => React.createElement(DragItem, {\n    id: todo.id,\n    data: todo,\n    key: todo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })))));\n}\n\nexport default Draggable;","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/components/Draggable/Draggable.js"],"names":["React","useState","DragItem","DropItem","todos","text","state","Draggable","todoValues","setValue","id","currentTodo","Object","keys","map","key","filter","todo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport DragItem from '../../components/DragItem';\nimport DropItem from '../../components/DropItem';\nimport './Draggable.css';\n\nconst todos = {\n  1: {\n    text: 'First thing',\n    state: 'todo'\n  },\n  2: {\n    text: 'Second thing',\n    state: 'todo'\n  },\n  3: {\n    text: 'Third thing',\n    state: 'todo'\n  },\n  4: {\n    text: 'Fourth thing',\n    state: 'todo'\n  }\n};\n\nfunction Draggable() {\n  const [todoValues, setValue] = useState(todos);\n  return (\n    <div className='App'>\n      <div className='box'>\n        <DropItem\n          heading='Todos'\n          onDrop={id => {\n            const currentTodo = { ...todoValues[id] };\n            currentTodo.state = 'todo';\n            setValue({ ...todoValues, ...{ [id]: currentTodo } });\n          }}\n        >\n          {Object.keys(todoValues)\n            .map(key => ({ id: key, ...todoValues[key] }))\n            .filter(todo => todo.state === 'todo')\n            .map(todo => <DragItem id={todo.id} data={todo} key={todo.id} />)}\n        </DropItem>\n        <DropItem\n          heading='WIP'\n          onDrop={id => {\n            const currentTodo = { ...todoValues[id] };\n            currentTodo.state = 'wip';\n            setValue({ ...todoValues, ...{ [id]: currentTodo } });\n          }}\n        >\n          {Object.keys(todoValues)\n            .map(key => ({ id: key, ...todoValues[key] }))\n            .filter(todo => todo.state === 'wip')\n            .map(todo => <DragItem id={todo.id} data={todo} key={todo.id} />)}\n        </DropItem>\n        <DropItem\n          heading='Done'\n          onDrop={id => {\n            const currentTodo = { ...todoValues[id] };\n            currentTodo.state = 'done';\n            setValue({ ...todoValues, ...{ [id]: currentTodo } });\n          }}\n        >\n          {Object.keys(todoValues)\n            .map(key => ({ id: key, ...todoValues[key] }))\n            .filter(todo => todo.state === 'done')\n            .map(todo => <DragItem id={todo.id} data={todo} key={todo.id} />)}\n        </DropItem>\n      </div>\n    </div>\n  );\n}\n\nexport default Draggable;\n"]},"metadata":{},"sourceType":"module"}