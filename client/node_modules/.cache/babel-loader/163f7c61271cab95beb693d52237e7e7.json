{"ast":null,"code":"import _slicedToArray from \"/Users/metabou/Desktop/chatapp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metabou/Desktop/chatapp/client/src/components/InviteModal/InviteModal.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport settings from '../../assets/images/settings.png';\nimport instant from '../../assets/images/instant.png';\nimport './InviteModal.css';\n\nconst InviteModal = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        inviteExpiresModal = _useState2[0],\n        setInviteExpiresModal = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        instantFormat = _useState4[0],\n        setInstantFormat = _useState4[1];\n\n  const ref = useRef();\n  useOnClickOutside(ref, () => props.setShowInviteModal(false));\n  return React.createElement(\"div\", {\n    ref: ref,\n    className: \"invitemodal-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, inviteExpiresModal ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Settings\"), React.createElement(\"div\", {\n    className: \"changeinvite\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Change invite type\"), React.createElement(\"label\", {\n    className: \"switch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: () => {\n      setInstantFormat(!instantFormat);\n    },\n    checked: instantFormat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"slider round\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"switchexpires\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Change when invite expires.\"), React.createElement(\"select\", {\n    onChange: event => {\n      props.setTimeExpires(event.target.value);\n    },\n    value: props.expires,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"24\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"24 Hours\"), React.createElement(\"option\", {\n    value: \"12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"12 Hours\"), React.createElement(\"option\", {\n    value: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"6 Hours\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"3 Hours\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"2 Hours\"), React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"1 Hour\"))), React.createElement(\"button\", {\n    className: \"invite-changesettings-save\",\n    onClick: () => {\n      setInviteExpiresModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Save\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"invite-settings\",\n    src: settings,\n    alt: \"settings-icon\",\n    onClick: () => {\n      setInviteExpiresModal(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"invitemodal-container-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, instantFormat ? \"Create Instant Invite\" : \"Send Personal Invite\"), instantFormat ? React.createElement(\"img\", {\n    src: instant,\n    alt: \"instant-invite\",\n    className: \"instant-invite\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"personal-invite\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Email Address: \"), React.createElement(\"input\", {\n    value: props.inviteEmail,\n    onChange: event => {\n      props.setCurrentInviteEmail(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"invitemodal-container-cancel\",\n    onClick: () => {\n      props.setShowInviteModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"button\", {\n    className: \"invitemodal-container-create\",\n    onClick: () => {\n      {\n        instantFormat ? props.createNewInstantInvite() : props.createNewInvite();\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Create\")));\n};\n\nconst useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n};\n\nexport default InviteModal;","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/components/InviteModal/InviteModal.js"],"names":["React","useEffect","useState","useRef","settings","instant","InviteModal","props","inviteExpiresModal","setInviteExpiresModal","instantFormat","setInstantFormat","ref","useOnClickOutside","setShowInviteModal","event","setTimeExpires","target","value","expires","inviteEmail","setCurrentInviteEmail","createNewInstantInvite","createNewInvite","handler","listener","current","contains","document","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport settings from '../../assets/images/settings.png';\nimport instant from '../../assets/images/instant.png';\nimport './InviteModal.css';\n\nconst InviteModal = (props) => {\n  const [inviteExpiresModal, setInviteExpiresModal] = useState(false);\n  const [instantFormat, setInstantFormat] = useState(false);\n  const ref = useRef();\n  useOnClickOutside(ref, () => props.setShowInviteModal(false));\n\n  return (\n    <div ref={ref} className=\"invitemodal-container\">\n      {inviteExpiresModal ?\n        <div>\n          <p className=\"title\">Settings</p>\n          <div className=\"changeinvite\">\n            <span>Change invite type</span>\n            <label className=\"switch\">\n              <input type=\"checkbox\" onChange={() => { setInstantFormat(!instantFormat); }} checked={instantFormat} />\n              <span className=\"slider round\"></span>\n            </label>\n          </div>\n          <div className=\"switchexpires\">\n            <span>Change when invite expires.</span>\n            <select\n              onChange={event => { props.setTimeExpires(event.target.value); }}\n              value={props.expires}\n            >\n              <option value='24'>24 Hours</option>\n              <option value='12'>12 Hours</option>\n              <option value='6'>6 Hours</option>\n              <option value='3'>3 Hours</option>\n              <option value='2'>2 Hours</option>\n              <option value='1'>1 Hour</option>\n            </select>\n          </div>\n          <button className=\"invite-changesettings-save\" onClick={() => { setInviteExpiresModal(false); }}>Save</button>\n        </div> :\n        <div>\n          <img className=\"invite-settings\" src={settings} alt=\"settings-icon\" onClick={() => { setInviteExpiresModal(true); }} />\n          <p className=\"invitemodal-container-title\">{instantFormat ? \"Create Instant Invite\" : \"Send Personal Invite\"}</p>\n          {instantFormat ? <img src={instant} alt=\"instant-invite\" className=\"instant-invite\" /> :\n          <div className=\"personal-invite\">\n            <span>Email Address: </span>\n            <input value={props.inviteEmail} onChange={(event) => { props.setCurrentInviteEmail(event.target.value); }} />\n          </div>}\n          <button className=\"invitemodal-container-cancel\" onClick={() => { props.setShowInviteModal(false); }}>Cancel</button>\n          <button className=\"invitemodal-container-create\" onClick={() => { {instantFormat ? props.createNewInstantInvite() : props.createNewInvite() } }}>Create</button>\n        </div>\n      }\n    </div>\n  );\n}\n\nconst useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n}\n\nexport default InviteModal;"]},"metadata":{},"sourceType":"module"}