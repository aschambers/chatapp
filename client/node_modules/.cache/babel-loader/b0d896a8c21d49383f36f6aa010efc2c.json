{"ast":null,"code":"var _jsxFileName = \"/Users/metabou/Desktop/chatapp/client/src/components/CreateServer/CreateServer.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport usregion from '../../assets/images/usregion.png';\nimport './CreateServer.css';\n\nconst CreateServer = props => {\n  const ref = useRef();\n  useOnClickOutside(ref, () => props.setModalOpen(false));\n  return React.createElement(\"div\", {\n    ref: ref,\n    className: \"servermodal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"servermodal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Create your server\"), React.createElement(\"p\", {\n    className: \"servermodal-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"By creating your server you will have access to free voice and text-chat to use amongst your friends.\"), React.createElement(\"p\", {\n    className: \"servermodal-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Server Name\"), React.createElement(\"input\", {\n    placeholder: \"Enter a server name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"servermodal-region\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Server Region\"), React.createElement(\"img\", {\n    src: usregion,\n    height: 40,\n    width: 80,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"servermodal-rules\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"By creating a server, you agree to meet our community guidelines.\"), React.createElement(\"div\", {\n    className: \"servermodal-actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    onClick: props.setModalOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"\\u2190 Back\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Create\")));\n};\n\nconst useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n};\n\nfunction mapStateToProps({\n  serversReducer\n}) {\n  return {\n    error: serversReducer.error,\n    isLoading: serversReducer.isLoading,\n    success: serversReducer.success\n  };\n}\n\nexport default connect(mapStateToProps, actions)(CreateServer);","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/components/CreateServer/CreateServer.js"],"names":["React","useEffect","useRef","connect","actions","usregion","CreateServer","props","ref","useOnClickOutside","setModalOpen","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","mapStateToProps","serversReducer","error","isLoading","success"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAO,oBAAP;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,GAAG,GAAGN,MAAM,EAAlB;AACAO,EAAAA,iBAAiB,CAACD,GAAD,EAAM,MAAMD,KAAK,CAACG,YAAN,CAAmB,KAAnB,CAAZ,CAAjB;AAEA,SACE;AAAK,IAAA,GAAG,EAAEF,GAAV;AAAe,IAAA,SAAS,EAAC,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6GAFF,EAGE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIE;AAAO,IAAA,WAAW,EAAC,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,EAME;AAAK,IAAA,GAAG,EAAEH,QAAV;AAAoB,IAAA,MAAM,EAAE,EAA5B;AAAgC,IAAA,KAAK,EAAE,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEAPF,EAQE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,OAAO,EAAEE,KAAK,CAACG,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CARF,CADF;AAeD,CAnBD;;AAqBA,MAAMD,iBAAiB,GAAG,CAACD,GAAD,EAAMG,OAAN,KAAkB;AAC1CV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,QAAQ,GAAGC,KAAK,IAAI;AACxB;AACA,UAAI,CAACL,GAAG,CAACM,OAAL,IAAgBN,GAAG,CAACM,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtD;AACD;;AAEDL,MAAAA,OAAO,CAACE,KAAD,CAAP;AACD,KAPD;;AASAI,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,QAAvC;AACAK,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,EAAwCN,QAAxC;AAEA,WAAO,MAAM;AACXK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,QAA1C;AACAK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,YAA7B,EAA2CP,QAA3C;AACD,KAHD;AAID,GAjBQ,EAiBN,CAACJ,GAAD,EAAMG,OAAN,CAjBM,CAAT;AAkBD,CAnBD;;AAqBA,SAASS,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAA6C;AAC3C,SAAO;AACLC,IAAAA,KAAK,EAAED,cAAc,CAACC,KADjB;AAELC,IAAAA,SAAS,EAAEF,cAAc,CAACE,SAFrB;AAGLC,IAAAA,OAAO,EAAEH,cAAc,CAACG;AAHnB,GAAP;AAKD;;AAED,eAAerB,OAAO,CAACiB,eAAD,EAAkBhB,OAAlB,CAAP,CAAkCE,YAAlC,CAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport usregion from '../../assets/images/usregion.png';\nimport './CreateServer.css';\n\nconst CreateServer = (props) => {\n  const ref = useRef();\n  useOnClickOutside(ref, () => props.setModalOpen(false));\n\n  return (\n    <div ref={ref} className=\"servermodal\">\n      <h1 className=\"servermodal-title\">Create your server</h1>\n      <p className=\"servermodal-info\">By creating your server you will have access to free voice and text-chat to use amongst your friends.</p>\n      <p className=\"servermodal-name\">Server Name</p>\n      <input placeholder=\"Enter a server name\" />\n      <p className=\"servermodal-region\">Server Region</p>\n      <img src={usregion} height={40} width={80} />\n      <p className=\"servermodal-rules\">By creating a server, you agree to meet our community guidelines.</p>\n      <div className=\"servermodal-actions\">\n        <p onClick={props.setModalOpen}>&larr; Back</p>\n        <button>Create</button>\n      </div>\n    </div>\n  );\n}\n\nconst useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n}\n\nfunction mapStateToProps({ serversReducer }) {\n  return {\n    error: serversReducer.error,\n    isLoading: serversReducer.isLoading,\n    success: serversReducer.success\n  };\n}\n\nexport default connect(mapStateToProps, actions)(CreateServer);"]},"metadata":{},"sourceType":"module"}