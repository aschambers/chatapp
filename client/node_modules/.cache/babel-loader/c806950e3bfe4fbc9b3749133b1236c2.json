{"ast":null,"code":"import _objectSpread from \"/Users/metabou/Desktop/chatapp/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport jwt from 'jsonwebtoken';\nimport secret from '../../../config/secret';\nimport { ROOT_URL } from '../../../config/networkSettings';\nimport { SIGNING_UP_USER, SIGNUP_USER_FAIL, SIGNUP_USER_SUCCESS, VERIFYING_USER, ALREADY_VERIFIED, NOT_VERIFIED, VERIFY_USER_FAIL, VERIFY_USER_SUCCESS, LOGGING_IN_USER, LOGIN_USER_FAIL, LOGIN_USER_SUCCESS, LOGGING_OUT_USER, LOGOUT_USER_FAIL, LOGOUT_USER_SUCCESS, RETRIEVE_USER_LOADING, RETRIEVE_USER_FAIL, RETRIEVE_USER_SUCCESS, RETRIEVE_SOCKET_USER_LOADING, RETRIEVE_SOCKET_USER_FAIL, RETRIEVE_SOCKET_USER_SUCCESS, UPDATING_PROFILE, UPDATE_PROFILE_FAIL, UPDATE_PROFILE_SUCCESS, GETTING_USERS, GETTING_USERS_SUCCESS, GETTING_USERS_FAIL, UPLOADING_PROFILE_IMAGE, UPLOAD_PROFILE_IMAGE_FAIL, UPLOAD_PROFILE_IMAGE_SUCCESS, SENDING_EMAIL, SEND_EMAIL_FAIL, SEND_EMAIL_SUCCESS, CHECKING_FORGOT_PASSWORD, FORGOT_PASSWORD_FAIL, FORGOT_PASSWORD_SUCCESS, RESET_VALUES, RESET_USER_VALUES } from '../../types'; // Initial States\n\nexport const initialState = {\n  isLoading: false,\n  error: false,\n  success: false,\n  user: null\n}; // Reducers\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SIGNING_UP_USER:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case SIGNUP_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true\n      });\n\n    case SIGNUP_USER_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case VERIFYING_USER:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false,\n        already: false\n      });\n\n    case ALREADY_VERIFIED:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: false,\n        already: true\n      });\n\n    case NOT_VERIFIED:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: false,\n        notVerified: true\n      });\n\n    case VERIFY_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true,\n        already: false\n      });\n\n    case VERIFY_USER_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false,\n        already: false\n      });\n\n    case LOGGING_IN_USER:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false,\n        notVerified: false\n      });\n\n    case LOGIN_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true,\n        user: action.payload,\n        notVerified: false\n      });\n\n    case LOGIN_USER_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        logout: false,\n        notVerified: false\n      });\n\n    case LOGGING_OUT_USER:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        logout: false\n      });\n\n    case LOGOUT_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        logout: true,\n        user: null\n      });\n\n    case LOGOUT_USER_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case RETRIEVE_USER_LOADING:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case RETRIEVE_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case RETRIEVE_USER_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case RETRIEVE_SOCKET_USER_LOADING:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case RETRIEVE_SOCKET_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true,\n        user: action.payload\n      });\n\n    case RETRIEVE_SOCKET_USER_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case UPDATING_PROFILE:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case UPDATE_PROFILE_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true,\n        user: action.payload\n      });\n\n    case UPDATE_PROFILE_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case GETTING_USERS:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case GETTING_USERS_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true,\n        users: action.payload\n      });\n\n    case GETTING_USERS_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case UPLOADING_PROFILE_IMAGE:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case UPLOAD_PROFILE_IMAGE_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true,\n        user: action.payload\n      });\n\n    case UPLOAD_PROFILE_IMAGE_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case SENDING_EMAIL:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case SEND_EMAIL_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true,\n        resultEmail: true\n      });\n\n    case SEND_EMAIL_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false,\n        noEmail: true\n      });\n\n    case RESET_VALUES:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: false,\n        logout: false\n      });\n\n    case RESET_USER_VALUES:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: false,\n        logout: false,\n        user: null,\n        notVerified: false,\n        already: false,\n        resultEmail: false,\n        noEmail: false\n      });\n\n    default:\n      return state;\n  }\n}); // Actions\n\nexport const userSignup = params => async dispatch => {\n  dispatch({\n    type: SIGNING_UP_USER\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/userSignup\"), params);\n\n    if (response.data) {\n      dispatch({\n        type: SIGNUP_USER_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: SIGNUP_USER_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: SIGNUP_USER_FAIL\n    });\n  }\n};\nexport const userVerification = params => async dispatch => {\n  dispatch({\n    type: VERIFYING_USER\n  });\n\n  try {\n    const response = await axios.put(\"\".concat(ROOT_URL, \"/api/v1/userVerification\"), params);\n\n    if (response.data.success === \"Account has already been verified\") {\n      dispatch({\n        type: ALREADY_VERIFIED\n      });\n    } else if (response.data.success === \"Success verifying account\") {\n      dispatch({\n        type: VERIFY_USER_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: VERIFY_USER_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: VERIFY_USER_FAIL\n    });\n  }\n};\nexport const userLogin = params => async dispatch => {\n  dispatch({\n    type: LOGGING_IN_USER\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/userLogin\"), params);\n\n    if (response.data) {\n      jwt.verify(response.data, secret, function (err, decoded) {\n        if (!err) {\n          localStorage.setItem('user', JSON.stringify(decoded.loginUser));\n          dispatch({\n            type: LOGIN_USER_SUCCESS,\n            payload: decoded.loginUser\n          });\n        } else {\n          dispatch({\n            type: LOGIN_USER_FAIL\n          });\n        }\n      });\n    } else {\n      dispatch({\n        type: LOGIN_USER_FAIL\n      });\n    }\n  } catch (err) {\n    if (err.response.data.error === \"Account not verified\") {\n      dispatch({\n        type: NOT_VERIFIED\n      });\n    } else {\n      dispatch({\n        type: LOGIN_USER_FAIL\n      });\n    }\n  }\n};\nexport const userLogout = params => async dispatch => {\n  dispatch({\n    type: LOGGING_OUT_USER\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/userLogout\"), params);\n\n    if (response.data) {\n      localStorage.removeItem('user');\n      dispatch({\n        type: LOGOUT_USER_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: LOGOUT_USER_FAIL\n      });\n    }\n  } catch (err) {\n    if (err) {\n      dispatch({\n        type: LOGOUT_USER_FAIL\n      });\n    }\n  }\n};\nexport const getUpdatedUser = params => async dispatch => {\n  dispatch({\n    type: RETRIEVE_USER_LOADING\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/getSingleUser\"), params);\n\n    if (response.data) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n      dispatch({\n        type: RETRIEVE_USER_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: RETRIEVE_USER_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: RETRIEVE_USER_FAIL\n    });\n  }\n};\nexport const currentUser = () => async dispatch => {\n  dispatch({\n    type: RETRIEVE_USER_LOADING\n  });\n\n  try {\n    let user = await JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      dispatch({\n        type: RETRIEVE_USER_SUCCESS,\n        payload: user\n      });\n    } else {\n      dispatch({\n        type: RETRIEVE_USER_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: RETRIEVE_USER_FAIL\n    });\n  }\n};\nexport const currentSocketUser = () => async dispatch => {\n  dispatch({\n    type: RETRIEVE_SOCKET_USER_LOADING\n  });\n\n  try {\n    let user = await JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      dispatch({\n        type: RETRIEVE_SOCKET_USER_SUCCESS,\n        payload: user\n      });\n    } else {\n      dispatch({\n        type: RETRIEVE_SOCKET_USER_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: RETRIEVE_SOCKET_USER_FAIL\n    });\n  }\n};\nexport const userUpdate = params => async dispatch => {\n  dispatch({\n    type: UPDATING_PROFILE\n  });\n\n  try {\n    const response = await axios.put(\"\".concat(ROOT_URL, \"/api/v1/userUpdate\"), params);\n\n    if (response.data) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n      dispatch({\n        type: UPDATE_PROFILE_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: UPDATE_PROFILE_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: UPDATE_PROFILE_FAIL\n    });\n  }\n};\nexport const getUsers = params => async dispatch => {\n  dispatch({\n    type: GETTING_USERS\n  });\n\n  try {\n    const response = await axios.get(\"\".concat(ROOT_URL, \"/api/v1/getUsers\"), params);\n\n    if (response.data) {\n      dispatch({\n        type: GETTING_USERS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: GETTING_USERS_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GETTING_USERS_FAIL\n    });\n  }\n};\nexport const uploadProfileImage = params => async dispatch => {\n  dispatch({\n    type: UPLOADING_PROFILE_IMAGE\n  });\n\n  try {\n    const response = await axios({\n      method: 'put',\n      url: \"\".concat(ROOT_URL, \"/api/v1/uploadProfileImage\"),\n      data: params,\n      config: {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }\n    });\n\n    if (response.data) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n      dispatch({\n        type: UPLOAD_PROFILE_IMAGE_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: UPLOAD_PROFILE_IMAGE_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: UPLOAD_PROFILE_IMAGE_FAIL\n    });\n  }\n};\nexport const sendEmail = params => async dispatch => {\n  dispatch({\n    type: SENDING_EMAIL\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/sendEmail\"), params);\n\n    if (response.data) {\n      dispatch({\n        type: SEND_EMAIL_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: SEND_EMAIL_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: SEND_EMAIL_FAIL\n    });\n  }\n};\nexport const forgotPassword = email => async dispatch => {\n  try {\n    dispatch({\n      type: CHECKING_FORGOT_PASSWORD\n    });\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/user/forgotPassword\"), {\n      email\n    });\n\n    if (response.data !== 'user-not-found' || response.data !== 'user-not-saved') {\n      dispatch({\n        type: FORGOT_PASSWORD_SUCCESS,\n        payload: 'forgot-password-fail'\n      });\n    } else {\n      dispatch({\n        type: FORGOT_PASSWORD_FAIL,\n        payload: 'forgot-password-fail'\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: FORGOT_PASSWORD_FAIL,\n      payload: 'forgot-password-fail'\n    });\n  }\n};\nexport function resetValues() {\n  return function (dispatch) {\n    dispatch({\n      type: RESET_VALUES\n    });\n  };\n}\nexport function resetUserValues() {\n  return function (dispatch) {\n    dispatch({\n      type: RESET_USER_VALUES\n    });\n  };\n}","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/redux/modules/users/users.js"],"names":["axios","jwt","secret","ROOT_URL","SIGNING_UP_USER","SIGNUP_USER_FAIL","SIGNUP_USER_SUCCESS","VERIFYING_USER","ALREADY_VERIFIED","NOT_VERIFIED","VERIFY_USER_FAIL","VERIFY_USER_SUCCESS","LOGGING_IN_USER","LOGIN_USER_FAIL","LOGIN_USER_SUCCESS","LOGGING_OUT_USER","LOGOUT_USER_FAIL","LOGOUT_USER_SUCCESS","RETRIEVE_USER_LOADING","RETRIEVE_USER_FAIL","RETRIEVE_USER_SUCCESS","RETRIEVE_SOCKET_USER_LOADING","RETRIEVE_SOCKET_USER_FAIL","RETRIEVE_SOCKET_USER_SUCCESS","UPDATING_PROFILE","UPDATE_PROFILE_FAIL","UPDATE_PROFILE_SUCCESS","GETTING_USERS","GETTING_USERS_SUCCESS","GETTING_USERS_FAIL","UPLOADING_PROFILE_IMAGE","UPLOAD_PROFILE_IMAGE_FAIL","UPLOAD_PROFILE_IMAGE_SUCCESS","SENDING_EMAIL","SEND_EMAIL_FAIL","SEND_EMAIL_SUCCESS","CHECKING_FORGOT_PASSWORD","FORGOT_PASSWORD_FAIL","FORGOT_PASSWORD_SUCCESS","RESET_VALUES","RESET_USER_VALUES","initialState","isLoading","error","success","user","state","action","type","already","notVerified","payload","logout","users","resultEmail","noEmail","userSignup","params","dispatch","response","post","data","err","userVerification","put","userLogin","verify","decoded","localStorage","setItem","JSON","stringify","loginUser","userLogout","removeItem","getUpdatedUser","currentUser","parse","getItem","currentSocketUser","userUpdate","getUsers","get","uploadProfileImage","method","url","config","headers","sendEmail","forgotPassword","email","resetValues","resetUserValues"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport jwt from 'jsonwebtoken';\nimport secret from '../../../config/secret';\nimport { ROOT_URL } from '../../../config/networkSettings';\n\nimport {\n  SIGNING_UP_USER,\n  SIGNUP_USER_FAIL,\n  SIGNUP_USER_SUCCESS,\n  VERIFYING_USER,\n  ALREADY_VERIFIED,\n  NOT_VERIFIED,\n  VERIFY_USER_FAIL,\n  VERIFY_USER_SUCCESS,\n  LOGGING_IN_USER,\n  LOGIN_USER_FAIL,\n  LOGIN_USER_SUCCESS,\n  LOGGING_OUT_USER,\n  LOGOUT_USER_FAIL,\n  LOGOUT_USER_SUCCESS,\n  RETRIEVE_USER_LOADING,\n  RETRIEVE_USER_FAIL,\n  RETRIEVE_USER_SUCCESS,\n  RETRIEVE_SOCKET_USER_LOADING,\n  RETRIEVE_SOCKET_USER_FAIL,\n  RETRIEVE_SOCKET_USER_SUCCESS,\n  UPDATING_PROFILE,\n  UPDATE_PROFILE_FAIL,\n  UPDATE_PROFILE_SUCCESS,\n  GETTING_USERS,\n  GETTING_USERS_SUCCESS,\n  GETTING_USERS_FAIL,\n  UPLOADING_PROFILE_IMAGE,\n  UPLOAD_PROFILE_IMAGE_FAIL,\n  UPLOAD_PROFILE_IMAGE_SUCCESS,\n  SENDING_EMAIL,\n  SEND_EMAIL_FAIL,\n  SEND_EMAIL_SUCCESS,\n  CHECKING_FORGOT_PASSWORD,\n  FORGOT_PASSWORD_FAIL,\n  FORGOT_PASSWORD_SUCCESS,\n  RESET_VALUES,\n  RESET_USER_VALUES\n} from '../../types';\n\n// Initial States\nexport const initialState = {\n  isLoading: false,\n  error: false,\n  success: false,\n  user: null\n};\n\n// Reducers\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SIGNING_UP_USER:\n      return {\n        ...state, isLoading: true, error: false, success: false\n      };\n    case SIGNUP_USER_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true\n      };\n    case SIGNUP_USER_FAIL:\n      return {\n        ...state, isLoading: false, error: true, success: false\n      };\n    case VERIFYING_USER:\n      return {\n        ...state, isLoading: true, error: false, success: false, already: false\n      };\n    case ALREADY_VERIFIED:\n      return {\n        ...state, isLoading: false, error: false, success: false, already: true\n      };\n    case NOT_VERIFIED:\n      return {\n        ...state, isLoading: false, error: false, success: false, notVerified: true\n      };\n    case VERIFY_USER_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true, already: false\n      };\n    case VERIFY_USER_FAIL:\n      return {\n        ...state, isLoading: false, error: true, success: false, already: false\n      };\n    case LOGGING_IN_USER:\n      return {\n        ...state, isLoading: true, error: false, success: false, notVerified: false\n      };\n    case LOGIN_USER_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true, user: action.payload, notVerified: false\n      };\n    case LOGIN_USER_FAIL:\n      return {\n        ...state, isLoading: false, error: true, logout: false, notVerified: false\n      };\n    case LOGGING_OUT_USER:\n      return {\n        ...state, isLoading: true, error: false, logout: false\n      };\n    case LOGOUT_USER_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, logout: true, user: null\n      };\n    case LOGOUT_USER_FAIL:\n      return {\n        ...state, isLoading: false, error: true, success: false\n      };\n    case RETRIEVE_USER_LOADING:\n      return {\n        ...state, isLoading: true, error: false, success: false\n      };\n    case RETRIEVE_USER_SUCCESS:\n      return {\n        ...state, user: action.payload\n      };\n    case RETRIEVE_USER_FAIL:\n      return {\n        ...state, isLoading: false, error: true, success: false\n      };\n    case RETRIEVE_SOCKET_USER_LOADING:\n      return {\n        ...state, isLoading: true, error: false, success: false\n      };\n    case RETRIEVE_SOCKET_USER_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true, user: action.payload\n      };\n    case RETRIEVE_SOCKET_USER_FAIL:\n      return {\n        ...state, isLoading: false, error: true, success: false\n      };\n    case UPDATING_PROFILE:\n      return { ...state, isLoading: true, error: false, success: false };\n    case UPDATE_PROFILE_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true, user: action.payload\n      };\n    case UPDATE_PROFILE_FAIL:\n      return { ...state, isLoading: false, error: true, success: false };\n    case GETTING_USERS:\n      return { ...state, isLoading: true, error: false, success: false };\n    case GETTING_USERS_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true, users: action.payload\n      };\n    case GETTING_USERS_FAIL:\n      return { ...state, isLoading: false, error: true, success: false };\n    case UPLOADING_PROFILE_IMAGE:\n      return { ...state, isLoading: true, error: false, success: false };\n    case UPLOAD_PROFILE_IMAGE_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true, user: action.payload\n      };\n    case UPLOAD_PROFILE_IMAGE_FAIL:\n      return { ...state, isLoading: false, error: true, success: false };\n    case SENDING_EMAIL:\n      return {\n        ...state, isLoading: true, error: false, success: false\n      };\n    case SEND_EMAIL_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true, resultEmail: true\n      };\n    case SEND_EMAIL_FAIL:\n      return {\n        ...state, isLoading: false, error: true, success: false, noEmail: true\n      };\n    case RESET_VALUES:\n      return {\n        ...state, isLoading: false, error: false, success: false, logout: false\n      };\n    case RESET_USER_VALUES:\n      return {\n        ...state, isLoading: false, error: false, success: false, logout: false, user: null, notVerified: false, already: false, resultEmail: false, noEmail: false\n      };\n    default:\n      return state;\n  }\n};\n\n// Actions\nexport const userSignup = params => async dispatch => {\n  dispatch({ type: SIGNING_UP_USER });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/userSignup`, params);\n    if(response.data) {\n      dispatch({ type: SIGNUP_USER_SUCCESS });\n    } else {\n      dispatch({ type: SIGNUP_USER_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: SIGNUP_USER_FAIL });\n  }\n};\n\nexport const userVerification = params => async dispatch => {\n  dispatch({ type: VERIFYING_USER });\n  try {\n    const response = await axios.put(`${ROOT_URL}/api/v1/userVerification`, params);\n    if(response.data.success === \"Account has already been verified\") {\n      dispatch({ type: ALREADY_VERIFIED });\n    } else if (response.data.success === \"Success verifying account\") {\n      dispatch({ type: VERIFY_USER_SUCCESS });\n    } else {\n      dispatch({ type: VERIFY_USER_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: VERIFY_USER_FAIL });\n  }\n};\n\nexport const userLogin = params => async dispatch => {\n  dispatch({ type: LOGGING_IN_USER });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/userLogin`, params);\n    if (response.data) {\n      jwt.verify(response.data, secret, function(err, decoded) {\n        if (!err) {\n          localStorage.setItem('user', JSON.stringify(decoded.loginUser));\n          dispatch({ type: LOGIN_USER_SUCCESS, payload: decoded.loginUser });\n        } else {\n          dispatch({ type: LOGIN_USER_FAIL });\n        }\n      });\n    } else {\n      dispatch({ type: LOGIN_USER_FAIL });\n    }\n  } catch (err) {\n    if (err.response.data.error === \"Account not verified\") {\n      dispatch({ type: NOT_VERIFIED });\n    } else {\n      dispatch({ type: LOGIN_USER_FAIL });\n    }\n  }\n};\n\nexport const userLogout = params => async dispatch => {\n  dispatch({ type: LOGGING_OUT_USER });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/userLogout`, params);\n    if (response.data) {\n      localStorage.removeItem('user');\n      dispatch({ type: LOGOUT_USER_SUCCESS });\n    } else {\n      dispatch({ type: LOGOUT_USER_FAIL });\n    }\n  } catch (err) {\n    if (err) {\n      dispatch({ type: LOGOUT_USER_FAIL });\n    }\n  }\n};\n\nexport const getUpdatedUser = params => async dispatch => {\n  dispatch({ type: RETRIEVE_USER_LOADING });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/getSingleUser`, params);\n    if(response.data) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n      dispatch({ type: RETRIEVE_USER_SUCCESS, payload: response.data });\n    } else {\n      dispatch({ type: RETRIEVE_USER_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: RETRIEVE_USER_FAIL });\n  }\n};\n\nexport const currentUser = () => async dispatch => {\n  dispatch({ type: RETRIEVE_USER_LOADING });\n  try {\n    let user = await JSON.parse(localStorage.getItem('user'));\n    if(user) {\n      dispatch({ type: RETRIEVE_USER_SUCCESS, payload: user });\n    } else {\n      dispatch({ type: RETRIEVE_USER_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: RETRIEVE_USER_FAIL });\n  }\n};\n\nexport const currentSocketUser = () => async dispatch => {\n  dispatch({ type: RETRIEVE_SOCKET_USER_LOADING });\n  try {\n    let user = await JSON.parse(localStorage.getItem('user'));\n    if(user) {\n      dispatch({ type: RETRIEVE_SOCKET_USER_SUCCESS, payload: user });\n    } else {\n      dispatch({ type: RETRIEVE_SOCKET_USER_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: RETRIEVE_SOCKET_USER_FAIL });\n  }\n};\n\nexport const userUpdate = params => async (dispatch) => {\n  dispatch({ type: UPDATING_PROFILE });\n  try {\n    const response = await axios.put(`${ROOT_URL}/api/v1/userUpdate`, params);\n    if (response.data) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n      dispatch({ type: UPDATE_PROFILE_SUCCESS, payload: response.data });\n    } else {\n      dispatch({ type: UPDATE_PROFILE_FAIL });\n    }\n  } catch (err) {\n    dispatch({ type: UPDATE_PROFILE_FAIL });\n  }\n};\n\nexport const getUsers = params => async dispatch => {\n  dispatch({ type: GETTING_USERS });\n  try {\n    const response = await axios.get(`${ROOT_URL}/api/v1/getUsers`, params);\n    if (response.data) {\n      dispatch({ type: GETTING_USERS_SUCCESS, payload: response.data });\n    } else {\n      dispatch({ type: GETTING_USERS_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: GETTING_USERS_FAIL });\n  }\n}\n\nexport const uploadProfileImage = params => async dispatch => {\n  dispatch({ type: UPLOADING_PROFILE_IMAGE });\n  try {\n    const response = await axios({\n      method: 'put',\n      url: `${ROOT_URL}/api/v1/uploadProfileImage`,\n      data: params,\n      config: { headers: {'Content-Type': 'multipart/form-data'}}\n    });\n    if (response.data) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n      dispatch({ type: UPLOAD_PROFILE_IMAGE_SUCCESS, payload: response.data });\n    } else {\n      dispatch({ type: UPLOAD_PROFILE_IMAGE_FAIL });\n    }\n  } catch (err) {\n    dispatch({ type: UPLOAD_PROFILE_IMAGE_FAIL });\n  }\n};\n\nexport const sendEmail = params => async dispatch => {\n  dispatch({ type: SENDING_EMAIL });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/sendEmail`, params);\n    if (response.data) {\n      dispatch({ type: SEND_EMAIL_SUCCESS, payload: response.data });\n    } else {\n      dispatch({ type: SEND_EMAIL_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: SEND_EMAIL_FAIL });\n  }\n}\n\nexport const forgotPassword = email => async dispatch => {\n  try {\n    dispatch({ type: CHECKING_FORGOT_PASSWORD });\n    const response = await axios.post(`${ROOT_URL}/api/user/forgotPassword`, { email });\n    if (response.data !== 'user-not-found' || response.data !== 'user-not-saved') {\n      dispatch({ type: FORGOT_PASSWORD_SUCCESS, payload: 'forgot-password-fail' });\n    } else {\n      dispatch({ type: FORGOT_PASSWORD_FAIL, payload: 'forgot-password-fail' });\n    }\n  } catch (err) {\n    dispatch({ type: FORGOT_PASSWORD_FAIL, payload: 'forgot-password-fail' });\n  }\n};\n\nexport function resetValues() {\n  return function(dispatch) {\n    dispatch({ type: RESET_VALUES });\n  };\n}\n\nexport function resetUserValues() {\n  return function(dispatch) {\n    dispatch({ type: RESET_USER_VALUES });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}