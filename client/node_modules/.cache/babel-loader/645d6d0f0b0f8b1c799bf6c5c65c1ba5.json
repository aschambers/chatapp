{"ast":null,"code":"var rtc = require('rtc-tools');\n\nvar debug = rtc.logger('rtc-quickconnect');\n/**\n  Schemes allow multiple connection schemes for selection when attempting to connect to\n  a peer\n **/\n\nmodule.exports = function (signaller, opts) {\n  var schemes = {};\n\n  var _default;\n  /**\n    Adds a connection scheme\n   **/\n\n\n  function add(scheme) {\n    // Ensure valid ID\n    if (!scheme || !scheme.id || typeof scheme.id !== 'string') {\n      throw new Error('Cannot add invalid scheme. Requires at least an ID');\n    } // Unique schemes\n\n\n    if (schemes[scheme.id]) {\n      throw new Error('Scheme ' + schemeId + ' already exists');\n    } // Check default\n\n\n    if (scheme.isDefault) {\n      if (_default) {\n        console.warn('Default scheme already exists');\n      } else {\n        _default = scheme.id;\n      }\n    }\n\n    schemes[scheme.id] = scheme;\n  }\n  /**\n    Returns the scheme with the given ID. If canDefault is true it will return the default scheme\n    if no scheme with ID is found\n   **/\n\n\n  function get(id, canDefault) {\n    return schemes[id] || (canDefault && _default ? schemes[_default] : undefined);\n  } // Load passed in schemes\n\n\n  if (opts && opts.schemes && Array.isArray(opts.schemes)) {\n    opts.schemes.forEach(add);\n  }\n\n  return {\n    add: add,\n    get: get\n  };\n};","map":null,"metadata":{},"sourceType":"script"}