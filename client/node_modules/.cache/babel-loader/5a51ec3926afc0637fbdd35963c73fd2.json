{"ast":null,"code":"import _objectSpread from \"/Users/metabou/Desktop/chatapp/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport jwt from 'jsonwebtoken';\nimport secret from '../../../config/secret';\nimport { ROOT_URL } from '../../../config/networkSettings';\nimport { SIGNING_UP_USER, SIGNUP_USER_FAIL, SIGNUP_USER_SUCCESS, LOGGING_IN_USER, LOGIN_USER_FAIL, LOGIN_USER_SUCCESS, LOGGING_OUT_USER, LOGOUT_USER_FAIL, LOGOUT_USER_SUCCESS, RETRIEVE_USER_LOADING, RETRIEVE_USER_FAIL, RETRIEVE_USER_SUCCESS, RETRIEVE_SOCKET_USER_LOADING, RETRIEVE_SOCKET_USER_FAIL, RETRIEVE_SOCKET_USER_SUCCESS, UPDATING_PROFILE, UPDATE_PROFILE_FAIL, UPDATE_PROFILE_SUCCESS, GETTING_USERS, GETTING_USERS_SUCCESS, GETTING_USERS_FAIL, UPLOADING_PROFILE_IMAGE, UPLOAD_PROFILE_IMAGE_FAIL, UPLOAD_PROFILE_IMAGE_SUCCESS, RESET_VALUES, RESET_USER_VALUES } from '../../types'; // Initial States\n\nexport const initialState = {\n  isLoading: false,\n  error: false,\n  success: false,\n  user: null\n}; // Reducers\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SIGNING_UP_USER:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case SIGNUP_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true\n      });\n\n    case SIGNUP_USER_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case LOGGING_IN_USER:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case LOGIN_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true,\n        user: action.payload\n      });\n\n    case LOGIN_USER_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        logout: false\n      });\n\n    case LOGGING_OUT_USER:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        logout: false\n      });\n\n    case LOGOUT_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        logout: true,\n        user: null\n      });\n\n    case LOGOUT_USER_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case RETRIEVE_USER_LOADING:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case RETRIEVE_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case RETRIEVE_USER_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case RETRIEVE_SOCKET_USER_LOADING:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case RETRIEVE_SOCKET_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true,\n        user: action.payload\n      });\n\n    case RETRIEVE_SOCKET_USER_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case UPDATING_PROFILE:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case UPDATE_PROFILE_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true,\n        user: action.payload\n      });\n\n    case UPDATE_PROFILE_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case UPLOADING_PROFILE_IMAGE:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case UPLOAD_PROFILE_IMAGE_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true,\n        user: action.payload\n      });\n\n    case UPLOAD_PROFILE_IMAGE_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case RESET_VALUES:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: false,\n        logout: false\n      });\n\n    case RESET_USER_VALUES:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: false,\n        logout: false,\n        user: null\n      });\n\n    default:\n      return state;\n  }\n}); // Actions\n\nexport const userSignup = params => async dispatch => {\n  dispatch({\n    type: SIGNING_UP_USER\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/userSignup\"), params);\n\n    if (response.data) {\n      dispatch({\n        type: SIGNUP_USER_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: SIGNUP_USER_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: SIGNUP_USER_FAIL\n    });\n  }\n};\nexport const userLogin = params => async dispatch => {\n  dispatch({\n    type: LOGGING_IN_USER\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/userLogin\"), params);\n\n    if (response.data) {\n      jwt.verify(response.data, secret, function (err, decoded) {\n        if (!err) {\n          localStorage.setItem('user', JSON.stringify(decoded.loginUser));\n          dispatch({\n            type: LOGIN_USER_SUCCESS,\n            payload: decoded.loginUser\n          });\n        } else {\n          dispatch({\n            type: LOGIN_USER_FAIL\n          });\n        }\n      });\n    } else {\n      dispatch({\n        type: LOGIN_USER_FAIL\n      });\n    }\n  } catch (err) {\n    if (err) {\n      dispatch({\n        type: LOGIN_USER_FAIL\n      });\n    }\n  }\n};\nexport const userLogout = params => async dispatch => {\n  dispatch({\n    type: LOGGING_OUT_USER\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/userLogout\"), params);\n\n    if (response.data) {\n      localStorage.removeItem('user');\n      dispatch({\n        type: LOGOUT_USER_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: LOGOUT_USER_FAIL\n      });\n    }\n  } catch (err) {\n    if (err) {\n      dispatch({\n        type: LOGOUT_USER_FAIL\n      });\n    }\n  }\n};\nexport const currentUser = () => async dispatch => {\n  dispatch({\n    type: RETRIEVE_USER_LOADING\n  });\n\n  try {\n    let user = await JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      dispatch({\n        type: RETRIEVE_USER_SUCCESS,\n        payload: user\n      });\n    } else {\n      dispatch({\n        type: RETRIEVE_USER_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: RETRIEVE_USER_FAIL\n    });\n  }\n};\nexport const currentSocketUser = () => async dispatch => {\n  dispatch({\n    type: RETRIEVE_SOCKET_USER_LOADING\n  });\n\n  try {\n    let user = await JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      dispatch({\n        type: RETRIEVE_SOCKET_USER_SUCCESS,\n        payload: user\n      });\n    } else {\n      dispatch({\n        type: RETRIEVE_SOCKET_USER_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: RETRIEVE_SOCKET_USER_FAIL\n    });\n  }\n};\nexport const userUpdate = params => async dispatch => {\n  dispatch({\n    type: UPDATING_PROFILE\n  });\n\n  try {\n    const response = await axios.put(\"\".concat(ROOT_URL, \"/api/v1/userUpdate\"), params);\n\n    if (response.data) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n      dispatch({\n        type: UPDATE_PROFILE_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: UPDATE_PROFILE_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: UPDATE_PROFILE_FAIL\n    });\n  }\n};\nexport const getUsers = params => async dispatch => {\n  dispatch({\n    type: GETTING_USERS\n  });\n\n  try {\n    const response = await axios.get(\"\".concat(ROOT_URL, \"/api/v1/getUsers\"), params);\n\n    if (response.data) {\n      dispatch({\n        type: GETTING_USERS_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: GETTING_USERS_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GETTING_USERS_FAIL\n    });\n  }\n};\nexport const uploadProfileImage = params => async dispatch => {\n  dispatch({\n    type: UPLOADING_PROFILE_IMAGE\n  });\n\n  try {\n    const response = await axios({\n      method: 'put',\n      url: \"\".concat(ROOT_URL, \"/api/v1/uploadProfileImage\"),\n      data: params,\n      config: {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }\n    });\n\n    if (response.data) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n      dispatch({\n        type: UPLOAD_PROFILE_IMAGE_SUCCESS,\n        payload: response.data\n      });\n    } else {\n      dispatch({\n        type: UPLOAD_PROFILE_IMAGE_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: UPLOAD_PROFILE_IMAGE_FAIL\n    });\n  }\n};\nexport function resetValues() {\n  return function (dispatch) {\n    dispatch({\n      type: RESET_VALUES\n    });\n  };\n}\nexport function resetUserValues() {\n  return function (dispatch) {\n    dispatch({\n      type: RESET_USER_VALUES\n    });\n  };\n}","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/redux/modules/users/users.js"],"names":["axios","jwt","secret","ROOT_URL","SIGNING_UP_USER","SIGNUP_USER_FAIL","SIGNUP_USER_SUCCESS","LOGGING_IN_USER","LOGIN_USER_FAIL","LOGIN_USER_SUCCESS","LOGGING_OUT_USER","LOGOUT_USER_FAIL","LOGOUT_USER_SUCCESS","RETRIEVE_USER_LOADING","RETRIEVE_USER_FAIL","RETRIEVE_USER_SUCCESS","RETRIEVE_SOCKET_USER_LOADING","RETRIEVE_SOCKET_USER_FAIL","RETRIEVE_SOCKET_USER_SUCCESS","UPDATING_PROFILE","UPDATE_PROFILE_FAIL","UPDATE_PROFILE_SUCCESS","GETTING_USERS","GETTING_USERS_SUCCESS","GETTING_USERS_FAIL","UPLOADING_PROFILE_IMAGE","UPLOAD_PROFILE_IMAGE_FAIL","UPLOAD_PROFILE_IMAGE_SUCCESS","RESET_VALUES","RESET_USER_VALUES","initialState","isLoading","error","success","user","state","action","type","payload","logout","userSignup","params","dispatch","response","post","data","err","userLogin","verify","decoded","localStorage","setItem","JSON","stringify","loginUser","userLogout","removeItem","currentUser","parse","getItem","currentSocketUser","userUpdate","put","getUsers","get","uploadProfileImage","method","url","config","headers","resetValues","resetUserValues"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport jwt from 'jsonwebtoken';\nimport secret from '../../../config/secret';\nimport { ROOT_URL } from '../../../config/networkSettings';\n\nimport {\n  SIGNING_UP_USER,\n  SIGNUP_USER_FAIL,\n  SIGNUP_USER_SUCCESS,\n  LOGGING_IN_USER,\n  LOGIN_USER_FAIL,\n  LOGIN_USER_SUCCESS,\n  LOGGING_OUT_USER,\n  LOGOUT_USER_FAIL,\n  LOGOUT_USER_SUCCESS,\n  RETRIEVE_USER_LOADING,\n  RETRIEVE_USER_FAIL,\n  RETRIEVE_USER_SUCCESS,\n  RETRIEVE_SOCKET_USER_LOADING,\n  RETRIEVE_SOCKET_USER_FAIL,\n  RETRIEVE_SOCKET_USER_SUCCESS,\n  UPDATING_PROFILE,\n  UPDATE_PROFILE_FAIL,\n  UPDATE_PROFILE_SUCCESS,\n  GETTING_USERS,\n  GETTING_USERS_SUCCESS,\n  GETTING_USERS_FAIL,\n  UPLOADING_PROFILE_IMAGE,\n  UPLOAD_PROFILE_IMAGE_FAIL,\n  UPLOAD_PROFILE_IMAGE_SUCCESS,\n  RESET_VALUES,\n  RESET_USER_VALUES\n} from '../../types';\n\n// Initial States\nexport const initialState = {\n  isLoading: false,\n  error: false,\n  success: false,\n  user: null\n};\n\n// Reducers\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SIGNING_UP_USER:\n      return {\n        ...state, isLoading: true, error: false, success: false\n      };\n    case SIGNUP_USER_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true\n      };\n    case SIGNUP_USER_FAIL:\n      return {\n        ...state, isLoading: false, error: true, success: false\n      };\n    case LOGGING_IN_USER:\n      return {\n        ...state, isLoading: true, error: false, success: false\n      };\n    case LOGIN_USER_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true, user: action.payload\n      };\n    case LOGIN_USER_FAIL:\n      return {\n        ...state, isLoading: false, error: true, logout: false\n      };\n    case LOGGING_OUT_USER:\n      return {\n        ...state, isLoading: true, error: false, logout: false\n      };\n    case LOGOUT_USER_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, logout: true, user: null\n      };\n    case LOGOUT_USER_FAIL:\n      return {\n        ...state, isLoading: false, error: true, success: false\n      };\n    case RETRIEVE_USER_LOADING:\n      return {\n        ...state, isLoading: true, error: false, success: false\n      };\n    case RETRIEVE_USER_SUCCESS:\n      return {\n        ...state, user: action.payload\n      };\n    case RETRIEVE_USER_FAIL:\n      return {\n        ...state, isLoading: false, error: true, success: false\n      };\n    case RETRIEVE_SOCKET_USER_LOADING:\n      return {\n        ...state, isLoading: true, error: false, success: false\n      };\n    case RETRIEVE_SOCKET_USER_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true, user: action.payload\n      };\n    case RETRIEVE_SOCKET_USER_FAIL:\n      return {\n        ...state, isLoading: false, error: true, success: false\n      };\n    case UPDATING_PROFILE:\n      return { ...state, isLoading: true, error: false, success: false };\n    case UPDATE_PROFILE_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true, user: action.payload\n      };\n    case UPDATE_PROFILE_FAIL:\n      return { ...state, isLoading: false, error: true, success: false };\n    case UPLOADING_PROFILE_IMAGE:\n      return { ...state, isLoading: true, error: false, success: false };\n    case UPLOAD_PROFILE_IMAGE_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true, user: action.payload\n      };\n    case UPLOAD_PROFILE_IMAGE_FAIL:\n      return { ...state, isLoading: false, error: true, success: false };\n    case RESET_VALUES:\n      return {\n        ...state, isLoading: false, error: false, success: false, logout: false\n      };\n    case RESET_USER_VALUES:\n      return {\n        ...state, isLoading: false, error: false, success: false, logout: false, user: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Actions\nexport const userSignup = params => async dispatch => {\n  dispatch({ type: SIGNING_UP_USER });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/userSignup`, params);\n    if(response.data) {\n      dispatch({ type: SIGNUP_USER_SUCCESS });\n    } else {\n      dispatch({ type: SIGNUP_USER_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: SIGNUP_USER_FAIL });\n  }\n};\n\nexport const userLogin = params => async dispatch => {\n  dispatch({ type: LOGGING_IN_USER });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/userLogin`, params);\n    if (response.data) {\n      jwt.verify(response.data, secret, function(err, decoded) {\n        if (!err) {\n          localStorage.setItem('user', JSON.stringify(decoded.loginUser));\n          dispatch({ type: LOGIN_USER_SUCCESS, payload: decoded.loginUser });\n        } else {\n          dispatch({ type: LOGIN_USER_FAIL });\n        }\n      });\n    } else {\n      dispatch({ type: LOGIN_USER_FAIL });\n    }\n  } catch (err) {\n    if (err) {\n      dispatch({ type: LOGIN_USER_FAIL });\n    }\n  }\n};\n\nexport const userLogout = params => async dispatch => {\n  dispatch({ type: LOGGING_OUT_USER });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/userLogout`, params);\n    if (response.data) {\n      localStorage.removeItem('user');\n      dispatch({ type: LOGOUT_USER_SUCCESS });\n    } else {\n      dispatch({ type: LOGOUT_USER_FAIL });\n    }\n  } catch (err) {\n    if (err) {\n      dispatch({ type: LOGOUT_USER_FAIL });\n    }\n  }\n};\n\nexport const currentUser = () => async dispatch => {\n  dispatch({ type: RETRIEVE_USER_LOADING });\n  try {\n    let user = await JSON.parse(localStorage.getItem('user'));\n    if(user) {\n      dispatch({ type: RETRIEVE_USER_SUCCESS, payload: user });\n    } else {\n      dispatch({ type: RETRIEVE_USER_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: RETRIEVE_USER_FAIL });\n  }\n};\n\nexport const currentSocketUser = () => async dispatch => {\n  dispatch({ type: RETRIEVE_SOCKET_USER_LOADING });\n  try {\n    let user = await JSON.parse(localStorage.getItem('user'));\n    if(user) {\n      dispatch({ type: RETRIEVE_SOCKET_USER_SUCCESS, payload: user });\n    } else {\n      dispatch({ type: RETRIEVE_SOCKET_USER_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: RETRIEVE_SOCKET_USER_FAIL });\n  }\n};\n\nexport const userUpdate = params => async (dispatch) => {\n  dispatch({ type: UPDATING_PROFILE });\n  try {\n    const response = await axios.put(`${ROOT_URL}/api/v1/userUpdate`, params);\n    if (response.data) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n      dispatch({ type: UPDATE_PROFILE_SUCCESS, payload: response.data });\n    } else {\n      dispatch({ type: UPDATE_PROFILE_FAIL });\n    }\n  } catch (err) {\n    dispatch({ type: UPDATE_PROFILE_FAIL });\n  }\n};\n\nexport const getUsers = params => async dispatch => {\n  dispatch({ type: GETTING_USERS });\n  try {\n    const response = await axios.get(`${ROOT_URL}/api/v1/getUsers`, params);\n    if (response.data) {\n      dispatch({ type: GETTING_USERS_SUCCESS, payload: response.data });\n    } else {\n      dispatch({ type: GETTING_USERS_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: GETTING_USERS_FAIL });\n  }\n}\n\nexport const uploadProfileImage = params => async dispatch => {\n  dispatch({ type: UPLOADING_PROFILE_IMAGE });\n  try {\n    const response = await axios({\n      method: 'put',\n      url: `${ROOT_URL}/api/v1/uploadProfileImage`,\n      data: params,\n      config: { headers: {'Content-Type': 'multipart/form-data'}}\n    });\n    if (response.data) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n      dispatch({ type: UPLOAD_PROFILE_IMAGE_SUCCESS, payload: response.data });\n    } else {\n      dispatch({ type: UPLOAD_PROFILE_IMAGE_FAIL });\n    }\n  } catch (err) {\n    dispatch({ type: UPLOAD_PROFILE_IMAGE_FAIL });\n  }\n};\n\nexport function resetValues() {\n  return function(dispatch) {\n    dispatch({ type: RESET_VALUES });\n  };\n}\n\nexport function resetUserValues() {\n  return function(dispatch) {\n    dispatch({ type: RESET_USER_VALUES });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}