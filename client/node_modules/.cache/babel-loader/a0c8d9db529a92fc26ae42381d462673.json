{"ast":null,"code":"import _slicedToArray from \"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/views/Dashboard/Dashboard.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport useOnClickOutside from '../../utils/useOnClickOutside';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { Redirect } from 'react-router';\nimport { toast } from 'react-toastify';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Dashboard.css';\nimport ToastMessage from '../../components/ToastMessage/ToastMessage';\nimport Chatroom from '../../components/Chatroom/Chatroom';\nimport ChatroomFriend from '../../components/ChatroomFriend/ChatroomFriend';\nimport CreateServer from '../../components/CreateServer/CreateServer';\nimport JoinServer from '../../components/JoinServer/JoinServer';\nimport CategoryModal from '../../components/CategoryModal/CategoryModal';\nimport ChannelModal from '../../components/ChannelModal/ChannelModal';\nimport InviteModal from '../../components/InviteModal/InviteModal';\nimport NotificationSettingsModal from '../../components/NotificationSettingsModal/NotificationSettingsModal';\nimport PrivacyModal from '../../components/PrivacyModal/PrivacyModal';\nimport RegionModal from '../../components/RegionModal/RegionModal';\nimport UserManagement from '../../components/UserManagement/UserManagement';\nimport EditAccount from '../../components/EditAccount/EditAccount';\nimport UserBans from '../../components/UserBans/UserBans';\nimport Loading from '../../components/Loading/Loading';\nimport chatot from '../../assets/images/chatot.png';\nimport friends from '../../assets/images/friends.png';\nimport settings from '../../assets/images/settings.png';\nimport invite from '../../assets/images/invite.png';\nimport notification from '../../assets/images/notification.png';\nimport privacylock from '../../assets/images/privacylock.png';\nimport serversettings from '../../assets/images/serversettings.png';\nimport category from '../../assets/images/category.png';\nimport createchannel from '../../assets/images/createchannel.png';\nimport numbersign from '../../assets/images/numbersign.png';\nimport usregion from '../../assets/images/usregion.png';\nimport europe from '../../assets/images/europe.png';\nimport russia from '../../assets/images/russia.png';\nimport add from '../../assets/images/add.png';\nimport owner from '../../assets/images/owner.png';\nimport voice from '../../assets/images/voice.png';\nimport microphone from '../../assets/images/microphone.png';\nimport nomicrophone from '../../assets/images/nomicrophone.png';\n\nconst Dashboard = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        id = _useState2[0],\n        setId = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        username = _useState4[0],\n        setUsername = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        imageUrl = _useState8[0],\n        setImageUrl = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        active = _useState10[0],\n        setActive = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        server = _useState12[0],\n        setServer = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        serverName = _useState14[0],\n        setServerName = _useState14[1];\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        serverId = _useState16[0],\n        setServerId = _useState16[1];\n\n  const _useState17 = useState(''),\n        _useState18 = _slicedToArray(_useState17, 2),\n        serverImage = _useState18[0],\n        setServerImage = _useState18[1];\n\n  const _useState19 = useState(''),\n        _useState20 = _slicedToArray(_useState19, 2),\n        serverRegion = _useState20[0],\n        setServerRegion = _useState20[1];\n\n  const _useState21 = useState([]),\n        _useState22 = _slicedToArray(_useState21, 2),\n        serverUserList = _useState22[0],\n        setServerUserList = _useState22[1];\n\n  const _useState23 = useState(''),\n        _useState24 = _slicedToArray(_useState23, 2),\n        hover = _useState24[0],\n        setHover = _useState24[1];\n\n  const _useState25 = useState(false),\n        _useState26 = _slicedToArray(_useState25, 2),\n        isSettingsOpen = _useState26[0],\n        setSettingsOpen = _useState26[1];\n\n  const _useState27 = useState(false),\n        _useState28 = _slicedToArray(_useState27, 2),\n        isServerSettingsOpen = _useState28[0],\n        setIsServerSettingsOpen = _useState28[1];\n\n  const _useState29 = useState(false),\n        _useState30 = _slicedToArray(_useState29, 2),\n        isModalOpen = _useState30[0],\n        setModalOpen = _useState30[1];\n\n  const _useState31 = useState(''),\n        _useState32 = _slicedToArray(_useState31, 2),\n        currentModal = _useState32[0],\n        setCurrentModal = _useState32[1];\n\n  const _useState33 = useState(\"US West\"),\n        _useState34 = _slicedToArray(_useState33, 2),\n        region = _useState34[0],\n        setRegion = _useState34[1];\n\n  const _useState35 = useState([]),\n        _useState36 = _slicedToArray(_useState35, 2),\n        serversList = _useState36[0],\n        setServersList = _useState36[1];\n\n  const _useState37 = useState(false),\n        _useState38 = _slicedToArray(_useState37, 2),\n        serverSettings = _useState38[0],\n        showServerSettings = _useState38[1];\n\n  const _useState39 = useState(false),\n        _useState40 = _slicedToArray(_useState39, 2),\n        inviteModal = _useState40[0],\n        setInviteModal = _useState40[1];\n\n  const _useState41 = useState(24),\n        _useState42 = _slicedToArray(_useState41, 2),\n        expires = _useState42[0],\n        setExpires = _useState42[1];\n\n  const _useState43 = useState(false),\n        _useState44 = _slicedToArray(_useState43, 2),\n        showChannelModal = _useState44[0],\n        setShowChannelModal = _useState44[1];\n\n  const _useState45 = useState(false),\n        _useState46 = _slicedToArray(_useState45, 2),\n        showCategoryModal = _useState46[0],\n        setShowCategoryModal = _useState46[1];\n\n  const _useState47 = useState(false),\n        _useState48 = _slicedToArray(_useState47, 2),\n        showPrivacyModal = _useState48[0],\n        setShowPrivacyModal = _useState48[1];\n\n  const _useState49 = useState(false),\n        _useState50 = _slicedToArray(_useState49, 2),\n        showNotificationSettingsModal = _useState50[0],\n        setShowNotificationSettingsModal = _useState50[1];\n\n  const _useState51 = useState(''),\n        _useState52 = _slicedToArray(_useState51, 2),\n        newCategory = _useState52[0],\n        setNewCategory = _useState52[1];\n\n  const _useState53 = useState(''),\n        _useState54 = _slicedToArray(_useState53, 2),\n        newChannel = _useState54[0],\n        setNewChannel = _useState54[1];\n\n  const _useState55 = useState(false),\n        _useState56 = _slicedToArray(_useState55, 2),\n        triggerReload = _useState56[0],\n        setTriggerReload = _useState56[1];\n\n  const _useState57 = useState([]),\n        _useState58 = _slicedToArray(_useState57, 2),\n        categories = _useState58[0],\n        setCategories = _useState58[1];\n\n  const _useState59 = useState(null),\n        _useState60 = _slicedToArray(_useState59, 2),\n        currentDragItem = _useState60[0],\n        setCurrentDragItem = _useState60[1];\n\n  const _useState61 = useState([]),\n        _useState62 = _slicedToArray(_useState61, 2),\n        chatrooms = _useState62[0],\n        setChatrooms = _useState62[1];\n\n  const _useState63 = useState(''),\n        _useState64 = _slicedToArray(_useState63, 2),\n        activeChatroom = _useState64[0],\n        setActiveChatroom = _useState64[1];\n\n  const _useState65 = useState(null),\n        _useState66 = _slicedToArray(_useState65, 2),\n        activeChatroomId = _useState66[0],\n        setActiveChatroomId = _useState66[1];\n\n  const _useState67 = useState(false),\n        _useState68 = _slicedToArray(_useState67, 2),\n        isChangingRegion = _useState68[0],\n        setIsChangingRegion = _useState68[1];\n\n  const _useState69 = useState(''),\n        _useState70 = _slicedToArray(_useState69, 2),\n        inviteEmail = _useState70[0],\n        setInviteEmail = _useState70[1];\n\n  const _useState71 = useState(''),\n        _useState72 = _slicedToArray(_useState71, 2),\n        inviteCode = _useState72[0],\n        setInviteCode = _useState72[1];\n\n  const _useState73 = useState(\"overview\"),\n        _useState74 = _slicedToArray(_useState73, 2),\n        activeServerSetting = _useState74[0],\n        setActiveServerSetting = _useState74[1];\n\n  const _useState75 = useState(\"myaccount\"),\n        _useState76 = _slicedToArray(_useState75, 2),\n        activeUserSetting = _useState76[0],\n        setActiveUserSetting = _useState76[1];\n\n  const _useState77 = useState(false),\n        _useState78 = _slicedToArray(_useState77, 2),\n        isAdmin = _useState78[0],\n        setIsAdmin = _useState78[1];\n\n  const _useState79 = useState([]),\n        _useState80 = _slicedToArray(_useState79, 2),\n        serverInvites = _useState80[0],\n        setServerInvites = _useState80[1];\n\n  const _useState81 = useState(false),\n        _useState82 = _slicedToArray(_useState81, 2),\n        allowDirectMessages = _useState82[0],\n        setAllowDirectMessages = _useState82[1];\n\n  const _useState83 = useState(null),\n        _useState84 = _slicedToArray(_useState83, 2),\n        friendsList = _useState84[0],\n        setFriendsList = _useState84[1];\n\n  const _useState85 = useState(null),\n        _useState86 = _slicedToArray(_useState85, 2),\n        currentFriend = _useState86[0],\n        setCurrentFriend = _useState86[1];\n\n  const _useState87 = useState(null),\n        _useState88 = _slicedToArray(_useState87, 2),\n        serverUser = _useState88[0],\n        setServerUser = _useState88[1];\n\n  const _useState89 = useState(null),\n        _useState90 = _slicedToArray(_useState89, 2),\n        serverUserBan = _useState90[0],\n        setServerUserBan = _useState90[1];\n\n  const _useState91 = useState(\"admin\"),\n        _useState92 = _slicedToArray(_useState91, 2),\n        serverUserRole = _useState92[0],\n        setServerUserRole = _useState92[1];\n\n  const _useState93 = useState(false),\n        _useState94 = _slicedToArray(_useState93, 2),\n        showUserManagement = _useState94[0],\n        setShowUserManagement = _useState94[1];\n\n  const _useState95 = useState(false),\n        _useState96 = _slicedToArray(_useState95, 2),\n        showUserManagementBan = _useState96[0],\n        setShowUserManagementBan = _useState96[1];\n\n  const _useState97 = useState(null),\n        _useState98 = _slicedToArray(_useState97, 2),\n        openServerItem = _useState98[0],\n        setOpenServerItem = _useState98[1];\n\n  const _useState99 = useState(false),\n        _useState100 = _slicedToArray(_useState99, 2),\n        didFindUser = _useState100[0],\n        setDidFindUser = _useState100[1];\n\n  const _useState101 = useState([]),\n        _useState102 = _slicedToArray(_useState101, 2),\n        serverUserBans = _useState102[0],\n        setServerUserBans = _useState102[1];\n\n  const _useState103 = useState(''),\n        _useState104 = _slicedToArray(_useState103, 2),\n        editUsername = _useState104[0],\n        setEditUsername = _useState104[1];\n\n  const _useState105 = useState(''),\n        _useState106 = _slicedToArray(_useState105, 2),\n        editEmail = _useState106[0],\n        setEditEmail = _useState106[1];\n\n  const _useState107 = useState(''),\n        _useState108 = _slicedToArray(_useState107, 2),\n        editImageUrl = _useState108[0],\n        setEditImageUrl = _useState108[1];\n\n  const _useState109 = useState(''),\n        _useState110 = _slicedToArray(_useState109, 2),\n        accountModalOpen = _useState110[0],\n        setAccountModalOpen = _useState110[1];\n\n  const _useState111 = useState(null),\n        _useState112 = _slicedToArray(_useState111, 2),\n        mainFile = _useState112[0],\n        setMainFile = _useState112[1];\n\n  const _useState113 = useState(false),\n        _useState114 = _slicedToArray(_useState113, 2),\n        isLoading = _useState114[0],\n        setIsLoading = _useState114[1];\n\n  const _useState115 = useState(\"text\"),\n        _useState116 = _slicedToArray(_useState115, 2),\n        channelType = _useState116[0],\n        setChannelType = _useState116[1];\n\n  const _useState117 = useState(\"text\"),\n        _useState118 = _slicedToArray(_useState117, 2),\n        activeChatroomType = _useState118[0],\n        setActiveChatroomType = _useState118[1];\n\n  const _useState119 = useState(false),\n        _useState120 = _slicedToArray(_useState119, 2),\n        allowVoice = _useState120[0],\n        setAllowVoice = _useState120[1];\n\n  const _useState121 = useState(null),\n        _useState122 = _slicedToArray(_useState121, 2),\n        audioStream = _useState122[0],\n        setAudioStream = _useState122[1];\n\n  const _useState123 = useState(null),\n        _useState124 = _slicedToArray(_useState123, 2),\n        didFindFriends = _useState124[0],\n        setDidFindFriends = _useState124[1];\n\n  const ref = useRef();\n  useOnClickOutside(ref, () => setShowCategoryModal(false));\n  useEffect(() => {\n    if (friendsList === null && id !== null && !props.findingFriends && !didFindFriends) {\n      setDidFindFriends(true);\n      props.findFriends({\n        userId: id\n      });\n    }\n\n    if (props.friendsList && props.findFriendsSuccess) {\n      setFriendsList(props.friendsList);\n      props.resetFriendValues();\n    }\n\n    if (props.friendsList && props.createFriendSuccess) {\n      setFriendsList(props.friendsList);\n      props.resetFriendValues();\n    }\n\n    if (props.friendsList && props.deleteFriendSuccess) {\n      setFriendsList(props.friendsList);\n      props.resetFriendValues();\n    }\n  }, [props, id, friendsList, didFindFriends]);\n  useEffect(() => {\n    if (props.findInvitesSuccess || props.findInvitesError) {\n      console.log('inviteSwitch');\n\n      if (props.findInvitesSuccess) {\n        console.log('inviteSuccess');\n        setServerInvites(props.inviteServersList);\n      }\n\n      props.resetInviteValues();\n      setActiveServerSetting(\"invites\");\n    }\n\n    if (props.verifySuccess) {\n      console.log('verify join server');\n      setModalOpen(false);\n      toast.dismiss();\n      toast.success('Success, you have joined the server!', {\n        position: 'bottom-center'\n      });\n      props.resetInviteValues();\n      props.getUpdatedUser({\n        userId: id\n      });\n    }\n\n    if (props.verifyError) {\n      console.log('join server error');\n      toast.dismiss();\n      toast.error('Error joining server!', {\n        position: 'bottom-center'\n      });\n      props.resetInviteValues();\n    }\n\n    if (props.updateRoleSuccess) {\n      console.log('update role success');\n      setShowUserManagement(false);\n      setServerUserRole(\"admin\");\n      setServerUser(null);\n    }\n\n    if (props.serverUserList) {\n      console.log('find server user list');\n      setServerUserList(props.serverUserList);\n      const index = props.serverUserList.findIndex(x => x.username === username);\n\n      if (index > -1) {\n        console.log('found username');\n\n        if (props.serverUserList[index].type === 'admin' || props.serverUserList[index].type === 'owner') {\n          setIsAdmin(true);\n        } else if (props.serverUserList[index].type !== 'admin' || props.serverUserList[index].type !== 'owner') {\n          setIsAdmin(false);\n        }\n      }\n    }\n\n    if (props.serverUserBans) {\n      console.log('server user bans');\n      setShowUserManagementBan(false);\n      setServerUserBan(null);\n      setServerUserBans(props.serverUserBans);\n    }\n\n    if (props.chatroomError) {\n      console.log('chatroom error');\n      toast.dismiss();\n      toast.error('Error, Error creating chatroom!', {\n        position: 'bottom-center'\n      });\n      props.resetChatroomValues();\n    }\n\n    if (props.inviteCode) {\n      console.log('invite code');\n      setInviteModal(true);\n      setIsServerSettingsOpen(false);\n      setInviteCode(props.inviteCode);\n    }\n\n    if (props.inviteEmailSuccess) {\n      console.log('invite email success');\n      setInviteModal(false);\n      setIsServerSettingsOpen(false);\n      toast.dismiss();\n      toast.success('Success, Invite was sent successfully!', {\n        position: 'bottom-center'\n      });\n    }\n\n    if (props.inviteEmailError) {\n      console.log('invite email error');\n      toast.dismiss();\n      toast.error('Error, Invite could not be sent!', {\n        position: 'bottom-center'\n      });\n    }\n\n    if (props.chatroomList && props.chatroomSuccess) {\n      console.log('chatroom list');\n      setChatrooms(props.chatroomList);\n\n      if (props.chatroomList.length > 0) {\n        setActiveChatroom(props.chatroomList[0].name);\n        setActiveChatroomId(props.chatroomList[0].id);\n      }\n\n      setShowChannelModal(false);\n      setNewChannel('');\n      props.resetChatroomValues();\n    }\n\n    if (props.categoryList) {\n      console.log('category list');\n      setCategories(props.categoryList);\n      setShowCategoryModal(false);\n    }\n  }, [props, id, username]);\n  useEffect(() => {\n    window.addEventListener('keydown', detectEscape);\n\n    if (!props.user && !didFindUser) {\n      checkActiveMedia();\n      setDidFindUser(true);\n      props.currentUser();\n    } else if (props.retrieveUserError) {\n      setIsLoading(false);\n      toast.dismiss();\n      toast.error('Error saving updates to your account, please try again!', {\n        position: 'bottom-center'\n      });\n    } else if (props.user && props.retrieveUserSuccess) {\n      props.resetValues();\n      const _props$user = props.user,\n            id = _props$user.id,\n            username = _props$user.username,\n            email = _props$user.email,\n            imageUrl = _props$user.imageUrl,\n            active = _props$user.active,\n            serversList = _props$user.serversList;\n      setId(id);\n      setUsername(username);\n      setEmail(email);\n      setImageUrl(imageUrl);\n      setEditUsername(username);\n      setEditEmail(email);\n      setEditImageUrl(imageUrl);\n      setActive(active);\n      setServersList(serversList);\n      setAccountModalOpen(false);\n      setIsLoading(false);\n      props.findFriends({\n        userId: id\n      });\n    } else if (props.user && props.retrieveUpdatedUserSuccess) {\n      props.resetValues();\n      const _props$user2 = props.user,\n            id = _props$user2.id,\n            username = _props$user2.username,\n            email = _props$user2.email,\n            imageUrl = _props$user2.imageUrl,\n            active = _props$user2.active,\n            serversList = _props$user2.serversList;\n      setId(id);\n      setUsername(username);\n      setEmail(email);\n      setImageUrl(imageUrl);\n      setEditUsername(username);\n      setEditEmail(email);\n      setEditImageUrl(imageUrl);\n      setActive(active);\n      setServersList(serversList);\n      setAccountModalOpen(false);\n      setIsLoading(false);\n      props.findFriends({\n        userId: id\n      });\n\n      if (openServerItem && serversList && serversList.length > 0) {\n        const index = serversList.findIndex(x => x.serverId === openServerItem.serverId);\n\n        if (index > -1) {\n          setServer(openServerItem.name);\n          setServerName(openServerItem.name);\n          setServerId(openServerItem.serverId);\n          setServerImage(openServerItem.imageUrl);\n          setServerRegion(openServerItem.region);\n          setCurrentFriend(null);\n          props.findUserList({\n            serverId: openServerItem.serverId\n          });\n          props.findUserBans({\n            serverId: openServerItem.serverId\n          });\n          props.categoryFindAll({\n            serverId: openServerItem.serverId\n          });\n          props.getChatrooms({\n            serverId: openServerItem.serverId\n          });\n          setOpenServerItem(null);\n        } else {\n          setOpenServerItem(null);\n          setServer('');\n          setServerName('');\n          setServerId(null);\n          toast.info('You have been removed from the server by an admin!', {\n            position: 'bottom-center'\n          });\n        }\n      } else if (openServerItem && !serversList) {\n        setOpenServerItem(null);\n        setServer('');\n        setServerName('');\n        setServerId(null);\n        toast.info('You have been removed from the server by an admin!', {\n          position: 'bottom-center'\n        });\n      } else if (openServerItem && serversList && serversList.length < 1) {\n        setOpenServerItem(null);\n        setServer('');\n        setServerName('');\n        setServerId(null);\n        toast.info('You have been removed from this server an admin!', {\n          position: 'bottom-center'\n        });\n      }\n    }\n  }, [props, openServerItem, didFindUser]);\n\n  const detectEscape = event => {\n    if (event.keyCode === 27) {\n      setSettingsOpen(false);\n      setIsServerSettingsOpen(false);\n      showServerSettings(false);\n      setActiveServerSetting(\"overview\");\n      setActiveUserSetting(\"myaccount\");\n      setAccountModalOpen(false);\n    }\n  };\n\n  if (props.logout) {\n    return React.createElement(Redirect, {\n      push: true,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    });\n  }\n\n  const userLogout = () => {\n    props.userLogout({\n      id: id\n    });\n  };\n\n  const deleteServer = () => {// props.deleteServer({\n    //   serverId: serverId\n    // });\n  };\n\n  const toggleModal = value => {\n    setModalOpen(true);\n    setCurrentModal(value);\n  };\n\n  const refreshServerUsers = () => {\n    props.findUserList({\n      serverId: serverId\n    });\n    props.findUserBans({\n      serverId: serverId\n    });\n  };\n\n  const getUpdatedServerList = closeModal => {\n    if (closeModal) {\n      setModalOpen(false);\n      toast.dismiss();\n      toast.success('Success, the server was created!', {\n        position: 'bottom-center'\n      });\n      props.getUpdatedUser({\n        userId: id\n      });\n    } else {\n      toast.dismiss();\n      toast.error('There was an error creating the server!', {\n        position: 'bottom-center'\n      });\n    }\n  };\n\n  const setShowInviteModal = () => {\n    setInviteModal(!inviteModal);\n    showServerSettings(false);\n    setInviteCode('');\n    props.resetInviteValues();\n  };\n\n  const createInstantInvite = () => {\n    props.inviteCreate({\n      expires: expires,\n      serverId: serverId\n    });\n  };\n\n  const createNewServerInvite = () => {\n    props.inviteEmailCreate({\n      inviteCode: '',\n      expires: expires,\n      serverId: serverId,\n      email: email\n    });\n  };\n\n  const displayChannelModal = () => {\n    setShowChannelModal(true);\n    showServerSettings(false);\n  };\n\n  const createNewChannel = () => {\n    const channel = {\n      name: newChannel,\n      serverId: serverId,\n      order: categories.length,\n      visible: true,\n      type: channelType\n    };\n    props.chatroomCreate(channel);\n  };\n\n  const displayCategoryModal = () => {\n    setShowCategoryModal(true);\n    showServerSettings(false);\n  };\n\n  const displayNotificationSettingsModal = () => {\n    setShowNotificationSettingsModal(!showNotificationSettingsModal);\n    showServerSettings(false);\n  };\n\n  const displayPrivacyModal = () => {\n    setShowPrivacyModal(!showPrivacyModal);\n    showServerSettings(false);\n  };\n\n  const createNewCategory = () => {\n    props.categoryCreate({\n      name: newCategory,\n      serverId: serverId,\n      order: categories.length,\n      visible: true\n    });\n    setNewCategory('');\n  };\n\n  const dragItem = (item, event) => {\n    if (!isAdmin) return false;\n    setCurrentDragItem(item);\n    event.dataTransfer.setData(\"text\", event.target.id);\n  };\n\n  const draggingOverItem = event => {\n    if (!isAdmin) return false;\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const dropItem = event => {\n    if (!isAdmin) return false;\n    event.preventDefault();\n    const newChatrooms = chatrooms || [];\n\n    if (event.target.id !== currentDragItem.category && event.target.id) {\n      for (let i = 0; i < newChatrooms.length; i++) {\n        if (newChatrooms[i].categoryId === currentDragItem.categoryId && newChatrooms[i].name === currentDragItem.name) {\n          newChatrooms[i] = {\n            categoryId: +event.target.id.split('-')[0] === 0 ? null : +event.target.id.split('-')[0],\n            id: currentDragItem.id,\n            name: currentDragItem.name,\n            serverId: currentDragItem.serverId\n          };\n          props.chatroomUpdate({\n            chatroomId: currentDragItem.id,\n            categoryId: +event.target.id.split('-')[0] === 0 ? null : +event.target.id.split('-')[0]\n          });\n          break;\n        }\n      }\n\n      setChatrooms(newChatrooms);\n      setTriggerReload(!triggerReload);\n    }\n  };\n\n  const setItemVisibility = group => {\n    for (let i = 0; i < categories.length; i++) {\n      if (categories[i].name === group.name) {\n        categories[i].visible = !categories[i].visible;\n      }\n    }\n\n    setTriggerReload(!triggerReload);\n  };\n\n  const setServerProperties = item => {\n    props.getUpdatedUser({\n      userId: id\n    });\n    setOpenServerItem(item);\n  };\n\n  const setCurrentActiveChatroom = (item, event) => {\n    if (event) {\n      event.stopPropagation();\n    }\n\n    setActiveChatroom(item.name);\n    setActiveChatroomId(item.id);\n    setActiveChatroomType(item.type);\n  };\n\n  const joinServer = value => {\n    props.inviteVerification({\n      userId: id,\n      code: value,\n      email: email\n    });\n  };\n\n  const getInvites = () => {\n    props.findInvites({\n      serverId: serverId\n    });\n  };\n\n  const privateMessageUser = user => {\n    setServer('');\n    props.friendCreate({\n      userId: id,\n      friendId: user.userId,\n      username: user.username,\n      friendUsername: username,\n      imageUrl: user.imageUrl\n    });\n  };\n\n  const deleteFriend = (event, friend) => {\n    event.stopPropagation();\n    setCurrentFriend(null);\n    setServer('');\n    props.friendDelete({\n      userId: id,\n      friendId: friend.friendId\n    });\n  };\n\n  const clickSetCurrentFriend = (event, friend) => {\n    event.stopPropagation();\n    setCurrentFriend(friend);\n  };\n\n  const setHomeServer = () => {\n    setServer('');\n    props.findFriends({\n      userId: id\n    });\n  };\n\n  const setActiveServerUser = user => {\n    setShowUserManagement(true);\n    setServerUser(user);\n  };\n\n  const setActiveServerUserBan = user => {\n    setShowUserManagementBan(true);\n    setServerUserBan(user);\n  };\n\n  const setSaveServerUser = () => {\n    const data = {\n      active: true,\n      imageUrl: null,\n      type: serverUserRole,\n      userId: serverUser.userId,\n      username: serverUser.username,\n      serverId: serverId\n    };\n    props.updateUserRole(data);\n  };\n\n  const setRemoveUserBan = () => {\n    const data = {\n      userId: serverUserBan.userId,\n      serverId: serverId\n    };\n    props.unbanUser(data);\n  };\n\n  const leaveServer = () => {\n    props.getUpdatedUser({\n      userId: id\n    });\n    setTriggerReload(!triggerReload);\n    setServer('');\n    setServerName('');\n    setServerId(null);\n    toast.info('You have been removed from the server by an admin!', {\n      position: 'bottom-center'\n    });\n  };\n\n  const saveAccountInfo = () => {\n    const emailRegex = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!emailRegex.test(String(editEmail).toLowerCase())) {\n      toast.dismiss();\n      toast.error('Email address must be a valid!', {\n        position: 'bottom-center'\n      });\n      return;\n    } else if (editUsername && editUsername.length < 2 || editUsername && editUsername.length > 14 || !editUsername) {\n      toast.dismiss();\n      toast.error('Username does not meet the length requirements!', {\n        position: 'bottom-center'\n      });\n    } else if (emailRegex.test(String(editEmail).toLowerCase())) {\n      setIsLoading(true);\n      const formData = new FormData();\n      formData.append('id', id);\n      formData.append('serverId', serverId);\n      formData.append('imageUrl', editImageUrl);\n      formData.append('mainFile', mainFile);\n      formData.append('email', editEmail);\n      formData.append('username', editUsername);\n      props.userUpdate(formData);\n    }\n  };\n\n  const showMainFile = event => {\n    event.preventDefault();\n    let reader = new FileReader();\n    let file = event.target.files[0];\n\n    reader.onloadend = () => {\n      setMainFile(file);\n      setEditImageUrl(reader.result);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const setNewChannelType = value => {\n    setChannelType(value);\n  };\n\n  if (isLoading) {\n    return React.createElement(\"div\", {\n      className: \"loadingbackground\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623\n      },\n      __self: this\n    }, React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }));\n  }\n  /**\n   * check if user has enabled microphone access\n   */\n\n\n  const checkActiveMedia = async () => {\n    let isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n    if (!isChrome) {\n      setAllowVoice(true);\n      return;\n    }\n\n    const result = await navigator.permissions.query({\n      name: 'microphone'\n    });\n\n    if (result.state === 'granted') {\n      setAllowVoice(true);\n      const constraints = {\n        audio: true,\n        video: false\n      };\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n\n      if (stream) {\n        setAudioStream(stream);\n      }\n    } else if (result.state === 'prompt') {\n      setAllowVoice(false);\n    } else if (result.state === 'denied') {\n      setAllowVoice(false);\n    }\n  };\n  /**\n   * request permission to access the microphone\n   */\n\n\n  const getMedia = async () => {\n    const constraints = {\n      audio: true,\n      video: false\n    };\n    let stream = null;\n\n    try {\n      stream = await navigator.mediaDevices.getUserMedia(constraints);\n\n      if (stream.active === true) {\n        setAudioStream(stream);\n        setAllowVoice(true);\n      } else {\n        setAllowVoice(false);\n      }\n    } catch (err) {\n      setAllowVoice(false);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677\n    },\n    __self: this\n  }, React.createElement(ToastMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678\n    },\n    __self: this\n  }), isModalOpen || showCategoryModal || showChannelModal || showNotificationSettingsModal || showPrivacyModal || inviteModal ? React.createElement(\"span\", {\n    className: \"contentBackground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"sidebar\",\n    onClick: () => {\n      setCurrentFriend(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidebar-container\",\n    onPointerOver: () => {\n      setHover(\"Home\");\n    },\n    onPointerOut: () => {\n      setHover('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 681\n    },\n    __self: this\n  }, hover === \"Home\" && server !== '' ? React.createElement(\"span\", {\n    className: \"sidebar-hover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682\n    },\n    __self: this\n  }) : null, server === '' ? React.createElement(\"span\", {\n    className: \"sidebar-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683\n    },\n    __self: this\n  }) : null, React.createElement(\"img\", {\n    className: \"sidebar-logo\",\n    src: chatot,\n    alt: \"chatter-icon-logo\",\n    onClick: () => {\n      setHomeServer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684\n    },\n    __self: this\n  }), hover === \"Home\" ? React.createElement(\"span\", {\n    className: \"tooltip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685\n    },\n    __self: this\n  }, \"Home\")) : null), React.createElement(\"div\", {\n    className: \"sidebar-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687\n    },\n    __self: this\n  }), serversList && serversList.length > 0 ? serversList.map((item, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"sidebar-container\",\n      onPointerOver: () => {\n        setHover(item.name);\n      },\n      onPointerOut: () => {\n        setHover('');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690\n      },\n      __self: this\n    }, hover === item.name && server !== item.name && server !== \"Home\" ? React.createElement(\"span\", {\n      className: \"sidebar-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691\n      },\n      __self: this\n    }) : null, server === item.name ? React.createElement(\"span\", {\n      className: \"sidebar-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692\n      },\n      __self: this\n    }) : null, React.createElement(\"img\", {\n      className: \"sidebar-logo\",\n      src: item.imageUrl ? item.imageUrl : chatot,\n      alt: \"chatter-icon\",\n      onClick: () => {\n        setServerProperties(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693\n      },\n      __self: this\n    }), hover === item.name ? React.createElement(\"span\", {\n      className: \"tooltip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694\n      },\n      __self: this\n    }, item.name)) : null);\n  }) : null), server === '' ? React.createElement(\"div\", {\n    className: \"sidebarleft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidebarleft-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Find or start a conversation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"sidebarleft-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sidebarleft-friendscontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"sidebarleft-logo\",\n    src: friends,\n    alt: \"friends-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"sidebarleft-friends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707\n    },\n    __self: this\n  }, \"Friends\")), React.createElement(\"div\", {\n    className: \"sidebarleft-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sidebarleft-directmessages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711\n    },\n    __self: this\n  }, \"Private Messages\")), React.createElement(\"div\", {\n    className: \"sidebarleft-bordertwo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sidebarleft-listfriends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714\n    },\n    __self: this\n  }, friendsList && friendsList.length ? friendsList.map((item, index) => {\n    if (item.activeFriend) {\n      return React.createElement(\"div\", {\n        key: index,\n        className: currentFriend && item.username === currentFriend.username ? \"sidebarleft-currentfriend-active\" : \"sidebarleft-currentfriend\",\n        onClick: event => {\n          clickSetCurrentFriend(event, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"sidebarleft-currentfriend-image\",\n        src: item.imageUrl ? item.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"sidebarleft-currentfriend-username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720\n        },\n        __self: this\n      }, item.username), React.createElement(\"span\", {\n        className: \"sidebarleft-currentfriend-remove\",\n        onClick: event => {\n          deleteFriend(event, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721\n        },\n        __self: this\n      }, \"\\u2715\"));\n    } else {\n      return null;\n    }\n  }) : null), React.createElement(\"div\", {\n    className: \"userinfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"username-image\",\n    src: imageUrl ? imageUrl : chatot,\n    alt: \"username-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731\n    },\n    __self: this\n  })), active ? React.createElement(\"div\", {\n    className: \"userinfo-online\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733\n    },\n    __self: this\n  }) : null, React.createElement(\"span\", {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734\n    },\n    __self: this\n  }, username), React.createElement(\"div\", {\n    className: \"activateicons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735\n    },\n    __self: this\n  }, allowVoice ? React.createElement(\"span\", {\n    onClick: () => {\n      getMedia();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"microphone-image\",\n    src: microphone,\n    alt: \"microphone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738\n    },\n    __self: this\n  })) : React.createElement(\"span\", {\n    onClick: () => {\n      getMedia();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"nomicrophone-image\",\n    src: nomicrophone,\n    alt: \"nomicrophone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741\n    },\n    __self: this\n  })), React.createElement(\"img\", {\n    className: \"settings-image\",\n    src: settings,\n    alt: \"settings-icon\",\n    onClick: () => {\n      setSettingsOpen(!isSettingsOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744\n    },\n    __self: this\n  })))) : React.createElement(\"div\", {\n    className: \"sidebarleftchat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidebarleftchat-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"sidebarleftchat-container-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750\n    },\n    __self: this\n  }, server), isAdmin ? React.createElement(\"div\", {\n    className: \"sidebarleftchat-container-dropdown\",\n    onClick: () => {\n      showServerSettings(!serverSettings);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 751\n    },\n    __self: this\n  }, !serverSettings ? React.createElement(\"i\", {\n    className: \"channelarrow down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 751\n    },\n    __self: this\n  }) : React.createElement(\"span\", {\n    className: \"cancel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 751\n    },\n    __self: this\n  }, \"\\u2715\")) : null, serverSettings ? React.createElement(\"div\", {\n    className: \"serversettings-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    onClick: () => {\n      setShowInviteModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: invite,\n    alt: \"invite-people\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756\n    },\n    __self: this\n  }, \"Invite People\")), React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    onClick: () => {\n      setIsServerSettingsOpen(!isServerSettingsOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: serversettings,\n    alt: \"server-settings\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760\n    },\n    __self: this\n  }, \"Server Settings\")), React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    onClick: () => {\n      displayChannelModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: createchannel,\n    alt: \"server-settings\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766\n    },\n    __self: this\n  }, \"Create Channel\")), React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    onClick: () => {\n      displayCategoryModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: category,\n    alt: \"server-settings\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770\n    },\n    __self: this\n  }, \"Create Category\")), React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    onClick: () => {\n      displayNotificationSettingsModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: notification,\n    alt: \"server-settings\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774\n    },\n    __self: this\n  }, \"Notification Settings\")), React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    onClick: () => {\n      displayPrivacyModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: privacylock,\n    alt: \"server-settings\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778\n    },\n    __self: this\n  }, \"Privacy Settings\"))) : null), inviteModal ? React.createElement(InviteModal, {\n    expires: expires,\n    inviteEmail: inviteEmail,\n    inviteCode: inviteCode,\n    setTimeExpires: value => {\n      setExpires(value);\n    },\n    createNewInvite: () => {\n      createNewServerInvite();\n    },\n    setShowInviteModal: () => {\n      setShowInviteModal(false);\n    },\n    createNewInstantInvite: () => {\n      createInstantInvite();\n    },\n    setCurrentInviteEmail: value => {\n      setInviteEmail(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785\n    },\n    __self: this\n  }) : null, showChannelModal ? React.createElement(ChannelModal, {\n    newChannel: newChannel,\n    channelType: channelType,\n    setNewChannel: event => {\n      setNewChannel(event.target.value);\n    },\n    setChannelType: value => {\n      setNewChannelType(value);\n    },\n    setShowChannelModal: () => {\n      setShowChannelModal(false);\n    },\n    createNewChannel: () => {\n      createNewChannel();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798\n    },\n    __self: this\n  }) : null, showCategoryModal ? React.createElement(CategoryModal, {\n    newCategory: newCategory,\n    setNewCategory: event => {\n      setNewCategory(event.target.value);\n    },\n    setShowCategoryModal: () => {\n      setShowCategoryModal(false);\n    },\n    createNewCategory: () => {\n      createNewCategory();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 809\n    },\n    __self: this\n  }) : null, showPrivacyModal ? React.createElement(PrivacyModal, {\n    server: server,\n    allowDirectMessages: allowDirectMessages,\n    setAllowDirectMessages: () => {\n      setAllowDirectMessages(true);\n    },\n    setShowPrivacyModal: () => {\n      setShowPrivacyModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818\n    },\n    __self: this\n  }) : null, showNotificationSettingsModal ? React.createElement(NotificationSettingsModal, {\n    server: server,\n    setShowNotificationSettingsModal: () => {\n      setShowNotificationSettingsModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"sidebarleft-mainchat\",\n    style: {\n      marginTop: chatrooms && chatrooms.length ? '0.5rem' : '0rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onDrop: event => {\n      dropItem(event);\n    },\n    onDragOver: event => {\n      draggingOverItem(event);\n    },\n    id: 0 + \"-\" + server,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834\n    },\n    __self: this\n  }, chatrooms && chatrooms.length > 0 ? chatrooms.filter(chatroom => chatroom.categoryId === null).map((item, index) => {\n    return React.createElement(\"div\", {\n      className: activeChatroom === item.name ? \"active\" : '',\n      key: index,\n      id: 0 + \"-\" + item.name,\n      draggable: \"true\",\n      onDragStart: event => {\n        dragItem(item, event);\n      },\n      onClick: () => {\n        setCurrentActiveChatroom(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837\n      },\n      __self: this\n    }, item.type === \"text\" ? React.createElement(\"img\", {\n      src: numbersign,\n      alt: \"channel\",\n      height: 16,\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838\n      },\n      __self: this\n    }) : null, item.type === \"voice\" ? React.createElement(\"img\", {\n      src: voice,\n      alt: \"channel\",\n      height: 18,\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839\n      },\n      __self: this\n    }) : null, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840\n      },\n      __self: this\n    }, item.name));\n  }) : null), categories && categories.length ? categories.map((group, categoryIndex) => {\n    const height = chatrooms.filter(chatroom => chatroom.categoryId === group.id).length;\n    const itemHeight = group.visible === true ? \"\".concat(height * 2, \"rem\") : '0rem';\n    return React.createElement(\"div\", {\n      key: categoryIndex,\n      style: {\n        marginBottom: itemHeight\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sidebarleft-mainchat-dropdown\",\n      onClick: () => {\n        setItemVisibility(group);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851\n      },\n      __self: this\n    }, group.visible ? React.createElement(\"i\", {\n      className: \"arrow down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      className: \"arrow right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 856\n      },\n      __self: this\n    }, group.name), group.visible ? React.createElement(\"div\", {\n      onDrop: event => {\n        dropItem(event);\n      },\n      onDragOver: event => {\n        draggingOverItem(event);\n      },\n      id: group.id + \"-\" + group.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858\n      },\n      __self: this\n    }, chatrooms && chatrooms.length > 0 ? chatrooms.filter(chatroom => chatroom.categoryId === group.id).map((item, index) => {\n      return React.createElement(\"div\", {\n        className: activeChatroom === item.name ? \"active\" : \"inactive\",\n        id: item.categoryId + \"-\" + item.name,\n        key: index,\n        draggable: \"true\",\n        onDragStart: event => {\n          dragItem(item, event);\n        },\n        onClick: event => {\n          setCurrentActiveChatroom(item, event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: numbersign,\n        alt: \"channel\",\n        height: 16,\n        width: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862\n        },\n        __self: this\n      }, item.name));\n    }) : null) : null));\n  }) : null)), server !== '' && activeChatroom !== '' && activeChatroomId !== null ? React.createElement(Chatroom, {\n    activeChatroom: activeChatroom,\n    activeChatroomId: activeChatroomId,\n    activeChatroomType: activeChatroomType,\n    userId: id,\n    serverId: serverId,\n    username: username,\n    serverUserList: serverUserList,\n    refreshServerUsers: refreshServerUsers,\n    audioStream: audioStream,\n    privateMessageUser: user => {\n      privateMessageUser(user);\n    },\n    leaveServer: () => {\n      leaveServer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 877\n    },\n    __self: this\n  }) : null, server === '' && currentFriend !== null ? React.createElement(ChatroomFriend, {\n    groupId: currentFriend.groupId,\n    userId: id,\n    username: username,\n    friendId: currentFriend.friendId,\n    friendUsername: currentFriend.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 893\n    },\n    __self: this\n  }) : null, server === '' && currentFriend === null ? React.createElement(\"div\", {\n    className: \"mainarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mainarea-topnav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"mainarea-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 906\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mainarea-container-addserver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 907\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 908\n    },\n    __self: this\n  }, \"Create\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909\n    },\n    __self: this\n  }, \"Create a new server and invite other people to join!\"), React.createElement(\"button\", {\n    onClick: () => {\n      toggleModal(\"create\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910\n    },\n    __self: this\n  }, \"Create a server\")), React.createElement(\"div\", {\n    className: \"mainarea-container-joinserver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913\n    },\n    __self: this\n  }, \"Join\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914\n    },\n    __self: this\n  }, \"Enter an secret invite code to join an existing server!\"), React.createElement(\"button\", {\n    onClick: () => {\n      toggleModal(\"join\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 915\n    },\n    __self: this\n  }, \"Join a server\")))) : null, isServerSettingsOpen ? React.createElement(\"div\", {\n    className: \"serversettings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 922\n    },\n    __self: this\n  }, isChangingRegion || showUserManagement || showUserManagementBan ? React.createElement(\"span\", {\n    className: \"contentBackground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 923\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"serversettings-sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 924\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 925\n    },\n    __self: this\n  }, \"Server Settings\"), React.createElement(\"p\", {\n    className: activeServerSetting === \"overview\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-overview\",\n    onClick: () => {\n      setActiveServerSetting(\"overview\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926\n    },\n    __self: this\n  }, \"Overview\"), React.createElement(\"p\", {\n    className: activeServerSetting === \"moderation\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-moderation\",\n    onClick: () => {\n      setActiveServerSetting(\"moderation\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927\n    },\n    __self: this\n  }, \"Moderation\"), React.createElement(\"p\", {\n    className: activeServerSetting === \"activitylog\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-activitylog\",\n    onClick: () => {\n      setActiveServerSetting(\"activitylog\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928\n    },\n    __self: this\n  }, \"Activity Log\"), React.createElement(\"p\", {\n    className: activeServerSetting === \"roles\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-roles\",\n    onClick: () => {\n      setActiveServerSetting(\"roles\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 929\n    },\n    __self: this\n  }, \"Roles\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 930\n    },\n    __self: this\n  }, \"User Management\"), React.createElement(\"p\", {\n    className: activeServerSetting === \"members\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-members\",\n    onClick: () => {\n      setActiveServerSetting(\"members\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931\n    },\n    __self: this\n  }, \"Members\"), React.createElement(\"p\", {\n    className: activeServerSetting === \"invites\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-invites\",\n    onClick: () => {\n      getInvites();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 932\n    },\n    __self: this\n  }, \"Invites\"), React.createElement(\"p\", {\n    className: activeServerSetting === \"bans\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-bans\",\n    onClick: () => {\n      setActiveServerSetting(\"bans\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 933\n    },\n    __self: this\n  }, \"Bans\"), React.createElement(\"p\", {\n    onClick: deleteServer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 934\n    },\n    __self: this\n  }, \"Delete Server\")), React.createElement(\"div\", {\n    className: \"serversettings-servercontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 936\n    },\n    __self: this\n  }, activeServerSetting === \"overview\" ? React.createElement(\"div\", {\n    className: \"serversettings-myserver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939\n    },\n    __self: this\n  }, \"Server Overview\"), React.createElement(\"div\", {\n    className: \"serversettings-myserver__container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"serversettings-myserver__container-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 941\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: serverImage ? serverImage : chatot,\n    alt: \"server-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"serversettings-myserver__container-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 944\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"serversettings-myserver__container-info-server\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 945\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 946\n    },\n    __self: this\n  }, \"Server Name\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 946\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    onChange: event => setServerName(event.target.value),\n    value: serverName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 947\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"serversettings-myserver__container-info-region\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 949\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 950\n    },\n    __self: this\n  }, \"Server Region\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 950\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"servermodalregion-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 951\n    },\n    __self: this\n  }, serverRegion === \"US West\" || serverRegion === \"US Central\" || serverRegion === \"US East\" ? React.createElement(\"img\", {\n    src: usregion,\n    height: 35,\n    width: 55,\n    alt: \"server-region\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 952\n    },\n    __self: this\n  }) : null, serverRegion === \"Central Europe\" || serverRegion === \"Western Europe\" ? React.createElement(\"img\", {\n    src: europe,\n    height: 35,\n    width: 55,\n    alt: \"server-region\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 953\n    },\n    __self: this\n  }) : null, serverRegion === \"Russia\" ? React.createElement(\"img\", {\n    src: russia,\n    height: 35,\n    width: 55,\n    alt: \"server-region\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 954\n    },\n    __self: this\n  }) : null, React.createElement(\"span\", {\n    className: \"servermodalregion-select-current\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955\n    },\n    __self: this\n  }, serverRegion), React.createElement(\"span\", {\n    className: \"servermodalregion-select-change\",\n    onClick: () => {\n      setIsChangingRegion(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956\n    },\n    __self: this\n  }, \"Change\")))))) : null, activeServerSetting === \"members\" ? React.createElement(\"div\", {\n    className: \"serversettings-members\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 965\n    },\n    __self: this\n  }, showUserManagement ? React.createElement(UserManagement, {\n    serverUser: serverUser,\n    serverUserRole: serverUserRole,\n    setShowUserManagement: () => {\n      setShowUserManagement(false);\n      setServerUserRole(\"admin\");\n      setServerUser(null);\n    },\n    setServerUserRole: role => {\n      setServerUserRole(role);\n    },\n    setSaveServerUser: setSaveServerUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 967\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 974\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"serversettings-members-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 975\n    },\n    __self: this\n  }, \"Server Members\"), React.createElement(\"p\", {\n    className: \"serversettings-members-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 976\n    },\n    __self: this\n  }, serverUserList.length, \" Members\"), serverUserList && serverUserList.length > 0 ? serverUserList.map((item, index) => {\n    if (item.type === \"owner\") {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"serversettings-owner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 980\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"serversettings-logo\",\n        src: item.imageUrl ? item.imageUrl : chatot,\n        alt: \"chatter-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 981\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 982\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 983\n        },\n        __self: this\n      }, item.type), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 984\n        },\n        __self: this\n      }, item.username)), React.createElement(\"span\", {\n        className: \"serversettings-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: owner,\n        alt: \"add-icon\",\n        className: \"serversettings-user-add-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 987\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"serversettings-user\",\n        onClick: () => {\n          setActiveServerUser(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 993\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"serversettings-logo\",\n        src: item.imageUrl ? item.imageUrl : chatot,\n        alt: \"chatter-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 996\n        },\n        __self: this\n      }, item.type), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997\n        },\n        __self: this\n      }, item.username)), React.createElement(\"span\", {\n        className: \"serversettings-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 999\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: add,\n        alt: \"add-icon\",\n        className: \"serversettings-user-add-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1000\n        },\n        __self: this\n      })));\n    }\n  }) : null)) : null, activeServerSetting === \"invites\" ? React.createElement(\"div\", {\n    className: \"serversettings-invites\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1012\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1013\n    },\n    __self: this\n  }, \"Server Invites\"), React.createElement(\"p\", {\n    className: \"serversettings-invites-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1014\n    },\n    __self: this\n  }, serverInvites.length === 1 ? '1 Invite' : \"\".concat(serverInvites.length, \" Invites\"), \" \"), serverInvites && serverInvites.length > 0 ? serverInvites.map((item, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"serversettings-invite\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1017\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1018\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1019\n      },\n      __self: this\n    }, \"Code: \", item.code), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020\n      },\n      __self: this\n    }, \"Created: \", React.createElement(Moment, {\n      format: \"MM/DD/YYYY\",\n      date: item.createdAt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1021\n      },\n      __self: this\n    }), \" at \", React.createElement(Moment, {\n      date: item.createdAt,\n      format: \"LT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1021\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1023\n      },\n      __self: this\n    }, \"Expiration: \", item.expires, \" hours\")), React.createElement(\"span\", {\n      className: \"serversettings-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1025\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: add,\n      alt: \"add-icon\",\n      className: \"serversettings-invite-add-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1026\n      },\n      __self: this\n    })));\n  }) : null) : null, activeServerSetting === \"bans\" ? React.createElement(\"div\", {\n    className: \"serversettings-bans\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1035\n    },\n    __self: this\n  }, showUserManagementBan ? React.createElement(UserBans, {\n    serverUserBan: serverUserBan,\n    setShowUserManagementBan: () => {\n      setShowUserManagementBan(false);\n      setServerUserBan(null);\n    },\n    setRemoveUserBan: setRemoveUserBan,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1037\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1042\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"serversettings-bans-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1043\n    },\n    __self: this\n  }, \"Server Bans\"), React.createElement(\"p\", {\n    className: \"serversettings-bans-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1044\n    },\n    __self: this\n  }, serverUserBans.length, \" Bans\"), serverUserBans && serverUserBans.length > 0 ? serverUserBans.map((item, index) => {\n    if (item.type === \"owner\") {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"serversettings-owner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"serversettings-logo\",\n        src: item.imageUrl ? item.imageUrl : chatot,\n        alt: \"chatter-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1050\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051\n        },\n        __self: this\n      }, item.type), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1052\n        },\n        __self: this\n      }, item.username)), React.createElement(\"span\", {\n        className: \"serversettings-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1054\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: owner,\n        alt: \"add-icon\",\n        className: \"serversettings-user-add-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1055\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"serversettings-user\",\n        onClick: () => {\n          setActiveServerUserBan(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1061\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"serversettings-logo\",\n        src: item.imageUrl ? item.imageUrl : chatot,\n        alt: \"chatter-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1062\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1064\n        },\n        __self: this\n      }, item.type), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065\n        },\n        __self: this\n      }, item.username)), React.createElement(\"span\", {\n        className: \"serversettings-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1067\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: add,\n        alt: \"add-icon\",\n        className: \"serversettings-user-add-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1068\n        },\n        __self: this\n      })));\n    }\n  }) : null)) : null, React.createElement(\"div\", {\n    className: \"serversettings-escape\",\n    onClick: () => {\n      setIsServerSettingsOpen(!isServerSettingsOpen);\n      showServerSettings(false);\n      setActiveServerSetting(\"overview\");\n      setShowUserManagementBan(false);\n      setShowUserManagement(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1079\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"serversettings-escapetext\",\n    onClick: () => {\n      setIsServerSettingsOpen(!isServerSettingsOpen);\n      showServerSettings(false);\n      setActiveServerSetting(\"overview\");\n      setShowUserManagementBan(false);\n      setShowUserManagement(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1081\n    },\n    __self: this\n  }, \"ESC\")), isChangingRegion ? React.createElement(RegionModal, {\n    setIsChangingRegion: () => {\n      setIsChangingRegion(false);\n    },\n    setServerRegion: region => {\n      setServerRegion(region);\n      setIsChangingRegion(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1085\n    },\n    __self: this\n  }) : null) : null, isSettingsOpen ? React.createElement(\"div\", {\n    className: \"usersettings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1095\n    },\n    __self: this\n  }, accountModalOpen ? React.createElement(\"span\", {\n    className: \"contentBackground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1096\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"usersettings-sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1097\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1098\n    },\n    __self: this\n  }, \"User Settings\"), React.createElement(\"p\", {\n    className: activeUserSetting === \"myaccount\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-myaccount\",\n    onClick: () => {\n      setActiveUserSetting(\"myaccount\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1099\n    },\n    __self: this\n  }, \"My Account\"), React.createElement(\"p\", {\n    className: activeUserSetting === \"privacy\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-privacy\",\n    onClick: () => {\n      setActiveUserSetting(\"privacy\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1100\n    },\n    __self: this\n  }, \"Privacy & Safety\"), React.createElement(\"p\", {\n    className: activeUserSetting === \"connections\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-connections\",\n    onClick: () => {\n      setActiveUserSetting(\"connections\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1101\n    },\n    __self: this\n  }, \"Connections\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1102\n    },\n    __self: this\n  }, \"App Settings\"), React.createElement(\"p\", {\n    className: activeUserSetting === \"voice\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-voice\",\n    onClick: () => {\n      setActiveUserSetting(\"voice\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1103\n    },\n    __self: this\n  }, \"Voice & Video\"), React.createElement(\"p\", {\n    className: activeUserSetting === \"notifications\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-notifications\",\n    onClick: () => {\n      setActiveUserSetting(\"notifications\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1104\n    },\n    __self: this\n  }, \"Notifications\"), React.createElement(\"p\", {\n    className: activeUserSetting === \"appearance\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-appearance\",\n    onClick: () => {\n      setActiveUserSetting(\"appearance\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1105\n    },\n    __self: this\n  }, \"Appearance\"), React.createElement(\"p\", {\n    className: activeUserSetting === \"language\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-language\",\n    onClick: () => {\n      setActiveUserSetting(\"language\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1106\n    },\n    __self: this\n  }, \"Language\"), React.createElement(\"p\", {\n    onClick: userLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1107\n    },\n    __self: this\n  }, \"Logout\")), activeUserSetting === \"myaccount\" ? React.createElement(\"div\", {\n    className: \"usersettings-accountcontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1111\n    },\n    __self: this\n  }, accountModalOpen ? React.createElement(EditAccount, {\n    editUsername: editUsername,\n    editEmail: editEmail,\n    editImageUrl: editImageUrl,\n    setEditUsername: value => {\n      setEditUsername(value);\n    },\n    setEditEmail: value => {\n      setEditEmail(value);\n    },\n    setEditImageUrl: value => {\n      setEditImageUrl(value);\n    },\n    saveAccountInfo: saveAccountInfo,\n    setAccountModalOpen: () => {\n      setAccountModalOpen(false);\n    },\n    showMainFile: event => {\n      showMainFile(event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1113\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"usersettings-myaccount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1125\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1126\n    },\n    __self: this\n  }, \"My Account\"), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1127\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1128\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imageUrl ? imageUrl : chatot,\n    alt: \"username-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1129\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-info-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1132\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1133\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1133\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1134\n    },\n    __self: this\n  }, username)), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-info-email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1136\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1137\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1137\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1138\n    },\n    __self: this\n  }, email))), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-edit\",\n    onClick: () => {\n      setAccountModalOpen(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1141\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1142\n    },\n    __self: this\n  }, \"Edit\")))), React.createElement(\"div\", {\n    className: \"usersettings-authentication\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1146\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1147\n    },\n    __self: this\n  }, \"Two-Factor Authentication\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1148\n    },\n    __self: this\n  }, \"Protect your account with an extra layer of security. Once configured you'll be required to enter your password and an authentication code from your mobile device to login.\"), React.createElement(\"div\", {\n    className: \"usersettings-authentication-enable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1149\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1150\n    },\n    __self: this\n  }, \"Enable\"))))) : null, React.createElement(\"div\", {\n    className: \"usersettings-escape\",\n    onClick: () => {\n      setActiveUserSetting(\"myaccount\");\n      setSettingsOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1158\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"usersettings-escapetext\",\n    onClick: () => {\n      setActiveUserSetting(\"myaccount\");\n      setSettingsOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1160\n    },\n    __self: this\n  }, \"ESC\")) : null, isModalOpen && currentModal === \"create\" ? React.createElement(CreateServer, {\n    id: id,\n    region: region,\n    setRegion: region => {\n      setRegion(region);\n    },\n    setModalOpen: () => {\n      setModalOpen(!isModalOpen);\n    },\n    getUpdatedServerList: closeModal => {\n      getUpdatedServerList(closeModal);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1165\n    },\n    __self: this\n  }) : null, isModalOpen && currentModal === \"join\" ? React.createElement(JoinServer, {\n    joinServer: value => {\n      joinServer(value);\n    },\n    setModalOpen: () => {\n      setModalOpen(!isModalOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1175\n    },\n    __self: this\n  }) : null);\n};\n\nconst mapStateToProps = ({\n  usersReducer,\n  serversReducer,\n  categoriesReducer,\n  chatroomsReducer,\n  invitesReducer,\n  friendsReducer\n}) => {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    logout: usersReducer.logout,\n    user: usersReducer.user,\n    users: usersReducer.users,\n    retrieveUserError: usersReducer.retrieveUserError,\n    retrieveUserSuccess: usersReducer.retrieveUserSuccess,\n    retrieveUpdatedUserError: usersReducer.retrieveUpdatedUserError,\n    retrieveUpdatedUserSuccess: usersReducer.retrieveUpdatedUserSuccess,\n    serversList: serversReducer.serversList,\n    serverUserList: serversReducer.serverUserList,\n    serverUserBans: serversReducer.serverUserBans,\n    updateRoleSuccess: serversReducer.updateRoleSuccess,\n    updateRoleError: serversReducer.updateRoleError,\n    categoryList: categoriesReducer.categoryList,\n    chatroomList: chatroomsReducer.chatroomList,\n    chatroomSuccess: chatroomsReducer.success,\n    chatroomError: chatroomsReducer.error,\n    inviteEmailError: invitesReducer.inviteEmailError,\n    inviteEmailSuccess: invitesReducer.inviteEmailSuccess,\n    inviteCode: invitesReducer.inviteCode,\n    verifySuccess: invitesReducer.verifySuccess,\n    verifyError: invitesReducer.verifyError,\n    inviteServersList: invitesReducer.inviteServersList,\n    findInvitesSuccess: invitesReducer.findInvitesSuccess,\n    findInvitesError: invitesReducer.findInvitesError,\n    createFriendSuccess: friendsReducer.createFriendSuccess,\n    deleteFriendSuccess: friendsReducer.deleteFriendSuccess,\n    findFriendsSuccess: friendsReducer.findFriendsSuccess,\n    friendsList: friendsReducer.friendsList\n  };\n};\n\nexport default connect(mapStateToProps, actions)(Dashboard);","map":{"version":3,"sources":["/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/views/Dashboard/Dashboard.js"],"names":["React","useState","useEffect","useRef","useOnClickOutside","connect","actions","Redirect","toast","Moment","ToastMessage","Chatroom","ChatroomFriend","CreateServer","JoinServer","CategoryModal","ChannelModal","InviteModal","NotificationSettingsModal","PrivacyModal","RegionModal","UserManagement","EditAccount","UserBans","Loading","chatot","friends","settings","invite","notification","privacylock","serversettings","category","createchannel","numbersign","usregion","europe","russia","add","owner","voice","microphone","nomicrophone","Dashboard","props","id","setId","username","setUsername","email","setEmail","imageUrl","setImageUrl","active","setActive","server","setServer","serverName","setServerName","serverId","setServerId","serverImage","setServerImage","serverRegion","setServerRegion","serverUserList","setServerUserList","hover","setHover","isSettingsOpen","setSettingsOpen","isServerSettingsOpen","setIsServerSettingsOpen","isModalOpen","setModalOpen","currentModal","setCurrentModal","region","setRegion","serversList","setServersList","serverSettings","showServerSettings","inviteModal","setInviteModal","expires","setExpires","showChannelModal","setShowChannelModal","showCategoryModal","setShowCategoryModal","showPrivacyModal","setShowPrivacyModal","showNotificationSettingsModal","setShowNotificationSettingsModal","newCategory","setNewCategory","newChannel","setNewChannel","triggerReload","setTriggerReload","categories","setCategories","currentDragItem","setCurrentDragItem","chatrooms","setChatrooms","activeChatroom","setActiveChatroom","activeChatroomId","setActiveChatroomId","isChangingRegion","setIsChangingRegion","inviteEmail","setInviteEmail","inviteCode","setInviteCode","activeServerSetting","setActiveServerSetting","activeUserSetting","setActiveUserSetting","isAdmin","setIsAdmin","serverInvites","setServerInvites","allowDirectMessages","setAllowDirectMessages","friendsList","setFriendsList","currentFriend","setCurrentFriend","serverUser","setServerUser","serverUserBan","setServerUserBan","serverUserRole","setServerUserRole","showUserManagement","setShowUserManagement","showUserManagementBan","setShowUserManagementBan","openServerItem","setOpenServerItem","didFindUser","setDidFindUser","serverUserBans","setServerUserBans","editUsername","setEditUsername","editEmail","setEditEmail","editImageUrl","setEditImageUrl","accountModalOpen","setAccountModalOpen","mainFile","setMainFile","isLoading","setIsLoading","channelType","setChannelType","activeChatroomType","setActiveChatroomType","allowVoice","setAllowVoice","audioStream","setAudioStream","didFindFriends","setDidFindFriends","ref","findingFriends","findFriends","userId","findFriendsSuccess","resetFriendValues","createFriendSuccess","deleteFriendSuccess","findInvitesSuccess","findInvitesError","console","log","inviteServersList","resetInviteValues","verifySuccess","dismiss","success","position","getUpdatedUser","verifyError","error","updateRoleSuccess","index","findIndex","x","type","chatroomError","resetChatroomValues","inviteEmailSuccess","inviteEmailError","chatroomList","chatroomSuccess","length","name","categoryList","window","addEventListener","detectEscape","user","checkActiveMedia","currentUser","retrieveUserError","retrieveUserSuccess","resetValues","retrieveUpdatedUserSuccess","findUserList","findUserBans","categoryFindAll","getChatrooms","info","event","keyCode","logout","userLogout","deleteServer","toggleModal","value","refreshServerUsers","getUpdatedServerList","closeModal","setShowInviteModal","createInstantInvite","inviteCreate","createNewServerInvite","inviteEmailCreate","displayChannelModal","createNewChannel","channel","order","visible","chatroomCreate","displayCategoryModal","displayNotificationSettingsModal","displayPrivacyModal","createNewCategory","categoryCreate","dragItem","item","dataTransfer","setData","target","draggingOverItem","preventDefault","stopPropagation","dropItem","newChatrooms","i","categoryId","split","chatroomUpdate","chatroomId","setItemVisibility","group","setServerProperties","setCurrentActiveChatroom","joinServer","inviteVerification","code","getInvites","findInvites","privateMessageUser","friendCreate","friendId","friendUsername","deleteFriend","friend","friendDelete","clickSetCurrentFriend","setHomeServer","setActiveServerUser","setActiveServerUserBan","setSaveServerUser","data","updateUserRole","setRemoveUserBan","unbanUser","leaveServer","saveAccountInfo","emailRegex","test","String","toLowerCase","formData","FormData","append","userUpdate","showMainFile","reader","FileReader","file","files","onloadend","result","readAsDataURL","setNewChannelType","isChrome","navigator","userAgent","vendor","permissions","query","state","constraints","audio","video","stream","mediaDevices","getUserMedia","getMedia","err","map","activeFriend","color","marginTop","filter","chatroom","categoryIndex","height","itemHeight","marginBottom","groupId","role","createdAt","mapStateToProps","usersReducer","serversReducer","categoriesReducer","chatroomsReducer","invitesReducer","friendsReducer","users","retrieveUpdatedUserError","updateRoleError"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport useOnClickOutside from '../../utils/useOnClickOutside';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { Redirect } from 'react-router';\nimport { toast } from 'react-toastify';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Dashboard.css';\nimport ToastMessage from '../../components/ToastMessage/ToastMessage';\nimport Chatroom from '../../components/Chatroom/Chatroom';\nimport ChatroomFriend from '../../components/ChatroomFriend/ChatroomFriend';\nimport CreateServer from '../../components/CreateServer/CreateServer';\nimport JoinServer from '../../components/JoinServer/JoinServer';\nimport CategoryModal from '../../components/CategoryModal/CategoryModal';\nimport ChannelModal from '../../components/ChannelModal/ChannelModal';\nimport InviteModal from '../../components/InviteModal/InviteModal';\nimport NotificationSettingsModal from '../../components/NotificationSettingsModal/NotificationSettingsModal';\nimport PrivacyModal from '../../components/PrivacyModal/PrivacyModal';\nimport RegionModal from '../../components/RegionModal/RegionModal';\nimport UserManagement from '../../components/UserManagement/UserManagement';\nimport EditAccount from '../../components/EditAccount/EditAccount';\nimport UserBans from '../../components/UserBans/UserBans';\nimport Loading from '../../components/Loading/Loading';\nimport chatot from '../../assets/images/chatot.png';\nimport friends from '../../assets/images/friends.png';\nimport settings from '../../assets/images/settings.png';\nimport invite from '../../assets/images/invite.png';\nimport notification from '../../assets/images/notification.png';\nimport privacylock from '../../assets/images/privacylock.png';\nimport serversettings from '../../assets/images/serversettings.png';\nimport category from '../../assets/images/category.png';\nimport createchannel from '../../assets/images/createchannel.png';\nimport numbersign from '../../assets/images/numbersign.png';\nimport usregion from '../../assets/images/usregion.png';\nimport europe from '../../assets/images/europe.png';\nimport russia from '../../assets/images/russia.png';\nimport add from '../../assets/images/add.png';\nimport owner from '../../assets/images/owner.png';\nimport voice from '../../assets/images/voice.png';\nimport microphone from '../../assets/images/microphone.png';\nimport nomicrophone from '../../assets/images/nomicrophone.png';\n\nconst Dashboard = (props) => {\n  const [id, setId] = useState(null);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [active, setActive] = useState(false);\n  const [server, setServer] = useState('');\n  const [serverName, setServerName] = useState('');\n  const [serverId, setServerId] = useState(null);\n  const [serverImage, setServerImage] = useState('');\n  const [serverRegion, setServerRegion] = useState('');\n  const [serverUserList, setServerUserList] = useState([]);\n  const [hover, setHover] = useState('');\n  const [isSettingsOpen, setSettingsOpen] = useState(false);\n  const [isServerSettingsOpen, setIsServerSettingsOpen] = useState(false);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [currentModal, setCurrentModal] = useState('');\n  const [region, setRegion] = useState(\"US West\");\n  const [serversList, setServersList] = useState([]);\n  const [serverSettings, showServerSettings] = useState(false);\n  const [inviteModal, setInviteModal] = useState(false);\n  const [expires, setExpires] = useState(24);\n  const [showChannelModal, setShowChannelModal] = useState(false);\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [showPrivacyModal, setShowPrivacyModal] = useState(false);\n  const [showNotificationSettingsModal, setShowNotificationSettingsModal] = useState(false);\n  const [newCategory, setNewCategory] = useState('');\n  const [newChannel, setNewChannel] = useState('');\n  const [triggerReload, setTriggerReload] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [currentDragItem, setCurrentDragItem] = useState(null);\n  const [chatrooms, setChatrooms] = useState([]);\n  const [activeChatroom, setActiveChatroom] = useState('');\n  const [activeChatroomId, setActiveChatroomId] = useState(null);\n  const [isChangingRegion, setIsChangingRegion] = useState(false);\n  const [inviteEmail, setInviteEmail] = useState('');\n  const [inviteCode, setInviteCode] = useState('');\n  const [activeServerSetting, setActiveServerSetting] = useState(\"overview\");\n  const [activeUserSetting, setActiveUserSetting] = useState(\"myaccount\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [serverInvites, setServerInvites] = useState([]);\n  const [allowDirectMessages, setAllowDirectMessages] = useState(false);\n  const [friendsList, setFriendsList] = useState(null);\n  const [currentFriend, setCurrentFriend] = useState(null);\n  const [serverUser, setServerUser] = useState(null);\n  const [serverUserBan, setServerUserBan] = useState(null);\n  const [serverUserRole, setServerUserRole] = useState(\"admin\");\n  const [showUserManagement, setShowUserManagement] = useState(false);\n  const [showUserManagementBan, setShowUserManagementBan] = useState(false);\n  const [openServerItem, setOpenServerItem] = useState(null);\n  const [didFindUser, setDidFindUser] = useState(false);\n  const [serverUserBans, setServerUserBans] = useState([]);\n  const [editUsername, setEditUsername] = useState('');\n  const [editEmail, setEditEmail] = useState('');\n  const [editImageUrl, setEditImageUrl] = useState('');\n  const [accountModalOpen, setAccountModalOpen] = useState('');\n  const [mainFile, setMainFile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [channelType, setChannelType] = useState(\"text\");\n  const [activeChatroomType, setActiveChatroomType] = useState(\"text\");\n  const [allowVoice, setAllowVoice] = useState(false);\n  const [audioStream, setAudioStream] = useState(null);\n  const [didFindFriends, setDidFindFriends] = useState(null);\n\n  const ref = useRef();\n  useOnClickOutside(ref, () => setShowCategoryModal(false));\n\n  useEffect(() => {\n    if (friendsList === null && id !== null && !props.findingFriends && !didFindFriends) {\n      setDidFindFriends(true);\n      props.findFriends({\n        userId: id\n      });\n    }\n\n    if (props.friendsList && props.findFriendsSuccess) {\n      setFriendsList(props.friendsList);\n      props.resetFriendValues();\n    }\n\n    if (props.friendsList && props.createFriendSuccess) {\n      setFriendsList(props.friendsList);\n      props.resetFriendValues();\n    }\n\n    if (props.friendsList && props.deleteFriendSuccess) {\n      setFriendsList(props.friendsList);\n      props.resetFriendValues();\n    }\n  }, [props, id, friendsList, didFindFriends]);\n\n  useEffect(() => {\n    if (props.findInvitesSuccess || props.findInvitesError) {\n      console.log('inviteSwitch');\n      if (props.findInvitesSuccess) {\n        console.log('inviteSuccess');\n        setServerInvites(props.inviteServersList);\n      }\n      props.resetInviteValues();\n      setActiveServerSetting(\"invites\");\n    }\n\n    if (props.verifySuccess) {\n      console.log('verify join server');\n      setModalOpen(false);\n      toast.dismiss();\n      toast.success('Success, you have joined the server!', { position: 'bottom-center' });\n      props.resetInviteValues();\n      props.getUpdatedUser({ userId: id });\n    }\n\n    if (props.verifyError) {\n      console.log('join server error');\n      toast.dismiss();\n      toast.error('Error joining server!', { position: 'bottom-center' });\n      props.resetInviteValues();\n    }\n\n    if (props.updateRoleSuccess) {\n      console.log('update role success');\n      setShowUserManagement(false);\n      setServerUserRole(\"admin\");\n      setServerUser(null);\n    }\n\n    if (props.serverUserList) {\n      console.log('find server user list');\n      setServerUserList(props.serverUserList);\n      const index = props.serverUserList.findIndex(x => x.username === username);\n      if (index > -1) {\n        console.log('found username');\n        if (props.serverUserList[index].type === 'admin' || props.serverUserList[index].type === 'owner') {\n          setIsAdmin(true);\n        } else if (props.serverUserList[index].type !== 'admin' || props.serverUserList[index].type !== 'owner') {\n          setIsAdmin(false);\n        }\n      }\n    }\n\n    if (props.serverUserBans) {\n      console.log('server user bans');\n      setShowUserManagementBan(false);\n      setServerUserBan(null);\n      setServerUserBans(props.serverUserBans);\n    }\n\n    if (props.chatroomError) {\n      console.log('chatroom error');\n      toast.dismiss();\n      toast.error('Error, Error creating chatroom!', { position: 'bottom-center' });\n      props.resetChatroomValues();\n    }\n\n    if (props.inviteCode) {\n      console.log('invite code');\n      setInviteModal(true);\n      setIsServerSettingsOpen(false);\n      setInviteCode(props.inviteCode);\n    }\n    if (props.inviteEmailSuccess) {\n      console.log('invite email success');\n      setInviteModal(false);\n      setIsServerSettingsOpen(false);\n      toast.dismiss();\n      toast.success('Success, Invite was sent successfully!', { position: 'bottom-center' });\n    }\n    if (props.inviteEmailError) {\n      console.log('invite email error');\n      toast.dismiss();\n      toast.error('Error, Invite could not be sent!', { position: 'bottom-center' });\n    }\n    if (props.chatroomList && props.chatroomSuccess) {\n      console.log('chatroom list');\n      setChatrooms(props.chatroomList);\n      if (props.chatroomList.length > 0) {\n        setActiveChatroom(props.chatroomList[0].name);\n        setActiveChatroomId(props.chatroomList[0].id);\n      }\n      setShowChannelModal(false);\n      setNewChannel('');\n      props.resetChatroomValues();\n    }\n    if (props.categoryList) {\n      console.log('category list');\n      setCategories(props.categoryList);\n      setShowCategoryModal(false);\n    }\n  }, [props, id, username]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', detectEscape);\n    if(!props.user && !didFindUser) {\n      checkActiveMedia();\n      setDidFindUser(true);\n      props.currentUser();\n    } else if (props.retrieveUserError) {\n      setIsLoading(false);\n      toast.dismiss();\n      toast.error('Error saving updates to your account, please try again!', { position: 'bottom-center' });\n    } else if (props.user && props.retrieveUserSuccess) {\n      props.resetValues();\n      const { id, username, email, imageUrl, active, serversList } = props.user;\n      setId(id);\n      setUsername(username);\n      setEmail(email);\n      setImageUrl(imageUrl);\n      setEditUsername(username);\n      setEditEmail(email);\n      setEditImageUrl(imageUrl);\n      setActive(active);\n      setServersList(serversList);\n      setAccountModalOpen(false);\n      setIsLoading(false);\n      props.findFriends({\n        userId: id\n      });\n    } else if(props.user && props.retrieveUpdatedUserSuccess) {\n      props.resetValues();\n      const { id, username, email, imageUrl, active, serversList } = props.user;\n      setId(id);\n      setUsername(username);\n      setEmail(email);\n      setImageUrl(imageUrl);\n      setEditUsername(username);\n      setEditEmail(email);\n      setEditImageUrl(imageUrl);\n      setActive(active);\n      setServersList(serversList);\n      setAccountModalOpen(false);\n      setIsLoading(false);\n      props.findFriends({\n        userId: id\n      });\n      if (openServerItem && serversList && serversList.length > 0) {\n        const index = serversList.findIndex(x => x.serverId === openServerItem.serverId);\n        if (index > -1) {\n          setServer(openServerItem.name);\n          setServerName(openServerItem.name);\n          setServerId(openServerItem.serverId);\n          setServerImage(openServerItem.imageUrl);\n          setServerRegion(openServerItem.region);\n          setCurrentFriend(null);\n          props.findUserList({\n            serverId: openServerItem.serverId\n          });\n          props.findUserBans({\n            serverId: openServerItem.serverId\n          });\n          props.categoryFindAll({\n            serverId: openServerItem.serverId\n          });\n          props.getChatrooms({\n            serverId: openServerItem.serverId\n          });\n          setOpenServerItem(null);\n        } else {\n          setOpenServerItem(null);\n          setServer('');\n          setServerName('');\n          setServerId(null);\n          toast.info('You have been removed from the server by an admin!', { position: 'bottom-center' });\n        }\n      } else if (openServerItem && !serversList) {\n        setOpenServerItem(null);\n        setServer('');\n        setServerName('');\n        setServerId(null);\n        toast.info('You have been removed from the server by an admin!', { position: 'bottom-center' });\n      } else if (openServerItem && serversList && serversList.length < 1) {\n        setOpenServerItem(null);\n        setServer('');\n        setServerName('');\n        setServerId(null);\n        toast.info('You have been removed from this server an admin!', { position: 'bottom-center' });\n      }\n    }\n  }, [props, openServerItem, didFindUser]);\n\n  const detectEscape = (event) => {\n    if (event.keyCode === 27) {\n      setSettingsOpen(false);\n      setIsServerSettingsOpen(false);\n      showServerSettings(false);\n      setActiveServerSetting(\"overview\");\n      setActiveUserSetting(\"myaccount\");\n      setAccountModalOpen(false);\n    }\n  }\n\n  if(props.logout) {\n    return <Redirect push to=\"/\" />;\n  }\n\n  const userLogout = () => {\n    props.userLogout({ id: id });\n  }\n\n  const deleteServer = () => {\n    // props.deleteServer({\n    //   serverId: serverId\n    // });\n  }\n\n  const toggleModal = (value) => {\n    setModalOpen(true);\n    setCurrentModal(value);\n  }\n\n  const refreshServerUsers = () => {\n    props.findUserList({\n      serverId: serverId\n    });\n    props.findUserBans({\n      serverId: serverId\n    });\n  }\n\n  const getUpdatedServerList = (closeModal) => {\n    if (closeModal) {\n      setModalOpen(false);\n      toast.dismiss();\n      toast.success('Success, the server was created!', { position: 'bottom-center' });\n      props.getUpdatedUser({ userId: id });\n    } else {\n      toast.dismiss();\n      toast.error('There was an error creating the server!', { position: 'bottom-center' });\n    }\n  }\n\n  const setShowInviteModal = () => {\n    setInviteModal(!inviteModal);\n    showServerSettings(false);\n    setInviteCode('');\n    props.resetInviteValues();\n  }\n\n  const createInstantInvite = () => {\n    props.inviteCreate({\n      expires: expires,\n      serverId: serverId\n    });\n  }\n\n  const createNewServerInvite = () => {\n    props.inviteEmailCreate({\n      inviteCode: '',\n      expires: expires,\n      serverId: serverId,\n      email: email\n    });\n  }\n\n  const displayChannelModal = () => {\n    setShowChannelModal(true);\n    showServerSettings(false);\n  }\n\n  const createNewChannel = () => {\n    const channel = {\n      name: newChannel,\n      serverId: serverId,\n      order: categories.length,\n      visible: true,\n      type: channelType\n    };\n    props.chatroomCreate(channel);\n  }\n\n  const displayCategoryModal = () => {\n    setShowCategoryModal(true);\n    showServerSettings(false);\n  }\n\n  const displayNotificationSettingsModal = () => {\n    setShowNotificationSettingsModal(!showNotificationSettingsModal);\n    showServerSettings(false);\n  }\n\n  const displayPrivacyModal = () => {\n    setShowPrivacyModal(!showPrivacyModal);\n    showServerSettings(false);\n  }\n\n  const createNewCategory = () => {\n    props.categoryCreate({\n      name: newCategory,\n      serverId: serverId,\n      order: categories.length,\n      visible: true\n    });\n    setNewCategory('');\n  }\n\n  const dragItem = (item, event) => {\n    if (!isAdmin) return false;\n    setCurrentDragItem(item);\n    event.dataTransfer.setData(\"text\", event.target.id);\n  }\n\n  const draggingOverItem = (event) => {\n    if (!isAdmin) return false;\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  const dropItem = (event) => {\n    if (!isAdmin) return false;\n    event.preventDefault();\n    const newChatrooms = chatrooms || [];\n    if (event.target.id !== currentDragItem.category && event.target.id) {\n      for (let i = 0; i < newChatrooms.length; i++) {\n        if (newChatrooms[i].categoryId === currentDragItem.categoryId && newChatrooms[i].name === currentDragItem.name) {\n          newChatrooms[i] = {\n            categoryId: +event.target.id.split('-')[0] === 0 ? null : +event.target.id.split('-')[0],\n            id: currentDragItem.id,\n            name: currentDragItem.name,\n            serverId: currentDragItem.serverId\n          }\n          props.chatroomUpdate({\n            chatroomId: currentDragItem.id,\n            categoryId: +event.target.id.split('-')[0] === 0 ? null : +event.target.id.split('-')[0]\n          });\n          break;\n        }\n      }\n      setChatrooms(newChatrooms);\n      setTriggerReload(!triggerReload);\n    }\n  }\n\n  const setItemVisibility = (group) => {\n    for (let i = 0; i < categories.length; i++) {\n      if (categories[i].name === group.name) {\n        categories[i].visible = !categories[i].visible;\n      }\n    }\n    setTriggerReload(!triggerReload);\n  }\n\n  const setServerProperties = (item) => {\n    props.getUpdatedUser({ userId: id });\n    setOpenServerItem(item);\n  }\n\n  const setCurrentActiveChatroom = (item, event) => {\n    if (event) {\n      event.stopPropagation();\n    }\n    setActiveChatroom(item.name);\n    setActiveChatroomId(item.id);\n    setActiveChatroomType(item.type);\n  }\n\n  const joinServer = (value) => {\n    props.inviteVerification({\n      userId: id,\n      code: value,\n      email: email\n    });\n  }\n\n  const getInvites = () => {\n    props.findInvites({\n      serverId: serverId\n    });\n  }\n\n  const privateMessageUser = (user) => {\n    setServer('');\n    props.friendCreate({\n      userId: id,\n      friendId: user.userId,\n      username: user.username,\n      friendUsername: username,\n      imageUrl: user.imageUrl\n    });\n  }\n\n  const deleteFriend = (event, friend) => {\n    event.stopPropagation();\n    setCurrentFriend(null);\n    setServer('');\n    props.friendDelete({\n      userId: id,\n      friendId: friend.friendId\n    });\n  }\n\n  const clickSetCurrentFriend = (event, friend) => {\n    event.stopPropagation();\n    setCurrentFriend(friend);\n  }\n\n  const setHomeServer = () => {\n    setServer('');\n    props.findFriends({\n      userId: id\n    });\n  }\n\n  const setActiveServerUser = (user) => {\n    setShowUserManagement(true);\n    setServerUser(user);\n  }\n\n  const setActiveServerUserBan = (user) => {\n    setShowUserManagementBan(true);\n    setServerUserBan(user);\n  }\n\n  const setSaveServerUser = () => {\n    const data = {\n      active: true,\n      imageUrl: null,\n      type: serverUserRole,\n      userId: serverUser.userId,\n      username: serverUser.username,\n      serverId: serverId\n    }\n    props.updateUserRole(data);\n  }\n\n  const setRemoveUserBan = () => {\n    const data = {\n      userId: serverUserBan.userId,\n      serverId: serverId\n    };\n    props.unbanUser(data);\n  }\n\n  const leaveServer = () => {\n    props.getUpdatedUser({ userId: id });\n    setTriggerReload(!triggerReload);\n    setServer('');\n    setServerName('');\n    setServerId(null);\n    toast.info('You have been removed from the server by an admin!', { position: 'bottom-center' });\n  }\n\n  const saveAccountInfo = () => {\n    const emailRegex = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!emailRegex.test(String(editEmail).toLowerCase())) {\n      toast.dismiss();\n      toast.error('Email address must be a valid!', { position: 'bottom-center' });\n      return;\n    } else if ((editUsername && editUsername.length < 2) || (editUsername && editUsername.length > 14) || !editUsername) {\n      toast.dismiss();\n      toast.error('Username does not meet the length requirements!', { position: 'bottom-center' });\n    } else if (emailRegex.test(String(editEmail).toLowerCase())) {\n      setIsLoading(true);\n      const formData = new FormData();\n      formData.append('id', id);\n      formData.append('serverId', serverId);\n      formData.append('imageUrl', editImageUrl);\n      formData.append('mainFile', mainFile)\n      formData.append('email', editEmail);\n      formData.append('username', editUsername);\n      props.userUpdate(formData);\n    }\n  }\n\n  const showMainFile = (event) => {\n    event.preventDefault();\n    let reader = new FileReader();\n    let file = event.target.files[0];\n\n    reader.onloadend = () => {\n      setMainFile(file);\n      setEditImageUrl(reader.result);\n    }\n    reader.readAsDataURL(file);\n  }\n\n  const setNewChannelType = (value) => {\n    setChannelType(value);\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"loadingbackground\">\n        <Loading />\n      </div>\n    );\n  }\n\n  /**\n   * check if user has enabled microphone access\n   */\n  const checkActiveMedia = async() => {\n    let isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n    if (!isChrome) {\n      setAllowVoice(true);\n      return;\n    }\n    const result = await navigator.permissions.query({ name: 'microphone' });\n\n    if (result.state === 'granted') {\n      setAllowVoice(true);\n\n      const constraints = { audio: true, video: false };\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n\n      if (stream) {\n        setAudioStream(stream);\n      }\n    } else if (result.state === 'prompt') {\n      setAllowVoice(false);\n    } else if (result.state === 'denied') {\n      setAllowVoice(false);\n    }\n  }\n\n  /**\n   * request permission to access the microphone\n   */\n  const getMedia = async() => {\n    const constraints = { audio: true, video: false };\n    let stream = null;\n\n    try {\n      stream = await navigator.mediaDevices.getUserMedia(constraints);\n      if (stream.active === true) {\n        setAudioStream(stream);\n        setAllowVoice(true);\n      } else {\n        setAllowVoice(false);\n      }\n    } catch (err) {\n      setAllowVoice(false);\n    }\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <ToastMessage />\n      {isModalOpen || showCategoryModal || showChannelModal || showNotificationSettingsModal || showPrivacyModal || inviteModal ? <span className=\"contentBackground\"></span> : null}\n      <div className=\"sidebar\" onClick={() => { setCurrentFriend(null); }}>\n        <div className=\"sidebar-container\" onPointerOver={() => { setHover(\"Home\") }} onPointerOut={() => { setHover('') }}>\n          {hover === \"Home\" && server !== '' ? <span className=\"sidebar-hover\"></span> : null}\n          {server === '' ? <span className=\"sidebar-select\"></span> : null}\n          <img className=\"sidebar-logo\" src={chatot} alt=\"chatter-icon-logo\" onClick={() => { setHomeServer(); }} />\n          {hover === \"Home\" ? <span className=\"tooltip\"><span>Home</span></span> : null}\n        </div>\n        <div className=\"sidebar-border\" />\n        {serversList && serversList.length > 0 ? serversList.map((item, index)  => {\n          return (\n            <div key={index} className=\"sidebar-container\" onPointerOver={() => { setHover(item.name) }} onPointerOut={() => { setHover('') }}>\n              {hover === item.name && server !== item.name && server !== \"Home\" ? <span className=\"sidebar-hover\"></span> : null}\n              {server === item.name ? <span className=\"sidebar-select\"></span> : null}\n              <img className=\"sidebar-logo\" src={item.imageUrl ? item.imageUrl : chatot} alt=\"chatter-icon\" onClick={() => { setServerProperties(item); }} />\n              {hover === item.name ? <span className=\"tooltip\"><span>{item.name}</span></span> : null}\n            </div>\n          )\n        }) : null}\n      </div>\n      {server === '' ?\n        <div className=\"sidebarleft\">\n          <div className=\"sidebarleft-container\">\n            <input placeholder=\"Find or start a conversation\"></input>\n          </div>\n          <div className=\"sidebarleft-border\" />\n          <div className=\"sidebarleft-friendscontainer\">\n            <img className=\"sidebarleft-logo\" src={friends} alt=\"friends-icon\" />\n            <span className=\"sidebarleft-friends\">Friends</span>\n          </div>\n          <div className=\"sidebarleft-border\" />\n          <div className=\"sidebarleft-directmessages\">\n            <span>Private Messages</span>\n          </div>\n          <div className=\"sidebarleft-bordertwo\" />\n          <div className=\"sidebarleft-listfriends\">\n            {friendsList && friendsList.length ? friendsList.map((item, index) => {\n              if (item.activeFriend) {\n                return (\n                  <div key={index} className={currentFriend && item.username === currentFriend.username ? \"sidebarleft-currentfriend-active\" : \"sidebarleft-currentfriend\"} onClick={(event) => { clickSetCurrentFriend(event, item); }}>\n                    <img className=\"sidebarleft-currentfriend-image\" src={item.imageUrl ? item.imageUrl : chatot} alt=\"username-icon\" />\n                    <span className=\"sidebarleft-currentfriend-username\">{item.username}</span>\n                    <span className=\"sidebarleft-currentfriend-remove\" onClick={(event) => { deleteFriend(event, item); }}>&#10005;</span>\n                  </div>\n                );\n              } else {\n                return null;\n              }\n            }) : null}\n          </div>\n          <div className=\"userinfo\">\n            <div className=\"username\">\n              <img className=\"username-image\" src={imageUrl ? imageUrl : chatot} alt=\"username-icon\" />\n            </div>\n            {active ? <div className=\"userinfo-online\"></div> : null}\n            <span style={{ color: 'white' }}>{username}</span>\n            <div className=\"activateicons\">\n              {allowVoice ?\n                <span onClick={() => { getMedia(); }}>\n                  <img className=\"microphone-image\" src={microphone} alt=\"microphone\" />\n                </span>\n              : <span onClick={() => { getMedia(); }}>\n                  <img className=\"nomicrophone-image\" src={nomicrophone} alt=\"nomicrophone\" />\n                </span>\n              }\n              <img className=\"settings-image\" src={settings} alt=\"settings-icon\" onClick={() => { setSettingsOpen(!isSettingsOpen); }} />\n            </div>\n          </div>\n        </div> :\n        <div className=\"sidebarleftchat\">\n          <div className=\"sidebarleftchat-container\">\n            <p className=\"sidebarleftchat-container-header\">{server}</p>\n            {isAdmin ? <div className=\"sidebarleftchat-container-dropdown\" onClick={() => { showServerSettings(!serverSettings); }}>{!serverSettings ? <i className=\"channelarrow down\"></i> : <span className=\"cancel\">&#10005;</span>}</div> : null}\n            {serverSettings ?\n              <div className=\"serversettings-modal\">\n                <div className=\"serversettings-modal-section\" onClick={() => { setShowInviteModal(); }}>\n                  <img src={invite} alt=\"invite-people\" height={25} width={25} />\n                  <span>Invite People</span>\n                </div>\n                <div className=\"serversettings-modal-section\" onClick={() => { setIsServerSettingsOpen(!isServerSettingsOpen); }}>\n                  <img src={serversettings} alt=\"server-settings\" height={25} width={25} />\n                  <span>Server Settings</span>\n                </div>\n                <div className=\"serversettings-modal-section\" onClick={() => {\n                  displayChannelModal();\n                }}>\n                  <img src={createchannel} alt=\"server-settings\" height={25} width={25} />\n                  <span>Create Channel</span>\n                </div>\n                <div className=\"serversettings-modal-section\" onClick={() => { displayCategoryModal(); }}>\n                  <img src={category} alt=\"server-settings\" height={25} width={25} />\n                  <span>Create Category</span>\n                </div>\n                <div className=\"serversettings-modal-section\" onClick={() => { displayNotificationSettingsModal(); }}>\n                  <img src={notification} alt=\"server-settings\" height={25} width={25} />\n                  <span>Notification Settings</span>\n                </div>\n                <div className=\"serversettings-modal-section\" onClick={() => { displayPrivacyModal(); }}>\n                  <img src={privacylock} alt=\"server-settings\" height={25} width={25} />\n                  <span>Privacy Settings</span>\n                </div>\n              </div>\n            : null}\n          </div>\n\n          {inviteModal ?\n            <InviteModal\n              expires={expires}\n              inviteEmail={inviteEmail}\n              inviteCode={inviteCode}\n              setTimeExpires={(value) => { setExpires(value); }}\n              createNewInvite={() => { createNewServerInvite(); }}\n              setShowInviteModal={() => { setShowInviteModal(false); }}\n              createNewInstantInvite={() => { createInstantInvite(); }}\n              setCurrentInviteEmail={(value) => { setInviteEmail(value); }}\n            />\n          : null}\n\n          {showChannelModal ?\n            <ChannelModal\n              newChannel={newChannel}\n              channelType={channelType}\n              setNewChannel={(event) => { setNewChannel(event.target.value); }}\n              setChannelType={(value) => { setNewChannelType(value); }}\n              setShowChannelModal={() => { setShowChannelModal(false); }}\n              createNewChannel={() => { createNewChannel(); }}\n            />\n          : null}\n\n          {showCategoryModal ?\n            <CategoryModal\n              newCategory={newCategory}\n              setNewCategory={(event) => { setNewCategory(event.target.value); }}\n              setShowCategoryModal={() => { setShowCategoryModal(false); }}\n              createNewCategory={() => { createNewCategory(); }}\n            />\n          : null}\n\n          {showPrivacyModal ?\n            <PrivacyModal\n              server={server}\n              allowDirectMessages={allowDirectMessages}\n              setAllowDirectMessages={() => { setAllowDirectMessages(true); }}\n              setShowPrivacyModal={() => { setShowPrivacyModal(false); }}\n            />\n          : null}\n\n          {showNotificationSettingsModal ?\n            <NotificationSettingsModal\n              server={server}\n              setShowNotificationSettingsModal={() => { setShowNotificationSettingsModal(false); }}\n            />\n          : null}\n\n          <div className=\"sidebarleft-mainchat\" style={{ marginTop: chatrooms && chatrooms.length ? '0.5rem' : '0rem' }}>\n            <div onDrop={(event) => { dropItem(event); }} onDragOver={(event) => { draggingOverItem(event); }} id={0 + \"-\" + server}>\n              {chatrooms && chatrooms.length > 0 ? chatrooms.filter(chatroom => chatroom.categoryId === null).map((item, index) => {\n                return (\n                  <div className={activeChatroom === item.name ? \"active\" : ''} key={index} id={0 + \"-\" + item.name} draggable=\"true\" onDragStart={(event) => { dragItem(item, event); }} onClick={() => { setCurrentActiveChatroom(item); }}>\n                    {item.type === \"text\" ? <img src={numbersign} alt=\"channel\" height={16} width={16} /> : null}\n                    {item.type === \"voice\" ? <img src={voice} alt=\"channel\" height={18} width={16} /> : null}\n                    <span>{item.name}</span>\n                  </div>\n                )\n              }) : null}\n            </div>\n\n            {categories && categories.length ? categories.map((group, categoryIndex) => {\n              const height = chatrooms.filter(chatroom => chatroom.categoryId === group.id).length;\n              const itemHeight = group.visible === true ? `${height * 2}rem` : '0rem';\n              return (\n                <div key={categoryIndex} style={{ marginBottom: itemHeight }}>\n                  <span\n                    className=\"sidebarleft-mainchat-dropdown\"\n                    onClick={() => { setItemVisibility(group); }}\n                  >\n                    {group.visible ? <i className=\"arrow down\"></i> : <i className=\"arrow right\"></i>}\n                    <span>{group.name}</span>\n                    {group.visible ?\n                    <div onDrop={(event) => { dropItem(event); }} onDragOver={(event) => { draggingOverItem(event); }} id={group.id + \"-\" + group.name}>\n                      {chatrooms && chatrooms.length > 0 ? chatrooms.filter(chatroom => chatroom.categoryId === group.id).map((item, index) => {\n                        return (\n                          <div className={activeChatroom === item.name ? \"active\" : \"inactive\"} id={item.categoryId + \"-\" + item.name} key={index} draggable=\"true\" onDragStart={(event) => { dragItem(item, event); }} onClick={(event) => { setCurrentActiveChatroom(item, event); }}>\n                            <img src={numbersign} alt=\"channel\" height={16} width={16} /><span>{item.name}</span>\n                          </div>\n                        );\n                      }) : null}\n                    </div> : null}\n                  </span>\n                </div>\n              );\n            }) : null}\n\n          </div>\n        </div>\n      }\n\n      {server !== '' && activeChatroom !== '' && activeChatroomId !== null ?\n        <Chatroom\n          activeChatroom={activeChatroom}\n          activeChatroomId={activeChatroomId}\n          activeChatroomType={activeChatroomType}\n          userId={id}\n          serverId={serverId}\n          username={username}\n          serverUserList={serverUserList}\n          refreshServerUsers={refreshServerUsers}\n          audioStream={audioStream}\n          privateMessageUser={(user) => { privateMessageUser(user) }}\n          leaveServer={() => { leaveServer(); }}\n        />\n      : null}\n\n      {server === '' && currentFriend !== null ?\n        <ChatroomFriend\n          groupId={currentFriend.groupId}\n          userId={id}\n          username={username}\n          friendId={currentFriend.friendId}\n          friendUsername={currentFriend.username}\n        />\n      : null}\n\n      {server === '' && currentFriend === null ?\n        <div className=\"mainarea\">\n          <div className=\"mainarea-topnav\">\n          </div>\n          <div className=\"mainarea-container\">\n            <div className=\"mainarea-container-addserver\">\n              <h1>Create</h1>\n              <p>Create a new server and invite other people to join!</p>\n              <button onClick={() => { toggleModal(\"create\") }}>Create a server</button>\n            </div>\n            <div className=\"mainarea-container-joinserver\">\n              <h1>Join</h1>\n              <p>Enter an secret invite code to join an existing server!</p>\n              <button onClick={() => { toggleModal(\"join\") }}>Join a server</button>\n            </div>\n          </div>\n        </div>\n      : null}\n\n      {isServerSettingsOpen ?\n        <div className=\"serversettings\">\n          {isChangingRegion || showUserManagement || showUserManagementBan ? <span className=\"contentBackground\"></span> : null}\n          <div className=\"serversettings-sidebar\">\n            <h1>Server Settings</h1>\n            <p className={activeServerSetting === \"overview\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-overview\"} onClick={() => { setActiveServerSetting(\"overview\"); }}>Overview</p>\n            <p className={activeServerSetting === \"moderation\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-moderation\"} onClick={() => { setActiveServerSetting(\"moderation\"); }}>Moderation</p>\n            <p className={activeServerSetting === \"activitylog\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-activitylog\"} onClick={() => { setActiveServerSetting(\"activitylog\"); }}>Activity Log</p>\n            <p className={activeServerSetting === \"roles\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-roles\"} onClick={() => { setActiveServerSetting(\"roles\"); }}>Roles</p>\n            <h1>User Management</h1>\n            <p className={activeServerSetting === \"members\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-members\"} onClick={() => { setActiveServerSetting(\"members\"); }}>Members</p>\n            <p className={activeServerSetting === \"invites\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-invites\"} onClick={() => { getInvites(); }}>Invites</p>\n            <p className={activeServerSetting === \"bans\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-bans\"} onClick={() => { setActiveServerSetting(\"bans\"); }}>Bans</p>\n            <p onClick={deleteServer}>Delete Server</p>\n          </div>\n          <div className=\"serversettings-servercontainer\">\n            {activeServerSetting === \"overview\" ?\n              <div className=\"serversettings-myserver\">\n                <h1>Server Overview</h1>\n                <div className=\"serversettings-myserver__container\">\n                  <div className=\"serversettings-myserver__container-image\">\n                    <img src={serverImage ? serverImage : chatot} alt=\"server-icon\" />\n                  </div>\n                  <div className=\"serversettings-myserver__container-info\">\n                    <div className=\"serversettings-myserver__container-info-server\">\n                      <span>Server Name</span><br/>\n                      <input onChange={(event) => setServerName(event.target.value)} value={serverName} />\n                    </div>\n                    <div className=\"serversettings-myserver__container-info-region\">\n                      <span>Server Region</span><br/>\n                      <div className=\"servermodalregion-select\">\n                        {serverRegion === \"US West\" || serverRegion === \"US Central\" || serverRegion === \"US East\" ? <img src={usregion} height={35} width={55} alt=\"server-region\" /> : null}\n                        {serverRegion === \"Central Europe\" || serverRegion === \"Western Europe\" ? <img src={europe} height={35} width={55} alt=\"server-region\" /> : null}\n                        {serverRegion === \"Russia\" ? <img src={russia} height={35} width={55} alt=\"server-region\" /> : null}\n                        <span className=\"servermodalregion-select-current\">{serverRegion}</span>\n                        <span className=\"servermodalregion-select-change\" onClick={() => { setIsChangingRegion(true); }}>Change</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            : null}\n\n            {activeServerSetting === \"members\" ?\n              <div className=\"serversettings-members\">\n                {showUserManagement ?\n                  <UserManagement\n                    serverUser={serverUser}\n                    serverUserRole={serverUserRole}\n                    setShowUserManagement={() => { setShowUserManagement(false); setServerUserRole(\"admin\"); setServerUser(null); }}\n                    setServerUserRole={(role) => { setServerUserRole(role); }}\n                    setSaveServerUser={setSaveServerUser}\n                  />\n                : <div>\n                    <h1 className=\"serversettings-members-title\">Server Members</h1>\n                    <p className=\"serversettings-members-count\">{serverUserList.length} Members</p>\n                    {serverUserList && serverUserList.length > 0 ? serverUserList.map((item, index)  => {\n                      if (item.type === \"owner\") {\n                        return (\n                          <div key={index} className=\"serversettings-owner\">\n                            <img className=\"serversettings-logo\" src={item.imageUrl ? item.imageUrl : chatot} alt=\"chatter-icon\" />\n                            <span>\n                              <p>{item.type}</p>\n                              <p>{item.username}</p>\n                            </span>\n                            <span className=\"serversettings-add\">\n                              <img src={owner} alt=\"add-icon\" className=\"serversettings-user-add-image\" />\n                            </span>\n                          </div>\n                        )\n                      } else {\n                        return (\n                          <div key={index} className=\"serversettings-user\" onClick={() => { setActiveServerUser(item); }}>\n                            <img className=\"serversettings-logo\" src={item.imageUrl ? item.imageUrl : chatot} alt=\"chatter-icon\" />\n                            <span>\n                              <p>{item.type}</p>\n                              <p>{item.username}</p>\n                            </span>\n                            <span className=\"serversettings-add\">\n                              <img src={add} alt=\"add-icon\" className=\"serversettings-user-add-image\" />\n                            </span>\n                          </div>\n                        )\n                      }\n                    }) : null}\n                  </div>\n                }\n              </div>\n            : null}\n\n            {activeServerSetting === \"invites\" ?\n              <div className=\"serversettings-invites\">\n                <h1>Server Invites</h1>\n                <p className=\"serversettings-invites-count\">{serverInvites.length === 1 ? '1 Invite' : `${serverInvites.length} Invites`} </p>\n                {serverInvites && serverInvites.length > 0 ? serverInvites.map((item, index)  => {\n                  return (\n                    <div key={index} className=\"serversettings-invite\">\n                      <span>\n                        <p>Code: {item.code}</p>\n                        <p>\n                          Created: <Moment format=\"MM/DD/YYYY\" date={item.createdAt} /> at <Moment date={item.createdAt} format=\"LT\" />\n                        </p>\n                        <p>Expiration: {item.expires} hours</p>\n                      </span>\n                      <span className=\"serversettings-add\">\n                        <img src={add} alt=\"add-icon\" className=\"serversettings-invite-add-image\" />\n                      </span>\n                    </div>\n                  )\n                }) : null}\n              </div>\n            : null}\n\n            {activeServerSetting === \"bans\" ?\n              <div className=\"serversettings-bans\">\n                {showUserManagementBan ?\n                  <UserBans\n                    serverUserBan={serverUserBan}\n                    setShowUserManagementBan={() => { setShowUserManagementBan(false); setServerUserBan(null); }}\n                    setRemoveUserBan={setRemoveUserBan}\n                  />\n                : <div>\n                    <h1 className=\"serversettings-bans-title\">Server Bans</h1>\n                    <p className=\"serversettings-bans-count\">{serverUserBans.length} Bans</p>\n                    {serverUserBans && serverUserBans.length > 0 ? serverUserBans.map((item, index)  => {\n                      if (item.type === \"owner\") {\n                        return (\n                          <div key={index} className=\"serversettings-owner\">\n                            <img className=\"serversettings-logo\" src={item.imageUrl ? item.imageUrl : chatot} alt=\"chatter-icon\" />\n                            <span>\n                              <p>{item.type}</p>\n                              <p>{item.username}</p>\n                            </span>\n                            <span className=\"serversettings-add\">\n                              <img src={owner} alt=\"add-icon\" className=\"serversettings-user-add-image\" />\n                            </span>\n                          </div>\n                        )\n                      } else {\n                        return (\n                          <div key={index} className=\"serversettings-user\" onClick={() => { setActiveServerUserBan(item); }}>\n                            <img className=\"serversettings-logo\" src={item.imageUrl ? item.imageUrl : chatot} alt=\"chatter-icon\" />\n                            <span>\n                              <p>{item.type}</p>\n                              <p>{item.username}</p>\n                            </span>\n                            <span className=\"serversettings-add\">\n                              <img src={add} alt=\"add-icon\" className=\"serversettings-user-add-image\" />\n                            </span>\n                          </div>\n                        )\n                      }\n                    }) : null}\n                  </div>\n                }\n              </div>\n            : null}\n\n            <div className=\"serversettings-escape\" onClick={() => { setIsServerSettingsOpen(!isServerSettingsOpen); showServerSettings(false); setActiveServerSetting(\"overview\"); setShowUserManagementBan(false); setShowUserManagement(false); }}>\n            </div>\n            <p className=\"serversettings-escapetext\" onClick={() => { setIsServerSettingsOpen(!isServerSettingsOpen); showServerSettings(false); setActiveServerSetting(\"overview\"); setShowUserManagementBan(false); setShowUserManagement(false); }}>ESC</p>\n          </div>\n\n          {isChangingRegion ?\n            <RegionModal\n              setIsChangingRegion={() => { setIsChangingRegion(false); }}\n              setServerRegion={(region) => { setServerRegion(region); setIsChangingRegion(false); }}\n            />\n          : null}\n\n        </div>\n      : null}\n\n      {isSettingsOpen ?\n        <div className=\"usersettings\">\n          {accountModalOpen ? <span className=\"contentBackground\"></span> : null}\n          <div className=\"usersettings-sidebar\">\n            <h1>User Settings</h1>\n            <p className={activeUserSetting === \"myaccount\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-myaccount\"} onClick={() => { setActiveUserSetting(\"myaccount\"); }}>My Account</p>\n            <p className={activeUserSetting === \"privacy\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-privacy\"} onClick={() => { setActiveUserSetting(\"privacy\"); }}>Privacy &amp; Safety</p>\n            <p className={activeUserSetting === \"connections\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-connections\"} onClick={() => { setActiveUserSetting(\"connections\"); }}>Connections</p>\n            <h1>App Settings</h1>\n            <p className={activeUserSetting === \"voice\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-voice\"} onClick={() => { setActiveUserSetting(\"voice\"); }}>Voice &amp; Video</p>\n            <p className={activeUserSetting === \"notifications\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-notifications\"} onClick={() => { setActiveUserSetting(\"notifications\"); }}>Notifications</p>\n            <p className={activeUserSetting === \"appearance\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-appearance\"} onClick={() => { setActiveUserSetting(\"appearance\"); }}>Appearance</p>\n            <p className={activeUserSetting === \"language\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-language\"} onClick={() => { setActiveUserSetting(\"language\"); }}>Language</p>\n            <p onClick={userLogout}>Logout</p>\n          </div>\n\n          {activeUserSetting === \"myaccount\" ?\n            <div className=\"usersettings-accountcontainer\">\n              {accountModalOpen ?\n                <EditAccount\n                  editUsername={editUsername}\n                  editEmail={editEmail}\n                  editImageUrl={editImageUrl}\n                  setEditUsername={(value) => { setEditUsername(value); }}\n                  setEditEmail={(value) => { setEditEmail(value); }}\n                  setEditImageUrl={(value) => { setEditImageUrl(value); }}\n                  saveAccountInfo={saveAccountInfo}\n                  setAccountModalOpen={() => { setAccountModalOpen(false); }}\n                  showMainFile={(event) => { showMainFile(event) }}\n                />\n              : <div>\n                  <div className=\"usersettings-myaccount\">\n                    <h1>My Account</h1>\n                    <div className=\"usersettings-myaccount__container\">\n                      <div className=\"usersettings-myaccount__container-image\">\n                        <img src={imageUrl ? imageUrl : chatot} alt=\"username-icon\" />\n                      </div>\n                      <div className=\"usersettings-myaccount__container-info\">\n                        <div className=\"usersettings-myaccount__container-info-username\">\n                          <span>Username</span><br/>\n                          <span>{username}</span>\n                        </div>\n                        <div className=\"usersettings-myaccount__container-info-email\">\n                          <span>Email Address</span><br/>\n                          <span>{email}</span>\n                        </div>\n                      </div>\n                      <div className=\"usersettings-myaccount__container-edit\" onClick={() => { setAccountModalOpen(true); }}>\n                        <span>Edit</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"usersettings-authentication\">\n                    <h1>Two-Factor Authentication</h1>\n                    <p>Protect your account with an extra layer of security. Once configured you'll be required to enter your password and an authentication code from your mobile device to login.</p>\n                    <div className=\"usersettings-authentication-enable\">\n                      <span>Enable</span>\n                    </div>\n                  </div>\n                </div>\n              }\n            </div>\n          : null}\n\n          <div className=\"usersettings-escape\" onClick={() => { setActiveUserSetting(\"myaccount\"); setSettingsOpen(false); }}>\n          </div>\n          <p className=\"usersettings-escapetext\" onClick={() => { setActiveUserSetting(\"myaccount\"); setSettingsOpen(false); }}>ESC</p>\n        </div>\n      : null}\n\n      {isModalOpen && currentModal === \"create\" ?\n        <CreateServer\n          id={id}\n          region={region}\n          setRegion={(region) => { setRegion(region) }}\n          setModalOpen={() => { setModalOpen(!isModalOpen) }}\n          getUpdatedServerList={(closeModal) => { getUpdatedServerList(closeModal) }}\n        />\n      : null}\n\n      {isModalOpen && currentModal === \"join\" ?\n        <JoinServer\n          joinServer={(value) => { joinServer(value); }}\n          setModalOpen={() => { setModalOpen(!isModalOpen) }}\n        />\n      : null}\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ usersReducer, serversReducer, categoriesReducer, chatroomsReducer, invitesReducer, friendsReducer }) => {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    logout: usersReducer.logout,\n    user: usersReducer.user,\n    users: usersReducer.users,\n    retrieveUserError: usersReducer.retrieveUserError,\n    retrieveUserSuccess: usersReducer.retrieveUserSuccess,\n    retrieveUpdatedUserError: usersReducer.retrieveUpdatedUserError,\n    retrieveUpdatedUserSuccess: usersReducer.retrieveUpdatedUserSuccess,\n    serversList: serversReducer.serversList,\n    serverUserList: serversReducer.serverUserList,\n    serverUserBans: serversReducer.serverUserBans,\n    updateRoleSuccess: serversReducer.updateRoleSuccess,\n    updateRoleError: serversReducer.updateRoleError,\n    categoryList: categoriesReducer.categoryList,\n    chatroomList: chatroomsReducer.chatroomList,\n    chatroomSuccess: chatroomsReducer.success,\n    chatroomError: chatroomsReducer.error,\n    inviteEmailError: invitesReducer.inviteEmailError,\n    inviteEmailSuccess: invitesReducer.inviteEmailSuccess,\n    inviteCode: invitesReducer.inviteCode,\n    verifySuccess: invitesReducer.verifySuccess,\n    verifyError: invitesReducer.verifyError,\n    inviteServersList: invitesReducer.inviteServersList,\n    findInvitesSuccess: invitesReducer.findInvitesSuccess,\n    findInvitesError: invitesReducer.findInvitesError,\n    createFriendSuccess: friendsReducer.createFriendSuccess,\n    deleteFriendSuccess: friendsReducer.deleteFriendSuccess,\n    findFriendsSuccess: friendsReducer.findFriendsSuccess,\n    friendsList: friendsReducer.friendsList\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Dashboard);"]},"metadata":{},"sourceType":"module"}