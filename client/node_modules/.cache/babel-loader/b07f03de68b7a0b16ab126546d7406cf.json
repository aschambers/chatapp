{"ast":null,"code":"//package mp3;\nvar common = require('./common.js');\n\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar L3Side = require('./L3Side.js');\n\nfunction GrInfo() {\n  //float xr[] = new float[576];\n  this.xr = new_float(576); //int l3_enc[] = new int[576];\n\n  this.l3_enc = new_int(576); //int scalefac[] = new int[L3Side.SFBMAX];\n\n  this.scalefac = new_int(L3Side.SFBMAX);\n  this.xrpow_max = 0.;\n  this.part2_3_length = 0;\n  this.big_values = 0;\n  this.count1 = 0;\n  this.global_gain = 0;\n  this.scalefac_compress = 0;\n  this.block_type = 0;\n  this.mixed_block_flag = 0;\n  this.table_select = new_int(3);\n  this.subblock_gain = new_int(3 + 1);\n  this.region0_count = 0;\n  this.region1_count = 0;\n  this.preflag = 0;\n  this.scalefac_scale = 0;\n  this.count1table_select = 0;\n  this.part2_length = 0;\n  this.sfb_lmax = 0;\n  this.sfb_smin = 0;\n  this.psy_lmax = 0;\n  this.sfbmax = 0;\n  this.psymax = 0;\n  this.sfbdivide = 0;\n  this.width = new_int(L3Side.SFBMAX);\n  this.window = new_int(L3Side.SFBMAX);\n  this.count1bits = 0;\n  /**\n   * added for LSF\n   */\n\n  this.sfb_partition_table = null;\n  this.slen = new_int(4);\n  this.max_nonzero_coeff = 0;\n  var self = this;\n\n  function clone_int(array) {\n    return new Int32Array(array);\n  }\n\n  function clone_float(array) {\n    return new Float32Array(array);\n  }\n\n  this.assign = function (other) {\n    self.xr = clone_float(other.xr); //.slice(0); //clone();\n\n    self.l3_enc = clone_int(other.l3_enc); //.slice(0); //clone();\n\n    self.scalefac = clone_int(other.scalefac); //.slice(0); //clone();\n\n    self.xrpow_max = other.xrpow_max;\n    self.part2_3_length = other.part2_3_length;\n    self.big_values = other.big_values;\n    self.count1 = other.count1;\n    self.global_gain = other.global_gain;\n    self.scalefac_compress = other.scalefac_compress;\n    self.block_type = other.block_type;\n    self.mixed_block_flag = other.mixed_block_flag;\n    self.table_select = clone_int(other.table_select); //.slice(0); //clone();\n\n    self.subblock_gain = clone_int(other.subblock_gain); //.slice(0); //.clone();\n\n    self.region0_count = other.region0_count;\n    self.region1_count = other.region1_count;\n    self.preflag = other.preflag;\n    self.scalefac_scale = other.scalefac_scale;\n    self.count1table_select = other.count1table_select;\n    self.part2_length = other.part2_length;\n    self.sfb_lmax = other.sfb_lmax;\n    self.sfb_smin = other.sfb_smin;\n    self.psy_lmax = other.psy_lmax;\n    self.sfbmax = other.sfbmax;\n    self.psymax = other.psymax;\n    self.sfbdivide = other.sfbdivide;\n    self.width = clone_int(other.width); //.slice(0); //.clone();\n\n    self.window = clone_int(other.window); //.slice(0); //.clone();\n\n    self.count1bits = other.count1bits;\n    self.sfb_partition_table = other.sfb_partition_table.slice(0); //.clone();\n\n    self.slen = clone_int(other.slen); //.slice(0); //.clone();\n\n    self.max_nonzero_coeff = other.max_nonzero_coeff;\n  };\n}\n\nmodule.exports = GrInfo;","map":null,"metadata":{},"sourceType":"script"}