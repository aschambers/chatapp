{"ast":null,"code":"import _slicedToArray from \"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/views/Dashboard/Dashboard.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport useOnClickOutside from '../../utils/useOnClickOutside';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { Redirect } from 'react-router';\nimport { toast } from 'react-toastify';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Dashboard.css';\nimport ToastMessage from '../../components/ToastMessage/ToastMessage';\nimport Chatroom from '../../components/Chatroom/Chatroom';\nimport ChatroomFriend from '../../components/ChatroomFriend/ChatroomFriend';\nimport CreateServer from '../../components/CreateServer/CreateServer';\nimport JoinServer from '../../components/JoinServer/JoinServer';\nimport CategoryModal from '../../components/CategoryModal/CategoryModal';\nimport ChannelModal from '../../components/ChannelModal/ChannelModal';\nimport InviteModal from '../../components/InviteModal/InviteModal';\nimport NotificationSettingsModal from '../../components/NotificationSettingsModal/NotificationSettingsModal';\nimport PrivacyModal from '../../components/PrivacyModal/PrivacyModal';\nimport RegionModal from '../../components/RegionModal/RegionModal';\nimport chatot from '../../assets/images/chatot.png';\nimport friends from '../../assets/images/friends.png';\nimport settings from '../../assets/images/settings.png';\nimport invite from '../../assets/images/invite.png';\nimport notification from '../../assets/images/notification.png';\nimport privacylock from '../../assets/images/privacylock.png';\nimport serversettings from '../../assets/images/serversettings.png';\nimport category from '../../assets/images/category.png';\nimport createchannel from '../../assets/images/createchannel.png';\nimport numbersign from '../../assets/images/numbersign.png';\nimport usregion from '../../assets/images/usregion.png';\nimport europe from '../../assets/images/europe.png';\nimport russia from '../../assets/images/russia.png';\nimport add from '../../assets/images/add.png';\n\nconst Dashboard = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        id = _useState2[0],\n        setId = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        username = _useState4[0],\n        setUsername = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        imageUrl = _useState8[0],\n        setImageUrl = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        active = _useState10[0],\n        setActive = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        server = _useState12[0],\n        setServer = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        serverName = _useState14[0],\n        setServerName = _useState14[1];\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        serverId = _useState16[0],\n        setServerId = _useState16[1];\n\n  const _useState17 = useState(\"\"),\n        _useState18 = _slicedToArray(_useState17, 2),\n        serverImage = _useState18[0],\n        setServerImage = _useState18[1];\n\n  const _useState19 = useState(\"\"),\n        _useState20 = _slicedToArray(_useState19, 2),\n        serverRegion = _useState20[0],\n        setServerRegion = _useState20[1];\n\n  const _useState21 = useState([]),\n        _useState22 = _slicedToArray(_useState21, 2),\n        serverUserList = _useState22[0],\n        setServerUserList = _useState22[1];\n\n  const _useState23 = useState(''),\n        _useState24 = _slicedToArray(_useState23, 2),\n        hover = _useState24[0],\n        setHover = _useState24[1];\n\n  const _useState25 = useState(false),\n        _useState26 = _slicedToArray(_useState25, 2),\n        isSettingsOpen = _useState26[0],\n        setSettingsOpen = _useState26[1];\n\n  const _useState27 = useState(false),\n        _useState28 = _slicedToArray(_useState27, 2),\n        isServerSettingsOpen = _useState28[0],\n        setIsServerSettingsOpen = _useState28[1];\n\n  const _useState29 = useState(false),\n        _useState30 = _slicedToArray(_useState29, 2),\n        isModalOpen = _useState30[0],\n        setModalOpen = _useState30[1];\n\n  const _useState31 = useState(\"\"),\n        _useState32 = _slicedToArray(_useState31, 2),\n        currentModal = _useState32[0],\n        setCurrentModal = _useState32[1];\n\n  const _useState33 = useState(\"US West\"),\n        _useState34 = _slicedToArray(_useState33, 2),\n        region = _useState34[0],\n        setRegion = _useState34[1];\n\n  const _useState35 = useState([]),\n        _useState36 = _slicedToArray(_useState35, 2),\n        serversList = _useState36[0],\n        setServersList = _useState36[1];\n\n  const _useState37 = useState(false),\n        _useState38 = _slicedToArray(_useState37, 2),\n        serverSettings = _useState38[0],\n        showServerSettings = _useState38[1];\n\n  const _useState39 = useState(false),\n        _useState40 = _slicedToArray(_useState39, 2),\n        inviteModal = _useState40[0],\n        setInviteModal = _useState40[1];\n\n  const _useState41 = useState(24),\n        _useState42 = _slicedToArray(_useState41, 2),\n        expires = _useState42[0],\n        setExpires = _useState42[1];\n\n  const _useState43 = useState(false),\n        _useState44 = _slicedToArray(_useState43, 2),\n        showChannelModal = _useState44[0],\n        setShowChannelModal = _useState44[1];\n\n  const _useState45 = useState(false),\n        _useState46 = _slicedToArray(_useState45, 2),\n        showCategoryModal = _useState46[0],\n        setShowCategoryModal = _useState46[1];\n\n  const _useState47 = useState(false),\n        _useState48 = _slicedToArray(_useState47, 2),\n        showPrivacyModal = _useState48[0],\n        setShowPrivacyModal = _useState48[1];\n\n  const _useState49 = useState(false),\n        _useState50 = _slicedToArray(_useState49, 2),\n        showNotificationSettingsModal = _useState50[0],\n        setShowNotificationSettingsModal = _useState50[1];\n\n  const _useState51 = useState(\"\"),\n        _useState52 = _slicedToArray(_useState51, 2),\n        newCategory = _useState52[0],\n        setNewCategory = _useState52[1];\n\n  const _useState53 = useState(\"\"),\n        _useState54 = _slicedToArray(_useState53, 2),\n        newChannel = _useState54[0],\n        setNewChannel = _useState54[1];\n\n  const _useState55 = useState(false),\n        _useState56 = _slicedToArray(_useState55, 2),\n        triggerReload = _useState56[0],\n        setTriggerReload = _useState56[1];\n\n  const _useState57 = useState([]),\n        _useState58 = _slicedToArray(_useState57, 2),\n        categories = _useState58[0],\n        setCategories = _useState58[1];\n\n  const _useState59 = useState(null),\n        _useState60 = _slicedToArray(_useState59, 2),\n        currentDragItem = _useState60[0],\n        setCurrentDragItem = _useState60[1];\n\n  const _useState61 = useState([]),\n        _useState62 = _slicedToArray(_useState61, 2),\n        chatrooms = _useState62[0],\n        setChatrooms = _useState62[1];\n\n  const _useState63 = useState(\"\"),\n        _useState64 = _slicedToArray(_useState63, 2),\n        activeChatroom = _useState64[0],\n        setActiveChatroom = _useState64[1];\n\n  const _useState65 = useState(null),\n        _useState66 = _slicedToArray(_useState65, 2),\n        activeChatroomId = _useState66[0],\n        setActiveChatroomId = _useState66[1];\n\n  const _useState67 = useState(false),\n        _useState68 = _slicedToArray(_useState67, 2),\n        isChangingRegion = _useState68[0],\n        setIsChangingRegion = _useState68[1];\n\n  const _useState69 = useState(\"\"),\n        _useState70 = _slicedToArray(_useState69, 2),\n        inviteEmail = _useState70[0],\n        setInviteEmail = _useState70[1];\n\n  const _useState71 = useState(\"\"),\n        _useState72 = _slicedToArray(_useState71, 2),\n        inviteCode = _useState72[0],\n        setInviteCode = _useState72[1];\n\n  const _useState73 = useState(\"overview\"),\n        _useState74 = _slicedToArray(_useState73, 2),\n        activeServerSetting = _useState74[0],\n        setActiveServerSetting = _useState74[1];\n\n  const _useState75 = useState(\"myaccount\"),\n        _useState76 = _slicedToArray(_useState75, 2),\n        activeUserSetting = _useState76[0],\n        setActiveUserSetting = _useState76[1];\n\n  const _useState77 = useState(false),\n        _useState78 = _slicedToArray(_useState77, 2),\n        isAdmin = _useState78[0],\n        setIsAdmin = _useState78[1];\n\n  const _useState79 = useState([]),\n        _useState80 = _slicedToArray(_useState79, 2),\n        serverInvites = _useState80[0],\n        setServerInvites = _useState80[1];\n\n  const _useState81 = useState(false),\n        _useState82 = _slicedToArray(_useState81, 2),\n        allowDirectMessages = _useState82[0],\n        setAllowDirectMessages = _useState82[1];\n\n  const _useState83 = useState(null),\n        _useState84 = _slicedToArray(_useState83, 2),\n        friendsList = _useState84[0],\n        setFriendsList = _useState84[1];\n\n  const _useState85 = useState(null),\n        _useState86 = _slicedToArray(_useState85, 2),\n        currentFriend = _useState86[0],\n        setCurrentFriend = _useState86[1];\n\n  const ref = useRef();\n  useOnClickOutside(ref, () => setShowCategoryModal(false));\n  useEffect(() => {\n    if (friendsList === null && id !== null) {\n      props.findFriends({\n        userId: id\n      });\n    }\n\n    if (props.friendsList && props.findFriendsSuccess) {\n      setFriendsList(props.friendsList);\n      props.resetFriendValues();\n    }\n\n    if (props.friendsList && props.createFriendSuccess) {\n      setFriendsList(props.friendsList);\n      props.resetFriendValues();\n    }\n\n    if (props.friendsList && props.deleteFriendSuccess) {\n      setFriendsList(props.friendsList);\n      props.resetFriendValues();\n    }\n\n    if (props.findInvitesSuccess || props.findInvitesError) {\n      if (props.findInvitesSuccess) {\n        setServerInvites(props.inviteServersList);\n      }\n\n      props.resetInviteValues();\n      setActiveServerSetting(\"invites\");\n    }\n\n    if (props.verifySuccess) {\n      setModalOpen(false);\n      toast.dismiss();\n      toast.success('Success, you have joined the server!', {\n        position: 'bottom-center'\n      });\n      props.resetInviteValues();\n      props.getUpdatedUser({\n        userId: id\n      });\n    }\n\n    if (props.verifyError) {\n      toast.dismiss();\n      toast.error('Error joining server!', {\n        position: 'bottom-center'\n      });\n      props.resetInviteValues();\n    }\n\n    if (props.serverUserList) {\n      setServerUserList(props.serverUserList);\n      const index = props.serverUserList.findIndex(x => x.username === username);\n\n      if (index > -1) {\n        if (props.serverUserList[index].type === 'admin' || props.serverUserList[index].type === 'owner') {\n          setIsAdmin(true);\n        } else if (props.serverUserList[index].type !== 'admin' || props.serverUserList[index].type !== 'owner') {\n          setIsAdmin(false);\n        }\n      }\n    }\n\n    if (props.chatroomError) {\n      toast.dismiss();\n      toast.error('Error, Error creating chatroom!', {\n        position: 'bottom-center'\n      });\n      props.resetChatroomValues();\n    }\n\n    if (props.inviteCode) {\n      setInviteModal(true);\n      setIsServerSettingsOpen(false);\n      setInviteCode(props.inviteCode);\n    }\n\n    if (props.inviteEmailSuccess) {\n      setInviteModal(false);\n      setIsServerSettingsOpen(false);\n      toast.dismiss();\n      toast.success('Success, Invite was sent successfully!', {\n        position: 'bottom-center'\n      });\n    }\n\n    if (props.inviteEmailError) {\n      toast.dismiss();\n      toast.error('Error, Invite could not be sent!', {\n        position: 'bottom-center'\n      });\n    }\n\n    if (props.chatroomList && props.chatroomSuccess) {\n      setChatrooms(props.chatroomList);\n\n      if (props.chatroomList.length > 0) {\n        setActiveChatroom(props.chatroomList[0].name);\n        setActiveChatroomId(props.chatroomList[0].id);\n      }\n\n      setShowChannelModal(false);\n      setNewChannel('');\n      props.resetChatroomValues();\n    }\n\n    if (props.categoryList) {\n      setCategories(props.categoryList);\n      setShowCategoryModal(false);\n    }\n\n    if (!props.user) {\n      props.currentUser();\n      window.addEventListener('keydown', detectEscape);\n    } else if (props.user) {\n      const _props$user = props.user,\n            id = _props$user.id,\n            username = _props$user.username,\n            email = _props$user.email,\n            imageUrl = _props$user.imageUrl,\n            active = _props$user.active,\n            serversList = _props$user.serversList;\n      setId(id);\n      setUsername(username);\n      setEmail(email);\n      setImageUrl(imageUrl);\n      setActive(active);\n      setServersList(serversList);\n    }\n  }, [props, id, username, friendsList]);\n\n  const detectEscape = event => {\n    if (event.keyCode === 27) {\n      setSettingsOpen(false);\n      setIsServerSettingsOpen(false);\n      showServerSettings(false);\n      setActiveServerSetting(\"overview\");\n    }\n  };\n\n  if (props.logout) {\n    return React.createElement(Redirect, {\n      push: true,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    });\n  }\n\n  const userLogout = () => {\n    props.userLogout({\n      id: id\n    });\n  };\n\n  const deleteServer = () => {// props.deleteServer({\n    //   serverId: serverId\n    // });\n  };\n\n  const toggleModal = value => {\n    setModalOpen(true);\n    setCurrentModal(value);\n  };\n\n  const getUpdatedServerList = closeModal => {\n    if (closeModal) {\n      setModalOpen(false);\n      toast.dismiss();\n      toast.success('Success, the server was created!', {\n        position: 'bottom-center'\n      });\n      props.getUpdatedUser({\n        userId: id\n      });\n    } else {\n      toast.dismiss();\n      toast.error('There was an error creating the server!', {\n        position: 'bottom-center'\n      });\n    }\n  };\n\n  const setShowInviteModal = () => {\n    setInviteModal(!inviteModal);\n    showServerSettings(false);\n    setInviteCode(\"\");\n    props.resetInviteValues();\n  };\n\n  const createInstantInvite = () => {\n    props.inviteCreate({\n      expires: expires,\n      serverId: serverId\n    });\n  };\n\n  const createNewServerInvite = () => {\n    props.inviteEmailCreate({\n      inviteCode: \"\",\n      expires: expires,\n      serverId: serverId,\n      email: email\n    });\n  };\n\n  const displayChannelModal = () => {\n    setShowChannelModal(true);\n    showServerSettings(false);\n  };\n\n  const createNewChannel = () => {\n    props.chatroomCreate({\n      name: newChannel,\n      serverId: serverId,\n      order: categories.length,\n      visible: true\n    });\n  };\n\n  const displayCategoryModal = () => {\n    setShowCategoryModal(true);\n    showServerSettings(false);\n  };\n\n  const displayNotificationSettingsModal = () => {\n    setShowNotificationSettingsModal(!showNotificationSettingsModal);\n    showServerSettings(false);\n  };\n\n  const displayPrivacyModal = () => {\n    setShowPrivacyModal(!showPrivacyModal);\n    showServerSettings(false);\n  };\n\n  const createNewCategory = () => {\n    props.categoryCreate({\n      name: newCategory,\n      serverId: serverId,\n      order: categories.length,\n      visible: true\n    });\n    setNewCategory('');\n  };\n\n  const dragItem = (item, event) => {\n    if (!isAdmin) return false;\n    setCurrentDragItem(item);\n    event.dataTransfer.setData(\"text\", event.target.id);\n  };\n\n  const draggingOverItem = event => {\n    if (!isAdmin) return false;\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const dropItem = event => {\n    if (!isAdmin) return false;\n    event.preventDefault();\n    const newChatrooms = chatrooms || [];\n\n    if (event.target.id !== currentDragItem.category && event.target.id) {\n      for (let i = 0; i < newChatrooms.length; i++) {\n        if (newChatrooms[i].categoryId === currentDragItem.categoryId && newChatrooms[i].name === currentDragItem.name) {\n          newChatrooms[i] = {\n            categoryId: +event.target.id.split('-')[0] === 0 ? null : +event.target.id.split('-')[0],\n            id: currentDragItem.id,\n            name: currentDragItem.name,\n            serverId: currentDragItem.serverId\n          };\n          props.chatroomUpdate({\n            chatroomId: currentDragItem.id,\n            categoryId: +event.target.id.split('-')[0] === 0 ? null : +event.target.id.split('-')[0]\n          });\n          break;\n        }\n      }\n\n      setChatrooms(newChatrooms);\n      setTriggerReload(!triggerReload);\n    }\n  };\n\n  const setItemVisibility = group => {\n    for (let i = 0; i < categories.length; i++) {\n      if (categories[i].name === group.name) {\n        categories[i].visible = !categories[i].visible;\n      }\n    }\n\n    setTriggerReload(!triggerReload);\n  };\n\n  const setServerProperties = item => {\n    setServer(item.name);\n    setServerName(item.name);\n    setServerId(item.serverId);\n    setServerImage(item.imageUrl);\n    setServerRegion(item.region);\n    setCurrentFriend(null);\n    props.findUserList({\n      serverId: item.serverId\n    });\n    props.categoryFindAll({\n      serverId: item.serverId\n    });\n    props.getChatrooms({\n      serverId: item.serverId\n    });\n  };\n\n  const setCurrentActiveChatroom = (item, event) => {\n    if (event) {\n      event.stopPropagation();\n    }\n\n    setActiveChatroom(item.name);\n    setActiveChatroomId(item.id);\n  };\n\n  const joinServer = value => {\n    props.inviteVerification({\n      code: value,\n      email: email\n    });\n  };\n\n  const getInvites = () => {\n    props.findInvites({\n      serverId: serverId\n    });\n  };\n\n  const privateMessageUser = user => {\n    setServer(\"\");\n    setCurrentFriend(user);\n    props.friendCreate({\n      userId: id,\n      friendId: user.userId,\n      username: username,\n      friendUsername: user.username,\n      imageUrl: user.imageUrl\n    });\n  };\n\n  const deleteFriend = (event, friend) => {\n    event.stopPropagation();\n    setCurrentFriend(null);\n    setServer(\"\");\n    props.friendDelete({\n      userId: id,\n      friendId: friend.friendId\n    });\n  };\n\n  const clickSetCurrentFriend = (event, friend) => {\n    event.stopPropagation();\n    setCurrentFriend(friend);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404\n    },\n    __self: this\n  }, React.createElement(ToastMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }), isModalOpen || showCategoryModal || showChannelModal || showNotificationSettingsModal || showPrivacyModal || inviteModal ? React.createElement(\"span\", {\n    className: \"contentBackground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"sidebar\",\n    onClick: () => {\n      setCurrentFriend(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidebar-container\",\n    onPointerOver: () => {\n      setHover(\"Home\");\n    },\n    onPointerOut: () => {\n      setHover(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408\n    },\n    __self: this\n  }, hover === \"Home\" && server !== \"\" ? React.createElement(\"span\", {\n    className: \"sidebar-hover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409\n    },\n    __self: this\n  }) : null, server === \"\" ? React.createElement(\"span\", {\n    className: \"sidebar-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410\n    },\n    __self: this\n  }) : null, React.createElement(\"img\", {\n    className: \"sidebar-logo\",\n    src: chatot,\n    alt: \"chatter-icon-logo\",\n    onClick: () => {\n      setServer(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411\n    },\n    __self: this\n  }), hover === \"Home\" ? React.createElement(\"span\", {\n    className: \"tooltip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412\n    },\n    __self: this\n  }, \"Home\")) : null), React.createElement(\"div\", {\n    className: \"sidebar-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414\n    },\n    __self: this\n  }), serversList && serversList.length > 0 ? serversList.map((item, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"sidebar-container\",\n      onPointerOver: () => {\n        setHover(item.name);\n      },\n      onPointerOut: () => {\n        setHover(\"\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, hover === item.name && server !== item.name && server !== \"Home\" ? React.createElement(\"span\", {\n      className: \"sidebar-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }) : null, server === item.name ? React.createElement(\"span\", {\n      className: \"sidebar-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }) : null, React.createElement(\"img\", {\n      className: \"sidebar-logo\",\n      src: item.imageUrl ? item.imageUrl : chatot,\n      alt: \"chatter-icon\",\n      onClick: () => {\n        setServerProperties(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }), hover === item.name ? React.createElement(\"span\", {\n      className: \"tooltip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, item.name)) : null);\n  }) : null), server === \"\" ? React.createElement(\"div\", {\n    className: \"sidebarleft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidebarleft-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Find or start a conversation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"sidebarleft-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sidebarleft-friendscontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"sidebarleft-logo\",\n    src: friends,\n    alt: \"friends-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"sidebarleft-friends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434\n    },\n    __self: this\n  }, \"Friends\")), React.createElement(\"div\", {\n    className: \"sidebarleft-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sidebarleft-directmessages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438\n    },\n    __self: this\n  }, \"Private Messages\")), React.createElement(\"div\", {\n    className: \"sidebarleft-bordertwo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sidebarleft-listfriends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441\n    },\n    __self: this\n  }, friendsList && friendsList.length ? friendsList.map((item, index) => {\n    if (item.activeFriend) {\n      return React.createElement(\"div\", {\n        key: index,\n        className: currentFriend && item.username === currentFriend.username ? \"sidebarleft-currentfriend-active\" : \"sidebarleft-currentfriend\",\n        onClick: event => {\n          clickSetCurrentFriend(event, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"sidebarleft-currentfriend-image\",\n        src: item.imageUrl ? item.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"sidebarleft-currentfriend-username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, item.username), React.createElement(\"span\", {\n        className: \"sidebarleft-currentfriend-remove\",\n        onClick: event => {\n          deleteFriend(event, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, \"\\u2715\"));\n    } else {\n      return null;\n    }\n  }) : null), React.createElement(\"div\", {\n    className: \"userinfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"username-image\",\n    src: imageUrl ? imageUrl : chatot,\n    alt: \"username-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458\n    },\n    __self: this\n  })), active ? React.createElement(\"div\", {\n    className: \"userinfo-online\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460\n    },\n    __self: this\n  }) : null, React.createElement(\"span\", {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461\n    },\n    __self: this\n  }, username), React.createElement(\"img\", {\n    className: \"settings-image\",\n    src: settings,\n    alt: \"settings-icon\",\n    onClick: () => {\n      setSettingsOpen(!isSettingsOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    className: \"sidebarleft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidebarleft-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"sidebarleft-container-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467\n    },\n    __self: this\n  }, server), isAdmin ? React.createElement(\"div\", {\n    className: \"sidebarleft-container-dropdown\",\n    onClick: () => {\n      showServerSettings(!serverSettings);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468\n    },\n    __self: this\n  }, !serverSettings ? React.createElement(\"i\", {\n    className: \"channelarrow down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468\n    },\n    __self: this\n  }) : React.createElement(\"span\", {\n    className: \"cancel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468\n    },\n    __self: this\n  }, \"\\u2715\")) : null, serverSettings ? React.createElement(\"div\", {\n    className: \"serversettings-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    onClick: () => {\n      setShowInviteModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: invite,\n    alt: \"invite-people\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473\n    },\n    __self: this\n  }, \"Invite People\")), React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    onClick: () => {\n      setIsServerSettingsOpen(!isServerSettingsOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: serversettings,\n    alt: \"server-settings\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477\n    },\n    __self: this\n  }, \"Server Settings\")), React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    onClick: () => {\n      displayChannelModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: createchannel,\n    alt: \"server-settings\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483\n    },\n    __self: this\n  }, \"Create Channel\")), React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    onClick: () => {\n      displayCategoryModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: category,\n    alt: \"server-settings\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487\n    },\n    __self: this\n  }, \"Create Category\")), React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    onClick: () => {\n      displayNotificationSettingsModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: notification,\n    alt: \"server-settings\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491\n    },\n    __self: this\n  }, \"Notification Settings\")), React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    onClick: () => {\n      displayPrivacyModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: privacylock,\n    alt: \"server-settings\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495\n    },\n    __self: this\n  }, \"Privacy Settings\"))) : null), inviteModal ? React.createElement(InviteModal, {\n    expires: expires,\n    inviteEmail: inviteEmail,\n    inviteCode: inviteCode,\n    setTimeExpires: value => {\n      setExpires(value);\n    },\n    createNewInvite: () => {\n      createNewServerInvite();\n    },\n    setShowInviteModal: () => {\n      setShowInviteModal(false);\n    },\n    createNewInstantInvite: () => {\n      createInstantInvite();\n    },\n    setCurrentInviteEmail: value => {\n      setInviteEmail(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502\n    },\n    __self: this\n  }) : null, showChannelModal ? React.createElement(ChannelModal, {\n    setNewChannel: event => {\n      setNewChannel(event.target.value);\n    },\n    setShowChannelModal: () => {\n      setShowChannelModal(false);\n    },\n    createNewChannel: () => {\n      createNewChannel();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515\n    },\n    __self: this\n  }) : null, showCategoryModal ? React.createElement(CategoryModal, {\n    setNewCategory: event => {\n      setNewCategory(event.target.value);\n    },\n    setShowCategoryModal: () => {\n      setShowCategoryModal(false);\n    },\n    createNewCategory: () => {\n      createNewCategory();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523\n    },\n    __self: this\n  }) : null, showPrivacyModal ? React.createElement(PrivacyModal, {\n    server: server,\n    allowDirectMessages: allowDirectMessages,\n    setAllowDirectMessages: () => {\n      setAllowDirectMessages(true);\n    },\n    setShowPrivacyModal: () => {\n      setShowPrivacyModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531\n    },\n    __self: this\n  }) : null, showNotificationSettingsModal ? React.createElement(NotificationSettingsModal, {\n    server: server,\n    setShowNotificationSettingsModal: () => {\n      setShowNotificationSettingsModal(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"sidebarleft-mainchat\",\n    style: {\n      marginTop: chatrooms && chatrooms.length ? '0.5rem' : '0rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onDrop: event => {\n      dropItem(event);\n    },\n    onDragOver: event => {\n      draggingOverItem(event);\n    },\n    id: 0 + \"-\" + server,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547\n    },\n    __self: this\n  }, chatrooms && chatrooms.length > 0 ? chatrooms.filter(chatroom => chatroom.categoryId === null).map((item, index) => {\n    return React.createElement(\"div\", {\n      className: activeChatroom === item.name ? \"active\" : \"\",\n      key: index,\n      id: 0 + \"-\" + item.name,\n      draggable: \"true\",\n      onDragStart: event => {\n        dragItem(item, event);\n      },\n      onClick: () => {\n        setCurrentActiveChatroom(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: numbersign,\n      alt: \"channel\",\n      height: 16,\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, item.name));\n  }) : null), categories && categories.length ? categories.map((group, categoryIndex) => {\n    const height = chatrooms.filter(chatroom => chatroom.categoryId === group.id).length;\n    const itemHeight = group.visible === true ? \"\".concat(height * 2, \"rem\") : '0rem';\n    return React.createElement(\"div\", {\n      key: categoryIndex,\n      style: {\n        marginBottom: itemHeight\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sidebarleft-mainchat-dropdown\",\n      onClick: () => {\n        setItemVisibility(group);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, group.visible ? React.createElement(\"i\", {\n      className: \"arrow down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      className: \"arrow right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, group.name), group.visible ? React.createElement(\"div\", {\n      onDrop: event => {\n        dropItem(event);\n      },\n      onDragOver: event => {\n        draggingOverItem(event);\n      },\n      id: group.id + \"-\" + group.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, chatrooms && chatrooms.length > 0 ? chatrooms.filter(chatroom => chatroom.categoryId === group.id).map((item, index) => {\n      return React.createElement(\"div\", {\n        className: activeChatroom === item.name ? \"active\" : \"inactive\",\n        id: item.categoryId + \"-\" + item.name,\n        key: index,\n        draggable: \"true\",\n        onDragStart: event => {\n          dragItem(item, event);\n        },\n        onClick: event => {\n          setCurrentActiveChatroom(item, event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: numbersign,\n        alt: \"channel\",\n        height: 16,\n        width: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }, item.name));\n    }) : null) : null));\n  }) : null)), server !== \"\" && activeChatroom !== \"\" ? React.createElement(Chatroom, {\n    activeChatroom: activeChatroom,\n    activeChatroomId: activeChatroomId,\n    userId: id,\n    serverId: serverId,\n    username: username,\n    serverUserList: serverUserList,\n    privateMessageUser: user => {\n      privateMessageUser(user);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588\n    },\n    __self: this\n  }) : null, server === \"\" && currentFriend !== null ? React.createElement(ChatroomFriend, {\n    userId: id,\n    username: username,\n    friendId: currentFriend.friendId,\n    friendUsername: currentFriend.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600\n    },\n    __self: this\n  }) : null, server === \"\" && currentFriend === null ? React.createElement(\"div\", {\n    className: \"mainarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mainarea-topnav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"mainarea-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mainarea-container-addserver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614\n    },\n    __self: this\n  }, \"Create\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615\n    },\n    __self: this\n  }, \"Create a new server and invite other people to join!\"), React.createElement(\"button\", {\n    onClick: () => {\n      toggleModal(\"create\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616\n    },\n    __self: this\n  }, \"Create a server\")), React.createElement(\"div\", {\n    className: \"mainarea-container-joinserver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619\n    },\n    __self: this\n  }, \"Join\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620\n    },\n    __self: this\n  }, \"Enter an secret invite code to join an existing server!\"), React.createElement(\"button\", {\n    onClick: () => {\n      toggleModal(\"join\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621\n    },\n    __self: this\n  }, \"Join a server\")))) : null, isServerSettingsOpen ? React.createElement(\"div\", {\n    className: \"serversettings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628\n    },\n    __self: this\n  }, isChangingRegion ? React.createElement(\"span\", {\n    className: \"contentBackground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"serversettings-sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631\n    },\n    __self: this\n  }, \"Server Settings\"), React.createElement(\"p\", {\n    className: activeServerSetting === \"overview\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-overview\",\n    onClick: () => {\n      setActiveServerSetting(\"overview\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632\n    },\n    __self: this\n  }, \"Overview\"), React.createElement(\"p\", {\n    className: activeServerSetting === \"moderation\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-moderation\",\n    onClick: () => {\n      setActiveServerSetting(\"moderation\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633\n    },\n    __self: this\n  }, \"Moderation\"), React.createElement(\"p\", {\n    className: activeServerSetting === \"activitylog\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-activitylog\",\n    onClick: () => {\n      setActiveServerSetting(\"activitylog\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634\n    },\n    __self: this\n  }, \"Activity Log\"), React.createElement(\"p\", {\n    className: activeServerSetting === \"roles\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-roles\",\n    onClick: () => {\n      setActiveServerSetting(\"roles\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635\n    },\n    __self: this\n  }, \"Roles\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636\n    },\n    __self: this\n  }, \"User Management\"), React.createElement(\"p\", {\n    className: activeServerSetting === \"members\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-members\",\n    onClick: () => {\n      setActiveServerSetting(\"members\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637\n    },\n    __self: this\n  }, \"Members\"), React.createElement(\"p\", {\n    className: activeServerSetting === \"invites\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-invites\",\n    onClick: () => {\n      getInvites();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638\n    },\n    __self: this\n  }, \"Invites\"), React.createElement(\"p\", {\n    className: activeServerSetting === \"bans\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-bans\",\n    onClick: () => {\n      setActiveServerSetting(\"bans\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639\n    },\n    __self: this\n  }, \"Bans\"), React.createElement(\"p\", {\n    onClick: deleteServer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640\n    },\n    __self: this\n  }, \"Delete Server\")), React.createElement(\"div\", {\n    className: \"serversettings-servercontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642\n    },\n    __self: this\n  }, activeServerSetting === \"overview\" ? React.createElement(\"div\", {\n    className: \"serversettings-myserver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645\n    },\n    __self: this\n  }, \"Server Overview\"), React.createElement(\"div\", {\n    className: \"serversettings-myserver__container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"serversettings-myserver__container-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: serverImage ? serverImage : chatot,\n    alt: \"server-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"serversettings-myserver__container-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"serversettings-myserver__container-info-server\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652\n    },\n    __self: this\n  }, \"Server Name\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    onChange: event => setServerName(event.target.value),\n    value: serverName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"serversettings-myserver__container-info-region\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656\n    },\n    __self: this\n  }, \"Server Region\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"servermodalregion-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657\n    },\n    __self: this\n  }, serverRegion === \"US West\" || serverRegion === \"US Central\" || serverRegion === \"US East\" ? React.createElement(\"img\", {\n    src: usregion,\n    height: 35,\n    width: 55,\n    alt: \"server-region\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658\n    },\n    __self: this\n  }) : null, serverRegion === \"Central Europe\" || serverRegion === \"Western Europe\" ? React.createElement(\"img\", {\n    src: europe,\n    height: 35,\n    width: 55,\n    alt: \"server-region\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659\n    },\n    __self: this\n  }) : null, serverRegion === \"Russia\" ? React.createElement(\"img\", {\n    src: russia,\n    height: 35,\n    width: 55,\n    alt: \"server-region\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660\n    },\n    __self: this\n  }) : null, React.createElement(\"span\", {\n    className: \"servermodalregion-select-current\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661\n    },\n    __self: this\n  }, serverRegion), React.createElement(\"span\", {\n    className: \"servermodalregion-select-change\",\n    onClick: () => {\n      setIsChangingRegion(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662\n    },\n    __self: this\n  }, \"Change\")))))) : null, activeServerSetting === \"members\" ? React.createElement(\"div\", {\n    className: \"serversettings-members\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672\n    },\n    __self: this\n  }, \"Server Members\"), React.createElement(\"p\", {\n    className: \"serversettings-members-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673\n    },\n    __self: this\n  }, serverUserList.length, \" Members\"), serverUserList && serverUserList.length > 0 ? serverUserList.map((item, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"serversettings-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"serversettings-logo\",\n      src: item.imageUrl ? item.imageUrl : chatot,\n      alt: \"chatter-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    }, item.type), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    }, item.username)), React.createElement(\"span\", {\n      className: \"serversettings-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: add,\n      alt: \"add-icon\",\n      className: \"serversettings-user-add-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    })));\n  }) : null) : null, activeServerSetting === \"invites\" ? React.createElement(\"div\", {\n    className: \"serversettings-invites\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693\n    },\n    __self: this\n  }, \"Server Invites\"), React.createElement(\"p\", {\n    className: \"serversettings-invites-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694\n    },\n    __self: this\n  }, serverInvites.length === 1 ? '1 Invite' : \"\".concat(serverInvites.length, \" Invites\"), \" \"), serverInvites && serverInvites.length > 0 ? serverInvites.map((item, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"serversettings-invite\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699\n      },\n      __self: this\n    }, \"Code: \", item.code), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }, \"Created: \", React.createElement(Moment, {\n      format: \"MM/DD/YYYY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }, item.createdAt), \" at \", React.createElement(Moment, {\n      format: \"LT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }, item.createdAt)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701\n      },\n      __self: this\n    }, \"Expiration: \", item.expires, \" hours\")), React.createElement(\"span\", {\n      className: \"serversettings-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: add,\n      alt: \"add-icon\",\n      className: \"serversettings-invite-add-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704\n      },\n      __self: this\n    })));\n  }) : null) : null, React.createElement(\"div\", {\n    className: \"serversettings-escape\",\n    onClick: () => {\n      setIsServerSettingsOpen(!isServerSettingsOpen);\n      showServerSettings(false);\n      setActiveServerSetting(\"overview\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713\n    },\n    __self: this\n  }, \"\\xD7\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714\n    },\n    __self: this\n  }, \"ESC\"))), isChangingRegion ? React.createElement(RegionModal, {\n    setIsChangingRegion: () => {\n      setIsChangingRegion(false);\n    },\n    setServerRegion: region => {\n      setServerRegion(region);\n      setIsChangingRegion(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719\n    },\n    __self: this\n  }) : null) : null, isSettingsOpen ? React.createElement(\"div\", {\n    className: \"usersettings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"usersettings-sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731\n    },\n    __self: this\n  }, \"User Settings\"), React.createElement(\"p\", {\n    className: activeUserSetting === \"myaccount\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-myaccount\",\n    onClick: () => {\n      setActiveUserSetting(\"myaccount\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732\n    },\n    __self: this\n  }, \"My Account\"), React.createElement(\"p\", {\n    className: activeUserSetting === \"privacy\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-privacy\",\n    onClick: () => {\n      setActiveUserSetting(\"privacy\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733\n    },\n    __self: this\n  }, \"Privacy & Safety\"), React.createElement(\"p\", {\n    className: activeUserSetting === \"connections\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-connections\",\n    onClick: () => {\n      setActiveUserSetting(\"connections\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734\n    },\n    __self: this\n  }, \"Connections\"), React.createElement(\"p\", {\n    className: activeUserSetting === \"billing\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-billing\",\n    onClick: () => {\n      setActiveUserSetting(\"billing\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735\n    },\n    __self: this\n  }, \"Billing\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736\n    },\n    __self: this\n  }, \"App Settings\"), React.createElement(\"p\", {\n    className: activeUserSetting === \"voice\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-voice\",\n    onClick: () => {\n      setActiveUserSetting(\"voice\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737\n    },\n    __self: this\n  }, \"Voice & Video\"), React.createElement(\"p\", {\n    className: activeUserSetting === \"notifications\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-notifications\",\n    onClick: () => {\n      setActiveUserSetting(\"notifications\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738\n    },\n    __self: this\n  }, \"Notifications\"), React.createElement(\"p\", {\n    className: activeUserSetting === \"appearance\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-appearance\",\n    onClick: () => {\n      setActiveUserSetting(\"appearance\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739\n    },\n    __self: this\n  }, \"Appearance\"), React.createElement(\"p\", {\n    className: activeUserSetting === \"language\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-language\",\n    onClick: () => {\n      setActiveUserSetting(\"language\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740\n    },\n    __self: this\n  }, \"Language\"), React.createElement(\"p\", {\n    onClick: userLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741\n    },\n    __self: this\n  }, \"Logout\")), activeUserSetting === \"myaccount\" ? React.createElement(\"div\", {\n    className: \"usersettings-accountcontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"usersettings-myaccount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747\n    },\n    __self: this\n  }, \"My Account\"), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imageUrl ? imageUrl : chatot,\n    alt: \"username-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-info-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755\n    },\n    __self: this\n  }, username)), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-info-email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759\n    },\n    __self: this\n  }, email))), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763\n    },\n    __self: this\n  }, \"Edit\")))), React.createElement(\"div\", {\n    className: \"usersettings-authentication\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768\n    },\n    __self: this\n  }, \"Two-Factor Authentication\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769\n    },\n    __self: this\n  }, \"Protect your account with an extra layer of security. Once configured you'll be required to enter your password and an authentication code from your mobile device to login.\"), React.createElement(\"div\", {\n    className: \"usersettings-authentication-enable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771\n    },\n    __self: this\n  }, \"Enable\")))) : null, React.createElement(\"div\", {\n    className: \"usersettings-escape\",\n    onClick: () => {\n      setSettingsOpen(!isSettingsOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778\n    },\n    __self: this\n  }, \"\\xD7\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779\n    },\n    __self: this\n  }, \"ESC\"))) : null, isModalOpen && currentModal === \"create\" ? React.createElement(CreateServer, {\n    id: id,\n    region: region,\n    setRegion: region => {\n      setRegion(region);\n    },\n    setModalOpen: () => {\n      setModalOpen(!isModalOpen);\n    },\n    getUpdatedServerList: closeModal => {\n      getUpdatedServerList(closeModal);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785\n    },\n    __self: this\n  }) : null, isModalOpen && currentModal === \"join\" ? React.createElement(JoinServer, {\n    joinServer: value => {\n      joinServer(value);\n    },\n    setModalOpen: () => {\n      setModalOpen(!isModalOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795\n    },\n    __self: this\n  }) : null);\n};\n\nconst mapStateToProps = ({\n  usersReducer,\n  serversReducer,\n  categoriesReducer,\n  chatroomsReducer,\n  invitesReducer,\n  friendsReducer\n}) => {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    logout: usersReducer.logout,\n    user: usersReducer.user,\n    users: usersReducer.users,\n    serversList: serversReducer.serversList,\n    serverUserList: serversReducer.serverUserList,\n    categoryList: categoriesReducer.categoryList,\n    chatroomList: chatroomsReducer.chatroomList,\n    chatroomSuccess: chatroomsReducer.success,\n    chatroomError: chatroomsReducer.error,\n    inviteEmailError: invitesReducer.inviteEmailError,\n    inviteEmailSuccess: invitesReducer.inviteEmailSuccess,\n    inviteCode: invitesReducer.inviteCode,\n    verifySuccess: invitesReducer.verifySuccess,\n    verifyError: invitesReducer.verifyError,\n    inviteServersList: invitesReducer.inviteServersList,\n    findInvitesSuccess: invitesReducer.findInvitesSuccess,\n    findInvitesError: invitesReducer.findInvitesError,\n    createFriendSuccess: friendsReducer.createFriendSuccess,\n    deleteFriendSuccess: friendsReducer.deleteFriendSuccess,\n    findFriendsSuccess: friendsReducer.findFriendsSuccess,\n    friendsList: friendsReducer.friendsList\n  };\n};\n\nexport default connect(mapStateToProps, actions)(Dashboard);","map":{"version":3,"sources":["/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/views/Dashboard/Dashboard.js"],"names":["React","useState","useEffect","useRef","useOnClickOutside","connect","actions","Redirect","toast","Moment","ToastMessage","Chatroom","ChatroomFriend","CreateServer","JoinServer","CategoryModal","ChannelModal","InviteModal","NotificationSettingsModal","PrivacyModal","RegionModal","chatot","friends","settings","invite","notification","privacylock","serversettings","category","createchannel","numbersign","usregion","europe","russia","add","Dashboard","props","id","setId","username","setUsername","email","setEmail","imageUrl","setImageUrl","active","setActive","server","setServer","serverName","setServerName","serverId","setServerId","serverImage","setServerImage","serverRegion","setServerRegion","serverUserList","setServerUserList","hover","setHover","isSettingsOpen","setSettingsOpen","isServerSettingsOpen","setIsServerSettingsOpen","isModalOpen","setModalOpen","currentModal","setCurrentModal","region","setRegion","serversList","setServersList","serverSettings","showServerSettings","inviteModal","setInviteModal","expires","setExpires","showChannelModal","setShowChannelModal","showCategoryModal","setShowCategoryModal","showPrivacyModal","setShowPrivacyModal","showNotificationSettingsModal","setShowNotificationSettingsModal","newCategory","setNewCategory","newChannel","setNewChannel","triggerReload","setTriggerReload","categories","setCategories","currentDragItem","setCurrentDragItem","chatrooms","setChatrooms","activeChatroom","setActiveChatroom","activeChatroomId","setActiveChatroomId","isChangingRegion","setIsChangingRegion","inviteEmail","setInviteEmail","inviteCode","setInviteCode","activeServerSetting","setActiveServerSetting","activeUserSetting","setActiveUserSetting","isAdmin","setIsAdmin","serverInvites","setServerInvites","allowDirectMessages","setAllowDirectMessages","friendsList","setFriendsList","currentFriend","setCurrentFriend","ref","findFriends","userId","findFriendsSuccess","resetFriendValues","createFriendSuccess","deleteFriendSuccess","findInvitesSuccess","findInvitesError","inviteServersList","resetInviteValues","verifySuccess","dismiss","success","position","getUpdatedUser","verifyError","error","index","findIndex","x","type","chatroomError","resetChatroomValues","inviteEmailSuccess","inviteEmailError","chatroomList","chatroomSuccess","length","name","categoryList","user","currentUser","window","addEventListener","detectEscape","event","keyCode","logout","userLogout","deleteServer","toggleModal","value","getUpdatedServerList","closeModal","setShowInviteModal","createInstantInvite","inviteCreate","createNewServerInvite","inviteEmailCreate","displayChannelModal","createNewChannel","chatroomCreate","order","visible","displayCategoryModal","displayNotificationSettingsModal","displayPrivacyModal","createNewCategory","categoryCreate","dragItem","item","dataTransfer","setData","target","draggingOverItem","preventDefault","stopPropagation","dropItem","newChatrooms","i","categoryId","split","chatroomUpdate","chatroomId","setItemVisibility","group","setServerProperties","findUserList","categoryFindAll","getChatrooms","setCurrentActiveChatroom","joinServer","inviteVerification","code","getInvites","findInvites","privateMessageUser","friendCreate","friendId","friendUsername","deleteFriend","friend","friendDelete","clickSetCurrentFriend","map","activeFriend","color","marginTop","filter","chatroom","categoryIndex","height","itemHeight","marginBottom","createdAt","mapStateToProps","usersReducer","serversReducer","categoriesReducer","chatroomsReducer","invitesReducer","friendsReducer","isLoading","users"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport useOnClickOutside from '../../utils/useOnClickOutside';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { Redirect } from 'react-router';\nimport { toast } from 'react-toastify';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Dashboard.css';\nimport ToastMessage from '../../components/ToastMessage/ToastMessage';\nimport Chatroom from '../../components/Chatroom/Chatroom';\nimport ChatroomFriend from '../../components/ChatroomFriend/ChatroomFriend';\nimport CreateServer from '../../components/CreateServer/CreateServer';\nimport JoinServer from '../../components/JoinServer/JoinServer';\nimport CategoryModal from '../../components/CategoryModal/CategoryModal';\nimport ChannelModal from '../../components/ChannelModal/ChannelModal';\nimport InviteModal from '../../components/InviteModal/InviteModal';\nimport NotificationSettingsModal from '../../components/NotificationSettingsModal/NotificationSettingsModal';\nimport PrivacyModal from '../../components/PrivacyModal/PrivacyModal';\nimport RegionModal from '../../components/RegionModal/RegionModal';\nimport chatot from '../../assets/images/chatot.png';\nimport friends from '../../assets/images/friends.png';\nimport settings from '../../assets/images/settings.png';\nimport invite from '../../assets/images/invite.png';\nimport notification from '../../assets/images/notification.png';\nimport privacylock from '../../assets/images/privacylock.png';\nimport serversettings from '../../assets/images/serversettings.png';\nimport category from '../../assets/images/category.png';\nimport createchannel from '../../assets/images/createchannel.png';\nimport numbersign from '../../assets/images/numbersign.png';\nimport usregion from '../../assets/images/usregion.png';\nimport europe from '../../assets/images/europe.png';\nimport russia from '../../assets/images/russia.png';\nimport add from '../../assets/images/add.png';\n\nconst Dashboard = (props) => {\n  const [id, setId] = useState(null);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [active, setActive] = useState(false);\n  const [server, setServer] = useState('');\n  const [serverName, setServerName] = useState('');\n  const [serverId, setServerId] = useState(null);\n  const [serverImage, setServerImage] = useState(\"\");\n  const [serverRegion, setServerRegion] = useState(\"\");\n  const [serverUserList, setServerUserList] = useState([]);\n  const [hover, setHover] = useState('');\n  const [isSettingsOpen, setSettingsOpen] = useState(false);\n  const [isServerSettingsOpen, setIsServerSettingsOpen] = useState(false);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [currentModal, setCurrentModal] = useState(\"\");\n  const [region, setRegion] = useState(\"US West\");\n  const [serversList, setServersList] = useState([]);\n  const [serverSettings, showServerSettings] = useState(false);\n  const [inviteModal, setInviteModal] = useState(false);\n  const [expires, setExpires] = useState(24);\n  const [showChannelModal, setShowChannelModal] = useState(false);\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [showPrivacyModal, setShowPrivacyModal] = useState(false);\n  const [showNotificationSettingsModal, setShowNotificationSettingsModal] = useState(false);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newChannel, setNewChannel] = useState(\"\");\n  const [triggerReload, setTriggerReload] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [currentDragItem, setCurrentDragItem] = useState(null);\n  const [chatrooms, setChatrooms] = useState([]);\n  const [activeChatroom, setActiveChatroom] = useState(\"\");\n  const [activeChatroomId, setActiveChatroomId] = useState(null);\n  const [isChangingRegion, setIsChangingRegion] = useState(false);\n  const [inviteEmail, setInviteEmail] = useState(\"\");\n  const [inviteCode, setInviteCode] = useState(\"\");\n  const [activeServerSetting, setActiveServerSetting] = useState(\"overview\");\n  const [activeUserSetting, setActiveUserSetting] = useState(\"myaccount\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [serverInvites, setServerInvites] = useState([]);\n  const [allowDirectMessages, setAllowDirectMessages] = useState(false);\n  const [friendsList, setFriendsList] = useState(null);\n  const [currentFriend, setCurrentFriend] = useState(null);\n\n  const ref = useRef();\n  useOnClickOutside(ref, () => setShowCategoryModal(false));\n\n  useEffect(() => {\n    if (friendsList === null && id !== null) {\n      props.findFriends({\n        userId: id\n      });\n    }\n\n    if (props.friendsList && props.findFriendsSuccess) {\n      setFriendsList(props.friendsList);\n      props.resetFriendValues();\n    }\n\n    if (props.friendsList && props.createFriendSuccess) {\n      setFriendsList(props.friendsList);\n      props.resetFriendValues();\n    }\n\n    if (props.friendsList && props.deleteFriendSuccess) {\n      setFriendsList(props.friendsList);\n      props.resetFriendValues();\n    }\n\n    if (props.findInvitesSuccess || props.findInvitesError) {\n      if (props.findInvitesSuccess) {\n        setServerInvites(props.inviteServersList);\n      }\n      props.resetInviteValues();\n      setActiveServerSetting(\"invites\");\n    }\n\n    if (props.verifySuccess) {\n      setModalOpen(false);\n      toast.dismiss();\n      toast.success('Success, you have joined the server!', { position: 'bottom-center' });\n      props.resetInviteValues();\n      props.getUpdatedUser({ userId: id });\n    }\n\n    if (props.verifyError) {\n      toast.dismiss();\n      toast.error('Error joining server!', { position: 'bottom-center' });\n      props.resetInviteValues();\n    }\n\n    if (props.serverUserList) {\n      setServerUserList(props.serverUserList);\n      const index = props.serverUserList.findIndex(x => x.username === username);\n      if (index > -1) {\n        if (props.serverUserList[index].type === 'admin' || props.serverUserList[index].type === 'owner') {\n          setIsAdmin(true);\n        } else if (props.serverUserList[index].type !== 'admin' || props.serverUserList[index].type !== 'owner') {\n          setIsAdmin(false);\n        }\n      }\n    }\n\n    if (props.chatroomError) {\n      toast.dismiss();\n      toast.error('Error, Error creating chatroom!', { position: 'bottom-center' });\n      props.resetChatroomValues();\n    }\n\n    if (props.inviteCode) {\n      setInviteModal(true);\n      setIsServerSettingsOpen(false);\n      setInviteCode(props.inviteCode);\n    }\n    if (props.inviteEmailSuccess) {\n      setInviteModal(false);\n      setIsServerSettingsOpen(false);\n      toast.dismiss();\n      toast.success('Success, Invite was sent successfully!', { position: 'bottom-center' });\n    }\n    if (props.inviteEmailError) {\n      toast.dismiss();\n      toast.error('Error, Invite could not be sent!', { position: 'bottom-center' });\n    }\n    if (props.chatroomList && props.chatroomSuccess) {\n      setChatrooms(props.chatroomList);\n      if (props.chatroomList.length > 0) {\n        setActiveChatroom(props.chatroomList[0].name);\n        setActiveChatroomId(props.chatroomList[0].id);\n      }\n      setShowChannelModal(false);\n      setNewChannel('');\n      props.resetChatroomValues();\n    }\n    if (props.categoryList) {\n      setCategories(props.categoryList);\n      setShowCategoryModal(false);\n    }\n    if(!props.user) {\n      props.currentUser();\n      window.addEventListener('keydown', detectEscape);\n    } else if(props.user) {\n      const { id, username, email, imageUrl, active, serversList } = props.user;\n      setId(id);\n      setUsername(username);\n      setEmail(email);\n      setImageUrl(imageUrl);\n      setActive(active);\n      setServersList(serversList);\n    }\n  }, [props, id, username, friendsList]);\n\n  const detectEscape = (event) => {\n    if (event.keyCode === 27) {\n      setSettingsOpen(false);\n      setIsServerSettingsOpen(false);\n      showServerSettings(false);\n      setActiveServerSetting(\"overview\");\n    }\n  }\n\n  if(props.logout) {\n    return <Redirect push to=\"/\" />;\n  }\n\n  const userLogout = () => {\n    props.userLogout({ id: id });\n  }\n\n  const deleteServer = () => {\n    // props.deleteServer({\n    //   serverId: serverId\n    // });\n  }\n\n  const toggleModal = (value) => {\n    setModalOpen(true);\n    setCurrentModal(value);\n  }\n\n  const getUpdatedServerList = (closeModal) => {\n    if (closeModal) {\n      setModalOpen(false);\n      toast.dismiss();\n      toast.success('Success, the server was created!', { position: 'bottom-center' });\n      props.getUpdatedUser({ userId: id });\n    } else {\n      toast.dismiss();\n      toast.error('There was an error creating the server!', { position: 'bottom-center' });\n    }\n  }\n\n  const setShowInviteModal = () => {\n    setInviteModal(!inviteModal);\n    showServerSettings(false);\n    setInviteCode(\"\");\n    props.resetInviteValues();\n  }\n\n  const createInstantInvite = () => {\n    props.inviteCreate({\n      expires: expires,\n      serverId: serverId\n    });\n  }\n\n  const createNewServerInvite = () => {\n    props.inviteEmailCreate({\n      inviteCode: \"\",\n      expires: expires,\n      serverId: serverId,\n      email: email\n    });\n  }\n\n  const displayChannelModal = () => {\n    setShowChannelModal(true);\n    showServerSettings(false);\n  }\n\n  const createNewChannel = () => {\n    props.chatroomCreate({\n      name: newChannel,\n      serverId: serverId,\n      order: categories.length,\n      visible: true\n    });\n  }\n\n  const displayCategoryModal = () => {\n    setShowCategoryModal(true);\n    showServerSettings(false);\n  }\n\n  const displayNotificationSettingsModal = () => {\n    setShowNotificationSettingsModal(!showNotificationSettingsModal);\n    showServerSettings(false);\n  }\n\n  const displayPrivacyModal = () => {\n    setShowPrivacyModal(!showPrivacyModal);\n    showServerSettings(false);\n  }\n\n  const createNewCategory = () => {\n    props.categoryCreate({\n      name: newCategory,\n      serverId: serverId,\n      order: categories.length,\n      visible: true\n    });\n    setNewCategory('');\n  }\n\n  const dragItem = (item, event) => {\n    if (!isAdmin) return false;\n    setCurrentDragItem(item);\n    event.dataTransfer.setData(\"text\", event.target.id);\n  }\n\n  const draggingOverItem = (event) => {\n    if (!isAdmin) return false;\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  const dropItem = (event) => {\n    if (!isAdmin) return false;\n    event.preventDefault();\n    const newChatrooms = chatrooms || [];\n    if (event.target.id !== currentDragItem.category && event.target.id) {\n      for (let i = 0; i < newChatrooms.length; i++) {\n        if (newChatrooms[i].categoryId === currentDragItem.categoryId && newChatrooms[i].name === currentDragItem.name) {\n          newChatrooms[i] = {\n            categoryId: +event.target.id.split('-')[0] === 0 ? null : +event.target.id.split('-')[0],\n            id: currentDragItem.id,\n            name: currentDragItem.name,\n            serverId: currentDragItem.serverId\n          }\n          props.chatroomUpdate({\n            chatroomId: currentDragItem.id,\n            categoryId: +event.target.id.split('-')[0] === 0 ? null : +event.target.id.split('-')[0]\n          });\n          break;\n        }\n      }\n      setChatrooms(newChatrooms);\n      setTriggerReload(!triggerReload);\n    }\n  }\n\n  const setItemVisibility = (group) => {\n    for (let i = 0; i < categories.length; i++) {\n      if (categories[i].name === group.name) {\n        categories[i].visible = !categories[i].visible;\n      }\n    }\n    setTriggerReload(!triggerReload);\n  }\n\n  const setServerProperties = (item) => {\n    setServer(item.name);\n    setServerName(item.name);\n    setServerId(item.serverId);\n    setServerImage(item.imageUrl);\n    setServerRegion(item.region);\n    setCurrentFriend(null);\n    props.findUserList({\n      serverId: item.serverId\n    });\n    props.categoryFindAll({\n      serverId: item.serverId\n    });\n    props.getChatrooms({\n      serverId: item.serverId\n    });\n  }\n\n  const setCurrentActiveChatroom = (item, event) => {\n    if (event) {\n      event.stopPropagation();\n    }\n    setActiveChatroom(item.name);\n    setActiveChatroomId(item.id);\n  }\n\n  const joinServer = (value) => {\n    props.inviteVerification({\n      code: value,\n      email: email\n    });\n  }\n\n  const getInvites = () => {\n    props.findInvites({\n      serverId: serverId\n    });\n  }\n\n  const privateMessageUser = (user) => {\n    setServer(\"\");\n    setCurrentFriend(user);\n    props.friendCreate({\n      userId: id,\n      friendId: user.userId,\n      username: username,\n      friendUsername: user.username,\n      imageUrl: user.imageUrl\n    });\n  }\n\n  const deleteFriend = (event, friend) => {\n    event.stopPropagation();\n    setCurrentFriend(null);\n    setServer(\"\");\n    props.friendDelete({\n      userId: id,\n      friendId: friend.friendId\n    });\n  }\n\n  const clickSetCurrentFriend = (event, friend) => {\n    event.stopPropagation();\n    setCurrentFriend(friend);\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <ToastMessage />\n      {isModalOpen || showCategoryModal || showChannelModal || showNotificationSettingsModal || showPrivacyModal || inviteModal ? <span className=\"contentBackground\"></span> : null}\n      <div className=\"sidebar\" onClick={() => { setCurrentFriend(null); }}>\n        <div className=\"sidebar-container\" onPointerOver={() => { setHover(\"Home\") }} onPointerOut={() => { setHover(\"\") }}>\n          {hover === \"Home\" && server !== \"\" ? <span className=\"sidebar-hover\"></span> : null}\n          {server === \"\" ? <span className=\"sidebar-select\"></span> : null}\n          <img className=\"sidebar-logo\" src={chatot} alt=\"chatter-icon-logo\" onClick={() => { setServer(\"\") }} />\n          {hover === \"Home\" ? <span className=\"tooltip\"><span>Home</span></span> : null}\n        </div>\n        <div className=\"sidebar-border\" />\n        {serversList && serversList.length > 0 ? serversList.map((item, index)  => {\n          return (\n            <div key={index} className=\"sidebar-container\" onPointerOver={() => { setHover(item.name) }} onPointerOut={() => { setHover(\"\") }}>\n              {hover === item.name && server !== item.name && server !== \"Home\" ? <span className=\"sidebar-hover\"></span> : null}\n              {server === item.name ? <span className=\"sidebar-select\"></span> : null}\n              <img className=\"sidebar-logo\" src={item.imageUrl ? item.imageUrl : chatot} alt=\"chatter-icon\" onClick={() => { setServerProperties(item); }} />\n              {hover === item.name ? <span className=\"tooltip\"><span>{item.name}</span></span> : null}\n            </div>\n          )\n        }) : null}\n      </div>\n      {server === \"\" ?\n        <div className=\"sidebarleft\">\n          <div className=\"sidebarleft-container\">\n            <input placeholder=\"Find or start a conversation\"></input>\n          </div>\n          <div className=\"sidebarleft-border\" />\n          <div className=\"sidebarleft-friendscontainer\">\n            <img className=\"sidebarleft-logo\" src={friends} alt=\"friends-icon\" />\n            <span className=\"sidebarleft-friends\">Friends</span>\n          </div>\n          <div className=\"sidebarleft-border\" />\n          <div className=\"sidebarleft-directmessages\">\n            <span>Private Messages</span>\n          </div>\n          <div className=\"sidebarleft-bordertwo\" />\n          <div className=\"sidebarleft-listfriends\">\n            {friendsList && friendsList.length ? friendsList.map((item, index) => {\n              if (item.activeFriend) {\n                return (\n                  <div key={index} className={currentFriend && item.username === currentFriend.username ? \"sidebarleft-currentfriend-active\" : \"sidebarleft-currentfriend\"} onClick={(event) => { clickSetCurrentFriend(event, item); }}>\n                    <img className=\"sidebarleft-currentfriend-image\" src={item.imageUrl ? item.imageUrl : chatot} alt=\"username-icon\" />\n                    <span className=\"sidebarleft-currentfriend-username\">{item.username}</span>\n                    <span className=\"sidebarleft-currentfriend-remove\" onClick={(event) => { deleteFriend(event, item); }}>&#10005;</span>\n                  </div>\n                );\n              } else {\n                return null;\n              }\n            }) : null}\n          </div>\n          <div className=\"userinfo\">\n            <div className=\"username\">\n              <img className=\"username-image\" src={imageUrl ? imageUrl : chatot} alt=\"username-icon\" />\n            </div>\n            {active ? <div className=\"userinfo-online\"></div> : null}\n            <span style={{ color: 'white' }}>{username}</span>\n            <img className=\"settings-image\" src={settings} alt=\"settings-icon\" onClick={() => { setSettingsOpen(!isSettingsOpen); }} />\n          </div>\n        </div> :\n        <div className=\"sidebarleft\">\n          <div className=\"sidebarleft-container\">\n            <p className=\"sidebarleft-container-header\">{server}</p>\n            {isAdmin ? <div className=\"sidebarleft-container-dropdown\" onClick={() => { showServerSettings(!serverSettings); }}>{!serverSettings ? <i className=\"channelarrow down\"></i> : <span className=\"cancel\">&#10005;</span>}</div> : null}\n            {serverSettings ?\n              <div className=\"serversettings-modal\">\n                <div className=\"serversettings-modal-section\" onClick={() => { setShowInviteModal(); }}>\n                  <img src={invite} alt=\"invite-people\" height={25} width={25} />\n                  <span>Invite People</span>\n                </div>\n                <div className=\"serversettings-modal-section\" onClick={() => { setIsServerSettingsOpen(!isServerSettingsOpen); }}>\n                  <img src={serversettings} alt=\"server-settings\" height={25} width={25} />\n                  <span>Server Settings</span>\n                </div>\n                <div className=\"serversettings-modal-section\" onClick={() => {\n                  displayChannelModal();\n                }}>\n                  <img src={createchannel} alt=\"server-settings\" height={25} width={25} />\n                  <span>Create Channel</span>\n                </div>\n                <div className=\"serversettings-modal-section\" onClick={() => { displayCategoryModal(); }}>\n                  <img src={category} alt=\"server-settings\" height={25} width={25} />\n                  <span>Create Category</span>\n                </div>\n                <div className=\"serversettings-modal-section\" onClick={() => { displayNotificationSettingsModal(); }}>\n                  <img src={notification} alt=\"server-settings\" height={25} width={25} />\n                  <span>Notification Settings</span>\n                </div>\n                <div className=\"serversettings-modal-section\" onClick={() => { displayPrivacyModal(); }}>\n                  <img src={privacylock} alt=\"server-settings\" height={25} width={25} />\n                  <span>Privacy Settings</span>\n                </div>\n              </div>\n            : null}\n          </div>\n\n          {inviteModal ?\n            <InviteModal\n              expires={expires}\n              inviteEmail={inviteEmail}\n              inviteCode={inviteCode}\n              setTimeExpires={(value) => { setExpires(value); }}\n              createNewInvite={() => { createNewServerInvite(); }}\n              setShowInviteModal={() => { setShowInviteModal(false); }}\n              createNewInstantInvite={() => { createInstantInvite(); }}\n              setCurrentInviteEmail={(value) => { setInviteEmail(value); }}\n            />\n          : null}\n\n          {showChannelModal ?\n            <ChannelModal\n              setNewChannel={(event) => { setNewChannel(event.target.value); }}\n              setShowChannelModal={() => { setShowChannelModal(false); }}\n              createNewChannel={() => { createNewChannel(); }}\n            />\n          : null}\n\n          {showCategoryModal ?\n            <CategoryModal\n              setNewCategory={(event) => { setNewCategory(event.target.value); }}\n              setShowCategoryModal={() => { setShowCategoryModal(false); }}\n              createNewCategory={() => { createNewCategory(); }}\n            />\n          : null}\n\n          {showPrivacyModal ?\n            <PrivacyModal\n              server={server}\n              allowDirectMessages={allowDirectMessages}\n              setAllowDirectMessages={() => { setAllowDirectMessages(true); }}\n              setShowPrivacyModal={() => { setShowPrivacyModal(false); }}\n            />\n          : null}\n\n          {showNotificationSettingsModal ?\n            <NotificationSettingsModal\n              server={server}\n              setShowNotificationSettingsModal={() => { setShowNotificationSettingsModal(false); }}\n            />\n          : null}\n\n          <div className=\"sidebarleft-mainchat\" style={{ marginTop: chatrooms && chatrooms.length ? '0.5rem' : '0rem' }}>\n            <div onDrop={(event) => { dropItem(event); }} onDragOver={(event) => { draggingOverItem(event); }} id={0 + \"-\" + server}>\n              {chatrooms && chatrooms.length > 0 ? chatrooms.filter(chatroom => chatroom.categoryId === null).map((item, index) => {\n                return (\n                  <div className={activeChatroom === item.name ? \"active\" : \"\"} key={index} id={0 + \"-\" + item.name} draggable=\"true\" onDragStart={(event) => { dragItem(item, event); }} onClick={() => { setCurrentActiveChatroom(item); }}>\n                    <img src={numbersign} alt=\"channel\" height={16} width={16} /><span>{item.name}</span>\n                  </div>\n                )\n              }) : null}\n            </div>\n\n            {categories && categories.length ? categories.map((group, categoryIndex) => {\n              const height = chatrooms.filter(chatroom => chatroom.categoryId === group.id).length;\n              const itemHeight = group.visible === true ? `${height * 2}rem` : '0rem';\n              return (\n                <div key={categoryIndex} style={{ marginBottom: itemHeight }}>\n                  <span\n                    className=\"sidebarleft-mainchat-dropdown\"\n                    onClick={() => { setItemVisibility(group); }}\n                  >\n                    {group.visible ? <i className=\"arrow down\"></i> : <i className=\"arrow right\"></i>}\n                    <span>{group.name}</span>\n                    {group.visible ?\n                    <div onDrop={(event) => { dropItem(event); }} onDragOver={(event) => { draggingOverItem(event); }} id={group.id + \"-\" + group.name}>\n                      {chatrooms && chatrooms.length > 0 ? chatrooms.filter(chatroom => chatroom.categoryId === group.id).map((item, index) => {\n                        return (\n                          <div className={activeChatroom === item.name ? \"active\" : \"inactive\"} id={item.categoryId + \"-\" + item.name} key={index} draggable=\"true\" onDragStart={(event) => { dragItem(item, event); }} onClick={(event) => { setCurrentActiveChatroom(item, event); }}>\n                            <img src={numbersign} alt=\"channel\" height={16} width={16} /><span>{item.name}</span>\n                          </div>\n                        );\n                      }) : null}\n                    </div> : null}\n                  </span>\n                </div>\n              );\n            }) : null}\n\n          </div>\n        </div>\n      }\n\n      {server !== \"\" && activeChatroom !== \"\" ?\n        <Chatroom\n          activeChatroom={activeChatroom}\n          activeChatroomId={activeChatroomId}\n          userId={id}\n          serverId={serverId}\n          username={username}\n          serverUserList={serverUserList}\n          privateMessageUser={(user) => { privateMessageUser(user) }}\n        />\n      : null}\n\n      {server === \"\" && currentFriend !== null ?\n        <ChatroomFriend\n          userId={id}\n          username={username}\n          friendId={currentFriend.friendId}\n          friendUsername={currentFriend.username}\n        />\n      : null}\n\n      {server === \"\" && currentFriend === null ?\n        <div className=\"mainarea\">\n          <div className=\"mainarea-topnav\">\n          </div>\n          <div className=\"mainarea-container\">\n            <div className=\"mainarea-container-addserver\">\n              <h1>Create</h1>\n              <p>Create a new server and invite other people to join!</p>\n              <button onClick={() => { toggleModal(\"create\") }}>Create a server</button>\n            </div>\n            <div className=\"mainarea-container-joinserver\">\n              <h1>Join</h1>\n              <p>Enter an secret invite code to join an existing server!</p>\n              <button onClick={() => { toggleModal(\"join\") }}>Join a server</button>\n            </div>\n          </div>\n        </div>\n      : null}\n\n      {isServerSettingsOpen ?\n        <div className=\"serversettings\">\n          {isChangingRegion ? <span className=\"contentBackground\"></span> : null}\n          <div className=\"serversettings-sidebar\">\n            <h1>Server Settings</h1>\n            <p className={activeServerSetting === \"overview\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-overview\"} onClick={() => { setActiveServerSetting(\"overview\"); }}>Overview</p>\n            <p className={activeServerSetting === \"moderation\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-moderation\"} onClick={() => { setActiveServerSetting(\"moderation\"); }}>Moderation</p>\n            <p className={activeServerSetting === \"activitylog\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-activitylog\"} onClick={() => { setActiveServerSetting(\"activitylog\"); }}>Activity Log</p>\n            <p className={activeServerSetting === \"roles\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-roles\"} onClick={() => { setActiveServerSetting(\"roles\"); }}>Roles</p>\n            <h1>User Management</h1>\n            <p className={activeServerSetting === \"members\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-members\"} onClick={() => { setActiveServerSetting(\"members\"); }}>Members</p>\n            <p className={activeServerSetting === \"invites\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-invites\"} onClick={() => { getInvites(); }}>Invites</p>\n            <p className={activeServerSetting === \"bans\" ? \"serversettings-sidebar-activeitem\" : \"serversettings-sidebar-bans\"} onClick={() => { setActiveServerSetting(\"bans\"); }}>Bans</p>\n            <p onClick={deleteServer}>Delete Server</p>\n          </div>\n          <div className=\"serversettings-servercontainer\">\n            {activeServerSetting === \"overview\" ?\n              <div className=\"serversettings-myserver\">\n                <h1>Server Overview</h1>\n                <div className=\"serversettings-myserver__container\">\n                  <div className=\"serversettings-myserver__container-image\">\n                    <img src={serverImage ? serverImage : chatot} alt=\"server-icon\" />\n                  </div>\n                  <div className=\"serversettings-myserver__container-info\">\n                    <div className=\"serversettings-myserver__container-info-server\">\n                      <span>Server Name</span><br/>\n                      <input onChange={(event) => setServerName(event.target.value)} value={serverName} />\n                    </div>\n                    <div className=\"serversettings-myserver__container-info-region\">\n                      <span>Server Region</span><br/>\n                      <div className=\"servermodalregion-select\">\n                        {serverRegion === \"US West\" || serverRegion === \"US Central\" || serverRegion === \"US East\" ? <img src={usregion} height={35} width={55} alt=\"server-region\" /> : null}\n                        {serverRegion === \"Central Europe\" || serverRegion === \"Western Europe\" ? <img src={europe} height={35} width={55} alt=\"server-region\" /> : null}\n                        {serverRegion === \"Russia\" ? <img src={russia} height={35} width={55} alt=\"server-region\" /> : null}\n                        <span className=\"servermodalregion-select-current\">{serverRegion}</span>\n                        <span className=\"servermodalregion-select-change\" onClick={() => { setIsChangingRegion(true); }}>Change</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            : null}\n\n            {activeServerSetting === \"members\" ?\n              <div className=\"serversettings-members\">\n                <h1>Server Members</h1>\n                <p className=\"serversettings-members-count\">{serverUserList.length} Members</p>\n                {serverUserList && serverUserList.length > 0 ? serverUserList.map((item, index)  => {\n                  return (\n                    <div key={index} className=\"serversettings-user\">\n                      <img className=\"serversettings-logo\" src={item.imageUrl ? item.imageUrl : chatot} alt=\"chatter-icon\" />\n                      <span>\n                        <p>{item.type}</p>\n                        <p>{item.username}</p>\n                      </span>\n                      <span className=\"serversettings-add\">\n                        <img src={add} alt=\"add-icon\" className=\"serversettings-user-add-image\" />\n                      </span>\n                    </div>\n                  )\n                }) : null}\n              </div>\n            : null}\n\n            {activeServerSetting === \"invites\" ?\n              <div className=\"serversettings-invites\">\n                <h1>Server Invites</h1>\n                <p className=\"serversettings-invites-count\">{serverInvites.length === 1 ? '1 Invite' : `${serverInvites.length} Invites`} </p>\n                {serverInvites && serverInvites.length > 0 ? serverInvites.map((item, index)  => {\n                  return (\n                    <div key={index} className=\"serversettings-invite\">\n                      <span>\n                        <p>Code: {item.code}</p>\n                        <p>Created: <Moment format=\"MM/DD/YYYY\">{item.createdAt}</Moment> at <Moment format=\"LT\">{item.createdAt}</Moment></p>\n                        <p>Expiration: {item.expires} hours</p>\n                      </span>\n                      <span className=\"serversettings-add\">\n                        <img src={add} alt=\"add-icon\" className=\"serversettings-invite-add-image\" />\n                      </span>\n                    </div>\n                  )\n                }) : null}\n              </div>\n            : null}\n\n            <div className=\"serversettings-escape\" onClick={() => { setIsServerSettingsOpen(!isServerSettingsOpen); showServerSettings(false); setActiveServerSetting(\"overview\"); }}>\n              <span>&#215;</span>\n              <p>ESC</p>\n            </div>\n          </div>\n\n          {isChangingRegion ?\n            <RegionModal\n              setIsChangingRegion={() => { setIsChangingRegion(false); }}\n              setServerRegion={(region) => { setServerRegion(region); setIsChangingRegion(false); }}\n            />\n          : null}\n\n        </div>\n      : null}\n\n      {isSettingsOpen ?\n        <div className=\"usersettings\">\n          <div className=\"usersettings-sidebar\">\n            <h1>User Settings</h1>\n            <p className={activeUserSetting === \"myaccount\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-myaccount\"} onClick={() => { setActiveUserSetting(\"myaccount\"); }}>My Account</p>\n            <p className={activeUserSetting === \"privacy\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-privacy\"} onClick={() => { setActiveUserSetting(\"privacy\"); }}>Privacy &amp; Safety</p>\n            <p className={activeUserSetting === \"connections\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-connections\"} onClick={() => { setActiveUserSetting(\"connections\"); }}>Connections</p>\n            <p className={activeUserSetting === \"billing\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-billing\"} onClick={() => { setActiveUserSetting(\"billing\"); }}>Billing</p>\n            <h1>App Settings</h1>\n            <p className={activeUserSetting === \"voice\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-voice\"} onClick={() => { setActiveUserSetting(\"voice\"); }}>Voice &amp; Video</p>\n            <p className={activeUserSetting === \"notifications\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-notifications\"} onClick={() => { setActiveUserSetting(\"notifications\"); }}>Notifications</p>\n            <p className={activeUserSetting === \"appearance\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-appearance\"} onClick={() => { setActiveUserSetting(\"appearance\"); }}>Appearance</p>\n            <p className={activeUserSetting === \"language\" ? \"usersettings-sidebar-activeitem\" : \"usersettings-sidebar-language\"} onClick={() => { setActiveUserSetting(\"language\"); }}>Language</p>\n            <p onClick={userLogout}>Logout</p>\n          </div>\n\n          {activeUserSetting === \"myaccount\" ?\n            <div className=\"usersettings-accountcontainer\">\n              <div className=\"usersettings-myaccount\">\n                <h1>My Account</h1>\n                <div className=\"usersettings-myaccount__container\">\n                  <div className=\"usersettings-myaccount__container-image\">\n                    <img src={imageUrl ? imageUrl : chatot} alt=\"username-icon\" />\n                  </div>\n                  <div className=\"usersettings-myaccount__container-info\">\n                    <div className=\"usersettings-myaccount__container-info-username\">\n                      <span>Username</span><br/>\n                      <span>{username}</span>\n                    </div>\n                    <div className=\"usersettings-myaccount__container-info-email\">\n                      <span>Email Address</span><br/>\n                      <span>{email}</span>\n                    </div>\n                  </div>\n                  <div className=\"usersettings-myaccount__container-edit\">\n                    <span>Edit</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"usersettings-authentication\">\n                <h1>Two-Factor Authentication</h1>\n                <p>Protect your account with an extra layer of security. Once configured you'll be required to enter your password and an authentication code from your mobile device to login.</p>\n                <div className=\"usersettings-authentication-enable\">\n                  <span>Enable</span>\n                </div>\n              </div>\n            </div>\n          : null}\n\n          <div className=\"usersettings-escape\" onClick={() => { setSettingsOpen(!isSettingsOpen); }}>\n            <span>&#215;</span>\n            <p>ESC</p>\n          </div>\n        </div>\n      : null}\n\n      {isModalOpen && currentModal === \"create\" ?\n        <CreateServer\n          id={id}\n          region={region}\n          setRegion={(region) => { setRegion(region) }}\n          setModalOpen={() => { setModalOpen(!isModalOpen) }}\n          getUpdatedServerList={(closeModal) => { getUpdatedServerList(closeModal) }}\n        />\n      : null}\n\n      {isModalOpen && currentModal === \"join\" ?\n        <JoinServer\n          joinServer={(value) => { joinServer(value); }}\n          setModalOpen={() => { setModalOpen(!isModalOpen) }}\n        />\n      : null}\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ usersReducer, serversReducer, categoriesReducer, chatroomsReducer, invitesReducer, friendsReducer }) => {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    logout: usersReducer.logout,\n    user: usersReducer.user,\n    users: usersReducer.users,\n    serversList: serversReducer.serversList,\n    serverUserList: serversReducer.serverUserList,\n    categoryList: categoriesReducer.categoryList,\n    chatroomList: chatroomsReducer.chatroomList,\n    chatroomSuccess: chatroomsReducer.success,\n    chatroomError: chatroomsReducer.error,\n    inviteEmailError: invitesReducer.inviteEmailError,\n    inviteEmailSuccess: invitesReducer.inviteEmailSuccess,\n    inviteCode: invitesReducer.inviteCode,\n    verifySuccess: invitesReducer.verifySuccess,\n    verifyError: invitesReducer.verifyError,\n    inviteServersList: invitesReducer.inviteServersList,\n    findInvitesSuccess: invitesReducer.findInvitesSuccess,\n    findInvitesError: invitesReducer.findInvitesError,\n    createFriendSuccess: friendsReducer.createFriendSuccess,\n    deleteFriendSuccess: friendsReducer.deleteFriendSuccess,\n    findFriendsSuccess: friendsReducer.findFriendsSuccess,\n    friendsList: friendsReducer.friendsList\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Dashboard);"]},"metadata":{},"sourceType":"module"}