{"ast":null,"code":"var _jsxFileName = \"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/components/Chatroom/Chatroom.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from \"socket.io-client\";\nimport MicrophoneStream from 'microphone-stream';\nimport lamejs from 'lamejs';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Chatroom.css';\nimport chatot from '../../assets/images/chatot.png';\nimport numbersign from '../../assets/images/numbersign.png';\nimport voice from '../../assets/images/voice.png';\nimport editwhite from '../../assets/images/editwhite.png';\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.useOnClickOutside = (ref, handler) => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    };\n\n    this.recordAudioInput = async stream => {\n      // let chunks = [];\n      // const recorder = new MediaRecorder(stream, { type: 'audio/webm' });\n      // recorder.start();\n      // setInterval(() => {\n      //   if (this.state.audioStream !== null) {\n      //     recorder.stop();\n      //     recorder.start();\n      //   }\n      // }, 5000);\n      // recorder.addEventListener('dataavailable', event => {\n      //   if (typeof event.data === 'undefined') return;\n      //   if (event.data.size === 0) return;\n      //   chunks.push(event.data);\n      // });\n      // recorder.addEventListener('stop', () => {\n      //   console.log(chunks);\n      //   debugger;\n      //   const recording = new Blob(chunks, {\n      //     type: 'audio/webm'\n      //   });\n      //   this.socket.emit('SEND_VOICE', {\n      //     recording: recording,\n      //     socketId: this.state.socketId,\n      //     chatroomId: this.state.chatroomId,\n      //     room: `${ROOT_URL}/chatroom/${this.state.serverId}/${this.state.chatroomId}`\n      //   });\n      //   chunks = [];\n      // });\n      // let chunks = [];\n      // if (stream) {\n      //   let micStream = new MicrophoneStream();\n      //   micStream.setStream(stream);\n      //   micStream.on('data', (chunk) => {\n      //     if (chunks.length > 80) {\n      //       var raw = MicrophoneStream.toRaw(chunk);\n      //       let audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n      //       let frameCount = audioCtx.sampleRate * 2.0;\n      //       // Get an AudioBufferSourceNode.\n      //       // This is the AudioNode to use when we want to play an AudioBuffer\n      //       var source = audioCtx.createBufferSource();\n      //       // set the buffer in the AudioBufferSourceNode\n      //       source.buffer = myArrayBuffer;\n      //       // connect the AudioBufferSourceNode to the\n      //       // destination so we can hear the sound\n      //       source.connect(audioCtx.destination);\n      //       // start the source playing\n      //       source.start();\n      let chunks = [];\n\n      if (stream) {\n        let micStream = new MicrophoneStream();\n        micStream.setStream(stream);\n        micStream.on('data', chunk => {\n          if (chunks.length > 80) {\n            // const recording = new Blob(chunks, {\n            //   type: 'audio/webm'\n            console.log(chunks);\n            debugger; // });\n\n            var raw = MicrophoneStream.toRaw(chunk);\n            console.log(raw);\n            debugger;\n            this.socket.emit('SEND_VOICE', chunks);\n            chunks = [];\n          } else {\n            // console.log(chunk);\n            // debugger;\n            chunks.push(chunk);\n          }\n        });\n      } // if (stream) {\n      // let audio = document.getElementById(\"audio\");\n      // window.stream = stream; // make variable available to browser console\n      // audio.srcObject = stream;\n      // audio.autoplay = true;\n      // } else {\n      // let audio = document.getElementById(\"audio\");\n      // audio.srcObject = null;\n      // audio.autoplay = false;\n      // audio.stop = true;\n      // }\n\n    };\n\n    this.sendMessage = event => {\n      if (event) {\n        event.preventDefault();\n        const data = {\n          username: this.props.username,\n          message: this.state.message,\n          userId: this.props.userId,\n          chatroomId: this.state.chatroomId,\n          room: this.state.room\n        };\n        this.socket.emit('CHATROOM_MESSAGE', data);\n        this.setState({\n          message: \"\"\n        });\n      }\n    };\n\n    this.sideContextMenu = (event, item) => {\n      event.preventDefault();\n      this.setState({\n        sideRightClickedUser: item,\n        sideUserModalOpen: true\n      });\n    };\n\n    this.contextMenu = (event, item) => {\n      event.preventDefault();\n      this.setState({\n        rightClickedUser: item,\n        userModalOpen: true,\n        messageMenu: false,\n        editingMessage: null\n      });\n    };\n\n    this.privateMessageUser = () => {\n      this.setState({\n        messages: []\n      });\n      this.props.privateMessageUser(this.state.rightClickedUser);\n    };\n\n    this.sidePrivateMessageUser = () => {\n      this.setState({\n        messages: []\n      });\n      this.props.privateMessageUser(this.state.sideRightClickedUser);\n    };\n\n    this.openMessageMenu = item => {\n      this.setState({\n        messageMenu: true,\n        editMessage: item\n      });\n    };\n\n    this.deleteChatroomMessage = () => {\n      const data = {\n        username: this.props.username,\n        message: this.state.message,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        messageId: this.state.editMessage.id,\n        room: this.state.room\n      };\n      this.socket.emit('DELETE_CHATROOM_MESSAGE', data);\n    };\n\n    this.editChatroomMessage = () => {\n      this.setState({\n        editingMessage: this.state.editMessage,\n        newMessage: this.state.editMessage.message,\n        hover: \"\"\n      }, () => {\n        this.setState({\n          editMessage: null,\n          messageMenu: false\n        });\n      });\n    };\n\n    this.detectEscape = event => {\n      if (event.keyCode === 27 && !this.state.messageMenu) {\n        this.setState({\n          editingMessage: this.state.editMessage,\n          newMessage: \"\"\n        });\n      }\n    };\n\n    this.sendEditedMessage = event => {\n      event.preventDefault();\n      const data = {\n        username: this.props.username,\n        message: this.state.newMessage,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        messageId: this.state.editingMessage.id,\n        room: this.state.room\n      };\n      this.socket.emit('EDIT_CHATROOM_MESSAGE', data);\n    };\n\n    this.kickUser = user => {\n      const data = {\n        serverId: this.state.serverId,\n        chatroomId: this.state.chatroomId,\n        type: 'user',\n        userId: user.userId,\n        room: this.state.room\n      };\n      this.socket.emit('KICK_SERVER_USER', data);\n    };\n\n    this.banUser = user => {\n      const data = {\n        serverId: this.state.serverId,\n        chatroomId: this.state.chatroomId,\n        type: 'user',\n        userId: user.userId,\n        room: this.state.room\n      };\n      this.socket.emit('BAN_SERVER_USER', data);\n    };\n\n    this.ref = React.createRef();\n    this.useOnClickOutside(this.ref, () => this.setState({\n      messageMenu: false,\n      userModalOpen: false,\n      sideUserModalOpen: false\n    }));\n    this.state = {\n      id: \"\",\n      username: \"\",\n      active: false,\n      type: \"\",\n      imageUrl: \"\",\n      message: \"\",\n      messages: [],\n      users: [],\n      clickedUsername: \"\",\n      clickedType: \"\",\n      privateMessages: [],\n      personalMessages: [],\n      userDetails: false,\n      socketId: \"\",\n      currentSocket: \"\",\n      rightClickedUser: {},\n      sideRightClickedUser: {},\n      sideUserModalOpen: false,\n      userModalOpen: false,\n      namespace: null,\n      room: null,\n      serverId: null,\n      previousRoom: null,\n      currentChatroom: null,\n      editMessage: null,\n      messageMenu: false,\n      editingMessage: null,\n      newMessage: \"\",\n      hover: \"\",\n      serverUserList: [],\n      isLoading: false,\n      chunks: []\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener('keydown', this.detectEscape);\n    this.props.getUsers();\n    this.socket = io(ROOT_URL);\n    this.socket.on('connect', () => {\n      this.setState({\n        serverUserList: this.props.serverUserList,\n        socketId: this.socket.id,\n        namespace: \"\".concat(ROOT_URL, \"/\").concat(this.props.serverId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        serverId: this.props.serverId,\n        currentChatroom: this.props.activeChatroom,\n        chatroomId: this.props.activeChatroomId,\n        username: this.props.username\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.socket.id,\n        chatroomId: this.props.activeChatroomId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId)\n      });\n      this.socket.emit('GET_SERVER_LIST', {\n        socketId: this.socket.id,\n        serverId: this.props.serverId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId)\n      });\n    });\n    this.socket.on('RECEIVE_CHATROOM_MESSAGES', data => {\n      this.setState({\n        messageMenu: false,\n        editMessage: null,\n        editingMessage: null,\n        newMessage: \"\"\n      }); // scroll to latest message after rendering messages in firefox\n\n      if (navigator.userAgent.search(\"Firefox\") > -1 || navigator.userAgent.search(\"Edge\") > -1) {\n        this.setState({\n          messages: data.reverse()\n        }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0 || navigator.userAgent.search(\"Edge\") < 0) {\n        this.setState({\n          messages: data\n        });\n      }\n    });\n    this.socket.on('RECEIVE_SERVER_LIST', data => {\n      const index = data.findIndex(x => x.username === this.state.username);\n\n      if (index < 0) {\n        this.props.leaveServer();\n      } else if (index > -1) {\n        this.props.refreshServerUsers();\n        this.setState({\n          userModalOpen: false,\n          sideUserModalOpen: false,\n          rightClickedUser: {},\n          sideRightClickedUser: {},\n          serverUserList: data\n        });\n      }\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.username) {\n      this.setState({\n        username: nextProps.username\n      });\n    }\n\n    if (nextProps.serverUserList) {\n      this.setState({\n        serverUserList: nextProps.serverUserList\n      });\n    }\n\n    if (nextProps.activeChatroomId !== this.state.chatroomId && this.state.chatroomId !== undefined) {\n      this.setState({\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(this.state.chatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(nextProps.activeChatroomId),\n        serverId: nextProps.serverId,\n        currentChatroom: nextProps.activeChatroom,\n        chatroomId: nextProps.activeChatroomId\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.state.socketId,\n        chatroomId: nextProps.activeChatroomId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(this.state.chatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(nextProps.activeChatroomId)\n      });\n    }\n\n    if (nextProps.users && nextProps.users.length) {\n      const userList = [];\n\n      for (let i = 0; i < nextProps.users.length; i++) {\n        userList.push(nextProps.users[i]);\n      }\n\n      this.setState({\n        users: userList\n      });\n    }\n\n    if (nextProps.activeChatroomType === \"voice\" && nextProps.audioStream) {\n      this.setState({\n        audioStream: nextProps.audioStream\n      });\n      this.recordAudioInput(nextProps.audioStream);\n    }\n\n    if (nextProps.activeChatroomType !== \"voice\") {\n      this.setState({\n        audioStream: null\n      }); // this.recordAudioInput(null);\n    }\n\n    this.socket.on('RECEIVE_VOICE', arrayBuffer => {\n      let blob = new Blob([arrayBuffer], {\n        'type': 'audio/webm'\n      }); // let channels = 1;\n      // let bufferRate = 44100;\n      // let kbps = 128;\n      // let mp3encoder = new lamejs.Mp3Encoder(channels, bufferRate, kbps);\n      // let mp3Data = [];\n      // let voiceData = new Int16Array(arrayBuffer);\n      // let voiceBlockSize = 1152;\n      // for(let i = 0; i < arrayBuffer.length; i++) {\n      //   // let voiceChunk = arrayBuffer.subarray(i, i + voiceBlockSize);\n      //   let mp3buffer = mp3encoder.encodeBuffer(arrayBuffer);\n      //   if (mp3buffer.length > 0) {\n      //     mp3Data.push(mp3buffer);\n      //   }\n      // }\n      // let blob = new Blob(mp3Data, { 'type' : 'audio/mp3' });\n      // mp3Data = [];\n      // console.log(blob);\n      // debugger;\n\n      let audio = document.getElementById('audio');\n      audio.src = window.URL.createObjectURL(blob);\n      audio.play(); // console.log(document.getElementById('audio'));\n      // debugger;\n      // audio.play();\n    });\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('LEAVE_CHATROOMS', {\n      room: this.state.room\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chatroom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      id: \"audio\",\n      style: {\n        \"display\": \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"chatarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chatarea-topbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.activeChatroomType === \"text\" ? numbersign : voice,\n      alt: \"channel\",\n      height: 16,\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, this.props.activeChatroom)), React.createElement(\"div\", {\n      id: \"chatareamessages\",\n      className: \"chatarea-messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n      const moderate = this.state.serverUserList.length > 0 && this.state.serverUserList.some(serverItem => serverItem['username'] !== this.state.username && serverItem['username'] === item.username && serverItem['type'] !== 'owner' && serverItem['type'] !== 'admin');\n      return React.createElement(\"div\", {\n        id: \"message\" + index,\n        key: index,\n        onMouseEnter: () => {\n          this.setState({\n            hover: this.state.editingMessage || this.state.messageMenu || this.props.userId !== item.userId ? \"\" : \"message\" + index\n          });\n        },\n        onMouseLeave: () => {\n          this.setState({\n            hover: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chatarea-messages-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"chatarea-messages-user\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.contextMenu(event, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, item.username), React.createElement(Moment, {\n        format: \"MM/DD/YYYY\",\n        date: item.updatedAt,\n        className: \"chatarea-messages-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }), this.state.hover === \"message\" + index ? React.createElement(\"span\", {\n        className: \"chatarea-messages-menu\",\n        onClick: () => {\n          this.openMessageMenu(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: editwhite,\n        height: 15,\n        width: 15,\n        alt: \"edit message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      })) : null, this.state.messageMenu && this.state.editMessage.id === item.id ? React.createElement(\"div\", {\n        className: \"chatarea-messages-editmenu\",\n        ref: this.ref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            editMessage: null,\n            messageMenu: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.editChatroomMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.deleteChatroomMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, \"Delete\")) : null, this.state.userModalOpen && this.state.rightClickedUser.id === item.id ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-usermodalmod\" : \"chatarea-messages-usermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            userModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.privateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-usermodalmod-privatemessage\" : \"chatarea-messages-usermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(item);\n        },\n        className: \"chatarea-messages-usermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, \"Kick \", item.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(item);\n        },\n        className: \"chatarea-messages-usermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, \"Ban \", item.username) : null) : null), this.state.editingMessage !== null && this.state.editingMessage.id === item.id ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"chatarea-messages-editmessage\",\n        onChange: event => {\n          this.setState({\n            newMessage: event.target.value\n          });\n        },\n        value: this.state.newMessage,\n        onKeyDown: event => {\n          event.keyCode === 13 && event.shiftKey === false ? this.sendEditedMessage(event) : this.sendMessage(null);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"chatarea-messages-editmessage-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, \"escape to cancel \\u2022 enter to save\")) : React.createElement(\"p\", {\n        className: \"chatarea-messages-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, item.message));\n    }) : null), React.createElement(\"div\", {\n      className: \"chatarea-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Send a message!\",\n      type: \"text\",\n      onChange: event => {\n        this.setState({\n          message: event.target.value\n        });\n      },\n      value: this.state.message,\n      onKeyDown: event => {\n        event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"sidebarright\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebarright-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Filter users in server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sidebarright-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, \"Room Owners\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'owner' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, user.type === 'owner' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      })) : null, user.type === 'owner' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }) : null, user.type === 'owner' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }) : null, user.type === 'owner' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'owner' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, \"Send Message\")) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'owner') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, \"Administrators\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'admin' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, user.type === 'admin' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      })) : null, user.type === 'admin' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }) : null, user.type === 'admin' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }) : null, user.type === 'admin' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'admin' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, \"Send Message\")) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'admin') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, \"Moderators\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      const moderate = user.username !== this.state.username;\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'moderator' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, user.type === 'moderator' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      })) : null, user.type === 'moderator' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }) : null, user.type === 'moderator' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }) : null, user.type === 'moderator' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'moderator' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, \"Kick \", user.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }, \"Ban \", user.username) : null) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'moderator') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }, \"Voice\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      const moderate = user.username !== this.state.username;\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'voice' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }, user.type === 'voice' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      })) : null, user.type === 'voice' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }) : null, user.type === 'voice' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }) : null, user.type === 'voice' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'voice' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, \"Kick \", user.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, \"Ban \", user.username) : null) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'voice') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, \"Users\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      const moderate = user.username !== this.state.username;\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'user' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }, user.type === 'user' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      })) : null, user.type === 'user' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }) : null, user.type === 'user' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }) : null, user.type === 'user' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'user' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, \"Kick \", user.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, \"Ban \", user.username) : null) : null) : null);\n    }) : null));\n  }\n\n}\n\nfunction mapStateToProps({\n  usersReducer\n}) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Chatroom);","map":{"version":3,"sources":["/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/components/Chatroom/Chatroom.js"],"names":["React","Component","connect","actions","ROOT_URL","io","MicrophoneStream","lamejs","Moment","chatot","numbersign","voice","editwhite","Chatroom","constructor","props","useOnClickOutside","ref","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","recordAudioInput","stream","chunks","micStream","setStream","on","chunk","length","console","log","raw","toRaw","socket","emit","push","sendMessage","preventDefault","data","username","message","state","userId","chatroomId","room","setState","sideContextMenu","item","sideRightClickedUser","sideUserModalOpen","contextMenu","rightClickedUser","userModalOpen","messageMenu","editingMessage","privateMessageUser","messages","sidePrivateMessageUser","openMessageMenu","editMessage","deleteChatroomMessage","messageId","id","editChatroomMessage","newMessage","hover","detectEscape","keyCode","sendEditedMessage","kickUser","user","serverId","type","banUser","createRef","active","imageUrl","users","clickedUsername","clickedType","privateMessages","personalMessages","userDetails","socketId","currentSocket","namespace","previousRoom","currentChatroom","serverUserList","isLoading","componentDidMount","window","getUsers","activeChatroomId","activeChatroom","navigator","userAgent","search","reverse","element","getElementById","scrollIntoView","index","findIndex","x","leaveServer","refreshServerUsers","componentWillReceiveProps","nextProps","undefined","userList","i","activeChatroomType","audioStream","arrayBuffer","blob","Blob","audio","src","URL","createObjectURL","play","componentWillUnmount","render","map","moderate","some","serverItem","handleClick","updatedAt","value","shiftKey","mapStateToProps","usersReducer","error","success"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,iBAAP;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;;AAEA,MAAMC,QAAN,SAAuBZ,SAAvB,CAAiC;AAC/Ba,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyCnBC,iBAzCmB,GAyCC,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACpC,YAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB;AACA,YAAI,CAACH,GAAG,CAACI,OAAL,IAAgBJ,GAAG,CAACI,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtD;AACD;;AAEDL,QAAAA,OAAO,CAACE,KAAD,CAAP;AACD,OAPD;;AASAI,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,QAAvC;AACAK,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,EAAwCN,QAAxC;AAEA,aAAO,MAAM;AACXK,QAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,QAA1C;AACAK,QAAAA,QAAQ,CAACE,mBAAT,CAA6B,YAA7B,EAA2CP,QAA3C;AACD,OAHD;AAID,KA1DkB;;AAAA,SAgMnBQ,gBAhMmB,GAgMA,MAAMC,MAAN,IAAiB;AAClC;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAKA,UAAIC,MAAM,GAAG,EAAb;;AACA,UAAID,MAAJ,EAAY;AACV,YAAIE,SAAS,GAAG,IAAIxB,gBAAJ,EAAhB;AACAwB,QAAAA,SAAS,CAACC,SAAV,CAAoBH,MAApB;AAEAE,QAAAA,SAAS,CAACE,EAAV,CAAa,MAAb,EAAsBC,KAAD,IAAW;AAC9B,cAAIJ,MAAM,CAACK,MAAP,GAAgB,EAApB,EAAwB;AACtB;AACA;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,qBAJsB,CAKtB;;AACA,gBAAIQ,GAAG,GAAG/B,gBAAgB,CAACgC,KAAjB,CAAuBL,KAAvB,CAAV;AACAE,YAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA;AACA,iBAAKE,MAAL,CAAYC,IAAZ,CAAiB,YAAjB,EAA+BX,MAA/B;AACAA,YAAAA,MAAM,GAAG,EAAT;AACD,WAXD,MAWO;AACL;AACA;AACAA,YAAAA,MAAM,CAACY,IAAP,CAAYR,KAAZ;AACD;AACF,SAjBD;AAkBD,OArFiC,CAyFlC;AACE;AACA;AACA;AACA;AACF;AACE;AACA;AACA;AACA;AACF;;AACD,KApSkB;;AAAA,SAsSnBS,WAtSmB,GAsSJtB,KAAD,IAAW;AACvB,UAAIA,KAAJ,EAAW;AACTA,QAAAA,KAAK,CAACuB,cAAN;AACA,cAAMC,IAAI,GAAG;AACXC,UAAAA,QAAQ,EAAE,KAAK9B,KAAL,CAAW8B,QADV;AAEXC,UAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAFT;AAGXE,UAAAA,MAAM,EAAE,KAAKjC,KAAL,CAAWiC,MAHR;AAIXC,UAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE,UAJZ;AAKXC,UAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AALN,SAAb;AAOA,aAAKX,MAAL,CAAYC,IAAZ,CAAiB,kBAAjB,EAAqCI,IAArC;AACA,aAAKO,QAAL,CAAc;AAAEL,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD;AACF,KAnTkB;;AAAA,SAqTnBM,eArTmB,GAqTD,CAAChC,KAAD,EAAQiC,IAAR,KAAiB;AACjCjC,MAAAA,KAAK,CAACuB,cAAN;AACA,WAAKQ,QAAL,CAAc;AAAEG,QAAAA,oBAAoB,EAAED,IAAxB;AAA8BE,QAAAA,iBAAiB,EAAE;AAAjD,OAAd;AACD,KAxTkB;;AAAA,SA0TnBC,WA1TmB,GA0TL,CAACpC,KAAD,EAAQiC,IAAR,KAAiB;AAC7BjC,MAAAA,KAAK,CAACuB,cAAN;AACA,WAAKQ,QAAL,CAAc;AAAEM,QAAAA,gBAAgB,EAAEJ,IAApB;AAA0BK,QAAAA,aAAa,EAAE,IAAzC;AAA+CC,QAAAA,WAAW,EAAE,KAA5D;AAAmEC,QAAAA,cAAc,EAAE;AAAnF,OAAd;AACD,KA7TkB;;AAAA,SA+TnBC,kBA/TmB,GA+TE,MAAM;AACzB,WAAKV,QAAL,CAAc;AAAEW,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACA,WAAK/C,KAAL,CAAW8C,kBAAX,CAA8B,KAAKd,KAAL,CAAWU,gBAAzC;AACD,KAlUkB;;AAAA,SAoUnBM,sBApUmB,GAoUM,MAAM;AAC7B,WAAKZ,QAAL,CAAc;AAAEW,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACA,WAAK/C,KAAL,CAAW8C,kBAAX,CAA8B,KAAKd,KAAL,CAAWO,oBAAzC;AACD,KAvUkB;;AAAA,SAyUnBU,eAzUmB,GAyUAX,IAAD,IAAU;AAC1B,WAAKF,QAAL,CAAc;AAAEQ,QAAAA,WAAW,EAAE,IAAf;AAAqBM,QAAAA,WAAW,EAAEZ;AAAlC,OAAd;AACD,KA3UkB;;AAAA,SA6UnBa,qBA7UmB,GA6UK,MAAM;AAC5B,YAAMtB,IAAI,GAAG;AACXC,QAAAA,QAAQ,EAAE,KAAK9B,KAAL,CAAW8B,QADV;AAEXC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAFT;AAGXE,QAAAA,MAAM,EAAE,KAAKjC,KAAL,CAAWiC,MAHR;AAIXC,QAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE,UAJZ;AAKXkB,QAAAA,SAAS,EAAE,KAAKpB,KAAL,CAAWkB,WAAX,CAAuBG,EALvB;AAMXlB,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AANN,OAAb;AAQA,WAAKX,MAAL,CAAYC,IAAZ,CAAiB,yBAAjB,EAA4CI,IAA5C;AACD,KAvVkB;;AAAA,SAyVnByB,mBAzVmB,GAyVG,MAAM;AAC1B,WAAKlB,QAAL,CAAc;AAAES,QAAAA,cAAc,EAAE,KAAKb,KAAL,CAAWkB,WAA7B;AAA0CK,QAAAA,UAAU,EAAE,KAAKvB,KAAL,CAAWkB,WAAX,CAAuBnB,OAA7E;AAAsFyB,QAAAA,KAAK,EAAE;AAA7F,OAAd,EAAiH,MAAM;AACrH,aAAKpB,QAAL,CAAc;AAAEc,UAAAA,WAAW,EAAE,IAAf;AAAqBN,UAAAA,WAAW,EAAE;AAAlC,SAAd;AACD,OAFD;AAGD,KA7VkB;;AAAA,SA+VnBa,YA/VmB,GA+VHpD,KAAD,IAAW;AACxB,UAAIA,KAAK,CAACqD,OAAN,KAAkB,EAAlB,IAAwB,CAAC,KAAK1B,KAAL,CAAWY,WAAxC,EAAqD;AACnD,aAAKR,QAAL,CAAc;AAAES,UAAAA,cAAc,EAAE,KAAKb,KAAL,CAAWkB,WAA7B;AAA0CK,UAAAA,UAAU,EAAE;AAAtD,SAAd;AACD;AACF,KAnWkB;;AAAA,SAqWnBI,iBArWmB,GAqWEtD,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACuB,cAAN;AACA,YAAMC,IAAI,GAAG;AACXC,QAAAA,QAAQ,EAAE,KAAK9B,KAAL,CAAW8B,QADV;AAEXC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWuB,UAFT;AAGXtB,QAAAA,MAAM,EAAE,KAAKjC,KAAL,CAAWiC,MAHR;AAIXC,QAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE,UAJZ;AAKXkB,QAAAA,SAAS,EAAE,KAAKpB,KAAL,CAAWa,cAAX,CAA0BQ,EAL1B;AAMXlB,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AANN,OAAb;AAQA,WAAKX,MAAL,CAAYC,IAAZ,CAAiB,uBAAjB,EAA0CI,IAA1C;AACD,KAhXkB;;AAAA,SAkXnB+B,QAlXmB,GAkXPC,IAAD,IAAU;AACnB,YAAMhC,IAAI,GAAG;AACXiC,QAAAA,QAAQ,EAAE,KAAK9B,KAAL,CAAW8B,QADV;AAEX5B,QAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE,UAFZ;AAGX6B,QAAAA,IAAI,EAAE,MAHK;AAIX9B,QAAAA,MAAM,EAAE4B,IAAI,CAAC5B,MAJF;AAKXE,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AALN,OAAb;AAOA,WAAKX,MAAL,CAAYC,IAAZ,CAAiB,kBAAjB,EAAqCI,IAArC;AACD,KA3XkB;;AAAA,SA6XnBmC,OA7XmB,GA6XRH,IAAD,IAAU;AAClB,YAAMhC,IAAI,GAAG;AACXiC,QAAAA,QAAQ,EAAE,KAAK9B,KAAL,CAAW8B,QADV;AAEX5B,QAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE,UAFZ;AAGX6B,QAAAA,IAAI,EAAE,MAHK;AAIX9B,QAAAA,MAAM,EAAE4B,IAAI,CAAC5B,MAJF;AAKXE,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AALN,OAAb;AAOA,WAAKX,MAAL,CAAYC,IAAZ,CAAiB,iBAAjB,EAAoCI,IAApC;AACD,KAtYkB;;AAEjB,SAAK3B,GAAL,GAAWjB,KAAK,CAACgF,SAAN,EAAX;AACA,SAAKhE,iBAAL,CAAuB,KAAKC,GAA5B,EAAiC,MAAM,KAAKkC,QAAL,CAAc;AAAEQ,MAAAA,WAAW,EAAE,KAAf;AAAsBD,MAAAA,aAAa,EAAE,KAArC;AAA4CH,MAAAA,iBAAiB,EAAE;AAA/D,KAAd,CAAvC;AAEA,SAAKR,KAAL,GAAa;AACXqB,MAAAA,EAAE,EAAE,EADO;AAEXvB,MAAAA,QAAQ,EAAE,EAFC;AAGXoC,MAAAA,MAAM,EAAE,KAHG;AAIXH,MAAAA,IAAI,EAAE,EAJK;AAKXI,MAAAA,QAAQ,EAAE,EALC;AAMXpC,MAAAA,OAAO,EAAE,EANE;AAOXgB,MAAAA,QAAQ,EAAE,EAPC;AAQXqB,MAAAA,KAAK,EAAE,EARI;AASXC,MAAAA,eAAe,EAAE,EATN;AAUXC,MAAAA,WAAW,EAAE,EAVF;AAWXC,MAAAA,eAAe,EAAE,EAXN;AAYXC,MAAAA,gBAAgB,EAAE,EAZP;AAaXC,MAAAA,WAAW,EAAE,KAbF;AAcXC,MAAAA,QAAQ,EAAE,EAdC;AAeXC,MAAAA,aAAa,EAAE,EAfJ;AAgBXjC,MAAAA,gBAAgB,EAAE,EAhBP;AAiBXH,MAAAA,oBAAoB,EAAE,EAjBX;AAkBXC,MAAAA,iBAAiB,EAAE,KAlBR;AAmBXG,MAAAA,aAAa,EAAE,KAnBJ;AAoBXiC,MAAAA,SAAS,EAAE,IApBA;AAqBXzC,MAAAA,IAAI,EAAE,IArBK;AAsBX2B,MAAAA,QAAQ,EAAE,IAtBC;AAuBXe,MAAAA,YAAY,EAAE,IAvBH;AAwBXC,MAAAA,eAAe,EAAE,IAxBN;AAyBX5B,MAAAA,WAAW,EAAE,IAzBF;AA0BXN,MAAAA,WAAW,EAAE,KA1BF;AA2BXC,MAAAA,cAAc,EAAE,IA3BL;AA4BXU,MAAAA,UAAU,EAAE,EA5BD;AA6BXC,MAAAA,KAAK,EAAE,EA7BI;AA8BXuB,MAAAA,cAAc,EAAE,EA9BL;AA+BXC,MAAAA,SAAS,EAAE,KA/BA;AAgCXlE,MAAAA,MAAM,EAAE;AAhCG,KAAb;AAkCD;;AAqBD,QAAMmE,iBAAN,GAA0B;AACxBC,IAAAA,MAAM,CAACxE,gBAAP,CAAwB,SAAxB,EAAmC,KAAK+C,YAAxC;AACA,SAAKzD,KAAL,CAAWmF,QAAX;AAEA,SAAK3D,MAAL,GAAclC,EAAE,CAACD,QAAD,CAAhB;AAEA,SAAKmC,MAAL,CAAYP,EAAZ,CAAe,SAAf,EAA0B,MAAM;AAC9B,WAAKmB,QAAL,CAAc;AAAE2C,QAAAA,cAAc,EAAE,KAAK/E,KAAL,CAAW+E,cAA7B;AAA6CL,QAAAA,QAAQ,EAAE,KAAKlD,MAAL,CAAY6B,EAAnE;AAAuEuB,QAAAA,SAAS,YAAKvF,QAAL,cAAiB,KAAKW,KAAL,CAAW8D,QAA5B,CAAhF;AAAwH3B,QAAAA,IAAI,YAAK9C,QAAL,uBAA0B,KAAKW,KAAL,CAAW8D,QAArC,cAAiD,KAAK9D,KAAL,CAAWoF,gBAA5D,CAA5H;AAA4MP,QAAAA,YAAY,YAAKxF,QAAL,uBAA0B,KAAKW,KAAL,CAAW8D,QAArC,cAAiD,KAAK9D,KAAL,CAAWoF,gBAA5D,CAAxN;AAAwStB,QAAAA,QAAQ,EAAE,KAAK9D,KAAL,CAAW8D,QAA7T;AAAuUgB,QAAAA,eAAe,EAAE,KAAK9E,KAAL,CAAWqF,cAAnW;AAAmXnD,QAAAA,UAAU,EAAE,KAAKlC,KAAL,CAAWoF,gBAA1Y;AAA4ZtD,QAAAA,QAAQ,EAAE,KAAK9B,KAAL,CAAW8B;AAAjb,OAAd;AAEA,WAAKN,MAAL,CAAYC,IAAZ,CAAiB,uBAAjB,EAA0C;AACxCiD,QAAAA,QAAQ,EAAE,KAAKlD,MAAL,CAAY6B,EADkB;AAExCnB,QAAAA,UAAU,EAAE,KAAKlC,KAAL,CAAWoF,gBAFiB;AAGxCP,QAAAA,YAAY,YAAKxF,QAAL,uBAA0B,KAAKW,KAAL,CAAW8D,QAArC,cAAiD,KAAK9D,KAAL,CAAWoF,gBAA5D,CAH4B;AAIxCjD,QAAAA,IAAI,YAAK9C,QAAL,uBAA0B,KAAKW,KAAL,CAAW8D,QAArC,cAAiD,KAAK9D,KAAL,CAAWoF,gBAA5D;AAJoC,OAA1C;AAOA,WAAK5D,MAAL,CAAYC,IAAZ,CAAiB,iBAAjB,EAAoC;AAClCiD,QAAAA,QAAQ,EAAE,KAAKlD,MAAL,CAAY6B,EADY;AAElCS,QAAAA,QAAQ,EAAE,KAAK9D,KAAL,CAAW8D,QAFa;AAGlCe,QAAAA,YAAY,YAAKxF,QAAL,uBAA0B,KAAKW,KAAL,CAAW8D,QAArC,cAAiD,KAAK9D,KAAL,CAAWoF,gBAA5D,CAHsB;AAIlCjD,QAAAA,IAAI,YAAK9C,QAAL,uBAA0B,KAAKW,KAAL,CAAW8D,QAArC,cAAiD,KAAK9D,KAAL,CAAWoF,gBAA5D;AAJ8B,OAApC;AAMD,KAhBD;AAkBA,SAAK5D,MAAL,CAAYP,EAAZ,CAAe,2BAAf,EAA6CY,IAAD,IAAU;AACpD,WAAKO,QAAL,CAAc;AAAEQ,QAAAA,WAAW,EAAE,KAAf;AAAsBM,QAAAA,WAAW,EAAE,IAAnC;AAAyCL,QAAAA,cAAc,EAAE,IAAzD;AAA+DU,QAAAA,UAAU,EAAE;AAA3E,OAAd,EADoD,CAEpD;;AACA,UAAI+B,SAAS,CAACC,SAAV,CAAoBC,MAApB,CAA2B,SAA3B,IAAwC,CAAC,CAAzC,IAA8CF,SAAS,CAACC,SAAV,CAAoBC,MAApB,CAA2B,MAA3B,IAAqC,CAAC,CAAxF,EAA2F;AACzF,aAAKpD,QAAL,CAAc;AAAEW,UAAAA,QAAQ,EAAElB,IAAI,CAAC4D,OAAL;AAAZ,SAAd,EAA4C,MAAM;AAChD,cAAI5D,IAAI,IAAIA,IAAI,CAACV,MAAL,GAAc,CAA1B,EAA6B;AAC3B,kBAAMuE,OAAO,GAAG,aAAa,KAAK1D,KAAL,CAAWe,QAAX,CAAoB5B,MAApB,GAA6B,CAA1C,CAAhB;;AACA,gBAAIV,QAAQ,CAACkF,cAAT,CAAwBD,OAAxB,CAAJ,EAAsC;AACpCjF,cAAAA,QAAQ,CAACkF,cAAT,CAAwBD,OAAxB,EAAiCE,cAAjC;AACD;AACF;AACF,SAPD;AAQD,OATD,MASO,IAAIN,SAAS,CAACC,SAAV,CAAoBC,MAApB,CAA2B,SAA3B,IAAwC,CAAxC,IAA6CF,SAAS,CAACC,SAAV,CAAoBC,MAApB,CAA2B,MAA3B,IAAqC,CAAtF,EAAyF;AAC9F,aAAKpD,QAAL,CAAc;AAAEW,UAAAA,QAAQ,EAAElB;AAAZ,SAAd;AACD;AACF,KAfD;AAiBA,SAAKL,MAAL,CAAYP,EAAZ,CAAe,qBAAf,EAAuCY,IAAD,IAAU;AAC9C,YAAMgE,KAAK,GAAGhE,IAAI,CAACiE,SAAL,CAAeC,CAAC,IAAIA,CAAC,CAACjE,QAAF,KAAe,KAAKE,KAAL,CAAWF,QAA9C,CAAd;;AACA,UAAI+D,KAAK,GAAG,CAAZ,EAAe;AACb,aAAK7F,KAAL,CAAWgG,WAAX;AACD,OAFD,MAEO,IAAIH,KAAK,GAAG,CAAC,CAAb,EAAgB;AACrB,aAAK7F,KAAL,CAAWiG,kBAAX;AACA,aAAK7D,QAAL,CAAc;AAAEO,UAAAA,aAAa,EAAE,KAAjB;AAAwBH,UAAAA,iBAAiB,EAAE,KAA3C;AAAkDE,UAAAA,gBAAgB,EAAE,EAApE;AAAwEH,UAAAA,oBAAoB,EAAE,EAA9F;AAAkGwC,UAAAA,cAAc,EAAElD;AAAlH,SAAd;AACD;AACF,KARD;AASD;;AAED,QAAMqE,yBAAN,CAAgCC,SAAhC,EAA2C;AACzC,QAAIA,SAAS,CAACrE,QAAd,EAAwB;AACtB,WAAKM,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAEqE,SAAS,CAACrE;AAAtB,OAAd;AACD;;AACD,QAAIqE,SAAS,CAACpB,cAAd,EAA8B;AAC5B,WAAK3C,QAAL,CAAc;AAAE2C,QAAAA,cAAc,EAAEoB,SAAS,CAACpB;AAA5B,OAAd;AACD;;AACD,QAAIoB,SAAS,CAACf,gBAAV,KAA+B,KAAKpD,KAAL,CAAWE,UAA1C,IAAwD,KAAKF,KAAL,CAAWE,UAAX,KAA0BkE,SAAtF,EAAiG;AAC/F,WAAKhE,QAAL,CAAc;AACZyC,QAAAA,YAAY,YAAKxF,QAAL,uBAA0B8G,SAAS,CAACrC,QAApC,cAAgD,KAAK9B,KAAL,CAAWE,UAA3D,CADA;AAEZC,QAAAA,IAAI,YAAK9C,QAAL,uBAA0B8G,SAAS,CAACrC,QAApC,cAAgDqC,SAAS,CAACf,gBAA1D,CAFQ;AAGZtB,QAAAA,QAAQ,EAAEqC,SAAS,CAACrC,QAHR;AAIZgB,QAAAA,eAAe,EAAEqB,SAAS,CAACd,cAJf;AAKZnD,QAAAA,UAAU,EAAEiE,SAAS,CAACf;AALV,OAAd;AAOA,WAAK5D,MAAL,CAAYC,IAAZ,CAAiB,uBAAjB,EAA0C;AACxCiD,QAAAA,QAAQ,EAAE,KAAK1C,KAAL,CAAW0C,QADmB;AAExCxC,QAAAA,UAAU,EAAEiE,SAAS,CAACf,gBAFkB;AAGxCP,QAAAA,YAAY,YAAKxF,QAAL,uBAA0B8G,SAAS,CAACrC,QAApC,cAAgD,KAAK9B,KAAL,CAAWE,UAA3D,CAH4B;AAIxCC,QAAAA,IAAI,YAAK9C,QAAL,uBAA0B8G,SAAS,CAACrC,QAApC,cAAgDqC,SAAS,CAACf,gBAA1D;AAJoC,OAA1C;AAMD;;AAED,QAAIe,SAAS,CAAC/B,KAAV,IAAmB+B,SAAS,CAAC/B,KAAV,CAAgBjD,MAAvC,EAA+C;AAC7C,YAAMkF,QAAQ,GAAG,EAAjB;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,SAAS,CAAC/B,KAAV,CAAgBjD,MAAnC,EAA2CmF,CAAC,EAA5C,EAAgD;AAC9CD,QAAAA,QAAQ,CAAC3E,IAAT,CAAcyE,SAAS,CAAC/B,KAAV,CAAgBkC,CAAhB,CAAd;AACD;;AACD,WAAKlE,QAAL,CAAc;AAAEgC,QAAAA,KAAK,EAAEiC;AAAT,OAAd;AACD;;AAED,QAAIF,SAAS,CAACI,kBAAV,KAAiC,OAAjC,IAA4CJ,SAAS,CAACK,WAA1D,EAAuE;AACrE,WAAKpE,QAAL,CAAc;AAAEoE,QAAAA,WAAW,EAAEL,SAAS,CAACK;AAAzB,OAAd;AACA,WAAK5F,gBAAL,CAAsBuF,SAAS,CAACK,WAAhC;AACD;;AAED,QAAIL,SAAS,CAACI,kBAAV,KAAiC,OAArC,EAA8C;AAC5C,WAAKnE,QAAL,CAAc;AAAEoE,QAAAA,WAAW,EAAE;AAAf,OAAd,EAD4C,CAE5C;AACD;;AAED,SAAKhF,MAAL,CAAYP,EAAZ,CAAe,eAAf,EAAiCwF,WAAD,IAAiB;AAC/C,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,WAAD,CAAT,EAAwB;AAAE,gBAAS;AAAX,OAAxB,CAAX,CAD+C,CAG/C;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,UAAIG,KAAK,GAAGnG,QAAQ,CAACkF,cAAT,CAAwB,OAAxB,CAAZ;AACAiB,MAAAA,KAAK,CAACC,GAAN,GAAY3B,MAAM,CAAC4B,GAAP,CAAWC,eAAX,CAA2BL,IAA3B,CAAZ;AACAE,MAAAA,KAAK,CAACI,IAAN,GA1B+C,CA2B/C;AACA;AACA;AACD,KA9BD;AA+BD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKzF,MAAL,CAAYC,IAAZ,CAAiB,iBAAjB,EAAoC;AAClCU,MAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AADiB,KAApC;AAGD;;AA0MD+E,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,KAAK,EAAE;AAAE,mBAAW;AAAb,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE,KAAKlH,KAAL,CAAWuG,kBAAX,KAAkC,MAAlC,GAA2C5G,UAA3C,GAAwDC,KAAlE;AAAyE,MAAA,GAAG,EAAC,SAA7E;AAAuF,MAAA,MAAM,EAAE,EAA/F;AAAmG,MAAA,KAAK,EAAE,EAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EACkH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKI,KAAL,CAAWqF,cAAlB,CADlH,CADF,EAIE;AAAK,MAAA,EAAE,EAAC,kBAAR;AAA2B,MAAA,SAAS,EAAC,mBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKrD,KAAL,CAAWe,QAAX,IAAuB,KAAKf,KAAL,CAAWe,QAAX,CAAoB5B,MAApB,GAA6B,CAApD,GAAwD,KAAKa,KAAL,CAAWe,QAAX,CAAoBoE,GAApB,CAAwB,CAAC7E,IAAD,EAAOuD,KAAP,KAAiB;AAChG,YAAMuB,QAAQ,GAAI,KAAKpF,KAAL,CAAW+C,cAAX,CAA0B5D,MAA1B,GAAmC,CAAnC,IACf,KAAKa,KAAL,CAAW+C,cAAX,CAA0BsC,IAA1B,CAA+BC,UAAU,IAAIA,UAAU,CAAC,UAAD,CAAV,KAA2B,KAAKtF,KAAL,CAAWF,QAAtC,IAC5CwF,UAAU,CAAC,UAAD,CAAV,KAA2BhF,IAAI,CAACR,QAAhC,IAA4CwF,UAAU,CAAC,MAAD,CAAV,KAAuB,OAAnE,IAA8EA,UAAU,CAAC,MAAD,CAAV,KAAuB,OADtG,CADH;AAGA,aACE;AAAK,QAAA,EAAE,EAAE,YAAYzB,KAArB;AAA4B,QAAA,GAAG,EAAEA,KAAjC;AAAwC,QAAA,YAAY,EAAE,MAAM;AAAE,eAAKzD,QAAL,CAAc;AAAEoB,YAAAA,KAAK,EAAG,KAAKxB,KAAL,CAAWa,cAAX,IAA6B,KAAKb,KAAL,CAAWY,WAAxC,IAAwD,KAAK5C,KAAL,CAAWiC,MAAX,KAAsBK,IAAI,CAACL,MAApF,GAA+F,EAA/F,GAAqG,YAAY4D;AAA1H,WAAd;AAAmJ,SAAjN;AAAmN,QAAA,YAAY,EAAE,MAAM;AAAE,eAAKzD,QAAL,CAAc;AAAEoB,YAAAA,KAAK,EAAE;AAAT,WAAd;AAA+B,SAAxQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAyC,QAAA,OAAO,EAAE,KAAK+D,WAAvD;AAAoE,QAAA,aAAa,EAAGlH,KAAD,IAAW;AAAE,eAAKoC,WAAL,CAAiBpC,KAAjB,EAAwBiC,IAAxB;AAAgC,SAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmIA,IAAI,CAACR,QAAxI,CADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAC,YAAf;AAA4B,QAAA,IAAI,EAAEQ,IAAI,CAACkF,SAAvC;AAAkD,QAAA,SAAS,EAAC,wBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGG,KAAKxF,KAAL,CAAWwB,KAAX,KAAsB,YAAYqC,KAAlC,GAA2C;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAyC,QAAA,OAAO,EAAE,MAAM;AAAE,eAAK5C,eAAL,CAAqBX,IAArB;AAA6B,SAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyF;AAAK,QAAA,GAAG,EAAEzC,SAAV;AAAqB,QAAA,MAAM,EAAE,EAA7B;AAAiC,QAAA,KAAK,EAAE,EAAxC;AAA4C,QAAA,GAAG,EAAC,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzF,CAA3C,GAA+M,IAHlN,EAIG,KAAKmC,KAAL,CAAWY,WAAX,IAA0B,KAAKZ,KAAL,CAAWkB,WAAX,CAAuBG,EAAvB,KAA8Bf,IAAI,CAACe,EAA7D,GACC;AAAK,QAAA,SAAS,EAAC,4BAAf;AAA4C,QAAA,GAAG,EAAE,KAAKnD,GAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKkC,QAAL,CAAc;AAAEc,YAAAA,WAAW,EAAE,IAAf;AAAqBN,YAAAA,WAAW,EAAE;AAAlC,WAAd;AAA2D,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKU,mBAAL;AAA6B,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKH,qBAAL;AAA+B,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADD,GAMC,IAVJ,EAWG,KAAKnB,KAAL,CAAWW,aAAX,IAA4B,KAAKX,KAAL,CAAWU,gBAAX,CAA4BW,EAA5B,KAAmCf,IAAI,CAACe,EAApE,GACC;AAAK,QAAA,GAAG,EAAE,KAAKnD,GAAf;AAAoB,QAAA,SAAS,EAAEkH,QAAQ,KAAK,IAAb,GAAmB,gCAAnB,GAAsD,6BAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKhF,QAAL,CAAc;AAAEO,YAAAA,aAAa,EAAE;AAAjB,WAAd;AAA0C,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKG,kBAAL;AAA4B,SAAhD;AAAkD,QAAA,SAAS,EAAEsE,QAAQ,KAAK,IAAb,GAAoB,+CAApB,GAAsE,4CAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAIGA,QAAQ,KAAK,IAAb,GAAoB;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKxD,QAAL,CAActB,IAAd;AAAsB,SAA1C;AAA4C,QAAA,SAAS,EAAC,qCAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkGA,IAAI,CAACR,QAAvG,CAApB,GAA2I,IAJ9I,EAMGsF,QAAQ,KAAK,IAAb,GAAoB;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKpD,OAAL,CAAa1B,IAAb;AAAqB,SAAzC;AAA2C,QAAA,SAAS,EAAC,oCAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA+FA,IAAI,CAACR,QAApG,CAApB,GAAwI,IAN3I,CADD,GASC,IApBJ,CADF,EAuBG,KAAKE,KAAL,CAAWa,cAAX,KAA8B,IAA9B,IAAsC,KAAKb,KAAL,CAAWa,cAAX,CAA0BQ,EAA1B,KAAiCf,IAAI,CAACe,EAA5E,GAAiF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAO,QAAA,SAAS,EAAC,+BAAjB;AAAiD,QAAA,QAAQ,EAAGhD,KAAD,IAAW;AAAE,eAAK+B,QAAL,CAAc;AAAEmB,YAAAA,UAAU,EAAElD,KAAK,CAACG,MAAN,CAAaiH;AAA3B,WAAd;AAAmD,SAA3H;AAA6H,QAAA,KAAK,EAAE,KAAKzF,KAAL,CAAWuB,UAA/I;AAA2J,QAAA,SAAS,EAAGlD,KAAD,IAAW;AAAEA,UAAAA,KAAK,CAACqD,OAAN,KAAkB,EAAlB,IAAwBrD,KAAK,CAACqH,QAAN,KAAmB,KAA3C,GAAmD,KAAK/D,iBAAL,CAAuBtD,KAAvB,CAAnD,GAAmF,KAAKsB,WAAL,CAAiB,IAAjB,CAAnF;AAA2G,SAA9R;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,EAAwS;AAAG,QAAA,SAAS,EAAC,oCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAxS,CAAjF,GAAyd;AAAG,QAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0CW,IAAI,CAACP,OAA/C,CAvB5d,CADF;AA2BD,KA/BwD,CAAxD,GA+BI,IAhCP,CAJF,EAsCE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,WAAW,EAAC,iBAAnB;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAiD,MAAA,QAAQ,EAAG1B,KAAD,IAAW;AAAE,aAAK+B,QAAL,CAAc;AAAEL,UAAAA,OAAO,EAAE1B,KAAK,CAACG,MAAN,CAAaiH;AAAxB,SAAd;AAAiD,OAAzH;AAA2H,MAAA,KAAK,EAAE,KAAKzF,KAAL,CAAWD,OAA7I;AAAsJ,MAAA,SAAS,EAAG1B,KAAD,IAAW;AAAEA,QAAAA,KAAK,CAACqD,OAAN,KAAkB,EAAlB,IAAwBrD,KAAK,CAACqH,QAAN,KAAmB,KAA3C,GAAmD,KAAK/F,WAAL,CAAiBtB,KAAjB,CAAnD,GAA6E,KAAKsB,WAAL,CAAiB,IAAjB,CAA7E;AAAqG,OAAnR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAtCF,CAFF,EA4CE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,WAAW,EAAC,wBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CALF,EAQE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASG,KAAKK,KAAL,CAAW+C,cAAX,CAA0B5D,MAA1B,GAAmC,CAAnC,GAAuC,KAAKa,KAAL,CAAW+C,cAAX,CAA0BoC,GAA1B,CAA8B,CAACtD,IAAD,EAAOgC,KAAP,KAAkB;AACtF,aACE;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAiB,QAAA,SAAS,EAAEhC,IAAI,CAACE,IAAL,KAAc,OAAd,GAAwB,4BAAxB,GAAuD,EAAnF;AAAuF,QAAA,OAAO,EAAE,KAAKwD,WAArG;AAAkH,QAAA,aAAa,EAAGlH,KAAD,IAAW;AAAE,eAAKgC,eAAL,CAAqBhC,KAArB,EAA4BwD,IAA5B;AAAoC,SAAlL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,IAAI,CAACE,IAAL,KAAc,OAAd,GAAwB;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACvB;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,GAAG,EAAEF,IAAI,CAACM,QAAL,GAAgBN,IAAI,CAACM,QAArB,GAAgCzE,MAArE;AAA6E,QAAA,GAAG,EAAC,eAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADuB,CAAxB,GAEQ,IAHX,EAIGmE,IAAI,CAACE,IAAL,KAAc,OAAd,IAAyBF,IAAI,CAACK,MAA9B,GAAuC;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,GAAiF,IAJpF,EAKGL,IAAI,CAACE,IAAL,KAAc,OAAd,IAAyB,CAACF,IAAI,CAACK,MAA/B,GAAwC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC,GAAmF,IALtF,EAMGL,IAAI,CAACE,IAAL,KAAc,OAAd,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCF,IAAI,CAAC/B,QAA1C,CADF,EAEG,KAAKE,KAAL,CAAWQ,iBAAX,IAAgCqB,IAAI,CAACE,IAAL,KAAc,OAA9C,IAAyD,KAAK/B,KAAL,CAAWO,oBAAX,CAAgCT,QAAhC,KAA6C+B,IAAI,CAAC/B,QAA3G,GACC;AAAK,QAAA,GAAG,EAAE,KAAK5B,GAAf;AAAoB,QAAA,SAAS,EAAC,iCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKkC,QAAL,CAAc;AAAEI,YAAAA,iBAAiB,EAAE;AAArB,WAAd;AAA8C,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKQ,sBAAL;AAAgC,SAApD;AAAsD,QAAA,SAAS,EAAC,gDAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADD,GAKC,IAPJ,CADD,GAUC,IAhBJ,CADF;AAoBD,KArBuC,CAAvC,GAqBI,IA9BP,EA+BG,KAAKhB,KAAL,CAAW+C,cAAX,CAA0B5D,MAA1B,GAAmC,CAAnC,IAAwC,KAAKa,KAAL,CAAW+C,cAAX,CAA0BsC,IAA1B,CAA+B/E,IAAI,IAAIA,IAAI,CAAC,MAAD,CAAJ,KAAiB,OAAxD,CAAxC,GAA2G;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3G,GAAwJ,IA/B3J,EAgCE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAhCF,EAmCE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCF,EAoCG,KAAKN,KAAL,CAAW+C,cAAX,CAA0B5D,MAA1B,GAAmC,CAAnC,GAAuC,KAAKa,KAAL,CAAW+C,cAAX,CAA0BoC,GAA1B,CAA8B,CAACtD,IAAD,EAAOgC,KAAP,KAAkB;AACtF,aACE;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAiB,QAAA,SAAS,EAAEhC,IAAI,CAACE,IAAL,KAAc,OAAd,GAAwB,4BAAxB,GAAuD,EAAnF;AAAuF,QAAA,OAAO,EAAE,KAAKwD,WAArG;AAAkH,QAAA,aAAa,EAAGlH,KAAD,IAAW;AAAE,eAAKgC,eAAL,CAAqBhC,KAArB,EAA4BwD,IAA5B;AAAoC,SAAlL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,IAAI,CAACE,IAAL,KAAc,OAAd,GAAwB;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACvB;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,GAAG,EAAEF,IAAI,CAACM,QAAL,GAAgBN,IAAI,CAACM,QAArB,GAAgCzE,MAArE;AAA6E,QAAA,GAAG,EAAC,eAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADuB,CAAxB,GAEQ,IAHX,EAIGmE,IAAI,CAACE,IAAL,KAAc,OAAd,IAAyBF,IAAI,CAACK,MAA9B,GAAuC;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,GAAiF,IAJpF,EAKGL,IAAI,CAACE,IAAL,KAAc,OAAd,IAAyB,CAACF,IAAI,CAACK,MAA/B,GAAwC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC,GAAmF,IALtF,EAMGL,IAAI,CAACE,IAAL,KAAc,OAAd,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCF,IAAI,CAAC/B,QAA1C,CADF,EAEG,KAAKE,KAAL,CAAWQ,iBAAX,IAAgCqB,IAAI,CAACE,IAAL,KAAc,OAA9C,IAAyD,KAAK/B,KAAL,CAAWO,oBAAX,CAAgCT,QAAhC,KAA6C+B,IAAI,CAAC/B,QAA3G,GACC;AAAK,QAAA,GAAG,EAAE,KAAK5B,GAAf;AAAoB,QAAA,SAAS,EAAC,iCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKkC,QAAL,CAAc;AAAEI,YAAAA,iBAAiB,EAAE;AAArB,WAAd;AAA8C,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKQ,sBAAL;AAAgC,SAApD;AAAsD,QAAA,SAAS,EAAC,gDAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADD,GAKC,IAPJ,CADD,GAUC,IAhBJ,CADF;AAoBD,KArBuC,CAAvC,GAqBI,IAzDP,EA0DG,KAAKhB,KAAL,CAAW+C,cAAX,CAA0B5D,MAA1B,GAAmC,CAAnC,IAAwC,KAAKa,KAAL,CAAW+C,cAAX,CAA0BsC,IAA1B,CAA+B/E,IAAI,IAAIA,IAAI,CAAC,MAAD,CAAJ,KAAiB,OAAxD,CAAxC,GAA2G;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3G,GAAwJ,IA1D3J,EA2DE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CA3DF,EA8DE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9DF,EA+DG,KAAKN,KAAL,CAAW+C,cAAX,CAA0B5D,MAA1B,GAAmC,CAAnC,GAAuC,KAAKa,KAAL,CAAW+C,cAAX,CAA0BoC,GAA1B,CAA8B,CAACtD,IAAD,EAAOgC,KAAP,KAAkB;AACtF,YAAMuB,QAAQ,GAAIvD,IAAI,CAAC/B,QAAL,KAAkB,KAAKE,KAAL,CAAWF,QAA/C;AACA,aACE;AAAK,QAAA,GAAG,EAAE+D,KAAV;AAAiB,QAAA,SAAS,EAAEhC,IAAI,CAACE,IAAL,KAAc,WAAd,GAA4B,4BAA5B,GAA2D,EAAvF;AAA2F,QAAA,OAAO,EAAE,KAAKwD,WAAzG;AAAsH,QAAA,aAAa,EAAGlH,KAAD,IAAW;AAAE,eAAKgC,eAAL,CAAqBhC,KAArB,EAA4BwD,IAA5B;AAAoC,SAAtL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,IAAI,CAACE,IAAL,KAAc,WAAd,GAA4B;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAC3B;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,GAAG,EAAEF,IAAI,CAACM,QAAL,GAAgBN,IAAI,CAACM,QAArB,GAAgCzE,MAArE;AAA6E,QAAA,GAAG,EAAC,eAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD2B,CAA5B,GAEQ,IAHX,EAIGmE,IAAI,CAACE,IAAL,KAAc,WAAd,IAA6BF,IAAI,CAACK,MAAlC,GAA2C;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3C,GAAqF,IAJxF,EAKGL,IAAI,CAACE,IAAL,KAAc,WAAd,IAA6B,CAACF,IAAI,CAACK,MAAnC,GAA4C;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5C,GAAuF,IAL1F,EAMGL,IAAI,CAACE,IAAL,KAAc,WAAd,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCF,IAAI,CAAC/B,QAA1C,CADF,EAEG,KAAKE,KAAL,CAAWQ,iBAAX,IAAgCqB,IAAI,CAACE,IAAL,KAAc,WAA9C,IAA6D,KAAK/B,KAAL,CAAWO,oBAAX,CAAgCT,QAAhC,KAA6C+B,IAAI,CAAC/B,QAA/G,GACC;AAAK,QAAA,GAAG,EAAE,KAAK5B,GAAf;AAAoB,QAAA,SAAS,EAAEkH,QAAQ,KAAK,IAAb,GAAmB,oCAAnB,GAA0D,iCAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKhF,QAAL,CAAc;AAAEI,YAAAA,iBAAiB,EAAE;AAArB,WAAd;AAA8C,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKQ,sBAAL;AAAgC,SAApD;AAAsD,QAAA,SAAS,EAAEoE,QAAQ,KAAK,IAAb,GAAoB,mDAApB,GAA0E,gDAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAIGA,QAAQ,KAAK,IAAb,GAAoB;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKxD,QAAL,CAAcC,IAAd;AAAsB,SAA1C;AAA4C,QAAA,SAAS,EAAC,yCAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsGA,IAAI,CAAC/B,QAA3G,CAApB,GAA+I,IAJlJ,EAMGsF,QAAQ,KAAK,IAAb,GAAoB;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKpD,OAAL,CAAaH,IAAb;AAAqB,SAAzC;AAA2C,QAAA,SAAS,EAAC,wCAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAmGA,IAAI,CAAC/B,QAAxG,CAApB,GAA4I,IAN/I,CADD,GASC,IAXJ,CADD,GAcC,IApBJ,CADF;AAwBD,KA1BuC,CAAvC,GA0BI,IAzFP,EA0FG,KAAKE,KAAL,CAAW+C,cAAX,CAA0B5D,MAA1B,GAAmC,CAAnC,IAAwC,KAAKa,KAAL,CAAW+C,cAAX,CAA0BsC,IAA1B,CAA+B/E,IAAI,IAAIA,IAAI,CAAC,MAAD,CAAJ,KAAiB,WAAxD,CAAxC,GAA+G;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/G,GAA4J,IA1F/J,EA2FE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CA3FF,EA8FE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9FF,EA+FG,KAAKN,KAAL,CAAW+C,cAAX,CAA0B5D,MAA1B,GAAmC,CAAnC,GAAuC,KAAKa,KAAL,CAAW+C,cAAX,CAA0BoC,GAA1B,CAA8B,CAACtD,IAAD,EAAOgC,KAAP,KAAiB;AACrF,YAAMuB,QAAQ,GAAIvD,IAAI,CAAC/B,QAAL,KAAkB,KAAKE,KAAL,CAAWF,QAA/C;AACA,aACE;AAAK,QAAA,GAAG,EAAE+D,KAAV;AAAiB,QAAA,SAAS,EAAEhC,IAAI,CAACE,IAAL,KAAc,OAAd,GAAwB,4BAAxB,GAAuD,EAAnF;AAAuF,QAAA,OAAO,EAAE,KAAKwD,WAArG;AAAkH,QAAA,aAAa,EAAGlH,KAAD,IAAW;AAAE,eAAKgC,eAAL,CAAqBhC,KAArB,EAA4BwD,IAA5B;AAAoC,SAAlL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,IAAI,CAACE,IAAL,KAAc,OAAd,GAAwB;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACvB;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,GAAG,EAAEF,IAAI,CAACM,QAAL,GAAgBN,IAAI,CAACM,QAArB,GAAgCzE,MAArE;AAA6E,QAAA,GAAG,EAAC,eAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADuB,CAAxB,GAEQ,IAHX,EAIGmE,IAAI,CAACE,IAAL,KAAc,OAAd,IAAyBF,IAAI,CAACK,MAA9B,GAAuC;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,GAAiF,IAJpF,EAKGL,IAAI,CAACE,IAAL,KAAc,OAAd,IAAyB,CAACF,IAAI,CAACK,MAA/B,GAAwC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC,GAAmF,IALtF,EAMGL,IAAI,CAACE,IAAL,KAAc,OAAd,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCF,IAAI,CAAC/B,QAA1C,CADF,EAEG,KAAKE,KAAL,CAAWQ,iBAAX,IAAgCqB,IAAI,CAACE,IAAL,KAAc,OAA9C,IAAyD,KAAK/B,KAAL,CAAWO,oBAAX,CAAgCT,QAAhC,KAA6C+B,IAAI,CAAC/B,QAA3G,GACC;AAAK,QAAA,GAAG,EAAE,KAAK5B,GAAf;AAAoB,QAAA,SAAS,EAAEkH,QAAQ,KAAK,IAAb,GAAmB,oCAAnB,GAA0D,iCAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKhF,QAAL,CAAc;AAAEI,YAAAA,iBAAiB,EAAE;AAArB,WAAd;AAA8C,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKQ,sBAAL;AAAgC,SAApD;AAAsD,QAAA,SAAS,EAAEoE,QAAQ,KAAK,IAAb,GAAoB,mDAApB,GAA0E,gDAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAIGA,QAAQ,KAAK,IAAb,GAAoB;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKxD,QAAL,CAAcC,IAAd;AAAsB,SAA1C;AAA4C,QAAA,SAAS,EAAC,yCAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsGA,IAAI,CAAC/B,QAA3G,CAApB,GAA+I,IAJlJ,EAMGsF,QAAQ,KAAK,IAAb,GAAoB;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKpD,OAAL,CAAaH,IAAb;AAAqB,SAAzC;AAA2C,QAAA,SAAS,EAAC,wCAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAmGA,IAAI,CAAC/B,QAAxG,CAApB,GAA4I,IAN/I,CADD,GASC,IAXJ,CADD,GAcC,IApBJ,CADF;AAwBD,KA1BuC,CAAvC,GA0BI,IAzHP,EA0HG,KAAKE,KAAL,CAAW+C,cAAX,CAA0B5D,MAA1B,GAAmC,CAAnC,IAAwC,KAAKa,KAAL,CAAW+C,cAAX,CAA0BsC,IAA1B,CAA+B/E,IAAI,IAAIA,IAAI,CAAC,MAAD,CAAJ,KAAiB,OAAxD,CAAxC,GAA2G;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3G,GAAwJ,IA1H3J,EA2HE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CA3HF,EA8HE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9HF,EA+HG,KAAKN,KAAL,CAAW+C,cAAX,CAA0B5D,MAA1B,GAAmC,CAAnC,GAAuC,KAAKa,KAAL,CAAW+C,cAAX,CAA0BoC,GAA1B,CAA8B,CAACtD,IAAD,EAAOgC,KAAP,KAAiB;AACrF,YAAMuB,QAAQ,GAAIvD,IAAI,CAAC/B,QAAL,KAAkB,KAAKE,KAAL,CAAWF,QAA/C;AACA,aACE;AAAK,QAAA,GAAG,EAAE+D,KAAV;AAAiB,QAAA,SAAS,EAAEhC,IAAI,CAACE,IAAL,KAAc,MAAd,GAAuB,4BAAvB,GAAsD,EAAlF;AAAsF,QAAA,OAAO,EAAE,KAAKwD,WAApG;AAAiH,QAAA,aAAa,EAAGlH,KAAD,IAAW;AAAE,eAAKgC,eAAL,CAAqBhC,KAArB,EAA4BwD,IAA5B;AAAoC,SAAjL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,IAAI,CAACE,IAAL,KAAc,MAAd,GAAuB;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACtB;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,GAAG,EAAEF,IAAI,CAACM,QAAL,GAAgBN,IAAI,CAACM,QAArB,GAAgCzE,MAArE;AAA6E,QAAA,GAAG,EAAC,eAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADsB,CAAvB,GAEQ,IAHX,EAIGmE,IAAI,CAACE,IAAL,KAAc,MAAd,IAAwBF,IAAI,CAACK,MAA7B,GAAsC;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtC,GAAgF,IAJnF,EAKGL,IAAI,CAACE,IAAL,KAAc,MAAd,IAAwB,CAACF,IAAI,CAACK,MAA9B,GAAuC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,GAAkF,IALrF,EAMGL,IAAI,CAACE,IAAL,KAAc,MAAd,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCF,IAAI,CAAC/B,QAA1C,CADF,EAEG,KAAKE,KAAL,CAAWQ,iBAAX,IAAgCqB,IAAI,CAACE,IAAL,KAAc,MAA9C,IAAwD,KAAK/B,KAAL,CAAWO,oBAAX,CAAgCT,QAAhC,KAA6C+B,IAAI,CAAC/B,QAA1G,GACC;AAAK,QAAA,GAAG,EAAE,KAAK5B,GAAf;AAAoB,QAAA,SAAS,EAAEkH,QAAQ,KAAK,IAAb,GAAmB,oCAAnB,GAA0D,iCAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKhF,QAAL,CAAc;AAAEI,YAAAA,iBAAiB,EAAE;AAArB,WAAd;AAA8C,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKQ,sBAAL;AAAgC,SAApD;AAAsD,QAAA,SAAS,EAAEoE,QAAQ,KAAK,IAAb,GAAoB,mDAApB,GAA0E,gDAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAIGA,QAAQ,KAAK,IAAb,GAAoB;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKxD,QAAL,CAAcC,IAAd;AAAsB,SAA1C;AAA4C,QAAA,SAAS,EAAC,yCAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsGA,IAAI,CAAC/B,QAA3G,CAApB,GAA+I,IAJlJ,EAMGsF,QAAQ,KAAK,IAAb,GAAoB;AAAG,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKpD,OAAL,CAAaH,IAAb;AAAqB,SAAzC;AAA2C,QAAA,SAAS,EAAC,wCAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAmGA,IAAI,CAAC/B,QAAxG,CAApB,GAA4I,IAN/I,CADD,GASC,IAXJ,CADD,GAcC,IApBJ,CADF;AAwBD,KA1BuC,CAAvC,GA0BI,IAzJP,CA5CF,CADF;AA0MD;;AAplB8B;;AAulBjC,SAAS6F,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAA2C;AACzC,SAAO;AACLC,IAAAA,KAAK,EAAED,YAAY,CAACC,KADf;AAEL7C,IAAAA,SAAS,EAAE4C,YAAY,CAAC5C,SAFnB;AAGL8C,IAAAA,OAAO,EAAEF,YAAY,CAACE,OAHjB;AAILjE,IAAAA,IAAI,EAAE+D,YAAY,CAAC/D,IAJd;AAKLO,IAAAA,KAAK,EAAEwD,YAAY,CAACxD;AALf,GAAP;AAOD;;AAED,eAAejF,OAAO,CAACwI,eAAD,EAAkBvI,OAAlB,CAAP,CAAkCU,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from \"socket.io-client\";\nimport MicrophoneStream from 'microphone-stream';\nimport lamejs from 'lamejs';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Chatroom.css';\nimport chatot from '../../assets/images/chatot.png';\nimport numbersign from '../../assets/images/numbersign.png';\nimport voice from '../../assets/images/voice.png';\nimport editwhite from '../../assets/images/editwhite.png';\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.useOnClickOutside(this.ref, () => this.setState({ messageMenu: false, userModalOpen: false, sideUserModalOpen: false }));\n\n    this.state = {\n      id: \"\",\n      username: \"\",\n      active: false,\n      type: \"\",\n      imageUrl: \"\",\n      message: \"\",\n      messages: [],\n      users: [],\n      clickedUsername: \"\",\n      clickedType: \"\",\n      privateMessages: [],\n      personalMessages: [],\n      userDetails: false,\n      socketId: \"\",\n      currentSocket: \"\",\n      rightClickedUser: {},\n      sideRightClickedUser: {},\n      sideUserModalOpen: false,\n      userModalOpen: false,\n      namespace: null,\n      room: null,\n      serverId: null,\n      previousRoom: null,\n      currentChatroom: null,\n      editMessage: null,\n      messageMenu: false,\n      editingMessage: null,\n      newMessage: \"\",\n      hover: \"\",\n      serverUserList: [],\n      isLoading: false,\n      chunks: []\n    }\n  }\n\n  useOnClickOutside = (ref, handler) => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener('keydown', this.detectEscape);\n    this.props.getUsers();\n\n    this.socket = io(ROOT_URL);\n\n    this.socket.on('connect', () => {\n      this.setState({ serverUserList: this.props.serverUserList, socketId: this.socket.id, namespace: `${ROOT_URL}/${this.props.serverId}`, room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`, previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`, serverId: this.props.serverId, currentChatroom: this.props.activeChatroom, chatroomId: this.props.activeChatroomId, username: this.props.username });\n\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.socket.id,\n        chatroomId: this.props.activeChatroomId,\n        previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`,\n        room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`\n      });\n\n      this.socket.emit('GET_SERVER_LIST', {\n        socketId: this.socket.id,\n        serverId: this.props.serverId,\n        previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`,\n        room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`\n      });\n    });\n\n    this.socket.on('RECEIVE_CHATROOM_MESSAGES', (data) => {\n      this.setState({ messageMenu: false, editMessage: null, editingMessage: null, newMessage: \"\" });\n      // scroll to latest message after rendering messages in firefox\n      if (navigator.userAgent.search(\"Firefox\") > -1 || navigator.userAgent.search(\"Edge\") > -1) {\n        this.setState({ messages: data.reverse() }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0 || navigator.userAgent.search(\"Edge\") < 0) {\n        this.setState({ messages: data });\n      }\n    });\n\n    this.socket.on('RECEIVE_SERVER_LIST', (data) => {\n      const index = data.findIndex(x => x.username === this.state.username);\n      if (index < 0) {\n        this.props.leaveServer();\n      } else if (index > -1) {\n        this.props.refreshServerUsers();\n        this.setState({ userModalOpen: false, sideUserModalOpen: false, rightClickedUser: {}, sideRightClickedUser: {}, serverUserList: data });\n      }\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.username) {\n      this.setState({ username: nextProps.username });\n    }\n    if (nextProps.serverUserList) {\n      this.setState({ serverUserList: nextProps.serverUserList });\n    }\n    if (nextProps.activeChatroomId !== this.state.chatroomId && this.state.chatroomId !== undefined) {\n      this.setState({\n        previousRoom: `${ROOT_URL}/chatroom/${nextProps.serverId}/${this.state.chatroomId}`,\n        room: `${ROOT_URL}/chatroom/${nextProps.serverId}/${nextProps.activeChatroomId}`,\n        serverId: nextProps.serverId,\n        currentChatroom: nextProps.activeChatroom,\n        chatroomId: nextProps.activeChatroomId\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.state.socketId,\n        chatroomId: nextProps.activeChatroomId,\n        previousRoom: `${ROOT_URL}/chatroom/${nextProps.serverId}/${this.state.chatroomId}`,\n        room: `${ROOT_URL}/chatroom/${nextProps.serverId}/${nextProps.activeChatroomId}`\n      });\n    }\n\n    if (nextProps.users && nextProps.users.length) {\n      const userList = [];\n      for(let i = 0; i < nextProps.users.length; i++) {\n        userList.push(nextProps.users[i]);\n      }\n      this.setState({ users: userList });\n    }\n\n    if (nextProps.activeChatroomType === \"voice\" && nextProps.audioStream) {\n      this.setState({ audioStream: nextProps.audioStream });\n      this.recordAudioInput(nextProps.audioStream);\n    }\n\n    if (nextProps.activeChatroomType !== \"voice\") {\n      this.setState({ audioStream: null });\n      // this.recordAudioInput(null);\n    }\n\n    this.socket.on('RECEIVE_VOICE', (arrayBuffer) => {\n      let blob = new Blob([arrayBuffer], { 'type' : 'audio/webm' });\n\n      // let channels = 1;\n      // let bufferRate = 44100;\n      // let kbps = 128;\n      // let mp3encoder = new lamejs.Mp3Encoder(channels, bufferRate, kbps);\n      // let mp3Data = [];\n      // let voiceData = new Int16Array(arrayBuffer);\n      // let voiceBlockSize = 1152;\n\n      // for(let i = 0; i < arrayBuffer.length; i++) {\n      //   // let voiceChunk = arrayBuffer.subarray(i, i + voiceBlockSize);\n      //   let mp3buffer = mp3encoder.encodeBuffer(arrayBuffer);\n      //   if (mp3buffer.length > 0) {\n      //     mp3Data.push(mp3buffer);\n      //   }\n      // }\n\n      // let blob = new Blob(mp3Data, { 'type' : 'audio/mp3' });\n      // mp3Data = [];\n      // console.log(blob);\n      // debugger;\n\n      let audio = document.getElementById('audio');\n      audio.src = window.URL.createObjectURL(blob);\n      audio.play();\n      // console.log(document.getElementById('audio'));\n      // debugger;\n      // audio.play();\n    });\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('LEAVE_CHATROOMS', {\n      room: this.state.room\n    });\n  }\n\n  recordAudioInput = async(stream) => {\n    // let chunks = [];\n    // const recorder = new MediaRecorder(stream, { type: 'audio/webm' });\n\n    // recorder.start();\n\n    // setInterval(() => {\n    //   if (this.state.audioStream !== null) {\n    //     recorder.stop();\n    //     recorder.start();\n    //   }\n    // }, 5000);\n\n    // recorder.addEventListener('dataavailable', event => {\n    //   if (typeof event.data === 'undefined') return;\n    //   if (event.data.size === 0) return;\n    //   chunks.push(event.data);\n    // });\n\n    // recorder.addEventListener('stop', () => {\n    //   console.log(chunks);\n    //   debugger;\n    //   const recording = new Blob(chunks, {\n    //     type: 'audio/webm'\n    //   });\n    //   this.socket.emit('SEND_VOICE', {\n    //     recording: recording,\n    //     socketId: this.state.socketId,\n    //     chatroomId: this.state.chatroomId,\n    //     room: `${ROOT_URL}/chatroom/${this.state.serverId}/${this.state.chatroomId}`\n    //   });\n    //   chunks = [];\n    // });\n\n    // let chunks = [];\n    // if (stream) {\n    //   let micStream = new MicrophoneStream();\n    //   micStream.setStream(stream);\n\n    //   micStream.on('data', (chunk) => {\n    //     if (chunks.length > 80) {\n    //       var raw = MicrophoneStream.toRaw(chunk);\n    //       let audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n    //       let frameCount = audioCtx.sampleRate * 2.0;\n\n    //       // Get an AudioBufferSourceNode.\n    //       // This is the AudioNode to use when we want to play an AudioBuffer\n    //       var source = audioCtx.createBufferSource();\n\n    //       // set the buffer in the AudioBufferSourceNode\n    //       source.buffer = myArrayBuffer;\n\n    //       // connect the AudioBufferSourceNode to the\n    //       // destination so we can hear the sound\n    //       source.connect(audioCtx.destination);\n\n    //       // start the source playing\n    //       source.start();\n\n\n\n\n    let chunks = [];\n    if (stream) {\n      let micStream = new MicrophoneStream();\n      micStream.setStream(stream);\n\n      micStream.on('data', (chunk) => {\n        if (chunks.length > 80) {\n          // const recording = new Blob(chunks, {\n          //   type: 'audio/webm'\n          console.log(chunks);\n          debugger;\n          // });\n          var raw = MicrophoneStream.toRaw(chunk);\n          console.log(raw);\n          debugger;\n          this.socket.emit('SEND_VOICE', chunks);\n          chunks = [];\n        } else {\n          // console.log(chunk);\n          // debugger;\n          chunks.push(chunk);\n        }\n      });\n    }\n\n\n\n    // if (stream) {\n      // let audio = document.getElementById(\"audio\");\n      // window.stream = stream; // make variable available to browser console\n      // audio.srcObject = stream;\n      // audio.autoplay = true;\n    // } else {\n      // let audio = document.getElementById(\"audio\");\n      // audio.srcObject = null;\n      // audio.autoplay = false;\n      // audio.stop = true;\n    // }\n  }\n\n  sendMessage = (event) => {\n    if (event) {\n      event.preventDefault();\n      const data = {\n        username: this.props.username,\n        message: this.state.message,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        room: this.state.room\n      };\n      this.socket.emit('CHATROOM_MESSAGE', data);\n      this.setState({ message: \"\" });\n    }\n  }\n\n  sideContextMenu = (event, item) => {\n    event.preventDefault();\n    this.setState({ sideRightClickedUser: item, sideUserModalOpen: true });\n  }\n\n  contextMenu = (event, item) => {\n    event.preventDefault();\n    this.setState({ rightClickedUser: item, userModalOpen: true, messageMenu: false, editingMessage: null });\n  }\n\n  privateMessageUser = () => {\n    this.setState({ messages: [] });\n    this.props.privateMessageUser(this.state.rightClickedUser);\n  }\n\n  sidePrivateMessageUser = () => {\n    this.setState({ messages: [] });\n    this.props.privateMessageUser(this.state.sideRightClickedUser);\n  }\n\n  openMessageMenu = (item) => {\n    this.setState({ messageMenu: true, editMessage: item });\n  }\n\n  deleteChatroomMessage = () => {\n    const data = {\n      username: this.props.username,\n      message: this.state.message,\n      userId: this.props.userId,\n      chatroomId: this.state.chatroomId,\n      messageId: this.state.editMessage.id,\n      room: this.state.room\n    };\n    this.socket.emit('DELETE_CHATROOM_MESSAGE', data);\n  }\n\n  editChatroomMessage = () => {\n    this.setState({ editingMessage: this.state.editMessage, newMessage: this.state.editMessage.message, hover: \"\" }, () => {\n      this.setState({ editMessage: null, messageMenu: false });\n    });\n  }\n\n  detectEscape = (event) => {\n    if (event.keyCode === 27 && !this.state.messageMenu) {\n      this.setState({ editingMessage: this.state.editMessage, newMessage: \"\" });\n    }\n  }\n\n  sendEditedMessage = (event) => {\n    event.preventDefault();\n    const data = {\n      username: this.props.username,\n      message: this.state.newMessage,\n      userId: this.props.userId,\n      chatroomId: this.state.chatroomId,\n      messageId: this.state.editingMessage.id,\n      room: this.state.room\n    };\n    this.socket.emit('EDIT_CHATROOM_MESSAGE', data);\n  }\n\n  kickUser = (user) => {\n    const data = {\n      serverId: this.state.serverId,\n      chatroomId: this.state.chatroomId,\n      type: 'user',\n      userId: user.userId,\n      room: this.state.room\n    };\n    this.socket.emit('KICK_SERVER_USER', data);\n  }\n\n  banUser = (user) => {\n    const data = {\n      serverId: this.state.serverId,\n      chatroomId: this.state.chatroomId,\n      type: 'user',\n      userId: user.userId,\n      room: this.state.room\n    };\n    this.socket.emit('BAN_SERVER_USER', data);\n  }\n\n  render() {\n    return (\n      <div className=\"chatroom\">\n        <audio id=\"audio\" style={{ \"display\": \"none\" }} />\n        <div className=\"chatarea\">\n          <div className=\"chatarea-topbar\">\n            <img src={this.props.activeChatroomType === \"text\" ? numbersign : voice} alt=\"channel\" height={16} width={16} /><span>{this.props.activeChatroom}</span>\n          </div>\n          <div id=\"chatareamessages\" className=\"chatarea-messages\">\n            {this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n              const moderate = (this.state.serverUserList.length > 0\n              && this.state.serverUserList.some(serverItem => serverItem['username'] !== this.state.username\n              && (serverItem['username'] === item.username && serverItem['type'] !== 'owner' && serverItem['type'] !== 'admin')));\n              return (\n                <div id={\"message\" + index} key={index} onMouseEnter={() => { this.setState({ hover: (this.state.editingMessage || this.state.messageMenu || (this.props.userId !== item.userId)) ? \"\" : (\"message\" + index) }) }} onMouseLeave={() => { this.setState({ hover: \"\" }); }}>\n                  <div className=\"chatarea-messages-container\">\n                    <span className=\"chatarea-messages-user\" onClick={this.handleClick} onContextMenu={(event) => { this.contextMenu(event, item); }}>{item.username}</span>\n                    <Moment format=\"MM/DD/YYYY\" date={item.updatedAt} className=\"chatarea-messages-time\" />\n                    {this.state.hover === (\"message\" + index) ? <span className=\"chatarea-messages-menu\" onClick={() => { this.openMessageMenu(item); }}><img src={editwhite} height={15} width={15} alt=\"edit message\" /></span> : null}\n                    {this.state.messageMenu && this.state.editMessage.id === item.id ?\n                      <div className=\"chatarea-messages-editmenu\" ref={this.ref}>\n                        <span onClick={() => { this.setState({ editMessage: null, messageMenu: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.editChatroomMessage(); }}>Edit</p>\n                        <p onClick={() => { this.deleteChatroomMessage(); }}>Delete</p>\n                      </div>\n                    : null}\n                    {this.state.userModalOpen && this.state.rightClickedUser.id === item.id ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-usermodalmod\" : \"chatarea-messages-usermodal\"}>\n                        <span onClick={() => { this.setState({ userModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.privateMessageUser(); }} className={moderate === true ? \"chatarea-messages-usermodalmod-privatemessage\" : \"chatarea-messages-usermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(item); }} className=\"chatarea-messages-usermodalmod-kick\">Kick {item.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(item); }} className=\"chatarea-messages-usermodalmod-ban\">Ban {item.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                  {this.state.editingMessage !== null && this.state.editingMessage.id === item.id ? <span><input className=\"chatarea-messages-editmessage\" onChange={(event) => { this.setState({ newMessage: event.target.value }) }} value={this.state.newMessage} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendEditedMessage(event) : this.sendMessage(null) }} /><p className=\"chatarea-messages-editmessage-note\">escape to cancel • enter to save</p></span> : <p className=\"chatarea-messages-message\">{item.message}</p>}\n                </div>\n              )\n            }) : null}\n          </div>\n          <div className=\"chatarea-container\">\n            <input placeholder=\"Send a message!\" type=\"text\" onChange={(event) => { this.setState({ message: event.target.value }); }} value={this.state.message} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null) }}></input>\n          </div>\n        </div>\n        <div className=\"sidebarright\">\n          <div className=\"sidebarright-container\">\n            <input placeholder=\"Filter users in server\"></input>\n          </div>\n          <div className=\"sidebarright-border\" />\n          <div className=\"sidebarright-authority\">\n            <span>Room Owners</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index)  => {\n            return (\n              <div key={index} className={user.type === 'owner' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'owner' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'owner' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'owner' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'owner' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'owner' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className=\"chatarea-messages-sideusermodal\">\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className=\"chatarea-messages-sideusermodal-privatemessage\">Send Message</p>\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'owner') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Administrators</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index)  => {\n            return (\n              <div key={index} className={user.type === 'admin' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'admin' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'admin' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'admin' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'admin' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'admin' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className=\"chatarea-messages-sideusermodal\">\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className=\"chatarea-messages-sideusermodal-privatemessage\">Send Message</p>\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'admin') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Moderators</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index)  => {\n            const moderate = (user.username !== this.state.username);\n            return (\n              <div key={index} className={user.type === 'moderator' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'moderator' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'moderator' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'moderator' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'moderator' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'moderator' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\"}>\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className={moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(user); }} className=\"chatarea-messages-sideusermodalmod-kick\">Kick {user.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(user); }} className=\"chatarea-messages-sideusermodalmod-ban\">Ban {user.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'moderator') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Voice</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n            const moderate = (user.username !== this.state.username);\n            return (\n              <div key={index} className={user.type === 'voice' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'voice' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'voice' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'voice' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'voice' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'voice' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\"}>\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className={moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(user); }} className=\"chatarea-messages-sideusermodalmod-kick\">Kick {user.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(user); }} className=\"chatarea-messages-sideusermodalmod-ban\">Ban {user.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'voice') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Users</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n            const moderate = (user.username !== this.state.username);\n            return (\n              <div key={index} className={user.type === 'user' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'user' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'user' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'user' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'user' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'user' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\"}>\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className={moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(user); }} className=\"chatarea-messages-sideusermodalmod-kick\">Kick {user.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(user); }} className=\"chatarea-messages-sideusermodalmod-ban\">Ban {user.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            )\n          }) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Chatroom);"]},"metadata":{},"sourceType":"module"}