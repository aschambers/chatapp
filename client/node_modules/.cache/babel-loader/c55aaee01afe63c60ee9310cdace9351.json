{"ast":null,"code":"import _slicedToArray from \"/Users/metabou/Desktop/chatapp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metabou/Desktop/chatapp/client/src/components/DropItem/index.js\";\nimport React, { useState, useRef } from \"react\";\nimport useDrop from \"../../hooks/useDrop\";\nimport \"./DropItem.css\";\nimport View from \"./View\";\nimport HoverView from './HoverView';\nexport default (({\n  children,\n  heading,\n  onDrop\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showHover = _useState2[0],\n        setShowHover = _useState2[1];\n\n  const dropRef = useRef();\n\n  const _useDrop = useDrop({\n    ref: dropRef,\n    onDrop\n  }),\n        dropState = _useDrop.dropState,\n        droppedItem = _useDrop.droppedItem;\n\n  console.log(children);\n  console.log(dropRef);\n  console.log('dropstate: ', dropState); // if (dropState === 'dragging over') {\n  //   console.log(dropRef.current.innerText);\n  //   for (let i = 0; i < children.length; i++) {\n  //     if (children[i].props.data.text !== dropRef.current.innerText) {\n  //       setShowHover(true);\n  //       break;\n  //     }\n  //   }\n  // }\n\n  if (dropState !== 'dropped') {\n    return React.createElement(HoverView, {\n      ref: dropRef,\n      dropState: dropState,\n      heading: heading,\n      droppedItem: droppedItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, children);\n  } else {\n    return React.createElement(View, {\n      ref: dropRef,\n      dropState: dropState,\n      heading: heading,\n      droppedItem: droppedItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, children);\n  }\n});","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/components/DropItem/index.js"],"names":["React","useState","useRef","useDrop","View","HoverView","children","heading","onDrop","showHover","setShowHover","dropRef","ref","dropState","droppedItem","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,gBAAe,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA;AAArB,CAAD,KAAmC;AAAA,oBACdP,QAAQ,CAAC,KAAD,CADM;AAAA;AAAA,QACzCQ,SADyC;AAAA,QAC9BC,YAD8B;;AAEhD,QAAMC,OAAO,GAAGT,MAAM,EAAtB;;AAFgD,mBAGbC,OAAO,CAAC;AACzCS,IAAAA,GAAG,EAAED,OADoC;AAEzCH,IAAAA;AAFyC,GAAD,CAHM;AAAA,QAGxCK,SAHwC,YAGxCA,SAHwC;AAAA,QAG7BC,WAH6B,YAG7BA,WAH6B;;AAOhDC,EAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,SAA3B,EATgD,CAUhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIA,SAAS,KAAK,SAAlB,EAA6B;AAC3B,WACE,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEF,OAAhB;AAAyB,MAAA,SAAS,EAAEE,SAApC;AAA+C,MAAA,OAAO,EAAEN,OAAxD;AAAiE,MAAA,WAAW,EAAEO,WAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,QADH,CADF;AAKD,GAND,MAMO;AACL,WACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEK,OAAX;AAAoB,MAAA,SAAS,EAAEE,SAA/B;AAA0C,MAAA,OAAO,EAAEN,OAAnD;AAA4D,MAAA,WAAW,EAAEO,WAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,QADH,CADF;AAKD;AACF,CAhCD","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport useDrop from \"../../hooks/useDrop\";\nimport \"./DropItem.css\";\nimport View from \"./View\";\nimport HoverView from './HoverView'\n\nexport default ({ children, heading, onDrop }) => {\n  const [showHover, setShowHover] = useState(false);\n  const dropRef = useRef();\n  const { dropState, droppedItem } = useDrop({\n    ref: dropRef,\n    onDrop\n  });\n  console.log(children);\n  console.log(dropRef);\n  console.log('dropstate: ', dropState);\n  // if (dropState === 'dragging over') {\n  //   console.log(dropRef.current.innerText);\n  //   for (let i = 0; i < children.length; i++) {\n  //     if (children[i].props.data.text !== dropRef.current.innerText) {\n  //       setShowHover(true);\n  //       break;\n  //     }\n  //   }\n  // }\n  if (dropState !== 'dropped') {\n    return (\n      <HoverView ref={dropRef} dropState={dropState} heading={heading} droppedItem={droppedItem}>\n        {children}\n      </HoverView>\n    );\n  } else {\n    return (\n      <View ref={dropRef} dropState={dropState} heading={heading} droppedItem={droppedItem}>\n        {children}\n      </View>\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}