{"ast":null,"code":"import _slicedToArray from \"/Users/metabou/Desktop/chatapp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metabou/Desktop/chatapp/client/src/views/Verification/Verification.js\";\nimport React, { useState } from 'react';\nimport queryString from 'query-string';\nimport Loading from '../../components/Loading/Loading';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport './Verification.css';\n\nconst Verification = props => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setIsLoading = _useState2[1];\n\n  const params = queryString.parse(props.location.search);\n  const email = params.email;\n  const token = params.token;\n  setIsLoading(false);\n\n  if (email && token) {\n    props.userVerification({\n      email: email,\n      token: token\n    });\n  }\n\n  if (props.success) {\n    return React.createElement(Redirect, {\n      push: true,\n      to: \"/Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }\n\n  if (isLoading) {\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  } else if (!isLoading) {\n    return React.createElement(\"div\", {\n      className: \"verification\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"You must send another email to verify your account.\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Send email\"));\n  }\n};\n\nfunction mapStateToProps({\n  usersReducer\n}) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Verification);","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/views/Verification/Verification.js"],"names":["React","useState","queryString","Loading","Redirect","connect","actions","Verification","props","isLoading","setIsLoading","params","parse","location","search","email","token","userVerification","success","mapStateToProps","usersReducer","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;AACA,OAAO,oBAAP;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA,oBACIP,QAAQ,CAAC,IAAD,CADZ;AAAA;AAAA,QACvBQ,SADuB;AAAA,QACZC,YADY;;AAE9B,QAAMC,MAAM,GAAGT,WAAW,CAACU,KAAZ,CAAkBJ,KAAK,CAACK,QAAN,CAAeC,MAAjC,CAAf;AACA,QAAMC,KAAK,GAAGJ,MAAM,CAACI,KAArB;AACA,QAAMC,KAAK,GAAGL,MAAM,CAACK,KAArB;AAEAN,EAAAA,YAAY,CAAC,KAAD,CAAZ;;AAEA,MAAIK,KAAK,IAAIC,KAAb,EAAoB;AAClBR,IAAAA,KAAK,CAACS,gBAAN,CAAuB;AACrBF,MAAAA,KAAK,EAAEA,KADc;AAErBC,MAAAA,KAAK,EAAEA;AAFc,KAAvB;AAID;;AAED,MAAIR,KAAK,CAACU,OAAV,EAAmB;AACjB,WAAO,oBAAC,QAAD;AAAU,MAAA,IAAI,MAAd;AAAe,MAAA,EAAE,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIT,SAAJ,EAAe;AACb,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJD,MAIO,IAAI,CAACA,SAAL,EAAgB;AACrB,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF;AAMD;AACF,CA/BD;;AAiCA,SAASU,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAA2C;AACzC,SAAO;AACLC,IAAAA,KAAK,EAAED,YAAY,CAACC,KADf;AAELZ,IAAAA,SAAS,EAAEW,YAAY,CAACX,SAFnB;AAGLS,IAAAA,OAAO,EAAEE,YAAY,CAACF;AAHjB,GAAP;AAKD;;AAED,eAAeb,OAAO,CAACc,eAAD,EAAkBb,OAAlB,CAAP,CAAkCC,YAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport queryString from 'query-string';\nimport Loading from '../../components/Loading/Loading';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport './Verification.css';\n\nconst Verification = (props) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const params = queryString.parse(props.location.search);\n  const email = params.email;\n  const token = params.token;\n\n  setIsLoading(false);\n\n  if (email && token) {\n    props.userVerification({\n      email: email,\n      token: token\n    });\n  }\n\n  if (props.success) {\n    return <Redirect push to=\"/Login\" />;\n  }\n\n  if (isLoading) {\n    return (\n      <Loading />\n    );\n  } else if (!isLoading) {\n    return (\n      <div className=\"verification\">\n        <div>You must send another email to verify your account.</div>\n        <button>Send email</button>\n      </div>\n    );\n  }\n};\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Verification);"]},"metadata":{},"sourceType":"module"}