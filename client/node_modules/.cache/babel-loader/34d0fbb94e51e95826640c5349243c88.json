{"ast":null,"code":"import _slicedToArray from \"/Users/metabou/Desktop/chatapp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metabou/Desktop/chatapp/client/src/views/Dashboard/Dashboard.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { Redirect } from 'react-router';\nimport { toast } from 'react-toastify';\nimport ToastMessage from '../../components/ToastMessage/ToastMessage';\nimport Chatroom from '../../components/Chatroom/Chatroom';\nimport CreateServer from '../../components/CreateServer/CreateServer';\nimport JoinServer from '../../components/JoinServer/JoinServer';\nimport CategoryModal from '../../components/CategoryModal/CategoryModal';\nimport ChannelModal from '../../components/ChannelModal/ChannelModal';\nimport './Dashboard.css';\nimport chatot from '../../assets/images/chatot.png';\nimport friends from '../../assets/images/friends.png';\nimport settings from '../../assets/images/settings.png';\nimport invite from '../../assets/images/invite.png';\nimport notification from '../../assets/images/notification.png';\nimport privacylock from '../../assets/images/privacylock.png';\nimport serversettings from '../../assets/images/serversettings.png';\nimport category from '../../assets/images/category.png';\nimport createchannel from '../../assets/images/createchannel.png';\nimport numbersign from '../../assets/images/numbersign.png';\n\nconst Dashboard = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        id = _useState2[0],\n        setId = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        username = _useState4[0],\n        setUsername = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        imageUrl = _useState8[0],\n        setImageUrl = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        active = _useState10[0],\n        setActive = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        server = _useState12[0],\n        setServer = _useState12[1];\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        serverId = _useState14[0],\n        setServerId = _useState14[1];\n\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        hover = _useState16[0],\n        setHover = _useState16[1];\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        isSettingsOpen = _useState18[0],\n        setSettingsOpen = _useState18[1];\n\n  const _useState19 = useState(false),\n        _useState20 = _slicedToArray(_useState19, 2),\n        isModalOpen = _useState20[0],\n        setModalOpen = _useState20[1];\n\n  const _useState21 = useState(\"\"),\n        _useState22 = _slicedToArray(_useState21, 2),\n        currentModal = _useState22[0],\n        setCurrentModal = _useState22[1];\n\n  const _useState23 = useState(\"US West\"),\n        _useState24 = _slicedToArray(_useState23, 2),\n        region = _useState24[0],\n        setRegion = _useState24[1];\n\n  const _useState25 = useState([]),\n        _useState26 = _slicedToArray(_useState25, 2),\n        serversList = _useState26[0],\n        setServersList = _useState26[1];\n\n  const _useState27 = useState(false),\n        _useState28 = _slicedToArray(_useState27, 2),\n        serverSettings = _useState28[0],\n        showServerSettings = _useState28[1];\n\n  const _useState29 = useState(false),\n        _useState30 = _slicedToArray(_useState29, 2),\n        showChannelModal = _useState30[0],\n        setShowChannelModal = _useState30[1];\n\n  const _useState31 = useState(false),\n        _useState32 = _slicedToArray(_useState31, 2),\n        showCategoryModal = _useState32[0],\n        setShowCategoryModal = _useState32[1];\n\n  const _useState33 = useState(\"\"),\n        _useState34 = _slicedToArray(_useState33, 2),\n        newCategory = _useState34[0],\n        setNewCategory = _useState34[1];\n\n  const _useState35 = useState(\"\"),\n        _useState36 = _slicedToArray(_useState35, 2),\n        newChannel = _useState36[0],\n        setNewChannel = _useState36[1];\n\n  const _useState37 = useState(false),\n        _useState38 = _slicedToArray(_useState37, 2),\n        triggerReload = _useState38[0],\n        setTriggerReload = _useState38[1];\n\n  const _useState39 = useState([]),\n        _useState40 = _slicedToArray(_useState39, 2),\n        categories = _useState40[0],\n        setCategories = _useState40[1];\n\n  const _useState41 = useState(null),\n        _useState42 = _slicedToArray(_useState41, 2),\n        currentDragItem = _useState42[0],\n        setCurrentDragItem = _useState42[1];\n\n  const _useState43 = useState([]),\n        _useState44 = _slicedToArray(_useState43, 2),\n        chatrooms = _useState44[0],\n        setChatrooms = _useState44[1];\n\n  const _useState45 = useState(\"\"),\n        _useState46 = _slicedToArray(_useState45, 2),\n        activeChatroom = _useState46[0],\n        setActiveChatroom = _useState46[1];\n\n  const ref = useRef();\n  useOnClickOutside(ref, () => setShowCategoryModal(false));\n  useEffect(() => {\n    if (props.chatroomList) {\n      setChatrooms(props.chatroomList);\n      setShowChannelModal(false);\n    }\n\n    if (props.categoryList) {\n      setCategories(props.categoryList);\n      setShowCategoryModal(false);\n    }\n\n    if (!props.user) {\n      props.currentUser();\n      props.categoryFindAll({\n        serverId: 1\n      });\n      props.getChatrooms({\n        serverId: 1\n      });\n      window.addEventListener('keydown', detectEscape);\n    } else if (props.user) {\n      const _props$user = props.user,\n            id = _props$user.id,\n            username = _props$user.username,\n            email = _props$user.email,\n            imageUrl = _props$user.imageUrl,\n            active = _props$user.active,\n            serversList = _props$user.serversList;\n      setId(id);\n      setUsername(username);\n      setEmail(email);\n      setImageUrl(imageUrl);\n      setActive(active);\n      setServersList(serversList);\n    }\n  }, [props]);\n\n  const detectEscape = event => {\n    if (event.keyCode === 27) {\n      setSettingsOpen(false);\n    }\n  };\n\n  if (props.logout) {\n    return React.createElement(Redirect, {\n      push: true,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    });\n  }\n\n  const userLogout = () => {\n    props.userLogout({\n      id: id\n    });\n  };\n\n  const toggleModal = value => {\n    setModalOpen(true);\n    setCurrentModal(value);\n  };\n\n  const getUpdatedServerList = closeModal => {\n    if (closeModal) {\n      setModalOpen(false);\n      toast.dismiss();\n      toast.success('Success, the server was created!', {\n        position: 'bottom-center'\n      });\n      props.getUpdatedUser({\n        userId: id\n      });\n    } else {\n      toast.dismiss();\n      toast.error('There was an error creating the server!', {\n        position: 'bottom-center'\n      });\n    }\n  };\n\n  const displayChannelModal = () => {\n    setShowChannelModal(true);\n    showServerSettings(false);\n  };\n\n  const createNewChannel = () => {\n    props.chatroomCreate({\n      name: newChannel,\n      serverId: serverId,\n      order: categories.length,\n      visible: false\n    });\n    setNewChannel('');\n  };\n\n  const displayCategoryModal = () => {\n    setShowCategoryModal(true);\n    showServerSettings(false);\n  };\n\n  const createNewCategory = () => {\n    props.categoryCreate({\n      name: newCategory,\n      serverId: serverId,\n      order: categories.length,\n      visible: false\n    });\n    setNewCategory('');\n  };\n\n  const dragItem = (item, event) => {\n    setCurrentDragItem(item);\n    event.dataTransfer.setData(\"text\", event.target.id);\n  };\n\n  const draggingOverItem = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const dropItem = event => {\n    event.preventDefault();\n    const newChatrooms = chatrooms || [];\n\n    if (event.target.id !== currentDragItem.category && event.target.id) {\n      for (let i = 0; i < newChatrooms.length; i++) {\n        if (newChatrooms[i].categoryId === currentDragItem.categoryId && newChatrooms[i].name === currentDragItem.name) {\n          newChatrooms[i] = {\n            categoryId: +event.target.id.split('-')[0] === 0 ? null : +event.target.id.split('-')[0],\n            id: currentDragItem.id,\n            name: currentDragItem.name,\n            serverId: currentDragItem.serverId\n          };\n          props.chatroomUpdate({\n            chatroomId: currentDragItem.id,\n            categoryId: +event.target.id.split('-')[0] === 0 ? null : +event.target.id.split('-')[0]\n          });\n          break;\n        }\n      }\n\n      setChatrooms(newChatrooms);\n      setTriggerReload(!triggerReload);\n    }\n  };\n\n  const setItemVisibility = group => {\n    for (let i = 0; i < categories.length; i++) {\n      if (categories[i].name === group.name) {\n        categories[i].visible = !categories[i].visible;\n      }\n    }\n\n    setTriggerReload(!triggerReload);\n  };\n\n  const setServerProperties = item => {\n    setServer(item.name);\n    setServerId(item.serverId);\n  };\n\n  const setCurrentActiveChatroom = item => {\n    setActiveChatroom(item.name);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(ToastMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), isModalOpen || showCategoryModal || showChannelModal ? React.createElement(\"span\", {\n    className: \"contentBackground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidebar-container\",\n    onPointerOver: () => {\n      setHover(\"Home\");\n    },\n    onPointerOut: () => {\n      setHover(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, hover === \"Home\" && server !== \"\" ? React.createElement(\"span\", {\n    className: \"sidebar-hover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }) : null, server === \"\" ? React.createElement(\"span\", {\n    className: \"sidebar-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }) : null, React.createElement(\"img\", {\n    className: \"sidebar-logo\",\n    src: chatot,\n    alt: \"chatter-icon-logo\",\n    onClick: () => {\n      setServer(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), hover === \"Home\" ? React.createElement(\"span\", {\n    className: \"tooltip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Home\")) : null), React.createElement(\"div\", {\n    className: \"sidebar-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), serversList && serversList.length > 0 ? serversList.map((item, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"sidebar-container\",\n      onPointerOver: () => {\n        setHover(item.name);\n      },\n      onPointerOut: () => {\n        setHover(\"\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, hover === item.name && server !== item.name && server !== \"Home\" ? React.createElement(\"span\", {\n      className: \"sidebar-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }) : null, server === item.name ? React.createElement(\"span\", {\n      className: \"sidebar-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }) : null, React.createElement(\"img\", {\n      className: \"sidebar-logo\",\n      src: item.imageUrl ? item.imageUrl : chatot,\n      alt: \"chatter-icon\",\n      onClick: () => {\n        setServerProperties(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), hover === item.name ? React.createElement(\"span\", {\n      className: \"tooltip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, item.name)) : null);\n  }) : null), server === \"\" ? React.createElement(\"div\", {\n    className: \"sidebarleft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidebarleft-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Find or start a conversation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"sidebarleft-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sidebarleft-friendscontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"sidebarleft-logo\",\n    src: friends,\n    alt: \"friends-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"sidebarleft-friends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Friends\")), React.createElement(\"div\", {\n    className: \"sidebarleft-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"sidebarleft-directmessages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, \"Private Messages\")), React.createElement(\"div\", {\n    className: \"sidebarleft-bordertwo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"userinfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"username-image\",\n    src: imageUrl ? imageUrl : chatot,\n    alt: \"username-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  })), active ? React.createElement(\"div\", {\n    className: \"userinfo-online\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }) : null, React.createElement(\"span\", {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, username), React.createElement(\"img\", {\n    className: \"settings-image\",\n    src: settings,\n    alt: \"settings-icon\",\n    onClick: () => {\n      setSettingsOpen(!isSettingsOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    className: \"sidebarleft\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sidebarleft-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"sidebarleft-container-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, server), React.createElement(\"p\", {\n    className: \"sidebarleft-container-dropdown\",\n    onClick: () => {\n      showServerSettings(!serverSettings);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"channelarrow down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  })), serverSettings ? React.createElement(\"div\", {\n    className: \"serversettings-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: invite,\n    alt: \"invite-people\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, \"Invite People\")), React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: serversettings,\n    alt: \"server-settings\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, \"Server Settings\")), React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    onClick: () => {\n      displayChannelModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: createchannel,\n    alt: \"server-settings\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, \"Create Channel\")), React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    onClick: () => {\n      displayCategoryModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: category,\n    alt: \"server-settings\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"Create Category\")), React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: notification,\n    alt: \"server-settings\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, \"Notification Settings\")), React.createElement(\"div\", {\n    className: \"serversettings-modal-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: privacylock,\n    alt: \"server-settings\",\n    height: 25,\n    width: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, \"Privacy Settings\"))) : null), showChannelModal ? React.createElement(ChannelModal, {\n    setNewChannel: event => {\n      setNewChannel(event.target.value);\n    },\n    setShowChannelModal: () => {\n      setShowChannelModal(false);\n    },\n    createNewChannel: () => {\n      createNewChannel();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }) : null, showCategoryModal ? React.createElement(CategoryModal, {\n    setNewCategory: event => {\n      setNewCategory(event.target.value);\n    },\n    setShowCategoryModal: () => {\n      setShowCategoryModal(false);\n    },\n    createNewCategory: () => {\n      createNewCategory();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286\n    },\n    __self: this\n  }) : null, React.createElement(\"div\", {\n    className: \"sidebarleft-mainchat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onDrop: event => {\n      dropItem(event);\n    },\n    onDragOver: event => {\n      draggingOverItem(event);\n    },\n    id: 0 + \"-\" + server,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, chatrooms && chatrooms.length > 0 ? chatrooms.filter(chatroom => chatroom.categoryId === null).map((item, index) => {\n    return React.createElement(\"div\", {\n      key: index,\n      id: 0 + \"-\" + item.name,\n      draggable: \"true\",\n      onDragStart: event => {\n        dragItem(item, event);\n      },\n      onClick: () => {\n        setCurrentActiveChatroom(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: numbersign,\n      alt: \"channel\",\n      height: 16,\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), activeChatroom.name === item.name ? React.createElement(\"span\", {\n      className: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, item.name) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, item.name));\n  }) : null), categories && categories.length ? categories.map((group, categoryIndex) => {\n    return React.createElement(\"div\", {\n      key: categoryIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sidebarleft-mainchat-dropdown\",\n      onClick: () => {\n        setItemVisibility(group);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, group.visible ? React.createElement(\"i\", {\n      className: \"arrow down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }) : React.createElement(\"i\", {\n      className: \"arrow right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, group.name), group.visible ? React.createElement(\"div\", {\n      onDrop: event => {\n        dropItem(event);\n      },\n      onDragOver: event => {\n        draggingOverItem(event);\n      },\n      id: group.id + \"-\" + group.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, chatrooms && chatrooms.length > 0 ? chatrooms.filter(chatroom => chatroom.categoryId === group.id).map((item, index) => {\n      return React.createElement(\"div\", {\n        id: item.categoryId + \"-\" + item.name,\n        key: index,\n        draggable: \"true\",\n        onDragStart: event => {\n          dragItem(item, event);\n        },\n        onClick: () => {\n          setCurrentActiveChatroom(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: numbersign,\n        alt: \"channel\",\n        height: 16,\n        width: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, item.name));\n    }) : null) : null));\n  }) : null)), server !== \"\" ? React.createElement(Chatroom, {\n    activeChatroom: activeChatroom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"mainarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mainarea-topnav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"mainarea-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mainarea-container-addserver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, \"Create\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339\n    },\n    __self: this\n  }, \"Create a new server and invite other people to join!\"), React.createElement(\"button\", {\n    onClick: () => {\n      toggleModal(\"create\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, \"Create a server\")), React.createElement(\"div\", {\n    className: \"mainarea-container-joinserver\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }, \"Join\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344\n    },\n    __self: this\n  }, \"Enter an secret invite code to join an existing server!\"), React.createElement(\"button\", {\n    onClick: () => {\n      toggleModal(\"join\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, \"Join a server\")))), isSettingsOpen ? React.createElement(\"div\", {\n    className: \"usersettings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"usersettings-sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, \"User Settings\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, \"My Account\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }, \"Privacy & Safety\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, \"Connections\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  }, \"Billing\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358\n    },\n    __self: this\n  }, \"App Settings\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }, \"Voice & Video\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360\n    },\n    __self: this\n  }, \"Notifications\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, \"Appearance\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, \"Language\"), React.createElement(\"p\", {\n    onClick: userLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, \"Logout\")), React.createElement(\"div\", {\n    className: \"usersettings-accountcontainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"usersettings-myaccount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }, \"My Account\"), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imageUrl ? imageUrl : chatot,\n    alt: \"username-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-info-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375\n    },\n    __self: this\n  }, username)), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-info-email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, email))), React.createElement(\"div\", {\n    className: \"usersettings-myaccount__container-edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }, \"Edit\")))), React.createElement(\"div\", {\n    className: \"usersettings-authentication\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, \"Two-Factor Authentication\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }, \"Protect your account with an extra layer of security. Once configured you'll be required to enter your password and an authentication code from your mobile device to login.\"), React.createElement(\"div\", {\n    className: \"usersettings-authentication-enable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }, \"Enable\"))), React.createElement(\"div\", {\n    className: \"usersettings-escape\",\n    onClick: () => {\n      setSettingsOpen(!isSettingsOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }, \"\\xD7\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396\n    },\n    __self: this\n  }, \"ESC\")))) : null, isModalOpen && currentModal === \"create\" ? React.createElement(CreateServer, {\n    id: id,\n    region: region,\n    setRegion: region => {\n      setRegion(region);\n    },\n    setModalOpen: () => {\n      setModalOpen(!isModalOpen);\n    },\n    getUpdatedServerList: closeModal => {\n      getUpdatedServerList(closeModal);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402\n    },\n    __self: this\n  }) : null, isModalOpen && currentModal === \"join\" ? React.createElement(JoinServer, {\n    setModalOpen: () => {\n      setModalOpen(!isModalOpen);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }) : null);\n};\n\nconst useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n};\n\nfunction mapStateToProps({\n  usersReducer,\n  serversReducer,\n  categoriesReducer,\n  chatroomsReducer\n}) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    logout: usersReducer.logout,\n    user: usersReducer.user,\n    users: usersReducer.users,\n    serversList: serversReducer.serversList,\n    categoryList: categoriesReducer.categoryList,\n    chatroomList: chatroomsReducer.chatroomList\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Dashboard);","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/views/Dashboard/Dashboard.js"],"names":["React","useState","useEffect","useRef","connect","actions","Redirect","toast","ToastMessage","Chatroom","CreateServer","JoinServer","CategoryModal","ChannelModal","chatot","friends","settings","invite","notification","privacylock","serversettings","category","createchannel","numbersign","Dashboard","props","id","setId","username","setUsername","email","setEmail","imageUrl","setImageUrl","active","setActive","server","setServer","serverId","setServerId","hover","setHover","isSettingsOpen","setSettingsOpen","isModalOpen","setModalOpen","currentModal","setCurrentModal","region","setRegion","serversList","setServersList","serverSettings","showServerSettings","showChannelModal","setShowChannelModal","showCategoryModal","setShowCategoryModal","newCategory","setNewCategory","newChannel","setNewChannel","triggerReload","setTriggerReload","categories","setCategories","currentDragItem","setCurrentDragItem","chatrooms","setChatrooms","activeChatroom","setActiveChatroom","ref","useOnClickOutside","chatroomList","categoryList","user","currentUser","categoryFindAll","getChatrooms","window","addEventListener","detectEscape","event","keyCode","logout","userLogout","toggleModal","value","getUpdatedServerList","closeModal","dismiss","success","position","getUpdatedUser","userId","error","displayChannelModal","createNewChannel","chatroomCreate","name","order","length","visible","displayCategoryModal","createNewCategory","categoryCreate","dragItem","item","dataTransfer","setData","target","draggingOverItem","preventDefault","stopPropagation","dropItem","newChatrooms","i","categoryId","split","chatroomUpdate","chatroomId","setItemVisibility","group","setServerProperties","setCurrentActiveChatroom","map","index","color","filter","chatroom","categoryIndex","handler","listener","current","contains","document","removeEventListener","mapStateToProps","usersReducer","serversReducer","categoriesReducer","chatroomsReducer","isLoading","users"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { Redirect } from 'react-router';\nimport { toast } from 'react-toastify';\nimport ToastMessage from '../../components/ToastMessage/ToastMessage';\nimport Chatroom from '../../components/Chatroom/Chatroom';\nimport CreateServer from '../../components/CreateServer/CreateServer';\nimport JoinServer from '../../components/JoinServer/JoinServer';\nimport CategoryModal from '../../components/CategoryModal/CategoryModal';\nimport ChannelModal from '../../components/ChannelModal/ChannelModal';\nimport './Dashboard.css';\nimport chatot from '../../assets/images/chatot.png';\nimport friends from '../../assets/images/friends.png';\nimport settings from '../../assets/images/settings.png';\nimport invite from '../../assets/images/invite.png';\nimport notification from '../../assets/images/notification.png';\nimport privacylock from '../../assets/images/privacylock.png';\nimport serversettings from '../../assets/images/serversettings.png';\nimport category from '../../assets/images/category.png';\nimport createchannel from '../../assets/images/createchannel.png';\nimport numbersign from '../../assets/images/numbersign.png';\n\nconst Dashboard = (props) => {\n  const [id, setId] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [active, setActive] = useState(false);\n  const [server, setServer] = useState('');\n  const [serverId, setServerId] = useState(null);\n  const [hover, setHover] = useState('');\n  const [isSettingsOpen, setSettingsOpen] = useState(false);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [currentModal, setCurrentModal] = useState(\"\");\n  const [region, setRegion] = useState(\"US West\");\n  const [serversList, setServersList] = useState([]);\n  const [serverSettings, showServerSettings] = useState(false);\n  const [showChannelModal, setShowChannelModal] = useState(false);\n  const [showCategoryModal, setShowCategoryModal] = useState(false);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [newChannel, setNewChannel] = useState(\"\");\n  const [triggerReload, setTriggerReload] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [currentDragItem, setCurrentDragItem] = useState(null);\n  const [chatrooms, setChatrooms] = useState([]);\n  const [activeChatroom, setActiveChatroom] = useState(\"\");\n\n  const ref = useRef();\n  useOnClickOutside(ref, () => setShowCategoryModal(false));\n\n  useEffect(() => {\n    if (props.chatroomList) {\n      setChatrooms(props.chatroomList);\n      setShowChannelModal(false);\n    }\n    if (props.categoryList) {\n      setCategories(props.categoryList);\n      setShowCategoryModal(false);\n    }\n    if(!props.user) {\n      props.currentUser();\n      props.categoryFindAll({\n        serverId: 1\n      });\n      props.getChatrooms({\n        serverId: 1\n      });\n      window.addEventListener('keydown', detectEscape);\n    } else if(props.user) {\n      const { id, username, email, imageUrl, active, serversList } = props.user;\n      setId(id);\n      setUsername(username);\n      setEmail(email);\n      setImageUrl(imageUrl);\n      setActive(active);\n      setServersList(serversList);\n    }\n  }, [props]);\n\n  const detectEscape = (event) => {\n    if (event.keyCode === 27) {\n      setSettingsOpen(false);\n    }\n  }\n\n  if(props.logout) {\n    return <Redirect push to=\"/\" />;\n  }\n\n  const userLogout = () => {\n    props.userLogout({ id: id });\n  }\n\n  const toggleModal = (value) => {\n    setModalOpen(true);\n    setCurrentModal(value);\n  }\n\n  const getUpdatedServerList = (closeModal) => {\n    if (closeModal) {\n      setModalOpen(false);\n      toast.dismiss();\n      toast.success('Success, the server was created!', { position: 'bottom-center' });\n      props.getUpdatedUser({ userId: id });\n    } else {\n      toast.dismiss();\n      toast.error('There was an error creating the server!', { position: 'bottom-center' });\n    }\n  }\n\n  const displayChannelModal = () => {\n    setShowChannelModal(true);\n    showServerSettings(false);\n  }\n\n  const createNewChannel = () => {\n    props.chatroomCreate({\n      name: newChannel,\n      serverId: serverId,\n      order: categories.length,\n      visible: false\n    });\n    setNewChannel('');\n  }\n\n  const displayCategoryModal = () => {\n    setShowCategoryModal(true);\n    showServerSettings(false);\n  }\n\n  const createNewCategory = () => {\n    props.categoryCreate({\n      name: newCategory,\n      serverId: serverId,\n      order: categories.length,\n      visible: false\n    });\n    setNewCategory('');\n  }\n\n  const dragItem = (item, event) => {\n    setCurrentDragItem(item);\n    event.dataTransfer.setData(\"text\", event.target.id);\n  }\n\n  const draggingOverItem = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  const dropItem = (event) => {\n    event.preventDefault();\n    const newChatrooms = chatrooms || [];\n    if (event.target.id !== currentDragItem.category && event.target.id) {\n      for (let i = 0; i < newChatrooms.length; i++) {\n        if (newChatrooms[i].categoryId === currentDragItem.categoryId && newChatrooms[i].name === currentDragItem.name) {\n          newChatrooms[i] = {\n            categoryId: +event.target.id.split('-')[0] === 0 ? null : +event.target.id.split('-')[0],\n            id: currentDragItem.id,\n            name: currentDragItem.name,\n            serverId: currentDragItem.serverId\n          }\n          props.chatroomUpdate({\n            chatroomId: currentDragItem.id,\n            categoryId: +event.target.id.split('-')[0] === 0 ? null : +event.target.id.split('-')[0]\n          });\n          break;\n        }\n      }\n      setChatrooms(newChatrooms);\n      setTriggerReload(!triggerReload);\n    }\n  }\n\n  const setItemVisibility = (group) => {\n    for (let i = 0; i < categories.length; i++) {\n      if (categories[i].name === group.name) {\n        categories[i].visible = !categories[i].visible;\n      }\n    }\n    setTriggerReload(!triggerReload);\n  }\n\n  const setServerProperties = (item) => {\n    setServer(item.name);\n    setServerId(item.serverId);\n  }\n\n  const setCurrentActiveChatroom = (item) => {\n    setActiveChatroom(item.name);\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <ToastMessage />\n      {isModalOpen || showCategoryModal || showChannelModal ? <span className=\"contentBackground\"></span> : null}\n      <div className=\"sidebar\">\n        <div className=\"sidebar-container\" onPointerOver={() => { setHover(\"Home\") }} onPointerOut={() => { setHover(\"\") }}>\n          {hover === \"Home\" && server !== \"\" ? <span className=\"sidebar-hover\"></span> : null}\n          {server === \"\" ? <span className=\"sidebar-select\"></span> : null}\n          <img className=\"sidebar-logo\" src={chatot} alt=\"chatter-icon-logo\" onClick={() => { setServer(\"\") }} />\n          {hover === \"Home\" ? <span className=\"tooltip\"><span>Home</span></span> : null}\n        </div>\n        <div className=\"sidebar-border\" />\n        {serversList && serversList.length > 0 ? serversList.map((item, index)  => {\n          return (\n            <div key={index} className=\"sidebar-container\" onPointerOver={() => { setHover(item.name) }} onPointerOut={() => { setHover(\"\") }}>\n              {hover === item.name && server !== item.name && server !== \"Home\" ? <span className=\"sidebar-hover\"></span> : null}\n              {server === item.name ? <span className=\"sidebar-select\"></span> : null}\n              <img className=\"sidebar-logo\" src={item.imageUrl ? item.imageUrl : chatot} alt=\"chatter-icon\" onClick={() => { setServerProperties(item); }} />\n              {hover === item.name ? <span className=\"tooltip\"><span>{item.name}</span></span> : null}\n            </div>\n          )\n        }) : null}\n      </div>\n      {server === \"\" ?\n        <div className=\"sidebarleft\">\n          <div className=\"sidebarleft-container\">\n            <input placeholder=\"Find or start a conversation\"></input>\n          </div>\n          <div className=\"sidebarleft-border\" />\n          <div className=\"sidebarleft-friendscontainer\">\n            <img className=\"sidebarleft-logo\" src={friends} alt=\"friends-icon\" />\n            <span className=\"sidebarleft-friends\">Friends</span>\n          </div>\n          <div className=\"sidebarleft-border\" />\n          <div className=\"sidebarleft-directmessages\">\n            <span>Private Messages</span>\n          </div>\n          <div className=\"sidebarleft-bordertwo\" />\n          <div className=\"userinfo\">\n            <div className=\"username\">\n              <img className=\"username-image\" src={imageUrl ? imageUrl : chatot} alt=\"username-icon\" />\n            </div>\n            {active ? <div className=\"userinfo-online\"></div> : null}\n            <span style={{ color: 'white' }}>{username}</span>\n            <img className=\"settings-image\" src={settings} alt=\"settings-icon\" onClick={() => { setSettingsOpen(!isSettingsOpen); }} />\n          </div>\n        </div> :\n        <div className=\"sidebarleft\">\n          <div className=\"sidebarleft-container\">\n            <p className=\"sidebarleft-container-header\">{server}</p>\n            <p className=\"sidebarleft-container-dropdown\" onClick={() => { showServerSettings(!serverSettings); }}><i className=\"channelarrow down\"></i></p>\n            {serverSettings ?\n              <div className=\"serversettings-modal\">\n                <div className=\"serversettings-modal-section\">\n                  <img src={invite} alt=\"invite-people\" height={25} width={25} />\n                  <span>Invite People</span>\n                </div>\n                <div className=\"serversettings-modal-section\">\n                  <img src={serversettings} alt=\"server-settings\" height={25} width={25} />\n                  <span>Server Settings</span>\n                </div>\n                <div className=\"serversettings-modal-section\" onClick={() => {\n                  displayChannelModal();\n                }}>\n                  <img src={createchannel} alt=\"server-settings\" height={25} width={25} />\n                  <span>Create Channel</span>\n                </div>\n                <div className=\"serversettings-modal-section\" onClick={() => { displayCategoryModal(); }}>\n                  <img src={category} alt=\"server-settings\" height={25} width={25} />\n                  <span>Create Category</span>\n                </div>\n                <div className=\"serversettings-modal-section\">\n                  <img src={notification} alt=\"server-settings\" height={25} width={25} />\n                  <span>Notification Settings</span>\n                </div>\n                <div className=\"serversettings-modal-section\">\n                  <img src={privacylock} alt=\"server-settings\" height={25} width={25} />\n                  <span>Privacy Settings</span>\n                </div>\n              </div>\n            : null}\n          </div>\n\n          {showChannelModal ?\n            <ChannelModal\n              setNewChannel={(event) => { setNewChannel(event.target.value); }}\n              setShowChannelModal={() => { setShowChannelModal(false); }}\n              createNewChannel={() => { createNewChannel(); }}\n            />\n          : null}\n\n          {showCategoryModal ?\n            <CategoryModal\n              setNewCategory={(event) => { setNewCategory(event.target.value); }}\n              setShowCategoryModal={() => { setShowCategoryModal(false); }}\n              createNewCategory={() => { createNewCategory(); }}\n            />\n          : null}\n\n          <div className=\"sidebarleft-mainchat\">\n            <div onDrop={(event) => { dropItem(event); }} onDragOver={(event) => { draggingOverItem(event); }} id={0 + \"-\" + server}>\n              {chatrooms && chatrooms.length > 0 ? chatrooms.filter(chatroom => chatroom.categoryId === null).map((item, index) => {\n                return (\n                  <div key={index} id={0 + \"-\" + item.name} draggable=\"true\" onDragStart={(event) => { dragItem(item, event); }} onClick={() => { setCurrentActiveChatroom(item); }}>\n                    <img src={numbersign} alt=\"channel\" height={16} width={16} />{activeChatroom.name === item.name ? <span className=\"active\">{item.name}</span> : <span>{item.name}</span>}\n                  </div>\n                )\n              }) : null}\n            </div>\n\n            {categories && categories.length ? categories.map((group, categoryIndex) => {\n              return (\n                <div key={categoryIndex}>\n                  <span\n                    className=\"sidebarleft-mainchat-dropdown\"\n                    onClick={() => { setItemVisibility(group); }}\n                  >\n                    {group.visible ? <i className=\"arrow down\"></i> : <i className=\"arrow right\"></i>}\n                    <span>{group.name}</span>\n                    {group.visible ?\n                    <div onDrop={(event) => { dropItem(event); }} onDragOver={(event) => { draggingOverItem(event); }} id={group.id + \"-\" + group.name}>\n                      {chatrooms && chatrooms.length > 0 ? chatrooms.filter(chatroom => chatroom.categoryId === group.id).map((item, index) => {\n                        return (\n                          <div id={item.categoryId + \"-\" + item.name} key={index} draggable=\"true\" onDragStart={(event) => { dragItem(item, event); }} onClick={() => { setCurrentActiveChatroom(item); }}>\n                            <img src={numbersign} alt=\"channel\" height={16} width={16} /><span>{item.name}</span>\n                          </div>\n                        );\n                      }) : null}\n                    </div> : null}\n                  </span>\n                </div>\n              );\n            }) : null}\n\n          </div>\n        </div>\n      }\n      {server !== \"\" ?\n        <Chatroom activeChatroom={activeChatroom} /> :\n        <div className=\"mainarea\">\n          <div className=\"mainarea-topnav\">\n          </div>\n          <div className=\"mainarea-container\">\n            <div className=\"mainarea-container-addserver\">\n              <h1>Create</h1>\n              <p>Create a new server and invite other people to join!</p>\n              <button onClick={() => { toggleModal(\"create\") }}>Create a server</button>\n            </div>\n            <div className=\"mainarea-container-joinserver\">\n              <h1>Join</h1>\n              <p>Enter an secret invite code to join an existing server!</p>\n              <button onClick={() => { toggleModal(\"join\") }}>Join a server</button>\n            </div>\n          </div>\n        </div>\n      }\n      {isSettingsOpen ?\n        <div className=\"usersettings\">\n          <div className=\"usersettings-sidebar\">\n            <h1>User Settings</h1>\n            <p>My Account</p>\n            <p>Privacy &amp; Safety</p>\n            <p>Connections</p>\n            <p>Billing</p>\n            <h1>App Settings</h1>\n            <p>Voice &amp; Video</p>\n            <p>Notifications</p>\n            <p>Appearance</p>\n            <p>Language</p>\n            <p onClick={userLogout}>Logout</p>\n          </div>\n          <div className=\"usersettings-accountcontainer\">\n            <div className=\"usersettings-myaccount\">\n              <h1>My Account</h1>\n              <div className=\"usersettings-myaccount__container\">\n                <div className=\"usersettings-myaccount__container-image\">\n                  <img src={imageUrl ? imageUrl : chatot} alt=\"username-icon\" />\n                </div>\n                <div className=\"usersettings-myaccount__container-info\">\n                  <div className=\"usersettings-myaccount__container-info-username\">\n                    <span>Username</span><br/>\n                    <span>{username}</span>\n                  </div>\n                  <div className=\"usersettings-myaccount__container-info-email\">\n                    <span>Email Address</span><br/>\n                    <span>{email}</span>\n                  </div>\n                </div>\n                <div className=\"usersettings-myaccount__container-edit\">\n                  <span>Edit</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"usersettings-authentication\">\n              <h1>Two-Factor Authentication</h1>\n              <p>Protect your account with an extra layer of security. Once configured you'll be required to enter your password and an authentication code from your mobile device to login.</p>\n              <div className=\"usersettings-authentication-enable\">\n                <span>Enable</span>\n              </div>\n            </div>\n            <div className=\"usersettings-escape\" onClick={() => { setSettingsOpen(!isSettingsOpen); }}>\n              <span>&#215;</span>\n              <p>ESC</p>\n            </div>\n          </div>\n        </div>\n      : null}\n      {isModalOpen && currentModal === \"create\" ?\n        <CreateServer id={id} region={region} setRegion={(region) => { setRegion(region) }} setModalOpen={() => { setModalOpen(!isModalOpen) }} getUpdatedServerList={(closeModal) => { getUpdatedServerList(closeModal) }} />\n      : null}\n      {isModalOpen && currentModal === \"join\" ?\n        <JoinServer setModalOpen={() => { setModalOpen(!isModalOpen) }}/>\n      : null}\n    </div>\n  );\n}\n\nconst useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n}\n\nfunction mapStateToProps({ usersReducer, serversReducer, categoriesReducer, chatroomsReducer }) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    logout: usersReducer.logout,\n    user: usersReducer.user,\n    users: usersReducer.users,\n    serversList: serversReducer.serversList,\n    categoryList: categoriesReducer.categoryList,\n    chatroomList: chatroomsReducer.chatroomList\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Dashboard);"]},"metadata":{},"sourceType":"module"}