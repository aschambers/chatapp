{"ast":null,"code":"import _objectSpread from \"/Users/metabou/Desktop/chatapp/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport { ROOT_URL } from '../../../config/networkSettings';\nimport { CREATING_CHATROOM, CREATE_CHATROOM_FAIL, CREATE_CHATROOM_SUCCESS, DELETING_CHATROOM, DELETE_CHATROOM_FAIL, DELETE_CHATROOM_SUCCESS, GETTING_CHATROOMS, GET_CHATROOMS_FAIL, GET_CHATROOMS_SUCCESS } from '../../types'; // Initial States\n\nexport const initialState = {\n  isLoading: false,\n  error: false,\n  success: false,\n  user: null\n}; // Reducers\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case CREATING_CHATROOM:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case CREATE_CHATROOM_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true\n      });\n\n    case CREATE_CHATROOM_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case DELETING_CHATROOM:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case DELETE_CHATROOM_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true\n      });\n\n    case DELETE_CHATROOM_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    case GETTING_CHATROOMS:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        error: false,\n        success: false\n      });\n\n    case GET_CHATROOMS_SUCCESS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: false,\n        success: true\n      });\n\n    case GET_CHATROOMS_FAIL:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        error: true,\n        success: false\n      });\n\n    default:\n      return state;\n  }\n}); // Actions\n\nexport const createChatroom = params => async dispatch => {\n  dispatch({\n    type: CREATING_CHATROOM\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/createChatroom\"), params);\n\n    if (response.data) {\n      dispatch({\n        type: CREATE_CHATROOM_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: CREATE_CHATROOM_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: CREATE_CHATROOM_FAIL\n    });\n  }\n};\nexport const deleteChatroom = params => async dispatch => {\n  dispatch({\n    type: DELETING_CHATROOM\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/deleteChatroom\"), params);\n\n    if (response.data) {\n      dispatch({\n        type: DELETE_CHATROOM_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: DELETE_CHATROOM_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: DELETE_CHATROOM_FAIL\n    });\n  }\n};\nexport const getChatrooms = params => async dispatch => {\n  dispatch({\n    type: GETTING_CHATROOMS\n  });\n\n  try {\n    const response = await axios.post(\"\".concat(ROOT_URL, \"/api/v1/getChatrooms\"), params);\n\n    if (response.data) {\n      dispatch({\n        type: GET_CHATROOMS_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: GET_CHATROOMS_FAIL\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: GET_CHATROOMS_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/metabou/Desktop/chatapp/client/src/redux/modules/chatrooms/chatrooms.js"],"names":["axios","ROOT_URL","CREATING_CHATROOM","CREATE_CHATROOM_FAIL","CREATE_CHATROOM_SUCCESS","DELETING_CHATROOM","DELETE_CHATROOM_FAIL","DELETE_CHATROOM_SUCCESS","GETTING_CHATROOMS","GET_CHATROOMS_FAIL","GET_CHATROOMS_SUCCESS","initialState","isLoading","error","success","user","state","action","type","createChatroom","params","dispatch","response","post","data","err","deleteChatroom","getChatrooms"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { ROOT_URL } from '../../../config/networkSettings';\n\nimport {\n  CREATING_CHATROOM,\n  CREATE_CHATROOM_FAIL,\n  CREATE_CHATROOM_SUCCESS,\n  DELETING_CHATROOM,\n  DELETE_CHATROOM_FAIL,\n  DELETE_CHATROOM_SUCCESS,\n  GETTING_CHATROOMS,\n  GET_CHATROOMS_FAIL,\n  GET_CHATROOMS_SUCCESS\n} from '../../types';\n\n// Initial States\nexport const initialState = {\n  isLoading: false,\n  error: false,\n  success: false,\n  user: null\n};\n\n// Reducers\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CREATING_CHATROOM:\n      return {\n        ...state, isLoading: true, error: false, success: false\n      };\n    case CREATE_CHATROOM_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true\n      };\n    case CREATE_CHATROOM_FAIL:\n      return {\n        ...state, isLoading: false, error: true, success: false\n      };\n    case DELETING_CHATROOM:\n      return {\n        ...state, isLoading: true, error: false, success: false\n      };\n    case DELETE_CHATROOM_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true\n      };\n    case DELETE_CHATROOM_FAIL:\n      return {\n        ...state, isLoading: false, error: true, success: false\n      };\n    case GETTING_CHATROOMS:\n      return {\n        ...state, isLoading: true, error: false, success: false\n      };\n    case GET_CHATROOMS_SUCCESS:\n      return {\n        ...state, isLoading: false, error: false, success: true\n      };\n    case GET_CHATROOMS_FAIL:\n      return {\n        ...state, isLoading: false, error: true, success: false\n      };\n    default:\n      return state;\n  }\n};\n\n// Actions\nexport const createChatroom = params => async dispatch => {\n  dispatch({ type: CREATING_CHATROOM });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/createChatroom`, params);\n    if(response.data) {\n      dispatch({ type: CREATE_CHATROOM_SUCCESS });\n    } else {\n      dispatch({ type: CREATE_CHATROOM_FAIL });\n    }\n  } catch(err) {\n    dispatch({ type: CREATE_CHATROOM_FAIL });\n  }\n};\n\nexport const deleteChatroom = params => async dispatch => {\n  dispatch({ type: DELETING_CHATROOM });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/deleteChatroom`, params);\n    if (response.data) {\n      dispatch({ type: DELETE_CHATROOM_SUCCESS });\n    } else {\n      dispatch({ type: DELETE_CHATROOM_FAIL });\n    }\n  } catch (err) {\n    dispatch({ type: DELETE_CHATROOM_FAIL });\n  }\n};\n\nexport const getChatrooms = params => async dispatch => {\n  dispatch({ type: GETTING_CHATROOMS });\n  try {\n    const response = await axios.post(`${ROOT_URL}/api/v1/getChatrooms`, params);\n    if (response.data) {\n      dispatch({ type: GET_CHATROOMS_SUCCESS });\n    } else {\n      dispatch({ type: GET_CHATROOMS_FAIL });\n    }\n  } catch (err) {\n    dispatch({ type: GET_CHATROOMS_FAIL });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}