{"ast":null,"code":"var _jsxFileName = \"/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/components/Chatroom/Chatroom.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from 'socket.io-client';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Chatroom.css';\nimport chatot from '../../assets/images/chatot.png';\nimport numbersign from '../../assets/images/numbersign.png';\nimport voice from '../../assets/images/voice.png';\nimport editwhite from '../../assets/images/editwhite.png';\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.useOnClickOutside = (ref, handler) => {\n      const listener = event => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    };\n\n    this.recordAudioInput = async stream => {\n      if (stream) {\n        try {\n          const configuration = {\n            iceServers: [{\n              \"url\": \"stun:23.21.150.121\"\n            }, {\n              \"url\": \"stun:stun.l.google.com:19302\"\n            }]\n          };\n          await this.setState({\n            myConnection: new RTCPeerConnection(configuration)\n          });\n          await stream.getTracks().forEach(track => this.state.myConnection.addTrack(track, stream)); // onicecandidate event\n\n          this.state.myConnection.onicecandidate = ({\n            candidate\n          }) => {\n            this.socket.emit('SEND_ICE_CANDIDATE', {\n              candidate: candidate\n            });\n          }; // on negotiation needed event\n\n\n          this.state.myConnection.onnegotiationneeded = async () => {\n            console.log(\"negotiating in \".concat(this.state.myConnection.signalingState));\n            if (this.state.negotiating) return;\n            if (this.state.myConnection.signalingState !== 'stable') return;\n            this.setState({\n              negotiating: true\n            });\n\n            try {\n              await this.state.myConnection.setLocalDescription((await this.state.myConnection.createOffer()));\n              this.socket.emit('SEND_OFFER', {\n                desc: this.state.myConnection.localDescription,\n                type: 'audio-offer'\n              });\n            } catch (err) {\n              console.error(err);\n            } finally {\n              this.state.negotiating = false;\n            }\n          }; // when track is added\n\n\n          this.state.myConnection.ontrack = event => {\n            // don't set srcObject again if it is already set.\n            const remoteAudio = document.getElementById('remoteAudio');\n            if (remoteAudio.srcObject) return;\n            remoteAudio.srcObject = event.streams[0];\n            remoteAudio.autoplay = true;\n          };\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        const localAudio = document.getElementById('localAudio');\n        localAudio.srcObject = null;\n        localAudio.autoplay = false;\n        const remoteAudio = document.getElementById('remoteAudio');\n        remoteAudio.srcObject = null;\n        remoteAudio.autoplay = false;\n      }\n    };\n\n    this.onCreateOfferSuccess = async desc => {\n      try {\n        await this.state.myConnection.setLocalDescription(desc);\n        const data = {\n          desc: desc,\n          username: this.state.username,\n          type: 'audio-offer',\n          sdp: this.state.myConnection.localDescription\n        };\n        this.socket.emit('SEND_OFFER', data);\n      } catch (e) {\n        console.log('session desc error creating offer: ' + e);\n      }\n    };\n\n    this.onCreateAnswerSuccess = async (desc, username) => {\n      try {\n        await this.state.remoteConnection.setLocalDescription(desc);\n        await this.state.myConnection.setRemoteDescription(desc);\n        const data = {\n          desc: desc,\n          username: username\n        };\n        this.socket.emit('SEND_ANSWER', data);\n      } catch (e) {\n        console.log('create answer error: ' + e);\n      }\n    };\n\n    this.sendMessage = event => {\n      if (event) {\n        event.preventDefault();\n        const data = {\n          username: this.props.username,\n          message: this.state.message,\n          userId: this.props.userId,\n          chatroomId: this.state.chatroomId,\n          room: this.state.room\n        };\n        this.socket.emit('CHATROOM_MESSAGE', data);\n        this.setState({\n          message: \"\"\n        });\n      }\n    };\n\n    this.sideContextMenu = (event, item) => {\n      event.preventDefault();\n      this.setState({\n        sideRightClickedUser: item,\n        sideUserModalOpen: true\n      });\n    };\n\n    this.contextMenu = (event, item) => {\n      event.preventDefault();\n      this.setState({\n        rightClickedUser: item,\n        userModalOpen: true,\n        messageMenu: false,\n        editingMessage: null\n      });\n    };\n\n    this.privateMessageUser = () => {\n      this.setState({\n        messages: []\n      });\n      this.props.privateMessageUser(this.state.rightClickedUser);\n    };\n\n    this.sidePrivateMessageUser = () => {\n      this.setState({\n        messages: []\n      });\n      this.props.privateMessageUser(this.state.sideRightClickedUser);\n    };\n\n    this.openMessageMenu = item => {\n      this.setState({\n        messageMenu: true,\n        editMessage: item\n      });\n    };\n\n    this.deleteChatroomMessage = () => {\n      const data = {\n        username: this.props.username,\n        message: this.state.message,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        messageId: this.state.editMessage.id,\n        room: this.state.room\n      };\n      this.socket.emit('DELETE_CHATROOM_MESSAGE', data);\n    };\n\n    this.editChatroomMessage = () => {\n      this.setState({\n        editingMessage: this.state.editMessage,\n        newMessage: this.state.editMessage.message,\n        hover: \"\"\n      }, () => {\n        this.setState({\n          editMessage: null,\n          messageMenu: false\n        });\n      });\n    };\n\n    this.detectEscape = event => {\n      if (event.keyCode === 27 && !this.state.messageMenu) {\n        this.setState({\n          editingMessage: this.state.editMessage,\n          newMessage: \"\"\n        });\n      }\n    };\n\n    this.sendEditedMessage = event => {\n      event.preventDefault();\n      const data = {\n        username: this.props.username,\n        message: this.state.newMessage,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        messageId: this.state.editingMessage.id,\n        room: this.state.room\n      };\n      this.socket.emit('EDIT_CHATROOM_MESSAGE', data);\n    };\n\n    this.kickUser = user => {\n      const data = {\n        serverId: this.state.serverId,\n        chatroomId: this.state.chatroomId,\n        type: 'user',\n        userId: user.userId,\n        room: this.state.room\n      };\n      this.socket.emit('KICK_SERVER_USER', data);\n    };\n\n    this.banUser = user => {\n      const data = {\n        serverId: this.state.serverId,\n        chatroomId: this.state.chatroomId,\n        type: 'user',\n        userId: user.userId,\n        room: this.state.room\n      };\n      this.socket.emit('BAN_SERVER_USER', data);\n    };\n\n    this.ref = React.createRef();\n    this.useOnClickOutside(this.ref, () => this.setState({\n      messageMenu: false,\n      userModalOpen: false,\n      sideUserModalOpen: false\n    }));\n    this.state = {\n      id: \"\",\n      username: \"\",\n      active: false,\n      type: \"\",\n      imageUrl: \"\",\n      message: \"\",\n      messages: [],\n      users: [],\n      clickedUsername: \"\",\n      clickedType: \"\",\n      privateMessages: [],\n      personalMessages: [],\n      userDetails: false,\n      socketId: \"\",\n      currentSocket: \"\",\n      rightClickedUser: {},\n      sideRightClickedUser: {},\n      sideUserModalOpen: false,\n      userModalOpen: false,\n      namespace: null,\n      room: null,\n      serverId: null,\n      previousRoom: null,\n      currentChatroom: null,\n      editMessage: null,\n      messageMenu: false,\n      editingMessage: null,\n      newMessage: \"\",\n      hover: \"\",\n      serverUserList: [],\n      isLoading: false,\n      chunks: [],\n      myConnection: null,\n      remoteConnection: null,\n      voiceUsers: [],\n      negotiating: false\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener('keydown', this.detectEscape);\n    this.props.getUsers();\n    this.socket = io(ROOT_URL);\n    this.socket.on('connect', () => {\n      this.setState({\n        serverUserList: this.props.serverUserList,\n        socketId: this.socket.id,\n        namespace: \"\".concat(ROOT_URL, \"/\").concat(this.props.serverId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        serverId: this.props.serverId,\n        currentChatroom: this.props.activeChatroom,\n        chatroomId: this.props.activeChatroomId,\n        username: this.props.username\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.socket.id,\n        chatroomId: this.props.activeChatroomId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId)\n      });\n      this.socket.emit('GET_SERVER_LIST', {\n        socketId: this.socket.id,\n        serverId: this.props.serverId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(this.props.serverId, \"/\").concat(this.props.activeChatroomId)\n      });\n    });\n    this.socket.on('RECEIVE_CHATROOM_MESSAGES', data => {\n      this.setState({\n        messageMenu: false,\n        editMessage: null,\n        editingMessage: null,\n        newMessage: \"\"\n      }); // scroll to latest message after rendering messages in firefox\n\n      if (navigator.userAgent.search(\"Firefox\") > -1 || navigator.userAgent.search(\"Edge\") > -1) {\n        this.setState({\n          messages: data.reverse()\n        }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0 || navigator.userAgent.search(\"Edge\") < 0) {\n        this.setState({\n          messages: data\n        });\n      }\n    });\n    this.socket.on('RECEIVE_SERVER_LIST', data => {\n      const index = data.findIndex(x => x.username === this.state.username);\n\n      if (index < 0) {\n        this.props.leaveServer();\n      } else if (index > -1) {\n        this.props.refreshServerUsers();\n        this.setState({\n          userModalOpen: false,\n          sideUserModalOpen: false,\n          rightClickedUser: {},\n          sideRightClickedUser: {},\n          serverUserList: data\n        });\n      }\n    });\n    this.socket.on('RECEIVE_ICE_CANDIDATE', async candidate => {\n      await this.state.myConnection.addIceCandidate(new RTCIceCandidate(candidate)).catch(err => console.log(err));\n    });\n    this.socket.on('RECEIVE_OFFER', async data => {\n      console.log('offer: ' + data.username);\n\n      if (data.username !== this.state.username) {\n        console.log('receive offer data: ' + data);\n\n        try {\n          const configuration = {\n            iceServers: [{\n              urls: 'stun:stun.l.google.com:19302' // Google's public STUN server\n\n            }]\n          };\n          await this.state.myConnection.setRemoteDescription(data.desc);\n          const constraints = {\n            audio: true,\n            video: false\n          };\n          const stream = await navigator.mediaDevices.getUserMedia(constraints);\n          stream.getTracks().forEach(track => {\n            console.log(\"adding \".concat(track.kind, \" track\"));\n            this.state.myConnection.addTrack(track, stream);\n          }); // // 1. Create new connection\n          // const newConnection = new RTCPeerConnection(configuration);\n          // // 2. Set remote description with new RTCSessionDescription\n          // await newConnection.setRemoteDescription(new RTCSessionDescription(data.desc));\n          // // 3. Get stream\n          // const constraints = { audio: true, video: false };\n          // const stream = await navigator.mediaDevices.getUserMedia(constraints);\n          // if (!stream) return;\n          // const remoteAudio = document.getElementById('remoteAudio');\n          // remoteAudio.srcObject = stream;\n          // remoteAudio.autoplay = true;\n          // // 4. Add tracks from stream\n          // await stream.getTracks().forEach(track => {\n          //   newConnection.addTrack(track, stream);\n          // });\n          // // 5. Create answer to sdp offer\n          // const answer = await newConnection.createAnswer();\n          // if (!answer) return;\n          // // 6. Set local description using answer\n          // await newConnection.setLocalDescription(answer);\n          // // 7. Send a message back to sender\n          // const message = {\n          //   answer: answer,\n          //   username: data.username,\n          //   type: 'audio-answer',\n          //   sdp: newConnection.localDescription\n          // }\n          // this.socket.emit('SEND_ANSWER', message);\n        } catch (error) {\n          console.log('set remote desc error');\n        }\n      }\n    });\n    this.socket.on('RECEIVE_ANSWER', async data => {\n      console.log('answer: ' + data.username);\n\n      if (data.username === this.state.username) {\n        console.log('receive answer data: ' + data); // Let my connection know how their connection is configured\n\n        this.state.myConnection.setRemoteDescription(new RTCSessionDescription(data.answer));\n\n        try {\n          console.log('try');\n        } catch (e) {\n          console.log('receive answer error: ' + e);\n        }\n      }\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.username) {\n      this.setState({\n        username: nextProps.username\n      });\n    }\n\n    if (nextProps.serverUserList) {\n      this.setState({\n        serverUserList: nextProps.serverUserList\n      });\n    }\n\n    if (nextProps.activeChatroomId !== this.state.chatroomId && this.state.chatroomId !== undefined) {\n      this.setState({\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(this.state.chatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(nextProps.activeChatroomId),\n        serverId: nextProps.serverId,\n        currentChatroom: nextProps.activeChatroom,\n        chatroomId: nextProps.activeChatroomId\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.state.socketId,\n        chatroomId: nextProps.activeChatroomId,\n        previousRoom: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(this.state.chatroomId),\n        room: \"\".concat(ROOT_URL, \"/chatroom/\").concat(nextProps.serverId, \"/\").concat(nextProps.activeChatroomId)\n      });\n    }\n\n    if (nextProps.users && nextProps.users.length) {\n      const userList = [];\n\n      for (let i = 0; i < nextProps.users.length; i++) {\n        userList.push(nextProps.users[i]);\n      }\n\n      this.setState({\n        users: userList\n      });\n    }\n\n    if (nextProps.activeChatroomType === \"voice\" && nextProps.audioStream) {\n      this.setState({\n        localStream: nextProps.localStream\n      });\n      this.recordAudioInput(nextProps.audioStream);\n    }\n\n    if (nextProps.activeChatroomType !== \"voice\") {\n      this.setState({\n        localStream: null\n      });\n      this.recordAudioInput(null);\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('LEAVE_CHATROOMS', {\n      room: this.state.room\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chatroom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      id: \"localAudio\",\n      style: {\n        \"display\": \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }), React.createElement(\"audio\", {\n      id: \"remoteAudio\",\n      style: {\n        \"display\": \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"chatarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"chatarea-topbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.activeChatroomType === \"text\" ? numbersign : voice,\n      alt: \"channel\",\n      height: 16,\n      width: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, this.props.activeChatroom)), React.createElement(\"div\", {\n      id: \"chatareamessages\",\n      className: \"chatarea-messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n      const moderate = this.state.serverUserList.length > 0 && this.state.serverUserList.some(serverItem => serverItem['username'] !== this.state.username && serverItem['username'] === item.username && serverItem['type'] !== 'owner' && serverItem['type'] !== 'admin');\n      return React.createElement(\"div\", {\n        id: \"message\" + index,\n        key: index,\n        onMouseEnter: () => {\n          this.setState({\n            hover: this.state.editingMessage || this.state.messageMenu || this.props.userId !== item.userId ? \"\" : \"message\" + index\n          });\n        },\n        onMouseLeave: () => {\n          this.setState({\n            hover: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chatarea-messages-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"chatarea-messages-user\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.contextMenu(event, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, item.username), React.createElement(Moment, {\n        format: \"MM/DD/YYYY\",\n        date: item.updatedAt,\n        className: \"chatarea-messages-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }), this.state.hover === \"message\" + index ? React.createElement(\"span\", {\n        className: \"chatarea-messages-menu\",\n        onClick: () => {\n          this.openMessageMenu(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: editwhite,\n        height: 15,\n        width: 15,\n        alt: \"edit message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      })) : null, this.state.messageMenu && this.state.editMessage.id === item.id ? React.createElement(\"div\", {\n        className: \"chatarea-messages-editmenu\",\n        ref: this.ref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            editMessage: null,\n            messageMenu: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.editChatroomMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.deleteChatroomMessage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, \"Delete\")) : null, this.state.userModalOpen && this.state.rightClickedUser.id === item.id ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-usermodalmod\" : \"chatarea-messages-usermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            userModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.privateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-usermodalmod-privatemessage\" : \"chatarea-messages-usermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(item);\n        },\n        className: \"chatarea-messages-usermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, \"Kick \", item.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(item);\n        },\n        className: \"chatarea-messages-usermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, \"Ban \", item.username) : null) : null), this.state.editingMessage !== null && this.state.editingMessage.id === item.id ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"chatarea-messages-editmessage\",\n        onChange: event => {\n          this.setState({\n            newMessage: event.target.value\n          });\n        },\n        value: this.state.newMessage,\n        onKeyDown: event => {\n          event.keyCode === 13 && event.shiftKey === false ? this.sendEditedMessage(event) : this.sendMessage(null);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"chatarea-messages-editmessage-note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, \"escape to cancel \\u2022 enter to save\")) : React.createElement(\"p\", {\n        className: \"chatarea-messages-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, item.message));\n    }) : null), React.createElement(\"div\", {\n      className: \"chatarea-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Send a message!\",\n      type: \"text\",\n      onChange: event => {\n        this.setState({\n          message: event.target.value\n        });\n      },\n      value: this.state.message,\n      onKeyDown: event => {\n        event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"sidebarright\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebarright-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Filter users in server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sidebarright-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, \"Room Owners\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'owner' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, user.type === 'owner' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      })) : null, user.type === 'owner' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }) : null, user.type === 'owner' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }) : null, user.type === 'owner' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'owner' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, \"Send Message\")) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'owner') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }, \"Administrators\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'admin' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        },\n        __self: this\n      }, user.type === 'admin' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      })) : null, user.type === 'admin' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }) : null, user.type === 'admin' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }) : null, user.type === 'admin' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'admin' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, \"Send Message\")) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'admin') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, \"Moderators\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      const moderate = user.username !== this.state.username;\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'moderator' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, user.type === 'moderator' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      })) : null, user.type === 'moderator' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }) : null, user.type === 'moderator' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }) : null, user.type === 'moderator' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'moderator' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, \"Kick \", user.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, \"Ban \", user.username) : null) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'moderator') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }, \"Voice\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      const moderate = user.username !== this.state.username;\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'voice' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      }, user.type === 'voice' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      })) : null, user.type === 'voice' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }) : null, user.type === 'voice' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }) : null, user.type === 'voice' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'voice' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }, \"Kick \", user.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623\n        },\n        __self: this\n      }, \"Ban \", user.username) : null) : null) : null);\n    }) : null, this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'voice') ? React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"sidebarright-authority\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, \"Users\")), React.createElement(\"div\", {\n      className: \"sidebarright-bordertwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }), this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n      const moderate = user.username !== this.state.username;\n      return React.createElement(\"div\", {\n        key: index,\n        className: user.type === 'user' ? \"sidebarright-usercontainer\" : \"\",\n        onClick: this.handleClick,\n        onContextMenu: event => {\n          this.sideContextMenu(event, user);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639\n        },\n        __self: this\n      }, user.type === 'user' ? React.createElement(\"div\", {\n        className: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"username-image\",\n        src: user.imageUrl ? user.imageUrl : chatot,\n        alt: \"username-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641\n        },\n        __self: this\n      })) : null, user.type === 'user' && user.active ? React.createElement(\"div\", {\n        className: \"userinfo-online\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }) : null, user.type === 'user' && !user.active ? React.createElement(\"div\", {\n        className: \"userinfo-offline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }) : null, user.type === 'user' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sidebarright-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647\n        },\n        __self: this\n      }, user.username), this.state.sideUserModalOpen && user.type === 'user' && this.state.sideRightClickedUser.username === user.username ? React.createElement(\"div\", {\n        ref: this.ref,\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 649\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          this.setState({\n            sideUserModalOpen: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650\n        },\n        __self: this\n      }, \"\\u2715\"), React.createElement(\"p\", {\n        onClick: () => {\n          this.sidePrivateMessageUser();\n        },\n        className: moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651\n        },\n        __self: this\n      }, \"Send Message\"), moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.kickUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-kick\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653\n        },\n        __self: this\n      }, \"Kick \", user.username) : null, moderate === true ? React.createElement(\"p\", {\n        onClick: () => {\n          this.banUser(user);\n        },\n        className: \"chatarea-messages-sideusermodalmod-ban\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655\n        },\n        __self: this\n      }, \"Ban \", user.username) : null) : null) : null);\n    }) : null));\n  }\n\n}\n\nfunction mapStateToProps({\n  usersReducer\n}) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Chatroom);","map":{"version":3,"sources":["/Users/metabou/Desktop/ChatterSanctum/chatapp/client/src/components/Chatroom/Chatroom.js"],"names":["React","Component","connect","actions","ROOT_URL","io","Moment","chatot","numbersign","voice","editwhite","Chatroom","constructor","props","useOnClickOutside","ref","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","recordAudioInput","stream","configuration","iceServers","setState","myConnection","RTCPeerConnection","getTracks","forEach","track","state","addTrack","onicecandidate","candidate","socket","emit","onnegotiationneeded","console","log","signalingState","negotiating","setLocalDescription","createOffer","desc","localDescription","type","err","error","ontrack","remoteAudio","getElementById","srcObject","streams","autoplay","localAudio","onCreateOfferSuccess","data","username","sdp","e","onCreateAnswerSuccess","remoteConnection","setRemoteDescription","sendMessage","preventDefault","message","userId","chatroomId","room","sideContextMenu","item","sideRightClickedUser","sideUserModalOpen","contextMenu","rightClickedUser","userModalOpen","messageMenu","editingMessage","privateMessageUser","messages","sidePrivateMessageUser","openMessageMenu","editMessage","deleteChatroomMessage","messageId","id","editChatroomMessage","newMessage","hover","detectEscape","keyCode","sendEditedMessage","kickUser","user","serverId","banUser","createRef","active","imageUrl","users","clickedUsername","clickedType","privateMessages","personalMessages","userDetails","socketId","currentSocket","namespace","previousRoom","currentChatroom","serverUserList","isLoading","chunks","voiceUsers","componentDidMount","window","getUsers","on","activeChatroomId","activeChatroom","navigator","userAgent","search","reverse","length","element","scrollIntoView","index","findIndex","x","leaveServer","refreshServerUsers","addIceCandidate","RTCIceCandidate","catch","urls","constraints","audio","video","mediaDevices","getUserMedia","kind","RTCSessionDescription","answer","componentWillReceiveProps","nextProps","undefined","userList","i","push","activeChatroomType","audioStream","localStream","componentWillUnmount","render","map","moderate","some","serverItem","handleClick","updatedAt","value","shiftKey","mapStateToProps","usersReducer","success"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../redux';\nimport { ROOT_URL } from '../../config/networkSettings';\nimport io from 'socket.io-client';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\nimport './Chatroom.css';\nimport chatot from '../../assets/images/chatot.png';\nimport numbersign from '../../assets/images/numbersign.png';\nimport voice from '../../assets/images/voice.png';\nimport editwhite from '../../assets/images/editwhite.png';\n\nclass Chatroom extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.useOnClickOutside(this.ref, () => this.setState({ messageMenu: false, userModalOpen: false, sideUserModalOpen: false }));\n\n    this.state = {\n      id: \"\",\n      username: \"\",\n      active: false,\n      type: \"\",\n      imageUrl: \"\",\n      message: \"\",\n      messages: [],\n      users: [],\n      clickedUsername: \"\",\n      clickedType: \"\",\n      privateMessages: [],\n      personalMessages: [],\n      userDetails: false,\n      socketId: \"\",\n      currentSocket: \"\",\n      rightClickedUser: {},\n      sideRightClickedUser: {},\n      sideUserModalOpen: false,\n      userModalOpen: false,\n      namespace: null,\n      room: null,\n      serverId: null,\n      previousRoom: null,\n      currentChatroom: null,\n      editMessage: null,\n      messageMenu: false,\n      editingMessage: null,\n      newMessage: \"\",\n      hover: \"\",\n      serverUserList: [],\n      isLoading: false,\n      chunks: [],\n      myConnection: null,\n      remoteConnection: null,\n      voiceUsers: [],\n      negotiating: false\n    }\n  }\n\n  useOnClickOutside = (ref, handler) => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener('keydown', this.detectEscape);\n    this.props.getUsers();\n\n    this.socket = io(ROOT_URL);\n\n    this.socket.on('connect', () => {\n      this.setState({ serverUserList: this.props.serverUserList, socketId: this.socket.id, namespace: `${ROOT_URL}/${this.props.serverId}`, room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`, previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`, serverId: this.props.serverId, currentChatroom: this.props.activeChatroom, chatroomId: this.props.activeChatroomId, username: this.props.username });\n\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.socket.id,\n        chatroomId: this.props.activeChatroomId,\n        previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`,\n        room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`\n      });\n\n      this.socket.emit('GET_SERVER_LIST', {\n        socketId: this.socket.id,\n        serverId: this.props.serverId,\n        previousRoom: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`,\n        room: `${ROOT_URL}/chatroom/${this.props.serverId}/${this.props.activeChatroomId}`\n      });\n    });\n\n    this.socket.on('RECEIVE_CHATROOM_MESSAGES', (data) => {\n      this.setState({ messageMenu: false, editMessage: null, editingMessage: null, newMessage: \"\" });\n      // scroll to latest message after rendering messages in firefox\n      if (navigator.userAgent.search(\"Firefox\") > -1 || navigator.userAgent.search(\"Edge\") > -1) {\n        this.setState({ messages: data.reverse() }, () => {\n          if (data && data.length > 0) {\n            const element = \"message\" + (this.state.messages.length - 1);\n            if (document.getElementById(element)) {\n              document.getElementById(element).scrollIntoView();\n            }\n          }\n        });\n      } else if (navigator.userAgent.search(\"Firefox\") < 0 || navigator.userAgent.search(\"Edge\") < 0) {\n        this.setState({ messages: data });\n      }\n    });\n\n    this.socket.on('RECEIVE_SERVER_LIST', (data) => {\n      const index = data.findIndex(x => x.username === this.state.username);\n      if (index < 0) {\n        this.props.leaveServer();\n      } else if (index > -1) {\n        this.props.refreshServerUsers();\n        this.setState({ userModalOpen: false, sideUserModalOpen: false, rightClickedUser: {}, sideRightClickedUser: {}, serverUserList: data });\n      }\n    });\n\n\n    this.socket.on('RECEIVE_ICE_CANDIDATE', async(candidate) => {\n      await this.state.myConnection.addIceCandidate(new RTCIceCandidate(candidate)).catch(err => console.log(err));\n    });\n\n\n\n    this.socket.on('RECEIVE_OFFER', async(data) => {\n      console.log('offer: ' + data.username);\n      if (data.username !== this.state.username) {\n        console.log('receive offer data: ' + data);\n        try {\n          const configuration = {\n            iceServers: [{\n              urls: 'stun:stun.l.google.com:19302' // Google's public STUN server\n            }]\n          };\n\n          await this.state.myConnection.setRemoteDescription(data.desc);\n          const constraints = { audio: true, video: false };\n          const stream = await navigator.mediaDevices.getUserMedia(constraints);\n          stream.getTracks().forEach((track) => {\n            console.log(`adding ${track.kind} track`);\n            this.state.myConnection.addTrack(track, stream);\n          });\n\n\n\n\n\n\n          // // 1. Create new connection\n          // const newConnection = new RTCPeerConnection(configuration);\n\n          // // 2. Set remote description with new RTCSessionDescription\n          // await newConnection.setRemoteDescription(new RTCSessionDescription(data.desc));\n\n          // // 3. Get stream\n          // const constraints = { audio: true, video: false };\n          // const stream = await navigator.mediaDevices.getUserMedia(constraints);\n          // if (!stream) return;\n\n          // const remoteAudio = document.getElementById('remoteAudio');\n          // remoteAudio.srcObject = stream;\n          // remoteAudio.autoplay = true;\n\n          // // 4. Add tracks from stream\n          // await stream.getTracks().forEach(track => {\n          //   newConnection.addTrack(track, stream);\n          // });\n\n          // // 5. Create answer to sdp offer\n          // const answer = await newConnection.createAnswer();\n          // if (!answer) return;\n\n          // // 6. Set local description using answer\n          // await newConnection.setLocalDescription(answer);\n\n          // // 7. Send a message back to sender\n          // const message = {\n          //   answer: answer,\n          //   username: data.username,\n          //   type: 'audio-answer',\n          //   sdp: newConnection.localDescription\n          // }\n          // this.socket.emit('SEND_ANSWER', message);\n        } catch (error) {\n          console.log('set remote desc error');\n        }\n      }\n    });\n\n    this.socket.on('RECEIVE_ANSWER', async(data) => {\n      console.log('answer: ' + data.username);\n      if (data.username === this.state.username) {\n        console.log('receive answer data: ' + data);\n        // Let my connection know how their connection is configured\n        this.state.myConnection.setRemoteDescription(new RTCSessionDescription(data.answer));\n        try {\n          console.log('try');\n        } catch (e) {\n          console.log('receive answer error: ' + e);\n        }\n      }\n    });\n  }\n\n  recordAudioInput = async(stream) => {\n    if (stream) {\n      try {\n        const configuration = {\n          iceServers: [{\n            \"url\": \"stun:23.21.150.121\"\n          }, {\n            \"url\": \"stun:stun.l.google.com:19302\"\n          }]\n        };\n\n        await this.setState({ myConnection: new RTCPeerConnection(configuration) });\n\n        await stream.getTracks().forEach((track) => this.state.myConnection.addTrack(track, stream));\n\n\n        // onicecandidate event\n        this.state.myConnection.onicecandidate = ({\n          candidate\n        }) => {\n          this.socket.emit('SEND_ICE_CANDIDATE', {\n            candidate: candidate\n          });\n        };\n\n        // on negotiation needed event\n        this.state.myConnection.onnegotiationneeded = async() => {\n          console.log(`negotiating in ${this.state.myConnection.signalingState}`);\n\n          if (this.state.negotiating) return;\n          if (this.state.myConnection.signalingState !== 'stable') return;\n          this.setState({\n            negotiating: true\n          });\n\n          try {\n            await this.state.myConnection.setLocalDescription(await this.state.myConnection.createOffer());\n            this.socket.emit('SEND_OFFER', {\n              desc: this.state.myConnection.localDescription,\n              type: 'audio-offer'\n            });\n          } catch (err) {\n            console.error(err);\n          } finally {\n            this.state.negotiating = false;\n          }\n        }\n\n        // when track is added\n        this.state.myConnection.ontrack = (event) => {\n          // don't set srcObject again if it is already set.\n          const remoteAudio = document.getElementById('remoteAudio');\n          if (remoteAudio.srcObject) return;\n          remoteAudio.srcObject = event.streams[0];\n          remoteAudio.autoplay = true;\n        };\n\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      const localAudio = document.getElementById('localAudio');\n      localAudio.srcObject = null;\n      localAudio.autoplay = false;\n      const remoteAudio = document.getElementById('remoteAudio');\n      remoteAudio.srcObject = null;\n      remoteAudio.autoplay = false;\n    }\n  }\n\n  onCreateOfferSuccess = async(desc) => {\n    try {\n      await this.state.myConnection.setLocalDescription(desc);\n      const data = {\n        desc: desc,\n        username: this.state.username,\n        type: 'audio-offer',\n        sdp: this.state.myConnection.localDescription\n      }\n      this.socket.emit('SEND_OFFER', data);\n    } catch (e) {\n      console.log('session desc error creating offer: ' + e);\n    }\n  }\n\n  onCreateAnswerSuccess = async(desc, username) => {\n    try {\n      await this.state.remoteConnection.setLocalDescription(desc);\n      await this.state.myConnection.setRemoteDescription(desc);\n      const data = {\n        desc: desc,\n        username: username\n      }\n      this.socket.emit('SEND_ANSWER', data);\n    } catch (e) {\n      console.log('create answer error: ' + e);\n    }\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    if (nextProps.username) {\n      this.setState({ username: nextProps.username });\n    }\n    if (nextProps.serverUserList) {\n      this.setState({ serverUserList: nextProps.serverUserList });\n    }\n    if (nextProps.activeChatroomId !== this.state.chatroomId && this.state.chatroomId !== undefined) {\n      this.setState({\n        previousRoom: `${ROOT_URL}/chatroom/${nextProps.serverId}/${this.state.chatroomId}`,\n        room: `${ROOT_URL}/chatroom/${nextProps.serverId}/${nextProps.activeChatroomId}`,\n        serverId: nextProps.serverId,\n        currentChatroom: nextProps.activeChatroom,\n        chatroomId: nextProps.activeChatroomId\n      });\n      this.socket.emit('GET_CHATROOM_MESSAGES', {\n        socketId: this.state.socketId,\n        chatroomId: nextProps.activeChatroomId,\n        previousRoom: `${ROOT_URL}/chatroom/${nextProps.serverId}/${this.state.chatroomId}`,\n        room: `${ROOT_URL}/chatroom/${nextProps.serverId}/${nextProps.activeChatroomId}`\n      });\n    }\n\n    if (nextProps.users && nextProps.users.length) {\n      const userList = [];\n      for(let i = 0; i < nextProps.users.length; i++) {\n        userList.push(nextProps.users[i]);\n      }\n      this.setState({ users: userList });\n    }\n\n    if (nextProps.activeChatroomType === \"voice\" && nextProps.audioStream) {\n      this.setState({ localStream: nextProps.localStream });\n      this.recordAudioInput(nextProps.audioStream);\n    }\n\n    if (nextProps.activeChatroomType !== \"voice\") {\n      this.setState({ localStream: null });\n      this.recordAudioInput(null);\n    }\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('LEAVE_CHATROOMS', {\n      room: this.state.room\n    });\n  }\n\n  sendMessage = (event) => {\n    if (event) {\n      event.preventDefault();\n      const data = {\n        username: this.props.username,\n        message: this.state.message,\n        userId: this.props.userId,\n        chatroomId: this.state.chatroomId,\n        room: this.state.room\n      };\n      this.socket.emit('CHATROOM_MESSAGE', data);\n      this.setState({ message: \"\" });\n    }\n  }\n\n  sideContextMenu = (event, item) => {\n    event.preventDefault();\n    this.setState({ sideRightClickedUser: item, sideUserModalOpen: true });\n  }\n\n  contextMenu = (event, item) => {\n    event.preventDefault();\n    this.setState({ rightClickedUser: item, userModalOpen: true, messageMenu: false, editingMessage: null });\n  }\n\n  privateMessageUser = () => {\n    this.setState({ messages: [] });\n    this.props.privateMessageUser(this.state.rightClickedUser);\n  }\n\n  sidePrivateMessageUser = () => {\n    this.setState({ messages: [] });\n    this.props.privateMessageUser(this.state.sideRightClickedUser);\n  }\n\n  openMessageMenu = (item) => {\n    this.setState({ messageMenu: true, editMessage: item });\n  }\n\n  deleteChatroomMessage = () => {\n    const data = {\n      username: this.props.username,\n      message: this.state.message,\n      userId: this.props.userId,\n      chatroomId: this.state.chatroomId,\n      messageId: this.state.editMessage.id,\n      room: this.state.room\n    };\n    this.socket.emit('DELETE_CHATROOM_MESSAGE', data);\n  }\n\n  editChatroomMessage = () => {\n    this.setState({ editingMessage: this.state.editMessage, newMessage: this.state.editMessage.message, hover: \"\" }, () => {\n      this.setState({ editMessage: null, messageMenu: false });\n    });\n  }\n\n  detectEscape = (event) => {\n    if (event.keyCode === 27 && !this.state.messageMenu) {\n      this.setState({ editingMessage: this.state.editMessage, newMessage: \"\" });\n    }\n  }\n\n  sendEditedMessage = (event) => {\n    event.preventDefault();\n    const data = {\n      username: this.props.username,\n      message: this.state.newMessage,\n      userId: this.props.userId,\n      chatroomId: this.state.chatroomId,\n      messageId: this.state.editingMessage.id,\n      room: this.state.room\n    };\n    this.socket.emit('EDIT_CHATROOM_MESSAGE', data);\n  }\n\n  kickUser = (user) => {\n    const data = {\n      serverId: this.state.serverId,\n      chatroomId: this.state.chatroomId,\n      type: 'user',\n      userId: user.userId,\n      room: this.state.room\n    };\n    this.socket.emit('KICK_SERVER_USER', data);\n  }\n\n  banUser = (user) => {\n    const data = {\n      serverId: this.state.serverId,\n      chatroomId: this.state.chatroomId,\n      type: 'user',\n      userId: user.userId,\n      room: this.state.room\n    };\n    this.socket.emit('BAN_SERVER_USER', data);\n  }\n\n  render() {\n    return (\n      <div className=\"chatroom\">\n        <audio id=\"localAudio\" style={{ \"display\": \"none\" }} />\n        <audio id=\"remoteAudio\" style={{ \"display\": \"none\" }} />\n        <div className=\"chatarea\">\n          <div className=\"chatarea-topbar\">\n            <img src={this.props.activeChatroomType === \"text\" ? numbersign : voice} alt=\"channel\" height={16} width={16} /><span>{this.props.activeChatroom}</span>\n          </div>\n          <div id=\"chatareamessages\" className=\"chatarea-messages\">\n            {this.state.messages && this.state.messages.length > 0 ? this.state.messages.map((item, index) => {\n              const moderate = (this.state.serverUserList.length > 0\n              && this.state.serverUserList.some(serverItem => serverItem['username'] !== this.state.username\n              && (serverItem['username'] === item.username && serverItem['type'] !== 'owner' && serverItem['type'] !== 'admin')));\n              return (\n                <div id={\"message\" + index} key={index} onMouseEnter={() => { this.setState({ hover: (this.state.editingMessage || this.state.messageMenu || (this.props.userId !== item.userId)) ? \"\" : (\"message\" + index) }) }} onMouseLeave={() => { this.setState({ hover: \"\" }); }}>\n                  <div className=\"chatarea-messages-container\">\n                    <span className=\"chatarea-messages-user\" onClick={this.handleClick} onContextMenu={(event) => { this.contextMenu(event, item); }}>{item.username}</span>\n                    <Moment format=\"MM/DD/YYYY\" date={item.updatedAt} className=\"chatarea-messages-time\" />\n                    {this.state.hover === (\"message\" + index) ? <span className=\"chatarea-messages-menu\" onClick={() => { this.openMessageMenu(item); }}><img src={editwhite} height={15} width={15} alt=\"edit message\" /></span> : null}\n                    {this.state.messageMenu && this.state.editMessage.id === item.id ?\n                      <div className=\"chatarea-messages-editmenu\" ref={this.ref}>\n                        <span onClick={() => { this.setState({ editMessage: null, messageMenu: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.editChatroomMessage(); }}>Edit</p>\n                        <p onClick={() => { this.deleteChatroomMessage(); }}>Delete</p>\n                      </div>\n                    : null}\n                    {this.state.userModalOpen && this.state.rightClickedUser.id === item.id ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-usermodalmod\" : \"chatarea-messages-usermodal\"}>\n                        <span onClick={() => { this.setState({ userModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.privateMessageUser(); }} className={moderate === true ? \"chatarea-messages-usermodalmod-privatemessage\" : \"chatarea-messages-usermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(item); }} className=\"chatarea-messages-usermodalmod-kick\">Kick {item.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(item); }} className=\"chatarea-messages-usermodalmod-ban\">Ban {item.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                  {this.state.editingMessage !== null && this.state.editingMessage.id === item.id ? <span><input className=\"chatarea-messages-editmessage\" onChange={(event) => { this.setState({ newMessage: event.target.value }) }} value={this.state.newMessage} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendEditedMessage(event) : this.sendMessage(null) }} /><p className=\"chatarea-messages-editmessage-note\">escape to cancel • enter to save</p></span> : <p className=\"chatarea-messages-message\">{item.message}</p>}\n                </div>\n              )\n            }) : null}\n          </div>\n          <div className=\"chatarea-container\">\n            <input placeholder=\"Send a message!\" type=\"text\" onChange={(event) => { this.setState({ message: event.target.value }); }} value={this.state.message} onKeyDown={(event) => { event.keyCode === 13 && event.shiftKey === false ? this.sendMessage(event) : this.sendMessage(null) }}></input>\n          </div>\n        </div>\n        <div className=\"sidebarright\">\n          <div className=\"sidebarright-container\">\n            <input placeholder=\"Filter users in server\"></input>\n          </div>\n          <div className=\"sidebarright-border\" />\n          <div className=\"sidebarright-authority\">\n            <span>Room Owners</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index)  => {\n            return (\n              <div key={index} className={user.type === 'owner' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'owner' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'owner' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'owner' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'owner' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'owner' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className=\"chatarea-messages-sideusermodal\">\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className=\"chatarea-messages-sideusermodal-privatemessage\">Send Message</p>\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'owner') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Administrators</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index)  => {\n            return (\n              <div key={index} className={user.type === 'admin' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'admin' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'admin' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'admin' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'admin' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'admin' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className=\"chatarea-messages-sideusermodal\">\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className=\"chatarea-messages-sideusermodal-privatemessage\">Send Message</p>\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'admin') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Moderators</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index)  => {\n            const moderate = (user.username !== this.state.username);\n            return (\n              <div key={index} className={user.type === 'moderator' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'moderator' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'moderator' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'moderator' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'moderator' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'moderator' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\"}>\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className={moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(user); }} className=\"chatarea-messages-sideusermodalmod-kick\">Kick {user.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(user); }} className=\"chatarea-messages-sideusermodalmod-ban\">Ban {user.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'moderator') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Voice</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n            const moderate = (user.username !== this.state.username);\n            return (\n              <div key={index} className={user.type === 'voice' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'voice' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'voice' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'voice' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'voice' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'voice' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\"}>\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className={moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(user); }} className=\"chatarea-messages-sideusermodalmod-kick\">Kick {user.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(user); }} className=\"chatarea-messages-sideusermodalmod-ban\">Ban {user.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            );\n          }) : null}\n          {this.state.serverUserList.length > 0 && this.state.serverUserList.some(item => item['type'] === 'voice') ? <div className=\"sidebarright-bordertwo\" /> : null}\n          <div className=\"sidebarright-authority\">\n            <span>Users</span>\n          </div>\n          <div className=\"sidebarright-bordertwo\" />\n          {this.state.serverUserList.length > 0 ? this.state.serverUserList.map((user, index) => {\n            const moderate = (user.username !== this.state.username);\n            return (\n              <div key={index} className={user.type === 'user' ? \"sidebarright-usercontainer\" : \"\"} onClick={this.handleClick} onContextMenu={(event) => { this.sideContextMenu(event, user); }}>\n                {user.type === 'user' ? <div className=\"username\">\n                  <img className=\"username-image\" src={user.imageUrl ? user.imageUrl : chatot} alt=\"username-icon\" />\n                </div> : null}\n                {user.type === 'user' && user.active ? <div className=\"userinfo-online\"></div> : null}\n                {user.type === 'user' && !user.active ? <div className=\"userinfo-offline\"></div> : null}\n                {user.type === 'user' ?\n                  <div>\n                    <span className=\"sidebarright-user\">{user.username}</span>\n                    {this.state.sideUserModalOpen && user.type === 'user' && this.state.sideRightClickedUser.username === user.username ?\n                      <div ref={this.ref} className={moderate === true ?\"chatarea-messages-sideusermodalmod\" : \"chatarea-messages-sideusermodal\"}>\n                        <span onClick={() => { this.setState({ sideUserModalOpen: false }); }}>&#10005;</span>\n                        <p onClick={() => { this.sidePrivateMessageUser(); }} className={moderate === true ? \"chatarea-messages-sideusermodalmod-privatemessage\" : \"chatarea-messages-sideusermodal-privatemessage\"}>Send Message</p>\n\n                        {moderate === true ? <p onClick={() => { this.kickUser(user); }} className=\"chatarea-messages-sideusermodalmod-kick\">Kick {user.username}</p> : null}\n\n                        {moderate === true ? <p onClick={() => { this.banUser(user); }} className=\"chatarea-messages-sideusermodalmod-ban\">Ban {user.username}</p> : null}\n                      </div>\n                    : null}\n                  </div>\n                : null}\n              </div>\n            )\n          }) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ usersReducer }) {\n  return {\n    error: usersReducer.error,\n    isLoading: usersReducer.isLoading,\n    success: usersReducer.success,\n    user: usersReducer.user,\n    users: usersReducer.users\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Chatroom);"]},"metadata":{},"sourceType":"module"}